[package]
name = "ate"
version = "0.9.0"
authors = ["Johnathan Sharratt <johnathan.sharratt@gmail.com>"]
edition = "2018"
description = "Distributed immutable data store with strong encryption and authentication"
license = "MIT OR Apache-2.0"
keywords = ["immutable", "database", "crypto", "nosql", "async"]
categories = ["asynchronous", "caching", "cryptography", "database-implementations"]
repository = "https://github.com/john-sharratt/ate"
readme = "../README.md"

[features]
default = [ "all" ]
basics = [ "hash_blake3", "hash_sha3" ]
verbose = ["backtrace"]
super_verbose = [ "verbose" ]
hash_blake3 = []
hash_sha3 = []
extra_checks = []
buffered = []
local_fs = []
rotate = []
caching = []
ws = [ "tokio-tungstenite", "http" ]
all = [ "basics", "buffered", "local_fs", "rotate", "caching", "ws" ]

#- memdb works nicely fixes the corruption issue but does not scale with huge log files
#- it would seem the conversation logic is working however the server side is dropping
#  events received that omit the signature (oh no!)
#- could restore the loading logic with the buffer and try and simulate the failure again
#  (perhaps reloading the load file on failure will fix it meaning its an accounting issue?)

[dependencies]
uuid = { version = "0.8.*", features = ["serde", "v4"] }
serde = { version = "1.0.*", features = ["derive"] }
serde_json = "1.0.*"
rmp = "0.8.*"
rmp-serde = "0.15.*"
derive-new = "0.5.*"
bytes = "1.0.*"
futures = "0.3.*"
futures-util = "0.3.*"
hash = "0.3.*"
fxhash = "0.2.*"
async-trait = "0.1.*"
fastrand = "1.4.*"
rand = "0.8.*"
rand_chacha = "0.3.*"
snap = "1.0.*"
once_cell = "1.7.*"
sha3 = "0.9.*"
multimap = "0.8.*"
hex = "0.4.*"
chrono = "0.4.*"
log = { version = "0.4.*", features = [ "release_max_level_info" ] }
cached = "0.23.*"
parking_lot = "0.11.*"
env_logger = "0.8.*"
blake3 = "0.3.*"
bincode = "1.3.*"
async-executor = "1.4.*"
url = { version = "2.2.*", features = ["serde"] }
btreemultimap = { version = "0.1.*" }
base64 = "0.13.*"
http = { version = "0.2.*", optional = true }
num_enum = "0.5.*"
backtrace = { version = "0.3.*", optional = true }
aes = { version = "0.6.*" }
ctr = { version = "0.8.*" }
pqcrypto-falcon = "0.2.*"
pqcrypto-ntru = "0.5.*"
pqcrypto-traits = "0.3.*"

[target.'cfg(target_arch = "wasm32")'.dependencies]
tokio = { version = "0.3", features = [ "rt", "sync" ], default-features = false }
ws_stream_wasm = { version = "0.7" }
#ws_stream_wasm = { version = "0.7", features= [ "tokio_io" ] }
#tokio = { version = "1.3.*", features= [ "rt", "sync" ] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { version = "1.9.*", features = ["full", "signal", "process"] }
openssl = { version = "0.10.*", features = ["vendored"] }
pnet = "0.27.*"
trust-dns-proto = { version = "0.20.*" }
trust-dns-client = { version = "0.20.*", features = ["dnssec"] }
hyper = { version = "0.14.*", features = ["full"], optional = true }
hyper-tls = { version = "0.5.*", optional = true }
tokio-tungstenite = { version = "0.14.*", optional = true }

[dev-dependencies]
ctor = "0.1.*"
rust_decimal = "1.10.*"
names = "0.11.*"
