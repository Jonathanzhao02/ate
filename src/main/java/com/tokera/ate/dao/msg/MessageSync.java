// automatically generated by the FlatBuffers compiler, do not modify

package com.tokera.ate.dao.msg;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings({"unused", "return.type.incompatible"})
public final class MessageSync extends Table {
  public static MessageSync getRootAsMessageSync(ByteBuffer _bb) { return getRootAsMessageSync(_bb, new MessageSync()); }
  public static MessageSync getRootAsMessageSync(ByteBuffer _bb, MessageSync obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public MessageSync __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long ticket1() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long ticket2() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }

  public static int createMessageSync(FlatBufferBuilder builder,
      long ticket1,
      long ticket2) {
    builder.startObject(2);
    MessageSync.addTicket2(builder, ticket2);
    MessageSync.addTicket1(builder, ticket1);
    return MessageSync.endMessageSync(builder);
  }

  public static void startMessageSync(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addTicket1(FlatBufferBuilder builder, long ticket1) { builder.addLong(0, ticket1, 0L); }
  public static void addTicket2(FlatBufferBuilder builder, long ticket2) { builder.addLong(1, ticket2, 0L); }
  public static int endMessageSync(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

