// automatically generated by the FlatBuffers compiler, do not modify

package com.tokera.ate.dao.msg;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings({"unused", "return.type.incompatible"})
public final class MessageBase extends Table {
  public static MessageBase getRootAsMessageBase(ByteBuffer _bb) { return getRootAsMessageBase(_bb, new MessageBase()); }
  public static MessageBase getRootAsMessageBase(ByteBuffer _bb, MessageBase obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public MessageBase __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte msgType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public @org.checkerframework.checker.nullness.qual.Nullable Table msg(Table obj) { int o = __offset(6); return o != 0 ? __union(obj, o) : null; }

  public static int createMessageBase(FlatBufferBuilder builder,
      byte msg_type,
      int msgOffset) {
    builder.startObject(2);
    MessageBase.addMsg(builder, msgOffset);
    MessageBase.addMsgType(builder, msg_type);
    return MessageBase.endMessageBase(builder);
  }

  public static void startMessageBase(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addMsgType(FlatBufferBuilder builder, byte msgType) { builder.addByte(0, msgType, 0); }
  public static void addMsg(FlatBufferBuilder builder, int msgOffset) { builder.addOffset(1, msgOffset, 0); }
  public static int endMessageBase(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishMessageBaseBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedMessageBaseBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }
}

