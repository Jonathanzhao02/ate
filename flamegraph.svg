<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="758" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="741.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="741.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (14 samples, 0.02%)</title><rect x="0.0812%" y="661" width="0.0232%" height="15" fill="rgb(227,0,7)"/><text x="0.3312%" y="671.50"></text></g><g><title>_int_free (9 samples, 0.01%)</title><rect x="0.1242%" y="661" width="0.0149%" height="15" fill="rgb(217,0,24)"/><text x="0.3742%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (29 samples, 0.05%)</title><rect x="0.1507%" y="661" width="0.0480%" height="15" fill="rgb(221,193,54)"/><text x="0.4007%" y="671.50"></text></g><g><title>ate::accessor::ChainProtectedAsync::process (19 samples, 0.03%)</title><rect x="0.2087%" y="661" width="0.0315%" height="15" fill="rgb(248,212,6)"/><text x="0.4587%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (12 samples, 0.02%)</title><rect x="0.2849%" y="661" width="0.0199%" height="15" fill="rgb(208,68,35)"/><text x="0.5349%" y="671.50"></text></g><g><title>[[heap]] (164 samples, 0.27%)</title><rect x="0.0563%" y="677" width="0.2717%" height="15" fill="rgb(232,128,0)"/><text x="0.3063%" y="687.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (23 samples, 0.04%)</title><rect x="0.3280%" y="661" width="0.0381%" height="15" fill="rgb(207,160,47)"/><text x="0.5780%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="0.3661%" y="661" width="0.0265%" height="15" fill="rgb(228,23,34)"/><text x="0.6161%" y="671.50"></text></g><g><title>&lt;ate::meta::_::&lt;impl serde::de::Deserialize for ate::meta::CoreMetadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (13 samples, 0.02%)</title><rect x="0.3942%" y="661" width="0.0215%" height="15" fill="rgb(218,30,26)"/><text x="0.6442%" y="671.50"></text></g><g><title>&lt;ate::redo::LogFile as ate::spec::LogApi&gt;::read_u8 (8 samples, 0.01%)</title><rect x="0.4356%" y="661" width="0.0133%" height="15" fill="rgb(220,122,19)"/><text x="0.6856%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (72 samples, 0.12%)</title><rect x="0.4555%" y="661" width="0.1193%" height="15" fill="rgb(250,228,42)"/><text x="0.7055%" y="671.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (15 samples, 0.02%)</title><rect x="0.5864%" y="661" width="0.0248%" height="15" fill="rgb(240,193,28)"/><text x="0.8364%" y="671.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.02%)</title><rect x="0.6112%" y="661" width="0.0248%" height="15" fill="rgb(216,20,37)"/><text x="0.8612%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (10 samples, 0.02%)</title><rect x="0.6394%" y="597" width="0.0166%" height="15" fill="rgb(206,188,39)"/><text x="0.8894%" y="607.50"></text></g><g><title>[stress] (38 samples, 0.06%)</title><rect x="0.6377%" y="661" width="0.0629%" height="15" fill="rgb(217,207,13)"/><text x="0.8877%" y="671.50"></text></g><g><title>tokio::park::thread::Inner::park (38 samples, 0.06%)</title><rect x="0.6377%" y="645" width="0.0629%" height="15" fill="rgb(231,73,38)"/><text x="0.8877%" y="655.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (37 samples, 0.06%)</title><rect x="0.6394%" y="629" width="0.0613%" height="15" fill="rgb(225,20,46)"/><text x="0.8894%" y="639.50"></text></g><g><title>syscall (37 samples, 0.06%)</title><rect x="0.6394%" y="613" width="0.0613%" height="15" fill="rgb(210,31,41)"/><text x="0.8894%" y="623.50"></text></g><g><title>error_entry (27 samples, 0.04%)</title><rect x="0.6559%" y="597" width="0.0447%" height="15" fill="rgb(221,200,47)"/><text x="0.9059%" y="607.50"></text></g><g><title>__libc_calloc (9 samples, 0.01%)</title><rect x="0.7189%" y="661" width="0.0149%" height="15" fill="rgb(226,26,5)"/><text x="0.9689%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (15 samples, 0.02%)</title><rect x="0.7338%" y="661" width="0.0248%" height="15" fill="rgb(249,33,26)"/><text x="0.9838%" y="671.50"></text></g><g><title>_int_free (93 samples, 0.15%)</title><rect x="0.7686%" y="661" width="0.1540%" height="15" fill="rgb(235,183,28)"/><text x="1.0186%" y="671.50"></text></g><g><title>_int_malloc (20 samples, 0.03%)</title><rect x="0.9226%" y="661" width="0.0331%" height="15" fill="rgb(221,5,38)"/><text x="1.1726%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (39 samples, 0.06%)</title><rect x="0.9607%" y="661" width="0.0646%" height="15" fill="rgb(247,18,42)"/><text x="1.2107%" y="671.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (14 samples, 0.02%)</title><rect x="1.0270%" y="661" width="0.0232%" height="15" fill="rgb(241,131,45)"/><text x="1.2770%" y="671.50"></text></g><g><title>ate::redo::RedoLog::new::{{closure}} (67 samples, 0.11%)</title><rect x="1.0684%" y="661" width="0.1110%" height="15" fill="rgb(249,31,29)"/><text x="1.3184%" y="671.50"></text></g><g><title>blake3::ChunkState::update (10 samples, 0.02%)</title><rect x="1.1959%" y="661" width="0.0166%" height="15" fill="rgb(225,111,53)"/><text x="1.4459%" y="671.50"></text></g><g><title>blake3::Hasher::finalize (9 samples, 0.01%)</title><rect x="1.2175%" y="661" width="0.0149%" height="15" fill="rgb(238,160,17)"/><text x="1.4675%" y="671.50"></text></g><g><title>blake3::Hasher::update (10 samples, 0.02%)</title><rect x="1.2407%" y="661" width="0.0166%" height="15" fill="rgb(214,148,48)"/><text x="1.4907%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (51 samples, 0.08%)</title><rect x="1.2804%" y="661" width="0.0845%" height="15" fill="rgb(232,36,49)"/><text x="1.5304%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.01%)</title><rect x="1.3649%" y="661" width="0.0149%" height="15" fill="rgb(209,103,24)"/><text x="1.6149%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (32 samples, 0.05%)</title><rect x="1.3815%" y="661" width="0.0530%" height="15" fill="rgb(229,88,8)"/><text x="1.6315%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.02%)</title><rect x="1.4345%" y="661" width="0.0166%" height="15" fill="rgb(213,181,19)"/><text x="1.6845%" y="671.50"></text></g><g><title>[[stack]] (686 samples, 1.14%)</title><rect x="0.3280%" y="677" width="1.1363%" height="15" fill="rgb(254,191,54)"/><text x="0.5780%" y="687.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (7 samples, 0.01%)</title><rect x="1.4858%" y="661" width="0.0116%" height="15" fill="rgb(241,83,37)"/><text x="1.7358%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27 samples, 0.04%)</title><rect x="1.5107%" y="581" width="0.0447%" height="15" fill="rgb(233,36,39)"/><text x="1.7607%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 0.04%)</title><rect x="1.5107%" y="565" width="0.0447%" height="15" fill="rgb(226,3,54)"/><text x="1.7607%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 0.04%)</title><rect x="1.5107%" y="549" width="0.0447%" height="15" fill="rgb(245,192,40)"/><text x="1.7607%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.04%)</title><rect x="1.5107%" y="533" width="0.0447%" height="15" fill="rgb(238,167,29)"/><text x="1.7607%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.04%)</title><rect x="1.5107%" y="517" width="0.0447%" height="15" fill="rgb(232,182,51)"/><text x="1.7607%" y="527.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.04%)</title><rect x="1.5107%" y="501" width="0.0447%" height="15" fill="rgb(231,60,39)"/><text x="1.7607%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (54 samples, 0.09%)</title><rect x="1.4991%" y="661" width="0.0894%" height="15" fill="rgb(208,69,12)"/><text x="1.7491%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (47 samples, 0.08%)</title><rect x="1.5107%" y="645" width="0.0779%" height="15" fill="rgb(235,93,37)"/><text x="1.7607%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (47 samples, 0.08%)</title><rect x="1.5107%" y="629" width="0.0779%" height="15" fill="rgb(213,116,39)"/><text x="1.7607%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (47 samples, 0.08%)</title><rect x="1.5107%" y="613" width="0.0779%" height="15" fill="rgb(222,207,29)"/><text x="1.7607%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (47 samples, 0.08%)</title><rect x="1.5107%" y="597" width="0.0779%" height="15" fill="rgb(206,96,30)"/><text x="1.7607%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (20 samples, 0.03%)</title><rect x="1.5554%" y="581" width="0.0331%" height="15" fill="rgb(218,138,4)"/><text x="1.8054%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.03%)</title><rect x="1.5554%" y="565" width="0.0331%" height="15" fill="rgb(250,191,14)"/><text x="1.8054%" y="575.50"></text></g><g><title>&lt;ate::meta::_::&lt;impl serde::de::Deserialize for ate::meta::CoreMetadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (22 samples, 0.04%)</title><rect x="1.5984%" y="661" width="0.0364%" height="15" fill="rgb(239,60,40)"/><text x="1.8484%" y="671.50"></text></g><g><title>&lt;ate::redo::LogFile as ate::spec::LogApi&gt;::read_exact (8 samples, 0.01%)</title><rect x="1.6498%" y="661" width="0.0133%" height="15" fill="rgb(206,27,48)"/><text x="1.8998%" y="671.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::sink::EventSink&gt;::feed (10 samples, 0.02%)</title><rect x="1.6846%" y="661" width="0.0166%" height="15" fill="rgb(225,35,8)"/><text x="1.9346%" y="671.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (8 samples, 0.01%)</title><rect x="1.7045%" y="661" width="0.0133%" height="15" fill="rgb(250,213,24)"/><text x="1.9545%" y="671.50"></text></g><g><title>__GI___libc_free (55 samples, 0.09%)</title><rect x="1.8883%" y="645" width="0.0911%" height="15" fill="rgb(247,123,22)"/><text x="2.1383%" y="655.50"></text></g><g><title>free_unref_page_list (10 samples, 0.02%)</title><rect x="2.0142%" y="469" width="0.0166%" height="15" fill="rgb(231,138,38)"/><text x="2.2642%" y="479.50"></text></g><g><title>__GI_munmap (33 samples, 0.05%)</title><rect x="1.9794%" y="645" width="0.0547%" height="15" fill="rgb(231,145,46)"/><text x="2.2294%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 0.05%)</title><rect x="1.9794%" y="629" width="0.0547%" height="15" fill="rgb(251,118,11)"/><text x="2.2294%" y="639.50"></text></g><g><title>do_syscall_64 (33 samples, 0.05%)</title><rect x="1.9794%" y="613" width="0.0547%" height="15" fill="rgb(217,147,25)"/><text x="2.2294%" y="623.50"></text></g><g><title>__x64_sys_munmap (33 samples, 0.05%)</title><rect x="1.9794%" y="597" width="0.0547%" height="15" fill="rgb(247,81,37)"/><text x="2.2294%" y="607.50"></text></g><g><title>__vm_munmap (33 samples, 0.05%)</title><rect x="1.9794%" y="581" width="0.0547%" height="15" fill="rgb(209,12,38)"/><text x="2.2294%" y="591.50"></text></g><g><title>__do_munmap (33 samples, 0.05%)</title><rect x="1.9794%" y="565" width="0.0547%" height="15" fill="rgb(227,1,9)"/><text x="2.2294%" y="575.50"></text></g><g><title>unmap_region (33 samples, 0.05%)</title><rect x="1.9794%" y="549" width="0.0547%" height="15" fill="rgb(248,47,43)"/><text x="2.2294%" y="559.50"></text></g><g><title>unmap_vmas (33 samples, 0.05%)</title><rect x="1.9794%" y="533" width="0.0547%" height="15" fill="rgb(221,10,30)"/><text x="2.2294%" y="543.50"></text></g><g><title>unmap_page_range (33 samples, 0.05%)</title><rect x="1.9794%" y="517" width="0.0547%" height="15" fill="rgb(210,229,1)"/><text x="2.2294%" y="527.50"></text></g><g><title>tlb_flush_mmu (21 samples, 0.03%)</title><rect x="1.9993%" y="501" width="0.0348%" height="15" fill="rgb(222,148,37)"/><text x="2.2493%" y="511.50"></text></g><g><title>release_pages (20 samples, 0.03%)</title><rect x="2.0010%" y="485" width="0.0331%" height="15" fill="rgb(234,67,33)"/><text x="2.2510%" y="495.50"></text></g><g><title>__irqentry_text_end (8 samples, 0.01%)</title><rect x="2.0341%" y="645" width="0.0133%" height="15" fill="rgb(247,98,35)"/><text x="2.2841%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.01%)</title><rect x="2.0473%" y="645" width="0.0133%" height="15" fill="rgb(247,138,52)"/><text x="2.2973%" y="655.50"></text></g><g><title>_int_free (152 samples, 0.25%)</title><rect x="2.0639%" y="645" width="0.2518%" height="15" fill="rgb(213,79,30)"/><text x="2.3139%" y="655.50"></text></g><g><title>unlink_chunk (15 samples, 0.02%)</title><rect x="2.2908%" y="629" width="0.0248%" height="15" fill="rgb(246,177,23)"/><text x="2.5408%" y="639.50"></text></g><g><title>exc_page_fault (7 samples, 0.01%)</title><rect x="2.3273%" y="549" width="0.0116%" height="15" fill="rgb(230,62,27)"/><text x="2.5773%" y="559.50"></text></g><g><title>do_user_addr_fault (7 samples, 0.01%)</title><rect x="2.3273%" y="533" width="0.0116%" height="15" fill="rgb(216,154,8)"/><text x="2.5773%" y="543.50"></text></g><g><title>handle_mm_fault (7 samples, 0.01%)</title><rect x="2.3273%" y="517" width="0.0116%" height="15" fill="rgb(244,35,45)"/><text x="2.5773%" y="527.50"></text></g><g><title>asm_exc_page_fault (12 samples, 0.02%)</title><rect x="2.3273%" y="565" width="0.0199%" height="15" fill="rgb(251,115,12)"/><text x="2.5773%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (21 samples, 0.03%)</title><rect x="2.3157%" y="581" width="0.0348%" height="15" fill="rgb(240,54,50)"/><text x="2.5657%" y="591.50"></text></g><g><title>_int_realloc (25 samples, 0.04%)</title><rect x="2.3157%" y="597" width="0.0414%" height="15" fill="rgb(233,84,52)"/><text x="2.5657%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (26 samples, 0.04%)</title><rect x="2.3157%" y="645" width="0.0431%" height="15" fill="rgb(207,117,47)"/><text x="2.5657%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (26 samples, 0.04%)</title><rect x="2.3157%" y="629" width="0.0431%" height="15" fill="rgb(249,43,39)"/><text x="2.5657%" y="639.50"></text></g><g><title>__GI___libc_realloc (26 samples, 0.04%)</title><rect x="2.3157%" y="613" width="0.0431%" height="15" fill="rgb(209,38,44)"/><text x="2.5657%" y="623.50"></text></g><g><title>__list_del_entry_valid (11 samples, 0.02%)</title><rect x="2.4084%" y="533" width="0.0182%" height="15" fill="rgb(236,212,23)"/><text x="2.6584%" y="543.50"></text></g><g><title>alloc_pages_vma (34 samples, 0.06%)</title><rect x="2.3919%" y="581" width="0.0563%" height="15" fill="rgb(242,79,21)"/><text x="2.6419%" y="591.50"></text></g><g><title>__alloc_pages_nodemask (34 samples, 0.06%)</title><rect x="2.3919%" y="565" width="0.0563%" height="15" fill="rgb(211,96,35)"/><text x="2.6419%" y="575.50"></text></g><g><title>get_page_from_freelist (30 samples, 0.05%)</title><rect x="2.3985%" y="549" width="0.0497%" height="15" fill="rgb(253,215,40)"/><text x="2.6485%" y="559.50"></text></g><g><title>prep_new_page (12 samples, 0.02%)</title><rect x="2.4283%" y="533" width="0.0199%" height="15" fill="rgb(211,81,21)"/><text x="2.6783%" y="543.50"></text></g><g><title>kernel_init_free_pages (12 samples, 0.02%)</title><rect x="2.4283%" y="517" width="0.0199%" height="15" fill="rgb(208,190,38)"/><text x="2.6783%" y="527.50"></text></g><g><title>clear_page_erms (12 samples, 0.02%)</title><rect x="2.4283%" y="501" width="0.0199%" height="15" fill="rgb(235,213,38)"/><text x="2.6783%" y="511.50"></text></g><g><title>lru_cache_add (10 samples, 0.02%)</title><rect x="2.4532%" y="581" width="0.0166%" height="15" fill="rgb(237,122,38)"/><text x="2.7032%" y="591.50"></text></g><g><title>pagevec_lru_move_fn (9 samples, 0.01%)</title><rect x="2.4548%" y="565" width="0.0149%" height="15" fill="rgb(244,218,35)"/><text x="2.7048%" y="575.50"></text></g><g><title>mem_cgroup_charge (9 samples, 0.01%)</title><rect x="2.4697%" y="581" width="0.0149%" height="15" fill="rgb(240,68,47)"/><text x="2.7197%" y="591.50"></text></g><g><title>handle_mm_fault (73 samples, 0.12%)</title><rect x="2.3670%" y="597" width="0.1209%" height="15" fill="rgb(210,16,53)"/><text x="2.6170%" y="607.50"></text></g><g><title>do_user_addr_fault (78 samples, 0.13%)</title><rect x="2.3604%" y="613" width="0.1292%" height="15" fill="rgb(235,124,12)"/><text x="2.6104%" y="623.50"></text></g><g><title>exc_page_fault (80 samples, 0.13%)</title><rect x="2.3587%" y="629" width="0.1325%" height="15" fill="rgb(224,169,11)"/><text x="2.6087%" y="639.50"></text></g><g><title>asm_exc_page_fault (104 samples, 0.17%)</title><rect x="2.3587%" y="645" width="0.1723%" height="15" fill="rgb(250,166,2)"/><text x="2.6087%" y="655.50"></text></g><g><title>irqentry_exit_to_user_mode (24 samples, 0.04%)</title><rect x="2.4913%" y="629" width="0.0398%" height="15" fill="rgb(242,216,29)"/><text x="2.7413%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (10 samples, 0.02%)</title><rect x="2.8640%" y="597" width="0.0166%" height="15" fill="rgb(230,116,27)"/><text x="3.1140%" y="607.50"></text></g><g><title>alloc_pages_vma (12 samples, 0.02%)</title><rect x="3.0263%" y="501" width="0.0199%" height="15" fill="rgb(228,99,48)"/><text x="3.2763%" y="511.50"></text></g><g><title>__alloc_pages_nodemask (11 samples, 0.02%)</title><rect x="3.0279%" y="485" width="0.0182%" height="15" fill="rgb(253,11,6)"/><text x="3.2779%" y="495.50"></text></g><g><title>get_page_from_freelist (9 samples, 0.01%)</title><rect x="3.0313%" y="469" width="0.0149%" height="15" fill="rgb(247,143,39)"/><text x="3.2813%" y="479.50"></text></g><g><title>exc_page_fault (26 samples, 0.04%)</title><rect x="3.0147%" y="549" width="0.0431%" height="15" fill="rgb(236,97,10)"/><text x="3.2647%" y="559.50"></text></g><g><title>do_user_addr_fault (26 samples, 0.04%)</title><rect x="3.0147%" y="533" width="0.0431%" height="15" fill="rgb(233,208,19)"/><text x="3.2647%" y="543.50"></text></g><g><title>handle_mm_fault (25 samples, 0.04%)</title><rect x="3.0163%" y="517" width="0.0414%" height="15" fill="rgb(216,164,2)"/><text x="3.2663%" y="527.50"></text></g><g><title>asm_exc_page_fault (35 samples, 0.06%)</title><rect x="3.0147%" y="565" width="0.0580%" height="15" fill="rgb(220,129,5)"/><text x="3.2647%" y="575.50"></text></g><g><title>irqentry_exit_to_user_mode (9 samples, 0.01%)</title><rect x="3.0578%" y="549" width="0.0149%" height="15" fill="rgb(242,17,10)"/><text x="3.3078%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (18 samples, 0.03%)</title><rect x="3.0727%" y="565" width="0.0298%" height="15" fill="rgb(242,107,0)"/><text x="3.3227%" y="575.50"></text></g><g><title>&lt;ate::anti_replay::AntiReplayPlugin as ate::sink::EventSink&gt;::feed (169 samples, 0.28%)</title><rect x="2.8308%" y="629" width="0.2799%" height="15" fill="rgb(251,28,31)"/><text x="3.0808%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (165 samples, 0.27%)</title><rect x="2.8375%" y="613" width="0.2733%" height="15" fill="rgb(233,223,10)"/><text x="3.0875%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (139 samples, 0.23%)</title><rect x="2.8805%" y="597" width="0.2302%" height="15" fill="rgb(215,21,27)"/><text x="3.1305%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (110 samples, 0.18%)</title><rect x="2.9286%" y="581" width="0.1822%" height="15" fill="rgb(232,23,21)"/><text x="3.1786%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.03%)</title><rect x="3.4255%" y="613" width="0.0282%" height="15" fill="rgb(244,5,23)"/><text x="3.6755%" y="623.50"></text></g><g><title>&lt;ate::anti_replay::AntiReplayPlugin as ate::validator::EventValidator&gt;::validate (220 samples, 0.36%)</title><rect x="3.1108%" y="629" width="0.3644%" height="15" fill="rgb(226,81,46)"/><text x="3.3608%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (12 samples, 0.02%)</title><rect x="3.4553%" y="613" width="0.0199%" height="15" fill="rgb(247,70,30)"/><text x="3.7053%" y="623.50"></text></g><g><title>&lt;ate::time::TimestampEnforcer as ate::sink::EventSink&gt;::feed (22 samples, 0.04%)</title><rect x="3.4752%" y="629" width="0.0364%" height="15" fill="rgb(212,68,19)"/><text x="3.7252%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (24 samples, 0.04%)</title><rect x="3.8628%" y="581" width="0.0398%" height="15" fill="rgb(240,187,13)"/><text x="4.1128%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (39 samples, 0.06%)</title><rect x="3.8611%" y="597" width="0.0646%" height="15" fill="rgb(223,113,26)"/><text x="4.1111%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (14 samples, 0.02%)</title><rect x="3.9025%" y="581" width="0.0232%" height="15" fill="rgb(206,192,2)"/><text x="4.1525%" y="591.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (14 samples, 0.02%)</title><rect x="3.9025%" y="565" width="0.0232%" height="15" fill="rgb(241,108,4)"/><text x="4.1525%" y="575.50"></text></g><g><title>&lt;ate::time::TimestampEnforcer as ate::validator::EventValidator&gt;::validate (320 samples, 0.53%)</title><rect x="3.5116%" y="629" width="0.5301%" height="15" fill="rgb(247,173,49)"/><text x="3.7616%" y="639.50"></text></g><g><title>ate::time::TimestampEnforcer::current_timestamp (185 samples, 0.31%)</title><rect x="3.7352%" y="613" width="0.3064%" height="15" fill="rgb(224,114,35)"/><text x="3.9852%" y="623.50"></text></g><g><title>std::time::SystemTime::now (70 samples, 0.12%)</title><rect x="3.9257%" y="597" width="0.1159%" height="15" fill="rgb(245,159,27)"/><text x="4.1757%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (70 samples, 0.12%)</title><rect x="3.9257%" y="581" width="0.1159%" height="15" fill="rgb(245,172,44)"/><text x="4.1757%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::now (70 samples, 0.12%)</title><rect x="3.9257%" y="565" width="0.1159%" height="15" fill="rgb(236,23,11)"/><text x="4.1757%" y="575.50"></text></g><g><title>__GI___clock_gettime (69 samples, 0.11%)</title><rect x="3.9274%" y="549" width="0.1143%" height="15" fill="rgb(205,117,38)"/><text x="4.1774%" y="559.50"></text></g><g><title>__vdso_clock_gettime (69 samples, 0.11%)</title><rect x="3.9274%" y="533" width="0.1143%" height="15" fill="rgb(237,72,25)"/><text x="4.1774%" y="543.50"></text></g><g><title>[[vdso]] (47 samples, 0.08%)</title><rect x="3.9638%" y="517" width="0.0779%" height="15" fill="rgb(244,70,9)"/><text x="4.2138%" y="527.50"></text></g><g><title>&lt;ate::signature::SignaturePlugin as ate::sink::EventSink&gt;::feed (20 samples, 0.03%)</title><rect x="4.1195%" y="613" width="0.0331%" height="15" fill="rgb(217,125,39)"/><text x="4.3695%" y="623.50"></text></g><g><title>ate::tree::TreeAuthorityPlugin::compute_auth (90 samples, 0.15%)</title><rect x="4.1527%" y="613" width="0.1491%" height="15" fill="rgb(235,36,10)"/><text x="4.4027%" y="623.50"></text></g><g><title>__GI_munmap (19 samples, 0.03%)</title><rect x="4.6430%" y="565" width="0.0315%" height="15" fill="rgb(251,123,47)"/><text x="4.8930%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (19 samples, 0.03%)</title><rect x="4.6430%" y="549" width="0.0315%" height="15" fill="rgb(221,13,13)"/><text x="4.8930%" y="559.50"></text></g><g><title>do_syscall_64 (19 samples, 0.03%)</title><rect x="4.6430%" y="533" width="0.0315%" height="15" fill="rgb(238,131,9)"/><text x="4.8930%" y="543.50"></text></g><g><title>__x64_sys_munmap (19 samples, 0.03%)</title><rect x="4.6430%" y="517" width="0.0315%" height="15" fill="rgb(211,50,8)"/><text x="4.8930%" y="527.50"></text></g><g><title>__vm_munmap (19 samples, 0.03%)</title><rect x="4.6430%" y="501" width="0.0315%" height="15" fill="rgb(245,182,24)"/><text x="4.8930%" y="511.50"></text></g><g><title>__do_munmap (19 samples, 0.03%)</title><rect x="4.6430%" y="485" width="0.0315%" height="15" fill="rgb(242,14,37)"/><text x="4.8930%" y="495.50"></text></g><g><title>unmap_region (19 samples, 0.03%)</title><rect x="4.6430%" y="469" width="0.0315%" height="15" fill="rgb(246,228,12)"/><text x="4.8930%" y="479.50"></text></g><g><title>unmap_vmas (14 samples, 0.02%)</title><rect x="4.6512%" y="453" width="0.0232%" height="15" fill="rgb(213,55,15)"/><text x="4.9012%" y="463.50"></text></g><g><title>unmap_page_range (14 samples, 0.02%)</title><rect x="4.6512%" y="437" width="0.0232%" height="15" fill="rgb(209,9,3)"/><text x="4.9012%" y="447.50"></text></g><g><title>__irqentry_text_end (17 samples, 0.03%)</title><rect x="4.6744%" y="565" width="0.0282%" height="15" fill="rgb(230,59,30)"/><text x="4.9244%" y="575.50"></text></g><g><title>get_page_from_freelist (9 samples, 0.01%)</title><rect x="4.7423%" y="453" width="0.0149%" height="15" fill="rgb(209,121,21)"/><text x="4.9923%" y="463.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (15 samples, 0.02%)</title><rect x="4.7407%" y="469" width="0.0248%" height="15" fill="rgb(220,109,13)"/><text x="4.9907%" y="479.50"></text></g><g><title>__list_del_entry_valid (7 samples, 0.01%)</title><rect x="4.7722%" y="453" width="0.0116%" height="15" fill="rgb(232,18,1)"/><text x="5.0222%" y="463.50"></text></g><g><title>__alloc_pages_nodemask (44 samples, 0.07%)</title><rect x="4.7390%" y="485" width="0.0729%" height="15" fill="rgb(215,41,42)"/><text x="4.9890%" y="495.50"></text></g><g><title>get_page_from_freelist (28 samples, 0.05%)</title><rect x="4.7655%" y="469" width="0.0464%" height="15" fill="rgb(224,123,36)"/><text x="5.0155%" y="479.50"></text></g><g><title>prep_new_page (14 samples, 0.02%)</title><rect x="4.7887%" y="453" width="0.0232%" height="15" fill="rgb(240,125,3)"/><text x="5.0387%" y="463.50"></text></g><g><title>kernel_init_free_pages (14 samples, 0.02%)</title><rect x="4.7887%" y="437" width="0.0232%" height="15" fill="rgb(205,98,50)"/><text x="5.0387%" y="447.50"></text></g><g><title>clear_page_erms (14 samples, 0.02%)</title><rect x="4.7887%" y="421" width="0.0232%" height="15" fill="rgb(205,185,37)"/><text x="5.0387%" y="431.50"></text></g><g><title>alloc_pages_vma (48 samples, 0.08%)</title><rect x="4.7341%" y="501" width="0.0795%" height="15" fill="rgb(238,207,15)"/><text x="4.9841%" y="511.50"></text></g><g><title>__pagevec_lru_add_fn (12 samples, 0.02%)</title><rect x="4.8235%" y="469" width="0.0199%" height="15" fill="rgb(213,199,42)"/><text x="5.0735%" y="479.50"></text></g><g><title>lru_cache_add (20 samples, 0.03%)</title><rect x="4.8169%" y="501" width="0.0331%" height="15" fill="rgb(235,201,11)"/><text x="5.0669%" y="511.50"></text></g><g><title>pagevec_lru_move_fn (18 samples, 0.03%)</title><rect x="4.8202%" y="485" width="0.0298%" height="15" fill="rgb(207,46,11)"/><text x="5.0702%" y="495.50"></text></g><g><title>mem_cgroup_charge (15 samples, 0.02%)</title><rect x="4.8500%" y="501" width="0.0248%" height="15" fill="rgb(241,35,35)"/><text x="5.1000%" y="511.50"></text></g><g><title>handle_mm_fault (105 samples, 0.17%)</title><rect x="4.7125%" y="517" width="0.1739%" height="15" fill="rgb(243,32,47)"/><text x="4.9625%" y="527.50"></text></g><g><title>page_add_new_anon_rmap (7 samples, 0.01%)</title><rect x="4.8749%" y="501" width="0.0116%" height="15" fill="rgb(247,202,23)"/><text x="5.1249%" y="511.50"></text></g><g><title>exc_page_fault (109 samples, 0.18%)</title><rect x="4.7076%" y="549" width="0.1806%" height="15" fill="rgb(219,102,11)"/><text x="4.9576%" y="559.50"></text></g><g><title>do_user_addr_fault (109 samples, 0.18%)</title><rect x="4.7076%" y="533" width="0.1806%" height="15" fill="rgb(243,110,44)"/><text x="4.9576%" y="543.50"></text></g><g><title>asm_exc_page_fault (140 samples, 0.23%)</title><rect x="4.7059%" y="565" width="0.2319%" height="15" fill="rgb(222,74,54)"/><text x="4.9559%" y="575.50"></text></g><g><title>irqentry_exit_to_user_mode (30 samples, 0.05%)</title><rect x="4.8881%" y="549" width="0.0497%" height="15" fill="rgb(216,99,12)"/><text x="5.1381%" y="559.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::sink::EventSink&gt;::feed (565 samples, 0.94%)</title><rect x="4.0417%" y="629" width="0.9359%" height="15" fill="rgb(226,22,26)"/><text x="4.2917%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (408 samples, 0.68%)</title><rect x="4.3017%" y="613" width="0.6758%" height="15" fill="rgb(217,163,10)"/><text x="4.5517%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (396 samples, 0.66%)</title><rect x="4.3216%" y="597" width="0.6559%" height="15" fill="rgb(213,25,53)"/><text x="4.5716%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (313 samples, 0.52%)</title><rect x="4.4591%" y="581" width="0.5185%" height="15" fill="rgb(252,105,26)"/><text x="4.7091%" y="591.50"></text></g><g><title>error_entry (23 samples, 0.04%)</title><rect x="4.9395%" y="565" width="0.0381%" height="15" fill="rgb(220,39,43)"/><text x="5.1895%" y="575.50"></text></g><g><title>sync_regs (11 samples, 0.02%)</title><rect x="4.9593%" y="549" width="0.0182%" height="15" fill="rgb(229,68,48)"/><text x="5.2093%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (95 samples, 0.16%)</title><rect x="4.9974%" y="597" width="0.1574%" height="15" fill="rgb(252,8,32)"/><text x="5.2474%" y="607.50"></text></g><g><title>blake3::Hasher::finalize (29 samples, 0.05%)</title><rect x="5.1548%" y="597" width="0.0480%" height="15" fill="rgb(223,20,43)"/><text x="5.4048%" y="607.50"></text></g><g><title>blake3::Hasher::final_output (14 samples, 0.02%)</title><rect x="5.1796%" y="581" width="0.0232%" height="15" fill="rgb(229,81,49)"/><text x="5.4296%" y="591.50"></text></g><g><title>blake3::ChunkState::update (28 samples, 0.05%)</title><rect x="5.2244%" y="581" width="0.0464%" height="15" fill="rgb(236,28,36)"/><text x="5.4744%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.01%)</title><rect x="5.2558%" y="565" width="0.0149%" height="15" fill="rgb(249,185,26)"/><text x="5.5058%" y="575.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (177 samples, 0.29%)</title><rect x="4.9892%" y="613" width="0.2932%" height="15" fill="rgb(249,174,33)"/><text x="5.2392%" y="623.50"></text></g><g><title>blake3::Hasher::update (47 samples, 0.08%)</title><rect x="5.2045%" y="597" width="0.0779%" height="15" fill="rgb(233,201,37)"/><text x="5.4545%" y="607.50"></text></g><g><title>blake3::Hasher::merge_cv_stack (7 samples, 0.01%)</title><rect x="5.2707%" y="581" width="0.0116%" height="15" fill="rgb(221,78,26)"/><text x="5.5207%" y="591.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::validator::EventValidator&gt;::validate (447 samples, 0.74%)</title><rect x="4.9776%" y="629" width="0.7404%" height="15" fill="rgb(250,127,30)"/><text x="5.2276%" y="639.50"></text></g><g><title>ate::tree::TreeAuthorityPlugin::compute_auth (263 samples, 0.44%)</title><rect x="5.2823%" y="613" width="0.4356%" height="15" fill="rgb(230,49,44)"/><text x="5.5323%" y="623.50"></text></g><g><title>__GI___libc_free (17 samples, 0.03%)</title><rect x="5.7180%" y="629" width="0.0282%" height="15" fill="rgb(229,67,23)"/><text x="5.9680%" y="639.50"></text></g><g><title>__GI_munmap (19 samples, 0.03%)</title><rect x="5.7461%" y="629" width="0.0315%" height="15" fill="rgb(249,83,47)"/><text x="5.9961%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (19 samples, 0.03%)</title><rect x="5.7461%" y="613" width="0.0315%" height="15" fill="rgb(215,43,3)"/><text x="5.9961%" y="623.50"></text></g><g><title>do_syscall_64 (19 samples, 0.03%)</title><rect x="5.7461%" y="597" width="0.0315%" height="15" fill="rgb(238,154,13)"/><text x="5.9961%" y="607.50"></text></g><g><title>__x64_sys_munmap (19 samples, 0.03%)</title><rect x="5.7461%" y="581" width="0.0315%" height="15" fill="rgb(219,56,2)"/><text x="5.9961%" y="591.50"></text></g><g><title>__vm_munmap (19 samples, 0.03%)</title><rect x="5.7461%" y="565" width="0.0315%" height="15" fill="rgb(233,0,4)"/><text x="5.9961%" y="575.50"></text></g><g><title>__do_munmap (19 samples, 0.03%)</title><rect x="5.7461%" y="549" width="0.0315%" height="15" fill="rgb(235,30,7)"/><text x="5.9961%" y="559.50"></text></g><g><title>unmap_region (19 samples, 0.03%)</title><rect x="5.7461%" y="533" width="0.0315%" height="15" fill="rgb(250,79,13)"/><text x="5.9961%" y="543.50"></text></g><g><title>unmap_vmas (17 samples, 0.03%)</title><rect x="5.7494%" y="517" width="0.0282%" height="15" fill="rgb(211,146,34)"/><text x="5.9994%" y="527.50"></text></g><g><title>unmap_page_range (17 samples, 0.03%)</title><rect x="5.7494%" y="501" width="0.0282%" height="15" fill="rgb(228,22,38)"/><text x="5.9994%" y="511.50"></text></g><g><title>tlb_flush_mmu (9 samples, 0.01%)</title><rect x="5.7627%" y="485" width="0.0149%" height="15" fill="rgb(235,168,5)"/><text x="6.0127%" y="495.50"></text></g><g><title>release_pages (7 samples, 0.01%)</title><rect x="5.7660%" y="469" width="0.0116%" height="15" fill="rgb(221,155,16)"/><text x="6.0160%" y="479.50"></text></g><g><title>_int_free (291 samples, 0.48%)</title><rect x="5.7842%" y="629" width="0.4820%" height="15" fill="rgb(215,215,53)"/><text x="6.0342%" y="639.50"></text></g><g><title>unlink_chunk (99 samples, 0.16%)</title><rect x="6.1023%" y="613" width="0.1640%" height="15" fill="rgb(223,4,10)"/><text x="6.3523%" y="623.50"></text></g><g><title>__GI___libc_malloc (153 samples, 0.25%)</title><rect x="7.0845%" y="581" width="0.2534%" height="15" fill="rgb(234,103,6)"/><text x="7.3345%" y="591.50"></text></g><g><title>_int_malloc (134 samples, 0.22%)</title><rect x="7.1160%" y="565" width="0.2220%" height="15" fill="rgb(227,97,0)"/><text x="7.3660%" y="575.50"></text></g><g><title>unlink_chunk (69 samples, 0.11%)</title><rect x="7.2237%" y="549" width="0.1143%" height="15" fill="rgb(234,150,53)"/><text x="7.4737%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (19 samples, 0.03%)</title><rect x="7.3380%" y="581" width="0.0315%" height="15" fill="rgb(228,201,54)"/><text x="7.5880%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (667 samples, 1.10%)</title><rect x="6.2663%" y="629" width="1.1048%" height="15" fill="rgb(222,22,37)"/><text x="6.5163%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (278 samples, 0.46%)</title><rect x="6.9106%" y="613" width="0.4605%" height="15" fill="rgb(237,53,32)"/><text x="7.1606%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (264 samples, 0.44%)</title><rect x="6.9338%" y="597" width="0.4373%" height="15" fill="rgb(233,25,53)"/><text x="7.1838%" y="607.50"></text></g><g><title>alloc_pages_vma (12 samples, 0.02%)</title><rect x="8.0005%" y="517" width="0.0199%" height="15" fill="rgb(210,40,34)"/><text x="8.2505%" y="527.50"></text></g><g><title>__alloc_pages_nodemask (11 samples, 0.02%)</title><rect x="8.0022%" y="501" width="0.0182%" height="15" fill="rgb(241,220,44)"/><text x="8.2522%" y="511.50"></text></g><g><title>get_page_from_freelist (10 samples, 0.02%)</title><rect x="8.0038%" y="485" width="0.0166%" height="15" fill="rgb(235,28,35)"/><text x="8.2538%" y="495.50"></text></g><g><title>exc_page_fault (24 samples, 0.04%)</title><rect x="7.9906%" y="565" width="0.0398%" height="15" fill="rgb(210,56,17)"/><text x="8.2406%" y="575.50"></text></g><g><title>do_user_addr_fault (23 samples, 0.04%)</title><rect x="7.9922%" y="549" width="0.0381%" height="15" fill="rgb(224,130,29)"/><text x="8.2422%" y="559.50"></text></g><g><title>handle_mm_fault (23 samples, 0.04%)</title><rect x="7.9922%" y="533" width="0.0381%" height="15" fill="rgb(235,212,8)"/><text x="8.2422%" y="543.50"></text></g><g><title>asm_exc_page_fault (30 samples, 0.05%)</title><rect x="7.9906%" y="581" width="0.0497%" height="15" fill="rgb(223,33,50)"/><text x="8.2406%" y="591.50"></text></g><g><title>ate::index::BinaryTreeIndexer::feed (410 samples, 0.68%)</title><rect x="7.3711%" y="629" width="0.6791%" height="15" fill="rgb(219,149,13)"/><text x="7.6211%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (217 samples, 0.36%)</title><rect x="7.6908%" y="613" width="0.3594%" height="15" fill="rgb(250,156,29)"/><text x="7.9408%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (130 samples, 0.22%)</title><rect x="7.8349%" y="597" width="0.2153%" height="15" fill="rgb(216,193,19)"/><text x="8.0849%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (19 samples, 0.03%)</title><rect x="8.0502%" y="629" width="0.0315%" height="15" fill="rgb(216,135,14)"/><text x="8.3002%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (7 samples, 0.01%)</title><rect x="8.5074%" y="613" width="0.0116%" height="15" fill="rgb(241,47,5)"/><text x="8.7574%" y="623.50"></text></g><g><title>alloc_pages_vma (7 samples, 0.01%)</title><rect x="8.7575%" y="517" width="0.0116%" height="15" fill="rgb(233,42,35)"/><text x="9.0075%" y="527.50"></text></g><g><title>exc_page_fault (16 samples, 0.03%)</title><rect x="8.7525%" y="565" width="0.0265%" height="15" fill="rgb(231,13,6)"/><text x="9.0025%" y="575.50"></text></g><g><title>do_user_addr_fault (16 samples, 0.03%)</title><rect x="8.7525%" y="549" width="0.0265%" height="15" fill="rgb(207,181,40)"/><text x="9.0025%" y="559.50"></text></g><g><title>handle_mm_fault (16 samples, 0.03%)</title><rect x="8.7525%" y="533" width="0.0265%" height="15" fill="rgb(254,173,49)"/><text x="9.0025%" y="543.50"></text></g><g><title>asm_exc_page_fault (19 samples, 0.03%)</title><rect x="8.7525%" y="581" width="0.0315%" height="15" fill="rgb(221,1,38)"/><text x="9.0025%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (31 samples, 0.05%)</title><rect x="8.7857%" y="581" width="0.0513%" height="15" fill="rgb(206,124,46)"/><text x="9.0357%" y="591.50"></text></g><g><title>ate::accessor::ChainProtectedAsync::process (3,813 samples, 6.32%)</title><rect x="2.5310%" y="645" width="6.3159%" height="15" fill="rgb(249,21,11)"/><text x="2.7810%" y="655.50">ate::acc..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (462 samples, 0.77%)</title><rect x="8.0817%" y="629" width="0.7653%" height="15" fill="rgb(222,201,40)"/><text x="8.3317%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (198 samples, 0.33%)</title><rect x="8.5190%" y="613" width="0.3280%" height="15" fill="rgb(235,61,29)"/><text x="8.7690%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (104 samples, 0.17%)</title><rect x="8.6747%" y="597" width="0.1723%" height="15" fill="rgb(219,207,3)"/><text x="8.9247%" y="607.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (68 samples, 0.11%)</title><rect x="10.0147%" y="549" width="0.1126%" height="15" fill="rgb(222,56,46)"/><text x="10.2647%" y="559.50"></text></g><g><title>&lt;ate::meta::_::&lt;impl serde::de::Deserialize for ate::meta::WriteOption&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (7 samples, 0.01%)</title><rect x="10.1158%" y="533" width="0.0116%" height="15" fill="rgb(239,76,54)"/><text x="10.3658%" y="543.50"></text></g><g><title>&lt;ate::meta::_::&lt;impl serde::de::Deserialize for ate::meta::CoreMetadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (185 samples, 0.31%)</title><rect x="9.8292%" y="565" width="0.3064%" height="15" fill="rgb(231,124,27)"/><text x="10.0792%" y="575.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.01%)</title><rect x="10.1357%" y="565" width="0.0116%" height="15" fill="rgb(249,195,6)"/><text x="10.3857%" y="575.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (512 samples, 0.85%)</title><rect x="9.3108%" y="581" width="0.8481%" height="15" fill="rgb(237,174,47)"/><text x="9.5608%" y="591.50"></text></g><g><title>ate::spec::SerializationFormat::deserialize (701 samples, 1.16%)</title><rect x="8.9994%" y="629" width="1.1612%" height="15" fill="rgb(206,201,31)"/><text x="9.2494%" y="639.50"></text></g><g><title>bincode::deserialize (686 samples, 1.14%)</title><rect x="9.0242%" y="613" width="1.1363%" height="15" fill="rgb(231,57,52)"/><text x="9.2742%" y="623.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (665 samples, 1.10%)</title><rect x="9.0590%" y="597" width="1.1015%" height="15" fill="rgb(248,177,22)"/><text x="9.3090%" y="607.50"></text></g><g><title>_int_malloc (160 samples, 0.27%)</title><rect x="10.3278%" y="581" width="0.2650%" height="15" fill="rgb(215,211,37)"/><text x="10.5778%" y="591.50"></text></g><g><title>unlink_chunk (36 samples, 0.06%)</title><rect x="10.5332%" y="565" width="0.0596%" height="15" fill="rgb(241,128,51)"/><text x="10.7832%" y="575.50"></text></g><g><title>__GI___libc_malloc (230 samples, 0.38%)</title><rect x="10.2152%" y="597" width="0.3810%" height="15" fill="rgb(227,165,31)"/><text x="10.4652%" y="607.50"></text></g><g><title>ate::event::EventHeaderRaw::as_header (1,058 samples, 1.75%)</title><rect x="8.8486%" y="645" width="1.7525%" height="15" fill="rgb(228,167,24)"/><text x="9.0986%" y="655.50"></text></g><g><title>bytes::bytes::promotable_even_clone (266 samples, 0.44%)</title><rect x="10.1605%" y="629" width="0.4406%" height="15" fill="rgb(228,143,12)"/><text x="10.4105%" y="639.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (265 samples, 0.44%)</title><rect x="10.1622%" y="613" width="0.4390%" height="15" fill="rgb(249,149,8)"/><text x="10.4122%" y="623.50"></text></g><g><title>__GI___libc_malloc (55 samples, 0.09%)</title><rect x="12.0753%" y="613" width="0.0911%" height="15" fill="rgb(243,35,44)"/><text x="12.3253%" y="623.50"></text></g><g><title>tcache_get (23 samples, 0.04%)</title><rect x="12.1283%" y="597" width="0.0381%" height="15" fill="rgb(246,89,9)"/><text x="12.3783%" y="607.50"></text></g><g><title>&lt;ate::redo::LogFile as ate::spec::LogApi&gt;::read_exact (96 samples, 0.16%)</title><rect x="12.0207%" y="629" width="0.1590%" height="15" fill="rgb(233,213,13)"/><text x="12.2707%" y="639.50"></text></g><g><title>checked_request2size (9 samples, 0.01%)</title><rect x="12.2443%" y="597" width="0.0149%" height="15" fill="rgb(233,141,41)"/><text x="12.4943%" y="607.50"></text></g><g><title>__GI___libc_malloc (50 samples, 0.08%)</title><rect x="12.1996%" y="613" width="0.0828%" height="15" fill="rgb(239,167,4)"/><text x="12.4496%" y="623.50"></text></g><g><title>tcache_get (14 samples, 0.02%)</title><rect x="12.2592%" y="597" width="0.0232%" height="15" fill="rgb(209,217,16)"/><text x="12.5092%" y="607.50"></text></g><g><title>__rdl_alloc (12 samples, 0.02%)</title><rect x="12.2824%" y="613" width="0.0199%" height="15" fill="rgb(219,88,35)"/><text x="12.5324%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (12 samples, 0.02%)</title><rect x="12.2824%" y="597" width="0.0199%" height="15" fill="rgb(220,193,23)"/><text x="12.5324%" y="607.50"></text></g><g><title>&lt;ate::redo::LogFile as ate::spec::LogApi&gt;::read_u8 (79 samples, 0.13%)</title><rect x="12.1797%" y="629" width="0.1309%" height="15" fill="rgb(230,90,52)"/><text x="12.4297%" y="639.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (8 samples, 0.01%)</title><rect x="12.3172%" y="629" width="0.0133%" height="15" fill="rgb(252,106,19)"/><text x="12.5672%" y="639.50"></text></g><g><title>__GI___libc_malloc (35 samples, 0.06%)</title><rect x="12.8323%" y="597" width="0.0580%" height="15" fill="rgb(206,74,20)"/><text x="13.0823%" y="607.50"></text></g><g><title>tcache_get (17 samples, 0.03%)</title><rect x="12.8621%" y="581" width="0.0282%" height="15" fill="rgb(230,138,44)"/><text x="13.1121%" y="591.50"></text></g><g><title>&lt;ate::redo::LogFile as ate::spec::LogApi&gt;::read_u32 (61 samples, 0.10%)</title><rect x="12.7959%" y="613" width="0.1010%" height="15" fill="rgb(235,182,43)"/><text x="13.0459%" y="623.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_read::AsyncRead&gt;::poll_read (12 samples, 0.02%)</title><rect x="13.0195%" y="581" width="0.0199%" height="15" fill="rgb(242,16,51)"/><text x="13.2695%" y="591.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (8 samples, 0.01%)</title><rect x="13.0261%" y="565" width="0.0133%" height="15" fill="rgb(248,9,4)"/><text x="13.2761%" y="575.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn (7 samples, 0.01%)</title><rect x="13.0278%" y="549" width="0.0116%" height="15" fill="rgb(210,31,22)"/><text x="13.2778%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (98 samples, 0.16%)</title><rect x="12.8969%" y="613" width="0.1623%" height="15" fill="rgb(239,54,39)"/><text x="13.1469%" y="623.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (58 samples, 0.10%)</title><rect x="12.9632%" y="597" width="0.0961%" height="15" fill="rgb(230,99,41)"/><text x="13.2132%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.02%)</title><rect x="13.0394%" y="581" width="0.0199%" height="15" fill="rgb(253,106,12)"/><text x="13.2894%" y="591.50"></text></g><g><title>tokio::park::thread::clone (9 samples, 0.01%)</title><rect x="13.3408%" y="533" width="0.0149%" height="15" fill="rgb(213,46,41)"/><text x="13.5908%" y="543.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (43 samples, 0.07%)</title><rect x="13.2928%" y="581" width="0.0712%" height="15" fill="rgb(215,133,35)"/><text x="13.5428%" y="591.50"></text></g><g><title>tokio::runtime::task::raw::try_read_output (28 samples, 0.05%)</title><rect x="13.3177%" y="565" width="0.0464%" height="15" fill="rgb(213,28,5)"/><text x="13.5677%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::can_read_output (15 samples, 0.02%)</title><rect x="13.3392%" y="549" width="0.0248%" height="15" fill="rgb(215,77,49)"/><text x="13.5892%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (262 samples, 0.43%)</title><rect x="13.3657%" y="581" width="0.4340%" height="15" fill="rgb(248,100,22)"/><text x="13.6157%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (15 samples, 0.02%)</title><rect x="13.8113%" y="565" width="0.0248%" height="15" fill="rgb(208,67,9)"/><text x="14.0613%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (22 samples, 0.04%)</title><rect x="13.8361%" y="565" width="0.0364%" height="15" fill="rgb(219,133,21)"/><text x="14.0861%" y="575.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (61 samples, 0.10%)</title><rect x="13.9206%" y="549" width="0.1010%" height="15" fill="rgb(246,46,29)"/><text x="14.1706%" y="559.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (19 samples, 0.03%)</title><rect x="13.9902%" y="533" width="0.0315%" height="15" fill="rgb(246,185,52)"/><text x="14.2402%" y="543.50"></text></g><g><title>std::time::Instant::now (15 samples, 0.02%)</title><rect x="14.0597%" y="533" width="0.0248%" height="15" fill="rgb(252,136,11)"/><text x="14.3097%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (15 samples, 0.02%)</title><rect x="14.0597%" y="517" width="0.0248%" height="15" fill="rgb(219,138,53)"/><text x="14.3097%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::now (15 samples, 0.02%)</title><rect x="14.0597%" y="501" width="0.0248%" height="15" fill="rgb(211,51,23)"/><text x="14.3097%" y="511.50"></text></g><g><title>__GI___clock_gettime (15 samples, 0.02%)</title><rect x="14.0597%" y="485" width="0.0248%" height="15" fill="rgb(247,221,28)"/><text x="14.3097%" y="495.50"></text></g><g><title>__vdso_clock_gettime (13 samples, 0.02%)</title><rect x="14.0630%" y="469" width="0.0215%" height="15" fill="rgb(251,222,45)"/><text x="14.3130%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (44 samples, 0.07%)</title><rect x="14.0945%" y="517" width="0.0729%" height="15" fill="rgb(217,162,53)"/><text x="14.3445%" y="527.50"></text></g><g><title>_raw_spin_lock (8 samples, 0.01%)</title><rect x="14.2618%" y="437" width="0.0133%" height="15" fill="rgb(229,93,14)"/><text x="14.5118%" y="447.50"></text></g><g><title>hash_futex (7 samples, 0.01%)</title><rect x="14.2800%" y="437" width="0.0116%" height="15" fill="rgb(209,67,49)"/><text x="14.5300%" y="447.50"></text></g><g><title>mark_wake_futex (32 samples, 0.05%)</title><rect x="14.2916%" y="437" width="0.0530%" height="15" fill="rgb(213,87,29)"/><text x="14.5416%" y="447.50"></text></g><g><title>__unqueue_futex (12 samples, 0.02%)</title><rect x="14.3248%" y="421" width="0.0199%" height="15" fill="rgb(205,151,52)"/><text x="14.5748%" y="431.50"></text></g><g><title>_raw_spin_lock_irqsave (9 samples, 0.01%)</title><rect x="14.3943%" y="405" width="0.0149%" height="15" fill="rgb(253,215,39)"/><text x="14.6443%" y="415.50"></text></g><g><title>available_idle_cpu (19 samples, 0.03%)</title><rect x="14.4556%" y="389" width="0.0315%" height="15" fill="rgb(221,220,41)"/><text x="14.7056%" y="399.50"></text></g><g><title>select_task_rq_fair (47 samples, 0.08%)</title><rect x="14.4159%" y="405" width="0.0779%" height="15" fill="rgb(218,133,21)"/><text x="14.6659%" y="415.50"></text></g><g><title>reweight_entity (12 samples, 0.02%)</title><rect x="14.6262%" y="357" width="0.0199%" height="15" fill="rgb(221,193,43)"/><text x="14.8762%" y="367.50"></text></g><g><title>update_cfs_group (8 samples, 0.01%)</title><rect x="14.6461%" y="357" width="0.0133%" height="15" fill="rgb(240,128,52)"/><text x="14.8961%" y="367.50"></text></g><g><title>enqueue_task_fair (109 samples, 0.18%)</title><rect x="14.5186%" y="389" width="0.1806%" height="15" fill="rgb(253,114,12)"/><text x="14.7686%" y="399.50"></text></g><g><title>enqueue_entity (79 samples, 0.13%)</title><rect x="14.5683%" y="373" width="0.1309%" height="15" fill="rgb(215,223,47)"/><text x="14.8183%" y="383.50"></text></g><g><title>update_load_avg (21 samples, 0.03%)</title><rect x="14.6643%" y="357" width="0.0348%" height="15" fill="rgb(248,225,23)"/><text x="14.9143%" y="367.50"></text></g><g><title>ttwu_do_activate (309 samples, 0.51%)</title><rect x="14.4937%" y="405" width="0.5118%" height="15" fill="rgb(250,108,0)"/><text x="14.7437%" y="415.50"></text></g><g><title>psi_task_change (185 samples, 0.31%)</title><rect x="14.6991%" y="389" width="0.3064%" height="15" fill="rgb(228,208,7)"/><text x="14.9491%" y="399.50"></text></g><g><title>psi_group_change (152 samples, 0.25%)</title><rect x="14.7538%" y="373" width="0.2518%" height="15" fill="rgb(244,45,10)"/><text x="15.0038%" y="383.50"></text></g><g><title>record_times (27 samples, 0.04%)</title><rect x="14.9608%" y="357" width="0.0447%" height="15" fill="rgb(207,125,25)"/><text x="15.2108%" y="367.50"></text></g><g><title>sched_clock_cpu (20 samples, 0.03%)</title><rect x="14.9724%" y="341" width="0.0331%" height="15" fill="rgb(210,195,18)"/><text x="15.2224%" y="351.50"></text></g><g><title>sched_clock (15 samples, 0.02%)</title><rect x="14.9807%" y="325" width="0.0248%" height="15" fill="rgb(249,80,12)"/><text x="15.2307%" y="335.50"></text></g><g><title>native_sched_clock (12 samples, 0.02%)</title><rect x="14.9857%" y="309" width="0.0199%" height="15" fill="rgb(221,65,9)"/><text x="15.2357%" y="319.50"></text></g><g><title>ttwu_do_wakeup (21 samples, 0.03%)</title><rect x="15.0055%" y="405" width="0.0348%" height="15" fill="rgb(235,49,36)"/><text x="15.2555%" y="415.50"></text></g><g><title>check_preempt_curr (21 samples, 0.03%)</title><rect x="15.0055%" y="389" width="0.0348%" height="15" fill="rgb(225,32,20)"/><text x="15.2555%" y="399.50"></text></g><g><title>resched_curr (15 samples, 0.02%)</title><rect x="15.0155%" y="373" width="0.0248%" height="15" fill="rgb(215,141,46)"/><text x="15.2655%" y="383.50"></text></g><g><title>ttwu_queue_wakelist (9 samples, 0.01%)</title><rect x="15.0403%" y="405" width="0.0149%" height="15" fill="rgb(250,160,47)"/><text x="15.2903%" y="415.50"></text></g><g><title>__x64_sys_futex (558 samples, 0.92%)</title><rect x="14.1724%" y="485" width="0.9243%" height="15" fill="rgb(216,222,40)"/><text x="14.4224%" y="495.50"></text></g><g><title>do_futex (537 samples, 0.89%)</title><rect x="14.2072%" y="469" width="0.8895%" height="15" fill="rgb(234,217,39)"/><text x="14.4572%" y="479.50"></text></g><g><title>futex_wake (528 samples, 0.87%)</title><rect x="14.2221%" y="453" width="0.8746%" height="15" fill="rgb(207,178,40)"/><text x="14.4721%" y="463.50"></text></g><g><title>wake_up_q (453 samples, 0.75%)</title><rect x="14.3463%" y="437" width="0.7504%" height="15" fill="rgb(221,136,13)"/><text x="14.5963%" y="447.50"></text></g><g><title>try_to_wake_up (438 samples, 0.73%)</title><rect x="14.3711%" y="421" width="0.7255%" height="15" fill="rgb(249,199,10)"/><text x="14.6211%" y="431.50"></text></g><g><title>update_rq_clock (25 samples, 0.04%)</title><rect x="15.0552%" y="405" width="0.0414%" height="15" fill="rgb(249,222,13)"/><text x="15.3052%" y="415.50"></text></g><g><title>sched_clock_cpu (14 samples, 0.02%)</title><rect x="15.0735%" y="389" width="0.0232%" height="15" fill="rgb(244,185,38)"/><text x="15.3235%" y="399.50"></text></g><g><title>sched_clock (13 samples, 0.02%)</title><rect x="15.0751%" y="373" width="0.0215%" height="15" fill="rgb(236,202,9)"/><text x="15.3251%" y="383.50"></text></g><g><title>native_sched_clock (12 samples, 0.02%)</title><rect x="15.0768%" y="357" width="0.0199%" height="15" fill="rgb(250,229,37)"/><text x="15.3268%" y="367.50"></text></g><g><title>do_syscall_64 (563 samples, 0.93%)</title><rect x="14.1707%" y="501" width="0.9326%" height="15" fill="rgb(206,174,23)"/><text x="14.4207%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (669 samples, 1.11%)</title><rect x="14.1674%" y="517" width="1.1081%" height="15" fill="rgb(211,33,43)"/><text x="14.4174%" y="527.50"></text></g><g><title>syscall_exit_to_user_mode (104 samples, 0.17%)</title><rect x="15.1033%" y="501" width="0.1723%" height="15" fill="rgb(245,58,50)"/><text x="15.3533%" y="511.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (929 samples, 1.54%)</title><rect x="13.8046%" y="581" width="1.5388%" height="15" fill="rgb(244,68,36)"/><text x="14.0546%" y="591.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn (888 samples, 1.47%)</title><rect x="13.8726%" y="565" width="1.4709%" height="15" fill="rgb(232,229,15)"/><text x="14.1226%" y="575.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (798 samples, 1.32%)</title><rect x="14.0216%" y="549" width="1.3218%" height="15" fill="rgb(254,30,23)"/><text x="14.2716%" y="559.50"></text></g><g><title>syscall (760 samples, 1.26%)</title><rect x="14.0846%" y="533" width="1.2589%" height="15" fill="rgb(235,160,14)"/><text x="14.3346%" y="543.50"></text></g><g><title>syscall_return_via_sysret (41 samples, 0.07%)</title><rect x="15.2755%" y="517" width="0.0679%" height="15" fill="rgb(212,155,44)"/><text x="15.5255%" y="527.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_read::AsyncRead&gt;::poll_read (1,296 samples, 2.15%)</title><rect x="13.2133%" y="597" width="2.1467%" height="15" fill="rgb(226,2,50)"/><text x="13.4633%" y="607.50">&lt;..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (7 samples, 0.01%)</title><rect x="15.3484%" y="581" width="0.0116%" height="15" fill="rgb(234,177,6)"/><text x="15.5984%" y="591.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1,548 samples, 2.56%)</title><rect x="13.0593%" y="613" width="2.5641%" height="15" fill="rgb(217,24,9)"/><text x="13.3093%" y="623.50">&lt;t..</text></g><g><title>__memmove_avx_unaligned_erms (158 samples, 0.26%)</title><rect x="15.3617%" y="597" width="0.2617%" height="15" fill="rgb(220,13,46)"/><text x="15.6117%" y="607.50"></text></g><g><title>__GI___libc_free (15 samples, 0.02%)</title><rect x="15.6234%" y="613" width="0.0248%" height="15" fill="rgb(239,221,27)"/><text x="15.8734%" y="623.50"></text></g><g><title>_int_free (42 samples, 0.07%)</title><rect x="15.6565%" y="613" width="0.0696%" height="15" fill="rgb(222,198,25)"/><text x="15.9065%" y="623.50"></text></g><g><title>tcache_put (8 samples, 0.01%)</title><rect x="15.7128%" y="597" width="0.0133%" height="15" fill="rgb(211,99,13)"/><text x="15.9628%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,069 samples, 3.43%)</title><rect x="12.3304%" y="629" width="3.4271%" height="15" fill="rgb(232,111,31)"/><text x="12.5804%" y="639.50">&lt;co..</text></g><g><title>_int_malloc (19 samples, 0.03%)</title><rect x="15.7261%" y="613" width="0.0315%" height="15" fill="rgb(245,82,37)"/><text x="15.9761%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (19 samples, 0.03%)</title><rect x="15.7261%" y="597" width="0.0315%" height="15" fill="rgb(227,149,46)"/><text x="15.9761%" y="607.50"></text></g><g><title>__GI___libc_free (30 samples, 0.05%)</title><rect x="15.7592%" y="629" width="0.0497%" height="15" fill="rgb(218,36,50)"/><text x="16.0092%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (10 samples, 0.02%)</title><rect x="16.2247%" y="597" width="0.0166%" height="15" fill="rgb(226,80,48)"/><text x="16.4747%" y="607.50"></text></g><g><title>futex_wait_queue_me (9 samples, 0.01%)</title><rect x="16.2479%" y="517" width="0.0149%" height="15" fill="rgb(238,224,15)"/><text x="16.4979%" y="527.50"></text></g><g><title>schedule (9 samples, 0.01%)</title><rect x="16.2479%" y="501" width="0.0149%" height="15" fill="rgb(241,136,10)"/><text x="16.4979%" y="511.50"></text></g><g><title>__schedule (9 samples, 0.01%)</title><rect x="16.2479%" y="485" width="0.0149%" height="15" fill="rgb(208,32,45)"/><text x="16.4979%" y="495.50"></text></g><g><title>__get_user_nocheck_4 (7 samples, 0.01%)</title><rect x="16.2860%" y="501" width="0.0116%" height="15" fill="rgb(207,135,9)"/><text x="16.5360%" y="511.50"></text></g><g><title>do_syscall_64 (37 samples, 0.06%)</title><rect x="16.2412%" y="581" width="0.0613%" height="15" fill="rgb(206,86,44)"/><text x="16.4912%" y="591.50"></text></g><g><title>__x64_sys_futex (36 samples, 0.06%)</title><rect x="16.2429%" y="565" width="0.0596%" height="15" fill="rgb(245,177,15)"/><text x="16.4929%" y="575.50"></text></g><g><title>do_futex (35 samples, 0.06%)</title><rect x="16.2446%" y="549" width="0.0580%" height="15" fill="rgb(206,64,50)"/><text x="16.4946%" y="559.50"></text></g><g><title>futex_wait (34 samples, 0.06%)</title><rect x="16.2462%" y="533" width="0.0563%" height="15" fill="rgb(234,36,40)"/><text x="16.4962%" y="543.50"></text></g><g><title>futex_wait_setup (24 samples, 0.04%)</title><rect x="16.2628%" y="517" width="0.0398%" height="15" fill="rgb(213,64,8)"/><text x="16.5128%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (48 samples, 0.08%)</title><rect x="16.2412%" y="597" width="0.0795%" height="15" fill="rgb(210,75,36)"/><text x="16.4912%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode (11 samples, 0.02%)</title><rect x="16.3025%" y="581" width="0.0182%" height="15" fill="rgb(229,88,21)"/><text x="16.5525%" y="591.50"></text></g><g><title>__lll_lock_wait_private (75 samples, 0.12%)</title><rect x="16.2048%" y="613" width="0.1242%" height="15" fill="rgb(252,204,47)"/><text x="16.4548%" y="623.50"></text></g><g><title>__irqentry_text_end (46 samples, 0.08%)</title><rect x="17.1722%" y="597" width="0.0762%" height="15" fill="rgb(208,77,27)"/><text x="17.4222%" y="607.50"></text></g><g><title>__count_memcg_events.part.0 (7 samples, 0.01%)</title><rect x="17.3494%" y="533" width="0.0116%" height="15" fill="rgb(221,76,26)"/><text x="17.5994%" y="543.50"></text></g><g><title>_raw_spin_lock (9 samples, 0.01%)</title><rect x="17.3643%" y="533" width="0.0149%" height="15" fill="rgb(225,139,18)"/><text x="17.6143%" y="543.50"></text></g><g><title>__next_zones_zonelist (9 samples, 0.01%)</title><rect x="17.4057%" y="501" width="0.0149%" height="15" fill="rgb(230,137,11)"/><text x="17.6557%" y="511.50"></text></g><g><title>__list_del_entry_valid (39 samples, 0.06%)</title><rect x="17.4753%" y="485" width="0.0646%" height="15" fill="rgb(212,28,1)"/><text x="17.7253%" y="495.50"></text></g><g><title>__alloc_pages_nodemask (179 samples, 0.30%)</title><rect x="17.3875%" y="517" width="0.2965%" height="15" fill="rgb(248,164,17)"/><text x="17.6375%" y="527.50"></text></g><g><title>get_page_from_freelist (159 samples, 0.26%)</title><rect x="17.4206%" y="501" width="0.2634%" height="15" fill="rgb(222,171,42)"/><text x="17.6706%" y="511.50"></text></g><g><title>prep_new_page (85 samples, 0.14%)</title><rect x="17.5432%" y="485" width="0.1408%" height="15" fill="rgb(243,84,45)"/><text x="17.7932%" y="495.50"></text></g><g><title>kernel_init_free_pages (82 samples, 0.14%)</title><rect x="17.5482%" y="469" width="0.1358%" height="15" fill="rgb(252,49,23)"/><text x="17.7982%" y="479.50"></text></g><g><title>clear_page_erms (80 samples, 0.13%)</title><rect x="17.5515%" y="453" width="0.1325%" height="15" fill="rgb(215,19,7)"/><text x="17.8015%" y="463.50"></text></g><g><title>alloc_pages_vma (186 samples, 0.31%)</title><rect x="17.3792%" y="533" width="0.3081%" height="15" fill="rgb(238,81,41)"/><text x="17.6292%" y="543.50"></text></g><g><title>__pagevec_lru_add_fn (27 samples, 0.04%)</title><rect x="17.7088%" y="501" width="0.0447%" height="15" fill="rgb(210,199,37)"/><text x="17.9588%" y="511.50"></text></g><g><title>page_mapping (7 samples, 0.01%)</title><rect x="17.7420%" y="485" width="0.0116%" height="15" fill="rgb(244,192,49)"/><text x="17.9920%" y="495.50"></text></g><g><title>lru_cache_add (51 samples, 0.08%)</title><rect x="17.6906%" y="533" width="0.0845%" height="15" fill="rgb(226,211,11)"/><text x="17.9406%" y="543.50"></text></g><g><title>pagevec_lru_move_fn (44 samples, 0.07%)</title><rect x="17.7022%" y="517" width="0.0729%" height="15" fill="rgb(236,162,54)"/><text x="17.9522%" y="527.50"></text></g><g><title>release_pages (7 samples, 0.01%)</title><rect x="17.7635%" y="501" width="0.0116%" height="15" fill="rgb(220,229,9)"/><text x="18.0135%" y="511.50"></text></g><g><title>get_mem_cgroup_from_mm (13 samples, 0.02%)</title><rect x="17.7801%" y="517" width="0.0215%" height="15" fill="rgb(250,87,22)"/><text x="18.0301%" y="527.50"></text></g><g><title>mem_cgroup_charge (41 samples, 0.07%)</title><rect x="17.7751%" y="533" width="0.0679%" height="15" fill="rgb(239,43,17)"/><text x="18.0251%" y="543.50"></text></g><g><title>try_charge (18 samples, 0.03%)</title><rect x="17.8132%" y="517" width="0.0298%" height="15" fill="rgb(231,177,25)"/><text x="18.0632%" y="527.50"></text></g><g><title>__mod_lruvec_state (11 samples, 0.02%)</title><rect x="17.8612%" y="517" width="0.0182%" height="15" fill="rgb(219,179,1)"/><text x="18.1112%" y="527.50"></text></g><g><title>__mod_node_page_state (9 samples, 0.01%)</title><rect x="17.8645%" y="501" width="0.0149%" height="15" fill="rgb(238,219,53)"/><text x="18.1145%" y="511.50"></text></g><g><title>handle_mm_fault (369 samples, 0.61%)</title><rect x="17.2848%" y="549" width="0.6112%" height="15" fill="rgb(232,167,36)"/><text x="17.5348%" y="559.50"></text></g><g><title>page_add_new_anon_rmap (30 samples, 0.05%)</title><rect x="17.8463%" y="533" width="0.0497%" height="15" fill="rgb(244,19,51)"/><text x="18.0963%" y="543.50"></text></g><g><title>__mod_memcg_lruvec_state (10 samples, 0.02%)</title><rect x="17.8794%" y="517" width="0.0166%" height="15" fill="rgb(224,6,22)"/><text x="18.1294%" y="527.50"></text></g><g><title>__mod_memcg_state.part.0 (8 samples, 0.01%)</title><rect x="17.8828%" y="501" width="0.0133%" height="15" fill="rgb(224,145,5)"/><text x="18.1328%" y="511.50"></text></g><g><title>exc_page_fault (392 samples, 0.65%)</title><rect x="17.2517%" y="581" width="0.6493%" height="15" fill="rgb(234,130,49)"/><text x="17.5017%" y="591.50"></text></g><g><title>do_user_addr_fault (388 samples, 0.64%)</title><rect x="17.2583%" y="565" width="0.6427%" height="15" fill="rgb(254,6,2)"/><text x="17.5083%" y="575.50"></text></g><g><title>asm_exc_page_fault (486 samples, 0.81%)</title><rect x="17.2500%" y="597" width="0.8050%" height="15" fill="rgb(208,96,46)"/><text x="17.5000%" y="607.50"></text></g><g><title>irqentry_exit_to_user_mode (93 samples, 0.15%)</title><rect x="17.9010%" y="581" width="0.1540%" height="15" fill="rgb(239,3,39)"/><text x="18.1510%" y="591.50"></text></g><g><title>error_entry (59 samples, 0.10%)</title><rect x="18.0583%" y="597" width="0.0977%" height="15" fill="rgb(233,210,1)"/><text x="18.3083%" y="607.50"></text></g><g><title>sync_regs (41 samples, 0.07%)</title><rect x="18.0882%" y="581" width="0.0679%" height="15" fill="rgb(244,137,37)"/><text x="18.3382%" y="591.50"></text></g><g><title>do_brk_flags (9 samples, 0.01%)</title><rect x="18.1710%" y="469" width="0.0149%" height="15" fill="rgb(240,136,2)"/><text x="18.4210%" y="479.50"></text></g><g><title>do_syscall_64 (15 samples, 0.02%)</title><rect x="18.1710%" y="501" width="0.0248%" height="15" fill="rgb(239,18,37)"/><text x="18.4210%" y="511.50"></text></g><g><title>__do_sys_brk (15 samples, 0.02%)</title><rect x="18.1710%" y="485" width="0.0248%" height="15" fill="rgb(218,185,22)"/><text x="18.4210%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (17 samples, 0.03%)</title><rect x="18.1710%" y="517" width="0.0282%" height="15" fill="rgb(225,218,4)"/><text x="18.4210%" y="527.50"></text></g><g><title>__GI___default_morecore (20 samples, 0.03%)</title><rect x="18.1693%" y="581" width="0.0331%" height="15" fill="rgb(230,182,32)"/><text x="18.4193%" y="591.50"></text></g><g><title>__GI___sbrk (20 samples, 0.03%)</title><rect x="18.1693%" y="565" width="0.0331%" height="15" fill="rgb(242,56,43)"/><text x="18.4193%" y="575.50"></text></g><g><title>__GI___sbrk (19 samples, 0.03%)</title><rect x="18.1710%" y="549" width="0.0315%" height="15" fill="rgb(233,99,24)"/><text x="18.4210%" y="559.50"></text></g><g><title>__brk (19 samples, 0.03%)</title><rect x="18.1710%" y="533" width="0.0315%" height="15" fill="rgb(234,209,42)"/><text x="18.4210%" y="543.50"></text></g><g><title>exc_page_fault (17 samples, 0.03%)</title><rect x="18.2041%" y="565" width="0.0282%" height="15" fill="rgb(227,7,12)"/><text x="18.4541%" y="575.50"></text></g><g><title>do_user_addr_fault (17 samples, 0.03%)</title><rect x="18.2041%" y="549" width="0.0282%" height="15" fill="rgb(245,203,43)"/><text x="18.4541%" y="559.50"></text></g><g><title>handle_mm_fault (14 samples, 0.02%)</title><rect x="18.2091%" y="533" width="0.0232%" height="15" fill="rgb(238,205,33)"/><text x="18.4591%" y="543.50"></text></g><g><title>asm_exc_page_fault (20 samples, 0.03%)</title><rect x="18.2041%" y="581" width="0.0331%" height="15" fill="rgb(231,56,7)"/><text x="18.4541%" y="591.50"></text></g><g><title>sysmalloc (44 samples, 0.07%)</title><rect x="18.1660%" y="597" width="0.0729%" height="15" fill="rgb(244,186,29)"/><text x="18.4160%" y="607.50"></text></g><g><title>_int_malloc (1,269 samples, 2.10%)</title><rect x="16.3290%" y="613" width="2.1020%" height="15" fill="rgb(234,111,31)"/><text x="16.5790%" y="623.50">_..</text></g><g><title>unlink_chunk (116 samples, 0.19%)</title><rect x="18.2389%" y="597" width="0.1921%" height="15" fill="rgb(241,149,10)"/><text x="18.4889%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 0.02%)</title><rect x="18.4327%" y="613" width="0.0215%" height="15" fill="rgb(249,206,44)"/><text x="18.6827%" y="623.50"></text></g><g><title>enqueue_task_fair (7 samples, 0.01%)</title><rect x="18.5072%" y="485" width="0.0116%" height="15" fill="rgb(251,153,30)"/><text x="18.7572%" y="495.50"></text></g><g><title>ttwu_do_activate (12 samples, 0.02%)</title><rect x="18.5072%" y="501" width="0.0199%" height="15" fill="rgb(239,152,38)"/><text x="18.7572%" y="511.50"></text></g><g><title>ttwu_queue_wakelist (7 samples, 0.01%)</title><rect x="18.5288%" y="501" width="0.0116%" height="15" fill="rgb(249,139,47)"/><text x="18.7788%" y="511.50"></text></g><g><title>do_syscall_64 (53 samples, 0.09%)</title><rect x="18.4542%" y="597" width="0.0878%" height="15" fill="rgb(244,64,35)"/><text x="18.7042%" y="607.50"></text></g><g><title>__x64_sys_futex (53 samples, 0.09%)</title><rect x="18.4542%" y="581" width="0.0878%" height="15" fill="rgb(216,46,15)"/><text x="18.7042%" y="591.50"></text></g><g><title>do_futex (50 samples, 0.08%)</title><rect x="18.4592%" y="565" width="0.0828%" height="15" fill="rgb(250,74,19)"/><text x="18.7092%" y="575.50"></text></g><g><title>futex_wake (49 samples, 0.08%)</title><rect x="18.4609%" y="549" width="0.0812%" height="15" fill="rgb(249,42,33)"/><text x="18.7109%" y="559.50"></text></g><g><title>wake_up_q (30 samples, 0.05%)</title><rect x="18.4923%" y="533" width="0.0497%" height="15" fill="rgb(242,149,17)"/><text x="18.7423%" y="543.50"></text></g><g><title>try_to_wake_up (28 samples, 0.05%)</title><rect x="18.4956%" y="517" width="0.0464%" height="15" fill="rgb(244,29,21)"/><text x="18.7456%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (95 samples, 0.16%)</title><rect x="18.4542%" y="613" width="0.1574%" height="15" fill="rgb(220,130,37)"/><text x="18.7042%" y="623.50"></text></g><g><title>syscall_exit_to_user_mode (42 samples, 0.07%)</title><rect x="18.5420%" y="597" width="0.0696%" height="15" fill="rgb(211,67,2)"/><text x="18.7920%" y="607.50"></text></g><g><title>__libc_calloc (1,715 samples, 2.84%)</title><rect x="15.8089%" y="629" width="2.8408%" height="15" fill="rgb(235,68,52)"/><text x="16.0589%" y="639.50">__..</text></g><g><title>syscall_return_via_sysret (23 samples, 0.04%)</title><rect x="18.6116%" y="613" width="0.0381%" height="15" fill="rgb(246,142,3)"/><text x="18.8616%" y="623.50"></text></g><g><title>__irqentry_text_end (18 samples, 0.03%)</title><rect x="18.8302%" y="613" width="0.0298%" height="15" fill="rgb(241,25,7)"/><text x="19.0802%" y="623.50"></text></g><g><title>_raw_spin_lock (7 samples, 0.01%)</title><rect x="18.9164%" y="549" width="0.0116%" height="15" fill="rgb(242,119,39)"/><text x="19.1664%" y="559.50"></text></g><g><title>__list_del_entry_valid (12 samples, 0.02%)</title><rect x="18.9594%" y="501" width="0.0199%" height="15" fill="rgb(241,98,45)"/><text x="19.2094%" y="511.50"></text></g><g><title>alloc_pages_vma (48 samples, 0.08%)</title><rect x="18.9280%" y="549" width="0.0795%" height="15" fill="rgb(254,28,30)"/><text x="19.1780%" y="559.50"></text></g><g><title>__alloc_pages_nodemask (43 samples, 0.07%)</title><rect x="18.9362%" y="533" width="0.0712%" height="15" fill="rgb(241,142,54)"/><text x="19.1862%" y="543.50"></text></g><g><title>get_page_from_freelist (36 samples, 0.06%)</title><rect x="18.9478%" y="517" width="0.0596%" height="15" fill="rgb(222,85,15)"/><text x="19.1978%" y="527.50"></text></g><g><title>prep_new_page (17 samples, 0.03%)</title><rect x="18.9793%" y="501" width="0.0282%" height="15" fill="rgb(210,85,47)"/><text x="19.2293%" y="511.50"></text></g><g><title>kernel_init_free_pages (15 samples, 0.02%)</title><rect x="18.9826%" y="485" width="0.0248%" height="15" fill="rgb(224,206,25)"/><text x="19.2326%" y="495.50"></text></g><g><title>clear_page_erms (14 samples, 0.02%)</title><rect x="18.9843%" y="469" width="0.0232%" height="15" fill="rgb(243,201,19)"/><text x="19.2343%" y="479.50"></text></g><g><title>__pagevec_lru_add_fn (13 samples, 0.02%)</title><rect x="19.0257%" y="517" width="0.0215%" height="15" fill="rgb(236,59,4)"/><text x="19.2757%" y="527.50"></text></g><g><title>lru_cache_add (17 samples, 0.03%)</title><rect x="19.0207%" y="549" width="0.0282%" height="15" fill="rgb(254,179,45)"/><text x="19.2707%" y="559.50"></text></g><g><title>pagevec_lru_move_fn (16 samples, 0.03%)</title><rect x="19.0224%" y="533" width="0.0265%" height="15" fill="rgb(226,14,10)"/><text x="19.2724%" y="543.50"></text></g><g><title>mem_cgroup_charge (17 samples, 0.03%)</title><rect x="19.0489%" y="549" width="0.0282%" height="15" fill="rgb(244,27,41)"/><text x="19.2989%" y="559.50"></text></g><g><title>handle_mm_fault (121 samples, 0.20%)</title><rect x="18.8816%" y="565" width="0.2004%" height="15" fill="rgb(235,35,32)"/><text x="19.1316%" y="575.50"></text></g><g><title>exc_page_fault (137 samples, 0.23%)</title><rect x="18.8600%" y="597" width="0.2269%" height="15" fill="rgb(218,68,31)"/><text x="19.1100%" y="607.50"></text></g><g><title>do_user_addr_fault (135 samples, 0.22%)</title><rect x="18.8634%" y="581" width="0.2236%" height="15" fill="rgb(207,120,37)"/><text x="19.1134%" y="591.50"></text></g><g><title>asm_exc_page_fault (172 samples, 0.28%)</title><rect x="18.8600%" y="613" width="0.2849%" height="15" fill="rgb(227,98,0)"/><text x="19.1100%" y="623.50"></text></g><g><title>irqentry_exit_to_user_mode (35 samples, 0.06%)</title><rect x="19.0870%" y="597" width="0.0580%" height="15" fill="rgb(207,7,3)"/><text x="19.3370%" y="607.50"></text></g><g><title>error_entry (20 samples, 0.03%)</title><rect x="19.1532%" y="613" width="0.0331%" height="15" fill="rgb(206,98,19)"/><text x="19.4032%" y="623.50"></text></g><g><title>sync_regs (12 samples, 0.02%)</title><rect x="19.1665%" y="597" width="0.0199%" height="15" fill="rgb(217,5,26)"/><text x="19.4165%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (327 samples, 0.54%)</title><rect x="18.6497%" y="629" width="0.5417%" height="15" fill="rgb(235,190,38)"/><text x="18.8997%" y="639.50"></text></g><g><title>__memset_avx2_unaligned_erms (20 samples, 0.03%)</title><rect x="19.1913%" y="629" width="0.0331%" height="15" fill="rgb(247,86,24)"/><text x="19.4413%" y="639.50"></text></g><g><title>__rust_dealloc (10 samples, 0.02%)</title><rect x="19.2510%" y="629" width="0.0166%" height="15" fill="rgb(205,101,16)"/><text x="19.5010%" y="639.50"></text></g><g><title>__rust_probestack (7 samples, 0.01%)</title><rect x="19.2675%" y="629" width="0.0116%" height="15" fill="rgb(246,168,33)"/><text x="19.5175%" y="639.50"></text></g><g><title>_int_free (86 samples, 0.14%)</title><rect x="19.2791%" y="629" width="0.1425%" height="15" fill="rgb(231,114,1)"/><text x="19.5291%" y="639.50"></text></g><g><title>tcache_put (12 samples, 0.02%)</title><rect x="19.4017%" y="613" width="0.0199%" height="15" fill="rgb(207,184,53)"/><text x="19.6517%" y="623.50"></text></g><g><title>exc_page_fault (8 samples, 0.01%)</title><rect x="19.4365%" y="533" width="0.0133%" height="15" fill="rgb(224,95,51)"/><text x="19.6865%" y="543.50"></text></g><g><title>do_user_addr_fault (8 samples, 0.01%)</title><rect x="19.4365%" y="517" width="0.0133%" height="15" fill="rgb(212,188,45)"/><text x="19.6865%" y="527.50"></text></g><g><title>handle_mm_fault (8 samples, 0.01%)</title><rect x="19.4365%" y="501" width="0.0133%" height="15" fill="rgb(223,154,38)"/><text x="19.6865%" y="511.50"></text></g><g><title>asm_exc_page_fault (10 samples, 0.02%)</title><rect x="19.4348%" y="549" width="0.0166%" height="15" fill="rgb(251,22,52)"/><text x="19.6848%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (22 samples, 0.04%)</title><rect x="19.4216%" y="565" width="0.0364%" height="15" fill="rgb(229,209,22)"/><text x="19.6716%" y="575.50"></text></g><g><title>_int_realloc (69 samples, 0.11%)</title><rect x="19.4216%" y="581" width="0.1143%" height="15" fill="rgb(234,138,34)"/><text x="19.6716%" y="591.50"></text></g><g><title>_int_malloc (47 samples, 0.08%)</title><rect x="19.4580%" y="565" width="0.0779%" height="15" fill="rgb(212,95,11)"/><text x="19.7080%" y="575.50"></text></g><g><title>malloc_consolidate (40 samples, 0.07%)</title><rect x="19.4696%" y="549" width="0.0663%" height="15" fill="rgb(240,179,47)"/><text x="19.7196%" y="559.50"></text></g><g><title>unlink_chunk (13 samples, 0.02%)</title><rect x="19.5143%" y="533" width="0.0215%" height="15" fill="rgb(240,163,11)"/><text x="19.7643%" y="543.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::grow (70 samples, 0.12%)</title><rect x="19.4216%" y="629" width="0.1159%" height="15" fill="rgb(236,37,12)"/><text x="19.6716%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (70 samples, 0.12%)</title><rect x="19.4216%" y="613" width="0.1159%" height="15" fill="rgb(232,164,16)"/><text x="19.6716%" y="623.50"></text></g><g><title>__GI___libc_realloc (70 samples, 0.12%)</title><rect x="19.4216%" y="597" width="0.1159%" height="15" fill="rgb(244,205,15)"/><text x="19.6716%" y="607.50"></text></g><g><title>ate::crypto::Hash::from_bytes (198 samples, 0.33%)</title><rect x="19.5408%" y="629" width="0.3280%" height="15" fill="rgb(223,117,47)"/><text x="19.7908%" y="639.50"></text></g><g><title>blake3::hash (195 samples, 0.32%)</title><rect x="19.5458%" y="613" width="0.3230%" height="15" fill="rgb(244,107,35)"/><text x="19.7958%" y="623.50"></text></g><g><title>blake3::ChunkState::update (98 samples, 0.16%)</title><rect x="19.7065%" y="597" width="0.1623%" height="15" fill="rgb(205,140,8)"/><text x="19.9565%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (16 samples, 0.03%)</title><rect x="19.8423%" y="581" width="0.0265%" height="15" fill="rgb(228,84,46)"/><text x="20.0923%" y="591.50"></text></g><g><title>ate::event::EventHeaderRaw::new (26 samples, 0.04%)</title><rect x="19.8688%" y="629" width="0.0431%" height="15" fill="rgb(254,188,9)"/><text x="20.1188%" y="639.50"></text></g><g><title>&lt;ate::meta::_::&lt;impl serde::de::Deserialize for ate::meta::ReadOption&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (10 samples, 0.02%)</title><rect x="20.9985%" y="549" width="0.0166%" height="15" fill="rgb(206,112,54)"/><text x="21.2485%" y="559.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (93 samples, 0.15%)</title><rect x="20.8776%" y="565" width="0.1540%" height="15" fill="rgb(216,84,49)"/><text x="21.1276%" y="575.50"></text></g><g><title>&lt;ate::meta::_::&lt;impl serde::de::Deserialize for ate::meta::WriteOption&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (10 samples, 0.02%)</title><rect x="21.0151%" y="549" width="0.0166%" height="15" fill="rgb(214,194,35)"/><text x="21.2651%" y="559.50"></text></g><g><title>&lt;ate::meta::_::&lt;impl serde::de::Deserialize for ate::meta::CoreMetadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (217 samples, 0.36%)</title><rect x="20.6954%" y="581" width="0.3594%" height="15" fill="rgb(249,28,3)"/><text x="20.9454%" y="591.50"></text></g><g><title>serde::de::SeqAccess::next_element (14 samples, 0.02%)</title><rect x="21.0316%" y="565" width="0.0232%" height="15" fill="rgb(222,56,52)"/><text x="21.2816%" y="575.50"></text></g><g><title>__lll_lock_wait_private (11 samples, 0.02%)</title><rect x="21.2287%" y="565" width="0.0182%" height="15" fill="rgb(245,217,50)"/><text x="21.4787%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="21.2354%" y="549" width="0.0116%" height="15" fill="rgb(213,201,24)"/><text x="21.4854%" y="559.50"></text></g><g><title>__irqentry_text_end (21 samples, 0.03%)</title><rect x="21.5070%" y="549" width="0.0348%" height="15" fill="rgb(248,116,28)"/><text x="21.7570%" y="559.50"></text></g><g><title>__list_del_entry_valid (12 samples, 0.02%)</title><rect x="21.6362%" y="437" width="0.0199%" height="15" fill="rgb(219,72,43)"/><text x="21.8862%" y="447.50"></text></g><g><title>alloc_pages_vma (80 samples, 0.13%)</title><rect x="21.5931%" y="485" width="0.1325%" height="15" fill="rgb(209,138,14)"/><text x="21.8431%" y="495.50"></text></g><g><title>__alloc_pages_nodemask (78 samples, 0.13%)</title><rect x="21.5965%" y="469" width="0.1292%" height="15" fill="rgb(222,18,33)"/><text x="21.8465%" y="479.50"></text></g><g><title>get_page_from_freelist (68 samples, 0.11%)</title><rect x="21.6130%" y="453" width="0.1126%" height="15" fill="rgb(213,199,7)"/><text x="21.8630%" y="463.50"></text></g><g><title>prep_new_page (42 samples, 0.07%)</title><rect x="21.6561%" y="437" width="0.0696%" height="15" fill="rgb(250,110,10)"/><text x="21.9061%" y="447.50"></text></g><g><title>kernel_init_free_pages (41 samples, 0.07%)</title><rect x="21.6577%" y="421" width="0.0679%" height="15" fill="rgb(248,123,6)"/><text x="21.9077%" y="431.50"></text></g><g><title>clear_page_erms (38 samples, 0.06%)</title><rect x="21.6627%" y="405" width="0.0629%" height="15" fill="rgb(206,91,31)"/><text x="21.9127%" y="415.50"></text></g><g><title>cgroup_throttle_swaprate (7 samples, 0.01%)</title><rect x="21.7257%" y="485" width="0.0116%" height="15" fill="rgb(211,154,13)"/><text x="21.9757%" y="495.50"></text></g><g><title>lru_cache_add (16 samples, 0.03%)</title><rect x="21.7373%" y="485" width="0.0265%" height="15" fill="rgb(225,148,7)"/><text x="21.9873%" y="495.50"></text></g><g><title>pagevec_lru_move_fn (11 samples, 0.02%)</title><rect x="21.7455%" y="469" width="0.0182%" height="15" fill="rgb(220,160,43)"/><text x="21.9955%" y="479.50"></text></g><g><title>get_mem_cgroup_from_mm (8 samples, 0.01%)</title><rect x="21.7654%" y="469" width="0.0133%" height="15" fill="rgb(213,52,39)"/><text x="22.0154%" y="479.50"></text></g><g><title>mem_cgroup_charge (15 samples, 0.02%)</title><rect x="21.7638%" y="485" width="0.0248%" height="15" fill="rgb(243,137,7)"/><text x="22.0138%" y="495.50"></text></g><g><title>page_add_new_anon_rmap (7 samples, 0.01%)</title><rect x="21.7936%" y="485" width="0.0116%" height="15" fill="rgb(230,79,13)"/><text x="22.0436%" y="495.50"></text></g><g><title>handle_mm_fault (151 samples, 0.25%)</title><rect x="21.5567%" y="501" width="0.2501%" height="15" fill="rgb(247,105,23)"/><text x="21.8067%" y="511.50"></text></g><g><title>exc_page_fault (159 samples, 0.26%)</title><rect x="21.5468%" y="533" width="0.2634%" height="15" fill="rgb(223,179,41)"/><text x="21.7968%" y="543.50"></text></g><g><title>do_user_addr_fault (158 samples, 0.26%)</title><rect x="21.5484%" y="517" width="0.2617%" height="15" fill="rgb(218,9,34)"/><text x="21.7984%" y="527.50"></text></g><g><title>asm_exc_page_fault (209 samples, 0.35%)</title><rect x="21.5468%" y="549" width="0.3462%" height="15" fill="rgb(222,106,8)"/><text x="21.7968%" y="559.50"></text></g><g><title>irqentry_exit_to_user_mode (49 samples, 0.08%)</title><rect x="21.8118%" y="533" width="0.0812%" height="15" fill="rgb(211,220,0)"/><text x="22.0618%" y="543.50"></text></g><g><title>error_entry (34 samples, 0.06%)</title><rect x="21.8979%" y="549" width="0.0563%" height="15" fill="rgb(229,52,16)"/><text x="22.1479%" y="559.50"></text></g><g><title>sync_regs (28 samples, 0.05%)</title><rect x="21.9079%" y="533" width="0.0464%" height="15" fill="rgb(212,155,18)"/><text x="22.1579%" y="543.50"></text></g><g><title>perf_event_mmap (8 samples, 0.01%)</title><rect x="21.9592%" y="405" width="0.0133%" height="15" fill="rgb(242,21,14)"/><text x="22.2092%" y="415.50"></text></g><g><title>__do_sys_brk (11 samples, 0.02%)</title><rect x="21.9576%" y="437" width="0.0182%" height="15" fill="rgb(222,19,48)"/><text x="22.2076%" y="447.50"></text></g><g><title>do_brk_flags (11 samples, 0.02%)</title><rect x="21.9576%" y="421" width="0.0182%" height="15" fill="rgb(232,45,27)"/><text x="22.2076%" y="431.50"></text></g><g><title>do_syscall_64 (12 samples, 0.02%)</title><rect x="21.9576%" y="453" width="0.0199%" height="15" fill="rgb(249,103,42)"/><text x="22.2076%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.02%)</title><rect x="21.9576%" y="469" width="0.0215%" height="15" fill="rgb(246,81,33)"/><text x="22.2076%" y="479.50"></text></g><g><title>__GI___default_morecore (16 samples, 0.03%)</title><rect x="21.9559%" y="533" width="0.0265%" height="15" fill="rgb(252,33,42)"/><text x="22.2059%" y="543.50"></text></g><g><title>__GI___sbrk (16 samples, 0.03%)</title><rect x="21.9559%" y="517" width="0.0265%" height="15" fill="rgb(209,212,41)"/><text x="22.2059%" y="527.50"></text></g><g><title>__GI___sbrk (16 samples, 0.03%)</title><rect x="21.9559%" y="501" width="0.0265%" height="15" fill="rgb(207,154,6)"/><text x="22.2059%" y="511.50"></text></g><g><title>__brk (16 samples, 0.03%)</title><rect x="21.9559%" y="485" width="0.0265%" height="15" fill="rgb(223,64,47)"/><text x="22.2059%" y="495.50"></text></g><g><title>asm_exc_page_fault (10 samples, 0.02%)</title><rect x="21.9841%" y="533" width="0.0166%" height="15" fill="rgb(211,161,38)"/><text x="22.2341%" y="543.50"></text></g><g><title>exc_page_fault (10 samples, 0.02%)</title><rect x="21.9841%" y="517" width="0.0166%" height="15" fill="rgb(219,138,40)"/><text x="22.2341%" y="527.50"></text></g><g><title>do_user_addr_fault (10 samples, 0.02%)</title><rect x="21.9841%" y="501" width="0.0166%" height="15" fill="rgb(241,228,46)"/><text x="22.2341%" y="511.50"></text></g><g><title>handle_mm_fault (9 samples, 0.01%)</title><rect x="21.9857%" y="485" width="0.0149%" height="15" fill="rgb(223,209,38)"/><text x="22.2357%" y="495.50"></text></g><g><title>sysmalloc (29 samples, 0.05%)</title><rect x="21.9542%" y="549" width="0.0480%" height="15" fill="rgb(236,164,45)"/><text x="22.2042%" y="559.50"></text></g><g><title>_int_malloc (479 samples, 0.79%)</title><rect x="21.2470%" y="565" width="0.7934%" height="15" fill="rgb(231,15,5)"/><text x="21.4970%" y="575.50"></text></g><g><title>unlink_chunk (22 samples, 0.04%)</title><rect x="22.0039%" y="549" width="0.0364%" height="15" fill="rgb(252,35,15)"/><text x="22.2539%" y="559.50"></text></g><g><title>do_syscall_64 (13 samples, 0.02%)</title><rect x="22.0454%" y="549" width="0.0215%" height="15" fill="rgb(248,181,18)"/><text x="22.2954%" y="559.50"></text></g><g><title>__x64_sys_futex (13 samples, 0.02%)</title><rect x="22.0454%" y="533" width="0.0215%" height="15" fill="rgb(233,39,42)"/><text x="22.2954%" y="543.50"></text></g><g><title>do_futex (13 samples, 0.02%)</title><rect x="22.0454%" y="517" width="0.0215%" height="15" fill="rgb(238,110,33)"/><text x="22.2954%" y="527.50"></text></g><g><title>futex_wake (13 samples, 0.02%)</title><rect x="22.0454%" y="501" width="0.0215%" height="15" fill="rgb(233,195,10)"/><text x="22.2954%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (19 samples, 0.03%)</title><rect x="22.0454%" y="565" width="0.0315%" height="15" fill="rgb(254,105,3)"/><text x="22.2954%" y="575.50"></text></g><g><title>__GI___libc_malloc (625 samples, 1.04%)</title><rect x="21.0548%" y="581" width="1.0353%" height="15" fill="rgb(221,225,9)"/><text x="21.3048%" y="591.50"></text></g><g><title>__rdl_alloc (8 samples, 0.01%)</title><rect x="22.0901%" y="581" width="0.0133%" height="15" fill="rgb(224,227,45)"/><text x="22.3401%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (8 samples, 0.01%)</title><rect x="22.0901%" y="565" width="0.0133%" height="15" fill="rgb(229,198,43)"/><text x="22.3401%" y="575.50"></text></g><g><title>ate::spec::SerializationFormat::deserialize (1,325 samples, 2.19%)</title><rect x="19.9135%" y="629" width="2.1948%" height="15" fill="rgb(206,209,35)"/><text x="20.1635%" y="639.50">a..</text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (1,304 samples, 2.16%)</title><rect x="19.9483%" y="613" width="2.1600%" height="15" fill="rgb(245,195,53)"/><text x="20.1983%" y="623.50">&lt;..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1,234 samples, 2.04%)</title><rect x="20.0643%" y="597" width="2.0440%" height="15" fill="rgb(240,92,26)"/><text x="20.3143%" y="607.50">&lt;..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (11 samples, 0.02%)</title><rect x="22.8073%" y="613" width="0.0182%" height="15" fill="rgb(207,40,23)"/><text x="23.0573%" y="623.50"></text></g><g><title>__GI___libc_malloc (243 samples, 0.40%)</title><rect x="23.1485%" y="581" width="0.4025%" height="15" fill="rgb(223,111,35)"/><text x="23.3985%" y="591.50"></text></g><g><title>_int_malloc (243 samples, 0.40%)</title><rect x="23.1485%" y="565" width="0.4025%" height="15" fill="rgb(229,147,28)"/><text x="23.3985%" y="575.50"></text></g><g><title>malloc_consolidate (236 samples, 0.39%)</title><rect x="23.1601%" y="549" width="0.3909%" height="15" fill="rgb(211,29,28)"/><text x="23.4101%" y="559.50"></text></g><g><title>unlink_chunk (135 samples, 0.22%)</title><rect x="23.3274%" y="533" width="0.2236%" height="15" fill="rgb(228,72,33)"/><text x="23.5774%" y="543.50"></text></g><g><title>alloc_pages_vma (24 samples, 0.04%)</title><rect x="23.5792%" y="517" width="0.0398%" height="15" fill="rgb(205,214,31)"/><text x="23.8292%" y="527.50"></text></g><g><title>__alloc_pages_nodemask (24 samples, 0.04%)</title><rect x="23.5792%" y="501" width="0.0398%" height="15" fill="rgb(224,111,15)"/><text x="23.8292%" y="511.50"></text></g><g><title>get_page_from_freelist (22 samples, 0.04%)</title><rect x="23.5825%" y="485" width="0.0364%" height="15" fill="rgb(253,21,26)"/><text x="23.8325%" y="495.50"></text></g><g><title>prep_new_page (14 samples, 0.02%)</title><rect x="23.5958%" y="469" width="0.0232%" height="15" fill="rgb(245,139,43)"/><text x="23.8458%" y="479.50"></text></g><g><title>kernel_init_free_pages (13 samples, 0.02%)</title><rect x="23.5974%" y="453" width="0.0215%" height="15" fill="rgb(252,170,7)"/><text x="23.8474%" y="463.50"></text></g><g><title>clear_page_erms (13 samples, 0.02%)</title><rect x="23.5974%" y="437" width="0.0215%" height="15" fill="rgb(231,118,14)"/><text x="23.8474%" y="447.50"></text></g><g><title>exc_page_fault (38 samples, 0.06%)</title><rect x="23.5693%" y="565" width="0.0629%" height="15" fill="rgb(238,83,0)"/><text x="23.8193%" y="575.50"></text></g><g><title>do_user_addr_fault (38 samples, 0.06%)</title><rect x="23.5693%" y="549" width="0.0629%" height="15" fill="rgb(221,39,39)"/><text x="23.8193%" y="559.50"></text></g><g><title>handle_mm_fault (34 samples, 0.06%)</title><rect x="23.5759%" y="533" width="0.0563%" height="15" fill="rgb(222,119,46)"/><text x="23.8259%" y="543.50"></text></g><g><title>asm_exc_page_fault (51 samples, 0.08%)</title><rect x="23.5693%" y="581" width="0.0845%" height="15" fill="rgb(222,165,49)"/><text x="23.8193%" y="591.50"></text></g><g><title>irqentry_exit_to_user_mode (13 samples, 0.02%)</title><rect x="23.6322%" y="565" width="0.0215%" height="15" fill="rgb(219,113,52)"/><text x="23.8822%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (22 samples, 0.04%)</title><rect x="23.6537%" y="581" width="0.0364%" height="15" fill="rgb(214,7,15)"/><text x="23.9037%" y="591.50"></text></g><g><title>error_entry (17 samples, 0.03%)</title><rect x="23.6902%" y="581" width="0.0282%" height="15" fill="rgb(235,32,4)"/><text x="23.9402%" y="591.50"></text></g><g><title>sync_regs (7 samples, 0.01%)</title><rect x="23.7067%" y="565" width="0.0116%" height="15" fill="rgb(238,90,54)"/><text x="23.9567%" y="575.50"></text></g><g><title>ate::redo::RedoLog::new::{{closure}} (7,920 samples, 13.12%)</title><rect x="10.6011%" y="645" width="13.1189%" height="15" fill="rgb(213,208,19)"/><text x="10.8511%" y="655.50">ate::redo::RedoLog::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (971 samples, 1.61%)</title><rect x="22.1116%" y="629" width="1.6084%" height="15" fill="rgb(233,156,4)"/><text x="22.3616%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (540 samples, 0.89%)</title><rect x="22.8255%" y="613" width="0.8945%" height="15" fill="rgb(207,194,5)"/><text x="23.0755%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (393 samples, 0.65%)</title><rect x="23.0690%" y="597" width="0.6510%" height="15" fill="rgb(206,111,30)"/><text x="23.3190%" y="607.50"></text></g><g><title>ate::redo::RedoLogLoader::pop (23 samples, 0.04%)</title><rect x="23.7200%" y="645" width="0.0381%" height="15" fill="rgb(243,70,54)"/><text x="23.9700%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (20 samples, 0.03%)</title><rect x="23.7250%" y="629" width="0.0331%" height="15" fill="rgb(242,28,8)"/><text x="23.9750%" y="639.50"></text></g><g><title>bytes::bytes::promotable_even_drop (38 samples, 0.06%)</title><rect x="23.7581%" y="645" width="0.0629%" height="15" fill="rgb(219,106,18)"/><text x="24.0081%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (30 samples, 0.05%)</title><rect x="24.1043%" y="565" width="0.0497%" height="15" fill="rgb(244,222,10)"/><text x="24.3543%" y="575.50"></text></g><g><title>blake3::Hasher::finalize (9 samples, 0.01%)</title><rect x="24.1540%" y="565" width="0.0149%" height="15" fill="rgb(236,179,52)"/><text x="24.4040%" y="575.50"></text></g><g><title>blake3::ChunkState::update (7 samples, 0.01%)</title><rect x="24.1788%" y="549" width="0.0116%" height="15" fill="rgb(213,23,39)"/><text x="24.4288%" y="559.50"></text></g><g><title>ate::event::EventData::as_header_raw (55 samples, 0.09%)</title><rect x="24.1043%" y="597" width="0.0911%" height="15" fill="rgb(238,48,10)"/><text x="24.3543%" y="607.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (55 samples, 0.09%)</title><rect x="24.1043%" y="581" width="0.0911%" height="15" fill="rgb(251,196,23)"/><text x="24.3543%" y="591.50"></text></g><g><title>blake3::Hasher::update (15 samples, 0.02%)</title><rect x="24.1705%" y="565" width="0.0248%" height="15" fill="rgb(250,152,24)"/><text x="24.4205%" y="575.50"></text></g><g><title>&lt;ate::dio::Dio as core::ops::drop::Drop&gt;::drop (87 samples, 0.14%)</title><rect x="24.1043%" y="629" width="0.1441%" height="15" fill="rgb(209,150,17)"/><text x="24.3543%" y="639.50"></text></g><g><title>ate::dio::Dio::commit (87 samples, 0.14%)</title><rect x="24.1043%" y="613" width="0.1441%" height="15" fill="rgb(234,202,34)"/><text x="24.3543%" y="623.50"></text></g><g><title>ate::multi::ChainMultiUser::metadata_lint_many (32 samples, 0.05%)</title><rect x="24.1954%" y="597" width="0.0530%" height="15" fill="rgb(253,148,53)"/><text x="24.4454%" y="607.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::lint::EventMetadataLinter&gt;::metadata_lint_many (32 samples, 0.05%)</title><rect x="24.1954%" y="581" width="0.0530%" height="15" fill="rgb(218,129,16)"/><text x="24.4454%" y="591.50"></text></g><g><title>&lt;ate::signature::SignaturePlugin as ate::lint::EventMetadataLinter&gt;::metadata_lint_many (32 samples, 0.05%)</title><rect x="24.1954%" y="565" width="0.0530%" height="15" fill="rgb(216,85,19)"/><text x="24.4454%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 0.05%)</title><rect x="24.1954%" y="549" width="0.0530%" height="15" fill="rgb(235,228,7)"/><text x="24.4454%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (259 samples, 0.43%)</title><rect x="23.8210%" y="645" width="0.4290%" height="15" fill="rgb(245,175,0)"/><text x="24.0710%" y="655.50"></text></g><g><title>error_entry (20 samples, 0.03%)</title><rect x="24.2501%" y="645" width="0.0331%" height="15" fill="rgb(208,168,36)"/><text x="24.5001%" y="655.50"></text></g><g><title>sync_regs (11 samples, 0.02%)</title><rect x="24.2650%" y="629" width="0.0182%" height="15" fill="rgb(246,171,24)"/><text x="24.5150%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,625 samples, 22.57%)</title><rect x="1.7177%" y="661" width="22.5688%" height="15" fill="rgb(215,142,24)"/><text x="1.9677%" y="671.50">&lt;core::future::from_generator::GenFu..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (11 samples, 0.02%)</title><rect x="24.2915%" y="661" width="0.0182%" height="15" fill="rgb(250,187,7)"/><text x="24.5415%" y="671.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (20 samples, 0.03%)</title><rect x="24.3147%" y="661" width="0.0331%" height="15" fill="rgb(228,66,33)"/><text x="24.5647%" y="671.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.02%)</title><rect x="24.3494%" y="661" width="0.0166%" height="15" fill="rgb(234,215,21)"/><text x="24.5994%" y="671.50"></text></g><g><title>__GI___libc_free (10 samples, 0.02%)</title><rect x="24.3494%" y="645" width="0.0166%" height="15" fill="rgb(222,191,20)"/><text x="24.5994%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.04%)</title><rect x="24.3677%" y="645" width="0.0381%" height="15" fill="rgb(245,79,54)"/><text x="24.6177%" y="655.50"></text></g><g><title>[stress] (29 samples, 0.05%)</title><rect x="24.3660%" y="661" width="0.0480%" height="15" fill="rgb(240,10,37)"/><text x="24.6160%" y="671.50"></text></g><g><title>__GI___libc_free (9 samples, 0.01%)</title><rect x="24.4174%" y="661" width="0.0149%" height="15" fill="rgb(214,192,32)"/><text x="24.6674%" y="671.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.02%)</title><rect x="24.4323%" y="661" width="0.0182%" height="15" fill="rgb(209,36,54)"/><text x="24.6823%" y="671.50"></text></g><g><title>_int_free (55 samples, 0.09%)</title><rect x="24.4704%" y="661" width="0.0911%" height="15" fill="rgb(220,10,11)"/><text x="24.7204%" y="671.50"></text></g><g><title>_int_malloc (52 samples, 0.09%)</title><rect x="24.5615%" y="661" width="0.0861%" height="15" fill="rgb(221,106,17)"/><text x="24.8115%" y="671.50"></text></g><g><title>error_entry (24 samples, 0.04%)</title><rect x="24.6078%" y="645" width="0.0398%" height="15" fill="rgb(251,142,44)"/><text x="24.8578%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.04%)</title><rect x="24.6608%" y="661" width="0.0364%" height="15" fill="rgb(238,13,15)"/><text x="24.9108%" y="671.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (10 samples, 0.02%)</title><rect x="24.7105%" y="661" width="0.0166%" height="15" fill="rgb(208,107,27)"/><text x="24.9605%" y="671.50"></text></g><g><title>ate::event::EventHeaderRaw::new (14 samples, 0.02%)</title><rect x="24.7387%" y="661" width="0.0232%" height="15" fill="rgb(205,136,37)"/><text x="24.9887%" y="671.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (10 samples, 0.02%)</title><rect x="24.7751%" y="661" width="0.0166%" height="15" fill="rgb(250,205,27)"/><text x="25.0251%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (134 samples, 0.22%)</title><rect x="24.8199%" y="613" width="0.2220%" height="15" fill="rgb(210,80,43)"/><text x="25.0699%" y="623.50"></text></g><g><title>blake3::Hasher::finalize (57 samples, 0.09%)</title><rect x="25.0418%" y="613" width="0.0944%" height="15" fill="rgb(247,160,36)"/><text x="25.2918%" y="623.50"></text></g><g><title>blake3::Hasher::final_output (42 samples, 0.07%)</title><rect x="25.0667%" y="597" width="0.0696%" height="15" fill="rgb(234,13,49)"/><text x="25.3167%" y="607.50"></text></g><g><title>blake3::Hasher::new (10 samples, 0.02%)</title><rect x="25.1362%" y="613" width="0.0166%" height="15" fill="rgb(234,122,0)"/><text x="25.3862%" y="623.50"></text></g><g><title>blake3::ChunkState::update (41 samples, 0.07%)</title><rect x="25.1892%" y="597" width="0.0679%" height="15" fill="rgb(207,146,38)"/><text x="25.4392%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (20 samples, 0.03%)</title><rect x="25.2240%" y="581" width="0.0331%" height="15" fill="rgb(207,177,25)"/><text x="25.4740%" y="591.50"></text></g><g><title>ate::redo::RedoLog::new::{{closure}} (294 samples, 0.49%)</title><rect x="24.7967%" y="661" width="0.4870%" height="15" fill="rgb(211,178,42)"/><text x="25.0467%" y="671.50"></text></g><g><title>ate::event::EventHeaderRaw::new (291 samples, 0.48%)</title><rect x="24.8016%" y="645" width="0.4820%" height="15" fill="rgb(230,69,54)"/><text x="25.0516%" y="655.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (291 samples, 0.48%)</title><rect x="24.8016%" y="629" width="0.4820%" height="15" fill="rgb(214,135,41)"/><text x="25.0516%" y="639.50"></text></g><g><title>blake3::Hasher::update (79 samples, 0.13%)</title><rect x="25.1528%" y="613" width="0.1309%" height="15" fill="rgb(237,67,25)"/><text x="25.4028%" y="623.50"></text></g><g><title>blake3::Hasher::merge_cv_stack (16 samples, 0.03%)</title><rect x="25.2572%" y="597" width="0.0265%" height="15" fill="rgb(222,189,50)"/><text x="25.5072%" y="607.50"></text></g><g><title>ate::spec::SerializationFormat::deserialize (7 samples, 0.01%)</title><rect x="25.2837%" y="661" width="0.0116%" height="15" fill="rgb(245,148,34)"/><text x="25.5337%" y="671.50"></text></g><g><title>ate::tree::TreeAuthorityPlugin::compute_auth (11 samples, 0.02%)</title><rect x="25.3085%" y="661" width="0.0182%" height="15" fill="rgb(222,29,6)"/><text x="25.5585%" y="671.50"></text></g><g><title>bincode::deserialize (10 samples, 0.02%)</title><rect x="25.3416%" y="661" width="0.0166%" height="15" fill="rgb(221,189,43)"/><text x="25.5916%" y="671.50"></text></g><g><title>blake3::ChunkState::update (71 samples, 0.12%)</title><rect x="25.3648%" y="661" width="0.1176%" height="15" fill="rgb(207,36,27)"/><text x="25.6148%" y="671.50"></text></g><g><title>blake3::Hasher::merge_cv_stack (13 samples, 0.02%)</title><rect x="25.4940%" y="661" width="0.0215%" height="15" fill="rgb(217,90,24)"/><text x="25.7440%" y="671.50"></text></g><g><title>blake3::Hasher::new (12 samples, 0.02%)</title><rect x="25.5156%" y="661" width="0.0199%" height="15" fill="rgb(224,66,35)"/><text x="25.7656%" y="671.50"></text></g><g><title>blake3::Hasher::update (33 samples, 0.05%)</title><rect x="25.5354%" y="661" width="0.0547%" height="15" fill="rgb(221,13,50)"/><text x="25.7854%" y="671.50"></text></g><g><title>blake3::hash (16 samples, 0.03%)</title><rect x="25.5901%" y="661" width="0.0265%" height="15" fill="rgb(236,68,49)"/><text x="25.8401%" y="671.50"></text></g><g><title>blake3_compress_in_place_sse41 (375 samples, 0.62%)</title><rect x="25.6166%" y="661" width="0.6212%" height="15" fill="rgb(229,146,28)"/><text x="25.8666%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (7 samples, 0.01%)</title><rect x="26.2378%" y="661" width="0.0116%" height="15" fill="rgb(225,31,38)"/><text x="26.4878%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (18 samples, 0.03%)</title><rect x="26.2510%" y="661" width="0.0298%" height="15" fill="rgb(250,208,3)"/><text x="26.5010%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (11 samples, 0.02%)</title><rect x="26.2808%" y="661" width="0.0182%" height="15" fill="rgb(246,54,23)"/><text x="26.5308%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (14 samples, 0.02%)</title><rect x="26.2991%" y="661" width="0.0232%" height="15" fill="rgb(243,76,11)"/><text x="26.5491%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (34 samples, 0.06%)</title><rect x="26.4051%" y="597" width="0.0563%" height="15" fill="rgb(245,21,50)"/><text x="26.6551%" y="607.50"></text></g><g><title>_int_malloc (41 samples, 0.07%)</title><rect x="26.4945%" y="565" width="0.0679%" height="15" fill="rgb(228,9,43)"/><text x="26.7445%" y="575.50"></text></g><g><title>__GI___libc_malloc (54 samples, 0.09%)</title><rect x="26.4746%" y="581" width="0.0894%" height="15" fill="rgb(208,100,47)"/><text x="26.7246%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.02%)</title><rect x="26.5641%" y="581" width="0.0199%" height="15" fill="rgb(232,26,8)"/><text x="26.8141%" y="591.50"></text></g><g><title>ate::dio::DioState::dirty (118 samples, 0.20%)</title><rect x="26.4614%" y="597" width="0.1955%" height="15" fill="rgb(216,166,38)"/><text x="26.7114%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (41 samples, 0.07%)</title><rect x="26.5889%" y="581" width="0.0679%" height="15" fill="rgb(251,202,51)"/><text x="26.8389%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (31 samples, 0.05%)</title><rect x="26.6055%" y="565" width="0.0513%" height="15" fill="rgb(254,216,34)"/><text x="26.8555%" y="575.50"></text></g><g><title>ate::crypto::Hash::from_bytes (67 samples, 0.11%)</title><rect x="26.7115%" y="581" width="0.1110%" height="15" fill="rgb(251,32,27)"/><text x="26.9615%" y="591.50"></text></g><g><title>blake3::hash (66 samples, 0.11%)</title><rect x="26.7132%" y="565" width="0.1093%" height="15" fill="rgb(208,127,28)"/><text x="26.9632%" y="575.50"></text></g><g><title>blake3::ChunkState::update (53 samples, 0.09%)</title><rect x="26.7347%" y="549" width="0.0878%" height="15" fill="rgb(224,137,22)"/><text x="26.9847%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.02%)</title><rect x="26.8026%" y="533" width="0.0199%" height="15" fill="rgb(254,70,32)"/><text x="27.0526%" y="543.50"></text></g><g><title>__GI___libc_malloc (470 samples, 0.78%)</title><rect x="26.8556%" y="549" width="0.7785%" height="15" fill="rgb(229,75,37)"/><text x="27.1056%" y="559.50"></text></g><g><title>_int_malloc (433 samples, 0.72%)</title><rect x="26.9169%" y="533" width="0.7172%" height="15" fill="rgb(252,64,23)"/><text x="27.1669%" y="543.50"></text></g><g><title>unlink_chunk (76 samples, 0.13%)</title><rect x="27.5082%" y="517" width="0.1259%" height="15" fill="rgb(232,162,48)"/><text x="27.7582%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (121 samples, 0.20%)</title><rect x="27.8925%" y="533" width="0.2004%" height="15" fill="rgb(246,160,12)"/><text x="28.1425%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (336 samples, 0.56%)</title><rect x="27.6341%" y="549" width="0.5566%" height="15" fill="rgb(247,166,0)"/><text x="27.8841%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (59 samples, 0.10%)</title><rect x="28.0930%" y="533" width="0.0977%" height="15" fill="rgb(249,219,21)"/><text x="28.3430%" y="543.50"></text></g><g><title>ate::dio::dao::Row&lt;D&gt;::as_row_data (1,018 samples, 1.69%)</title><rect x="26.6568%" y="597" width="1.6862%" height="15" fill="rgb(205,209,3)"/><text x="26.9068%" y="607.50"></text></g><g><title>ate::spec::SerializationFormat::serialize (918 samples, 1.52%)</title><rect x="26.8225%" y="581" width="1.5206%" height="15" fill="rgb(243,44,1)"/><text x="27.0725%" y="591.50"></text></g><g><title>bincode::serialize (912 samples, 1.51%)</title><rect x="26.8324%" y="565" width="1.5107%" height="15" fill="rgb(206,159,16)"/><text x="27.0824%" y="575.50"></text></g><g><title>stress::_::&lt;impl serde::ser::Serialize for stress::MyTestObject&gt;::serialize (92 samples, 0.15%)</title><rect x="28.1907%" y="549" width="0.1524%" height="15" fill="rgb(244,77,30)"/><text x="28.4407%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 0.03%)</title><rect x="28.3100%" y="533" width="0.0331%" height="15" fill="rgb(218,69,12)"/><text x="28.5600%" y="543.50"></text></g><g><title>&lt;ate::dio::dao::Dao&lt;D&gt; as core::ops::drop::Drop&gt;::drop (1,184 samples, 1.96%)</title><rect x="26.3951%" y="613" width="1.9612%" height="15" fill="rgb(212,87,7)"/><text x="26.6451%" y="623.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (8 samples, 0.01%)</title><rect x="28.3431%" y="597" width="0.0133%" height="15" fill="rgb(245,114,25)"/><text x="28.5931%" y="607.50"></text></g><g><title>ate::conf::ChainOfTrustBuilder::new (7 samples, 0.01%)</title><rect x="28.3563%" y="613" width="0.0116%" height="15" fill="rgb(210,61,42)"/><text x="28.6063%" y="623.50"></text></g><g><title>ate::conf::ChainOfTrustBuilder::with_defaults (7 samples, 0.01%)</title><rect x="28.3563%" y="597" width="0.0116%" height="15" fill="rgb(211,52,33)"/><text x="28.6063%" y="607.50"></text></g><g><title>ate::time::TimestampEnforcer::new (7 samples, 0.01%)</title><rect x="28.3563%" y="581" width="0.0116%" height="15" fill="rgb(234,58,33)"/><text x="28.6063%" y="591.50"></text></g><g><title>ate::time::ntp::query_ntp_retry (7 samples, 0.01%)</title><rect x="28.3563%" y="565" width="0.0116%" height="15" fill="rgb(220,115,36)"/><text x="28.6063%" y="575.50"></text></g><g><title>ate::time::ntp::request (7 samples, 0.01%)</title><rect x="28.3563%" y="549" width="0.0116%" height="15" fill="rgb(243,153,54)"/><text x="28.6063%" y="559.50"></text></g><g><title>std::net::udp::UdpSocket::recv_from (7 samples, 0.01%)</title><rect x="28.3563%" y="533" width="0.0116%" height="15" fill="rgb(251,47,18)"/><text x="28.6063%" y="543.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv_from (7 samples, 0.01%)</title><rect x="28.3563%" y="517" width="0.0116%" height="15" fill="rgb(242,102,42)"/><text x="28.6063%" y="527.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from (7 samples, 0.01%)</title><rect x="28.3563%" y="501" width="0.0116%" height="15" fill="rgb(234,31,38)"/><text x="28.6063%" y="511.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from_with_flags (7 samples, 0.01%)</title><rect x="28.3563%" y="485" width="0.0116%" height="15" fill="rgb(221,117,51)"/><text x="28.6063%" y="495.50"></text></g><g><title>__libc_recvfrom (7 samples, 0.01%)</title><rect x="28.3563%" y="469" width="0.0116%" height="15" fill="rgb(212,20,18)"/><text x="28.6063%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="28.3563%" y="453" width="0.0116%" height="15" fill="rgb(245,133,36)"/><text x="28.6063%" y="463.50"></text></g><g><title>do_syscall_64 (7 samples, 0.01%)</title><rect x="28.3563%" y="437" width="0.0116%" height="15" fill="rgb(212,6,19)"/><text x="28.6063%" y="447.50"></text></g><g><title>__x64_sys_recvfrom (7 samples, 0.01%)</title><rect x="28.3563%" y="421" width="0.0116%" height="15" fill="rgb(218,1,36)"/><text x="28.6063%" y="431.50"></text></g><g><title>__sys_recvfrom (7 samples, 0.01%)</title><rect x="28.3563%" y="405" width="0.0116%" height="15" fill="rgb(246,84,54)"/><text x="28.6063%" y="415.50"></text></g><g><title>inet_recvmsg (7 samples, 0.01%)</title><rect x="28.3563%" y="389" width="0.0116%" height="15" fill="rgb(242,110,6)"/><text x="28.6063%" y="399.50"></text></g><g><title>udp_recvmsg (7 samples, 0.01%)</title><rect x="28.3563%" y="373" width="0.0116%" height="15" fill="rgb(214,47,5)"/><text x="28.6063%" y="383.50"></text></g><g><title>__skb_recv_udp (7 samples, 0.01%)</title><rect x="28.3563%" y="357" width="0.0116%" height="15" fill="rgb(218,159,25)"/><text x="28.6063%" y="367.50"></text></g><g><title>__skb_wait_for_more_packets (7 samples, 0.01%)</title><rect x="28.3563%" y="341" width="0.0116%" height="15" fill="rgb(215,211,28)"/><text x="28.6063%" y="351.50"></text></g><g><title>schedule_timeout (7 samples, 0.01%)</title><rect x="28.3563%" y="325" width="0.0116%" height="15" fill="rgb(238,59,32)"/><text x="28.6063%" y="335.50"></text></g><g><title>schedule (7 samples, 0.01%)</title><rect x="28.3563%" y="309" width="0.0116%" height="15" fill="rgb(226,82,3)"/><text x="28.6063%" y="319.50"></text></g><g><title>__schedule (7 samples, 0.01%)</title><rect x="28.3563%" y="293" width="0.0116%" height="15" fill="rgb(240,164,32)"/><text x="28.6063%" y="303.50"></text></g><g><title>finish_task_switch (7 samples, 0.01%)</title><rect x="28.3563%" y="277" width="0.0116%" height="15" fill="rgb(232,46,7)"/><text x="28.6063%" y="287.50"></text></g><g><title>__perf_event_task_sched_in (7 samples, 0.01%)</title><rect x="28.3563%" y="261" width="0.0116%" height="15" fill="rgb(229,129,53)"/><text x="28.6063%" y="271.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (7 samples, 0.01%)</title><rect x="28.3563%" y="245" width="0.0116%" height="15" fill="rgb(234,188,29)"/><text x="28.6063%" y="255.50"></text></g><g><title>native_write_msr (7 samples, 0.01%)</title><rect x="28.3563%" y="229" width="0.0116%" height="15" fill="rgb(246,141,4)"/><text x="28.6063%" y="239.50"></text></g><g><title>__memmove_avx_unaligned_erms (58 samples, 0.10%)</title><rect x="28.4077%" y="597" width="0.0961%" height="15" fill="rgb(229,23,39)"/><text x="28.6577%" y="607.50"></text></g><g><title>ate::dio::Dio::store (95 samples, 0.16%)</title><rect x="28.3679%" y="613" width="0.1574%" height="15" fill="rgb(206,12,3)"/><text x="28.6179%" y="623.50"></text></g><g><title>ate::dio::DioState::lock (13 samples, 0.02%)</title><rect x="28.5038%" y="597" width="0.0215%" height="15" fill="rgb(252,226,20)"/><text x="28.7538%" y="607.50"></text></g><g><title>_int_malloc (91 samples, 0.15%)</title><rect x="28.8383%" y="533" width="0.1507%" height="15" fill="rgb(216,123,35)"/><text x="29.0883%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (159 samples, 0.26%)</title><rect x="28.7307%" y="565" width="0.2634%" height="15" fill="rgb(212,68,40)"/><text x="28.9807%" y="575.50"></text></g><g><title>__GI___libc_malloc (99 samples, 0.16%)</title><rect x="28.8301%" y="549" width="0.1640%" height="15" fill="rgb(254,125,32)"/><text x="29.0801%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.01%)</title><rect x="29.1779%" y="533" width="0.0133%" height="15" fill="rgb(253,97,22)"/><text x="29.4279%" y="543.50"></text></g><g><title>__get_user_nocheck_4 (8 samples, 0.01%)</title><rect x="29.2293%" y="437" width="0.0133%" height="15" fill="rgb(241,101,14)"/><text x="29.4793%" y="447.50"></text></g><g><title>do_syscall_64 (36 samples, 0.06%)</title><rect x="29.1912%" y="517" width="0.0596%" height="15" fill="rgb(238,103,29)"/><text x="29.4412%" y="527.50"></text></g><g><title>__x64_sys_futex (35 samples, 0.06%)</title><rect x="29.1928%" y="501" width="0.0580%" height="15" fill="rgb(233,195,47)"/><text x="29.4428%" y="511.50"></text></g><g><title>do_futex (34 samples, 0.06%)</title><rect x="29.1945%" y="485" width="0.0563%" height="15" fill="rgb(246,218,30)"/><text x="29.4445%" y="495.50"></text></g><g><title>futex_wait (31 samples, 0.05%)</title><rect x="29.1995%" y="469" width="0.0513%" height="15" fill="rgb(219,145,47)"/><text x="29.4495%" y="479.50"></text></g><g><title>futex_wait_setup (27 samples, 0.04%)</title><rect x="29.2061%" y="453" width="0.0447%" height="15" fill="rgb(243,12,26)"/><text x="29.4561%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (57 samples, 0.09%)</title><rect x="29.1912%" y="533" width="0.0944%" height="15" fill="rgb(214,87,16)"/><text x="29.4412%" y="543.50"></text></g><g><title>syscall_exit_to_user_mode (21 samples, 0.03%)</title><rect x="29.2508%" y="517" width="0.0348%" height="15" fill="rgb(208,99,42)"/><text x="29.5008%" y="527.50"></text></g><g><title>__lll_lock_wait_private (85 samples, 0.14%)</title><rect x="29.1580%" y="549" width="0.1408%" height="15" fill="rgb(253,99,2)"/><text x="29.4080%" y="559.50"></text></g><g><title>syscall_return_via_sysret (8 samples, 0.01%)</title><rect x="29.2856%" y="533" width="0.0133%" height="15" fill="rgb(220,168,23)"/><text x="29.5356%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (25 samples, 0.04%)</title><rect x="29.2988%" y="549" width="0.0414%" height="15" fill="rgb(242,38,24)"/><text x="29.5488%" y="559.50"></text></g><g><title>_raw_spin_lock (9 samples, 0.01%)</title><rect x="29.3684%" y="469" width="0.0149%" height="15" fill="rgb(225,182,9)"/><text x="29.6184%" y="479.50"></text></g><g><title>do_syscall_64 (25 samples, 0.04%)</title><rect x="29.3452%" y="533" width="0.0414%" height="15" fill="rgb(243,178,37)"/><text x="29.5952%" y="543.50"></text></g><g><title>__x64_sys_futex (24 samples, 0.04%)</title><rect x="29.3469%" y="517" width="0.0398%" height="15" fill="rgb(232,139,19)"/><text x="29.5969%" y="527.50"></text></g><g><title>do_futex (22 samples, 0.04%)</title><rect x="29.3502%" y="501" width="0.0364%" height="15" fill="rgb(225,201,24)"/><text x="29.6002%" y="511.50"></text></g><g><title>futex_wake (20 samples, 0.03%)</title><rect x="29.3535%" y="485" width="0.0331%" height="15" fill="rgb(221,47,46)"/><text x="29.6035%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (85 samples, 0.14%)</title><rect x="29.3402%" y="549" width="0.1408%" height="15" fill="rgb(249,23,13)"/><text x="29.5902%" y="559.50"></text></g><g><title>syscall_exit_to_user_mode (57 samples, 0.09%)</title><rect x="29.3866%" y="533" width="0.0944%" height="15" fill="rgb(219,9,5)"/><text x="29.6366%" y="543.50"></text></g><g><title>_int_free (310 samples, 0.51%)</title><rect x="29.0189%" y="565" width="0.5135%" height="15" fill="rgb(254,171,16)"/><text x="29.2689%" y="575.50"></text></g><g><title>syscall_return_via_sysret (27 samples, 0.04%)</title><rect x="29.4877%" y="549" width="0.0447%" height="15" fill="rgb(230,171,20)"/><text x="29.7377%" y="559.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.01%)</title><rect x="29.5473%" y="533" width="0.0133%" height="15" fill="rgb(210,71,41)"/><text x="29.7973%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.03%)</title><rect x="29.5324%" y="565" width="0.0315%" height="15" fill="rgb(206,173,20)"/><text x="29.7824%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.03%)</title><rect x="29.5374%" y="549" width="0.0265%" height="15" fill="rgb(233,88,34)"/><text x="29.7874%" y="559.50"></text></g><g><title>_int_malloc (31 samples, 0.05%)</title><rect x="29.6599%" y="501" width="0.0513%" height="15" fill="rgb(223,209,46)"/><text x="29.9099%" y="511.50"></text></g><g><title>unlink_chunk (23 samples, 0.04%)</title><rect x="29.6732%" y="485" width="0.0381%" height="15" fill="rgb(250,43,18)"/><text x="29.9232%" y="495.50"></text></g><g><title>__GI___libc_malloc (59 samples, 0.10%)</title><rect x="29.6152%" y="517" width="0.0977%" height="15" fill="rgb(208,13,10)"/><text x="29.8652%" y="527.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (120 samples, 0.20%)</title><rect x="29.7245%" y="501" width="0.1988%" height="15" fill="rgb(212,200,36)"/><text x="29.9745%" y="511.50"></text></g><g><title>ate::spec::SerializationFormat::serialize (197 samples, 0.33%)</title><rect x="29.6003%" y="549" width="0.3263%" height="15" fill="rgb(225,90,30)"/><text x="29.8503%" y="559.50"></text></g><g><title>bincode::serialize (191 samples, 0.32%)</title><rect x="29.6102%" y="533" width="0.3164%" height="15" fill="rgb(236,182,39)"/><text x="29.8602%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (128 samples, 0.21%)</title><rect x="29.7146%" y="517" width="0.2120%" height="15" fill="rgb(212,144,35)"/><text x="29.9646%" y="527.50"></text></g><g><title>ate::event::EventData::as_header_raw (268 samples, 0.44%)</title><rect x="29.5639%" y="565" width="0.4439%" height="15" fill="rgb(228,63,44)"/><text x="29.8139%" y="575.50"></text></g><g><title>blake3::hash (49 samples, 0.08%)</title><rect x="29.9266%" y="549" width="0.0812%" height="15" fill="rgb(228,109,6)"/><text x="30.1766%" y="559.50"></text></g><g><title>blake3::ChunkState::update (28 samples, 0.05%)</title><rect x="29.9614%" y="533" width="0.0464%" height="15" fill="rgb(238,117,24)"/><text x="30.2114%" y="543.50"></text></g><g><title>ate::multi::ChainMultiUser::data_as_underlay (39 samples, 0.06%)</title><rect x="30.0078%" y="565" width="0.0646%" height="15" fill="rgb(242,26,26)"/><text x="30.2578%" y="575.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::transform::EventDataTransformer&gt;::data_as_underlay (7 samples, 0.01%)</title><rect x="30.0608%" y="549" width="0.0116%" height="15" fill="rgb(221,92,48)"/><text x="30.3108%" y="559.50"></text></g><g><title>std::time::SystemTime::duration_since (9 samples, 0.01%)</title><rect x="30.2049%" y="517" width="0.0149%" height="15" fill="rgb(209,209,32)"/><text x="30.4549%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (8 samples, 0.01%)</title><rect x="30.2066%" y="501" width="0.0133%" height="15" fill="rgb(221,70,22)"/><text x="30.4566%" y="511.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (8 samples, 0.01%)</title><rect x="30.2066%" y="485" width="0.0133%" height="15" fill="rgb(248,145,5)"/><text x="30.4566%" y="495.50"></text></g><g><title>&lt;ate::time::TimestampEnforcer as ate::lint::EventMetadataLinter&gt;::metadata_lint_event (71 samples, 0.12%)</title><rect x="30.1436%" y="549" width="0.1176%" height="15" fill="rgb(226,116,26)"/><text x="30.3936%" y="559.50"></text></g><g><title>ate::time::TimestampEnforcer::current_timestamp (55 samples, 0.09%)</title><rect x="30.1701%" y="533" width="0.0911%" height="15" fill="rgb(244,5,17)"/><text x="30.4201%" y="543.50"></text></g><g><title>std::time::SystemTime::now (25 samples, 0.04%)</title><rect x="30.2198%" y="517" width="0.0414%" height="15" fill="rgb(252,159,33)"/><text x="30.4698%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (25 samples, 0.04%)</title><rect x="30.2198%" y="501" width="0.0414%" height="15" fill="rgb(206,71,0)"/><text x="30.4698%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::now (25 samples, 0.04%)</title><rect x="30.2198%" y="485" width="0.0414%" height="15" fill="rgb(233,118,54)"/><text x="30.4698%" y="495.50"></text></g><g><title>__GI___clock_gettime (23 samples, 0.04%)</title><rect x="30.2231%" y="469" width="0.0381%" height="15" fill="rgb(234,83,48)"/><text x="30.4731%" y="479.50"></text></g><g><title>__vdso_clock_gettime (21 samples, 0.03%)</title><rect x="30.2264%" y="453" width="0.0348%" height="15" fill="rgb(228,3,54)"/><text x="30.4764%" y="463.50"></text></g><g><title>[[vdso]] (11 samples, 0.02%)</title><rect x="30.2430%" y="437" width="0.0182%" height="15" fill="rgb(226,155,13)"/><text x="30.4930%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.02%)</title><rect x="30.2943%" y="533" width="0.0182%" height="15" fill="rgb(241,28,37)"/><text x="30.5443%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.01%)</title><rect x="30.3010%" y="517" width="0.0116%" height="15" fill="rgb(233,93,10)"/><text x="30.5510%" y="527.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::lint::EventMetadataLinter&gt;::metadata_lint_event (175 samples, 0.29%)</title><rect x="30.2612%" y="549" width="0.2899%" height="15" fill="rgb(225,113,19)"/><text x="30.5112%" y="559.50"></text></g><g><title>ate::tree::TreeAuthorityPlugin::compute_auth (144 samples, 0.24%)</title><rect x="30.3126%" y="533" width="0.2385%" height="15" fill="rgb(241,2,18)"/><text x="30.5626%" y="543.50"></text></g><g><title>_int_free (12 samples, 0.02%)</title><rect x="30.5660%" y="549" width="0.0199%" height="15" fill="rgb(228,207,21)"/><text x="30.8160%" y="559.50"></text></g><g><title>_int_malloc (130 samples, 0.22%)</title><rect x="30.5975%" y="501" width="0.2153%" height="15" fill="rgb(213,211,35)"/><text x="30.8475%" y="511.50"></text></g><g><title>__GI___libc_malloc (138 samples, 0.23%)</title><rect x="30.5875%" y="517" width="0.2286%" height="15" fill="rgb(209,83,10)"/><text x="30.8375%" y="527.50"></text></g><g><title>ate::multi::ChainMultiUser::metadata_lint_event (453 samples, 0.75%)</title><rect x="30.0724%" y="565" width="0.7504%" height="15" fill="rgb(209,164,1)"/><text x="30.3224%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (143 samples, 0.24%)</title><rect x="30.5859%" y="549" width="0.2369%" height="15" fill="rgb(213,184,43)"/><text x="30.8359%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (142 samples, 0.24%)</title><rect x="30.5875%" y="533" width="0.2352%" height="15" fill="rgb(231,61,34)"/><text x="30.8375%" y="543.50"></text></g><g><title>_int_malloc (52 samples, 0.09%)</title><rect x="30.8873%" y="517" width="0.0861%" height="15" fill="rgb(235,75,3)"/><text x="31.1373%" y="527.50"></text></g><g><title>unlink_chunk (25 samples, 0.04%)</title><rect x="30.9321%" y="501" width="0.0414%" height="15" fill="rgb(220,106,47)"/><text x="31.1821%" y="511.50"></text></g><g><title>bytes::bytes::promotable_even_clone (91 samples, 0.15%)</title><rect x="30.8244%" y="565" width="0.1507%" height="15" fill="rgb(210,196,33)"/><text x="31.0744%" y="575.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (89 samples, 0.15%)</title><rect x="30.8277%" y="549" width="0.1474%" height="15" fill="rgb(229,154,42)"/><text x="31.0777%" y="559.50"></text></g><g><title>__GI___libc_malloc (81 samples, 0.13%)</title><rect x="30.8410%" y="533" width="0.1342%" height="15" fill="rgb(228,114,26)"/><text x="31.0910%" y="543.50"></text></g><g><title>__GI___libc_free (11 samples, 0.02%)</title><rect x="30.9917%" y="549" width="0.0182%" height="15" fill="rgb(208,144,1)"/><text x="31.2417%" y="559.50"></text></g><g><title>_int_free (30 samples, 0.05%)</title><rect x="31.0099%" y="549" width="0.0497%" height="15" fill="rgb(239,112,37)"/><text x="31.2599%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (134 samples, 0.22%)</title><rect x="30.9751%" y="565" width="0.2220%" height="15" fill="rgb(210,96,50)"/><text x="31.2251%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (82 samples, 0.14%)</title><rect x="31.0613%" y="549" width="0.1358%" height="15" fill="rgb(222,178,2)"/><text x="31.3113%" y="559.50"></text></g><g><title>__x64_sys_futex (7 samples, 0.01%)</title><rect x="31.2087%" y="453" width="0.0116%" height="15" fill="rgb(226,74,18)"/><text x="31.4587%" y="463.50"></text></g><g><title>do_syscall_64 (8 samples, 0.01%)</title><rect x="31.2087%" y="469" width="0.0133%" height="15" fill="rgb(225,67,54)"/><text x="31.4587%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.01%)</title><rect x="31.2087%" y="485" width="0.0149%" height="15" fill="rgb(251,92,32)"/><text x="31.4587%" y="495.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on (2,918 samples, 4.83%)</title><rect x="26.3918%" y="661" width="4.8334%" height="15" fill="rgb(228,149,22)"/><text x="26.6418%" y="671.50">tokio:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,917 samples, 4.83%)</title><rect x="26.3935%" y="645" width="4.8318%" height="15" fill="rgb(243,54,13)"/><text x="26.6435%" y="655.50">std::t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,917 samples, 4.83%)</title><rect x="26.3935%" y="629" width="4.8318%" height="15" fill="rgb(243,180,28)"/><text x="26.6435%" y="639.50">&lt;core:..</text></g><g><title>core::ptr::drop_in_place (1,630 samples, 2.70%)</title><rect x="28.5253%" y="613" width="2.7000%" height="15" fill="rgb(208,167,24)"/><text x="28.7753%" y="623.50">co..</text></g><g><title>&lt;ate::dio::Dio as core::ops::drop::Drop&gt;::drop (1,630 samples, 2.70%)</title><rect x="28.5253%" y="597" width="2.7000%" height="15" fill="rgb(245,73,45)"/><text x="28.7753%" y="607.50">&lt;a..</text></g><g><title>ate::dio::Dio::commit (1,630 samples, 2.70%)</title><rect x="28.5253%" y="581" width="2.7000%" height="15" fill="rgb(237,203,48)"/><text x="28.7753%" y="591.50">at..</text></g><g><title>tokio::task::spawn::spawn (12 samples, 0.02%)</title><rect x="31.2054%" y="565" width="0.0199%" height="15" fill="rgb(211,197,16)"/><text x="31.4554%" y="575.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (12 samples, 0.02%)</title><rect x="31.2054%" y="549" width="0.0199%" height="15" fill="rgb(243,99,51)"/><text x="31.4554%" y="559.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (10 samples, 0.02%)</title><rect x="31.2087%" y="533" width="0.0166%" height="15" fill="rgb(215,123,29)"/><text x="31.4587%" y="543.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (10 samples, 0.02%)</title><rect x="31.2087%" y="517" width="0.0166%" height="15" fill="rgb(239,186,37)"/><text x="31.4587%" y="527.50"></text></g><g><title>syscall (10 samples, 0.02%)</title><rect x="31.2087%" y="501" width="0.0166%" height="15" fill="rgb(252,136,39)"/><text x="31.4587%" y="511.50"></text></g><g><title>__perf_event_task_sched_out (16 samples, 0.03%)</title><rect x="31.5400%" y="437" width="0.0265%" height="15" fill="rgb(223,213,32)"/><text x="31.7900%" y="447.50"></text></g><g><title>reweight_entity (8 samples, 0.01%)</title><rect x="31.6046%" y="405" width="0.0133%" height="15" fill="rgb(233,115,5)"/><text x="31.8546%" y="415.50"></text></g><g><title>__calc_delta (10 samples, 0.02%)</title><rect x="31.6659%" y="389" width="0.0166%" height="15" fill="rgb(207,226,44)"/><text x="31.9159%" y="399.50"></text></g><g><title>__cgroup_account_cputime (14 samples, 0.02%)</title><rect x="31.6824%" y="389" width="0.0232%" height="15" fill="rgb(208,126,0)"/><text x="31.9324%" y="399.50"></text></g><g><title>cpuacct_charge (7 samples, 0.01%)</title><rect x="31.7056%" y="389" width="0.0116%" height="15" fill="rgb(244,66,21)"/><text x="31.9556%" y="399.50"></text></g><g><title>update_curr (58 samples, 0.10%)</title><rect x="31.6278%" y="405" width="0.0961%" height="15" fill="rgb(222,97,12)"/><text x="31.8778%" y="415.50"></text></g><g><title>__update_load_avg_cfs_rq (10 samples, 0.02%)</title><rect x="31.7354%" y="389" width="0.0166%" height="15" fill="rgb(219,213,19)"/><text x="31.9854%" y="399.50"></text></g><g><title>dequeue_entity (98 samples, 0.16%)</title><rect x="31.5946%" y="421" width="0.1623%" height="15" fill="rgb(252,169,30)"/><text x="31.8446%" y="431.50"></text></g><g><title>update_load_avg (20 samples, 0.03%)</title><rect x="31.7238%" y="405" width="0.0331%" height="15" fill="rgb(206,32,51)"/><text x="31.9738%" y="415.50"></text></g><g><title>dequeue_task_fair (114 samples, 0.19%)</title><rect x="31.5714%" y="437" width="0.1888%" height="15" fill="rgb(250,172,42)"/><text x="31.8214%" y="447.50"></text></g><g><title>__perf_event_task_sched_in (81 samples, 0.13%)</title><rect x="31.8100%" y="421" width="0.1342%" height="15" fill="rgb(209,34,43)"/><text x="32.0600%" y="431.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (79 samples, 0.13%)</title><rect x="31.8133%" y="405" width="0.1309%" height="15" fill="rgb(223,11,35)"/><text x="32.0633%" y="415.50"></text></g><g><title>native_write_msr (78 samples, 0.13%)</title><rect x="31.8149%" y="389" width="0.1292%" height="15" fill="rgb(251,219,26)"/><text x="32.0649%" y="399.50"></text></g><g><title>finish_task_switch (113 samples, 0.19%)</title><rect x="31.7603%" y="437" width="0.1872%" height="15" fill="rgb(231,119,3)"/><text x="32.0103%" y="447.50"></text></g><g><title>pick_next_task_fair (21 samples, 0.03%)</title><rect x="31.9475%" y="437" width="0.0348%" height="15" fill="rgb(216,97,11)"/><text x="32.1975%" y="447.50"></text></g><g><title>newidle_balance (19 samples, 0.03%)</title><rect x="31.9508%" y="421" width="0.0315%" height="15" fill="rgb(223,59,9)"/><text x="32.2008%" y="431.50"></text></g><g><title>pick_next_task_idle (17 samples, 0.03%)</title><rect x="31.9822%" y="437" width="0.0282%" height="15" fill="rgb(233,93,31)"/><text x="32.2322%" y="447.50"></text></g><g><title>__update_idle_core (11 samples, 0.02%)</title><rect x="31.9922%" y="421" width="0.0182%" height="15" fill="rgb(239,81,33)"/><text x="32.2422%" y="431.50"></text></g><g><title>psi_task_change (92 samples, 0.15%)</title><rect x="32.0104%" y="437" width="0.1524%" height="15" fill="rgb(213,120,34)"/><text x="32.2604%" y="447.50"></text></g><g><title>psi_group_change (81 samples, 0.13%)</title><rect x="32.0286%" y="421" width="0.1342%" height="15" fill="rgb(243,49,53)"/><text x="32.2786%" y="431.50"></text></g><g><title>record_times (12 samples, 0.02%)</title><rect x="32.1429%" y="405" width="0.0199%" height="15" fill="rgb(247,216,33)"/><text x="32.3929%" y="415.50"></text></g><g><title>sched_clock_cpu (9 samples, 0.01%)</title><rect x="32.1479%" y="389" width="0.0149%" height="15" fill="rgb(226,26,14)"/><text x="32.3979%" y="399.50"></text></g><g><title>sched_clock (8 samples, 0.01%)</title><rect x="32.1495%" y="373" width="0.0133%" height="15" fill="rgb(215,49,53)"/><text x="32.3995%" y="383.50"></text></g><g><title>native_sched_clock (7 samples, 0.01%)</title><rect x="32.1512%" y="357" width="0.0116%" height="15" fill="rgb(245,162,40)"/><text x="32.4012%" y="367.50"></text></g><g><title>put_prev_task_fair (8 samples, 0.01%)</title><rect x="32.1628%" y="437" width="0.0133%" height="15" fill="rgb(229,68,17)"/><text x="32.4128%" y="447.50"></text></g><g><title>futex_wait_queue_me (439 samples, 0.73%)</title><rect x="31.4704%" y="485" width="0.7272%" height="15" fill="rgb(213,182,10)"/><text x="31.7204%" y="495.50"></text></g><g><title>schedule (425 samples, 0.70%)</title><rect x="31.4936%" y="469" width="0.7040%" height="15" fill="rgb(245,125,30)"/><text x="31.7436%" y="479.50"></text></g><g><title>__schedule (418 samples, 0.69%)</title><rect x="31.5052%" y="453" width="0.6924%" height="15" fill="rgb(232,202,2)"/><text x="31.7552%" y="463.50"></text></g><g><title>update_rq_clock (11 samples, 0.02%)</title><rect x="32.1794%" y="437" width="0.0182%" height="15" fill="rgb(237,140,51)"/><text x="32.4294%" y="447.50"></text></g><g><title>__get_user_nocheck_4 (10 samples, 0.02%)</title><rect x="32.2324%" y="469" width="0.0166%" height="15" fill="rgb(236,157,25)"/><text x="32.4824%" y="479.50"></text></g><g><title>__x64_sys_futex (515 samples, 0.85%)</title><rect x="31.4075%" y="533" width="0.8531%" height="15" fill="rgb(219,209,0)"/><text x="31.6575%" y="543.50"></text></g><g><title>do_futex (506 samples, 0.84%)</title><rect x="31.4224%" y="517" width="0.8382%" height="15" fill="rgb(240,116,54)"/><text x="31.6724%" y="527.50"></text></g><g><title>futex_wait (496 samples, 0.82%)</title><rect x="31.4389%" y="501" width="0.8216%" height="15" fill="rgb(216,10,36)"/><text x="31.6889%" y="511.50"></text></g><g><title>futex_wait_setup (38 samples, 0.06%)</title><rect x="32.1976%" y="485" width="0.0629%" height="15" fill="rgb(222,72,44)"/><text x="32.4476%" y="495.50"></text></g><g><title>do_syscall_64 (522 samples, 0.86%)</title><rect x="31.3992%" y="549" width="0.8647%" height="15" fill="rgb(232,159,9)"/><text x="31.6492%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (640 samples, 1.06%)</title><rect x="31.3926%" y="565" width="1.0601%" height="15" fill="rgb(210,39,32)"/><text x="31.6426%" y="575.50"></text></g><g><title>syscall_exit_to_user_mode (114 samples, 0.19%)</title><rect x="32.2638%" y="549" width="0.1888%" height="15" fill="rgb(216,194,45)"/><text x="32.5138%" y="559.50"></text></g><g><title>exit_to_user_mode_prepare (22 samples, 0.04%)</title><rect x="32.4162%" y="533" width="0.0364%" height="15" fill="rgb(218,18,35)"/><text x="32.6662%" y="543.50"></text></g><g><title>switch_fpu_return (17 samples, 0.03%)</title><rect x="32.4245%" y="517" width="0.0282%" height="15" fill="rgb(207,83,51)"/><text x="32.6745%" y="527.50"></text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (769 samples, 1.27%)</title><rect x="31.2435%" y="629" width="1.2738%" height="15" fill="rgb(225,63,43)"/><text x="31.4935%" y="639.50"></text></g><g><title>tokio::park::thread::Inner::park (766 samples, 1.27%)</title><rect x="31.2484%" y="613" width="1.2688%" height="15" fill="rgb(207,57,36)"/><text x="31.4984%" y="623.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (746 samples, 1.24%)</title><rect x="31.2816%" y="597" width="1.2357%" height="15" fill="rgb(216,99,33)"/><text x="31.5316%" y="607.50"></text></g><g><title>syscall (702 samples, 1.16%)</title><rect x="31.3545%" y="581" width="1.1628%" height="15" fill="rgb(225,42,16)"/><text x="31.6045%" y="591.50"></text></g><g><title>syscall_return_via_sysret (39 samples, 0.06%)</title><rect x="32.4527%" y="565" width="0.0646%" height="15" fill="rgb(220,201,45)"/><text x="32.7027%" y="575.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.01%)</title><rect x="32.5587%" y="421" width="0.0133%" height="15" fill="rgb(225,33,4)"/><text x="32.8087%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.02%)</title><rect x="32.5554%" y="517" width="0.0215%" height="15" fill="rgb(224,33,50)"/><text x="32.8054%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.02%)</title><rect x="32.5554%" y="501" width="0.0215%" height="15" fill="rgb(246,198,51)"/><text x="32.8054%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.02%)</title><rect x="32.5554%" y="485" width="0.0215%" height="15" fill="rgb(205,22,4)"/><text x="32.8054%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="32.5570%" y="469" width="0.0199%" height="15" fill="rgb(206,3,8)"/><text x="32.8070%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="32.5570%" y="453" width="0.0199%" height="15" fill="rgb(251,23,15)"/><text x="32.8070%" y="463.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="32.5570%" y="437" width="0.0199%" height="15" fill="rgb(252,88,28)"/><text x="32.8070%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (18 samples, 0.03%)</title><rect x="32.5521%" y="597" width="0.0298%" height="15" fill="rgb(212,127,14)"/><text x="32.8021%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="32.5554%" y="581" width="0.0265%" height="15" fill="rgb(247,145,37)"/><text x="32.8054%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.03%)</title><rect x="32.5554%" y="565" width="0.0265%" height="15" fill="rgb(209,117,53)"/><text x="32.8054%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.03%)</title><rect x="32.5554%" y="549" width="0.0265%" height="15" fill="rgb(212,90,42)"/><text x="32.8054%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.03%)</title><rect x="32.5554%" y="533" width="0.0265%" height="15" fill="rgb(218,164,37)"/><text x="32.8054%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.01%)</title><rect x="33.1202%" y="549" width="0.0116%" height="15" fill="rgb(246,65,34)"/><text x="33.3702%" y="559.50"></text></g><g><title>_int_malloc (3,886 samples, 6.44%)</title><rect x="33.6751%" y="389" width="6.4369%" height="15" fill="rgb(231,100,33)"/><text x="33.9251%" y="399.50">_int_mal..</text></g><g><title>tcache_put (33 samples, 0.05%)</title><rect x="40.0573%" y="373" width="0.0547%" height="15" fill="rgb(228,126,14)"/><text x="40.3073%" y="383.50"></text></g><g><title>checked_request2size (14 samples, 0.02%)</title><rect x="40.1120%" y="389" width="0.0232%" height="15" fill="rgb(215,173,21)"/><text x="40.3620%" y="399.50"></text></g><g><title>__GI___libc_malloc (4,237 samples, 7.02%)</title><rect x="33.1682%" y="405" width="7.0183%" height="15" fill="rgb(210,6,40)"/><text x="33.4182%" y="415.50">__GI___li..</text></g><g><title>tcache_get (31 samples, 0.05%)</title><rect x="40.1352%" y="389" width="0.0513%" height="15" fill="rgb(212,48,18)"/><text x="40.3852%" y="399.50"></text></g><g><title>__rdl_alloc (38 samples, 0.06%)</title><rect x="40.1865%" y="405" width="0.0629%" height="15" fill="rgb(230,214,11)"/><text x="40.4365%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (38 samples, 0.06%)</title><rect x="40.1865%" y="389" width="0.0629%" height="15" fill="rgb(254,105,39)"/><text x="40.4365%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,321 samples, 7.16%)</title><rect x="33.1335%" y="501" width="7.1574%" height="15" fill="rgb(245,158,5)"/><text x="33.3835%" y="511.50">alloc::vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,321 samples, 7.16%)</title><rect x="33.1335%" y="485" width="7.1574%" height="15" fill="rgb(249,208,11)"/><text x="33.3835%" y="495.50">alloc::raw..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4,321 samples, 7.16%)</title><rect x="33.1335%" y="469" width="7.1574%" height="15" fill="rgb(210,39,28)"/><text x="33.3835%" y="479.50">alloc::raw..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,300 samples, 7.12%)</title><rect x="33.1682%" y="453" width="7.1226%" height="15" fill="rgb(211,56,53)"/><text x="33.4182%" y="463.50">&lt;alloc::al..</text></g><g><title>alloc::alloc::Global::alloc_impl (4,300 samples, 7.12%)</title><rect x="33.1682%" y="437" width="7.1226%" height="15" fill="rgb(226,201,30)"/><text x="33.4182%" y="447.50">alloc::all..</text></g><g><title>alloc::alloc::alloc (4,300 samples, 7.12%)</title><rect x="33.1682%" y="421" width="7.1226%" height="15" fill="rgb(239,101,34)"/><text x="33.4182%" y="431.50">alloc::all..</text></g><g><title>__rust_alloc (25 samples, 0.04%)</title><rect x="40.2495%" y="405" width="0.0414%" height="15" fill="rgb(226,209,5)"/><text x="40.4995%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,421 samples, 7.32%)</title><rect x="33.0904%" y="581" width="7.3231%" height="15" fill="rgb(250,105,47)"/><text x="33.3404%" y="591.50">&lt;alloc::st..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,403 samples, 7.29%)</title><rect x="33.1202%" y="565" width="7.2932%" height="15" fill="rgb(230,72,3)"/><text x="33.3702%" y="575.50">&lt;alloc::ve..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,396 samples, 7.28%)</title><rect x="33.1318%" y="549" width="7.2816%" height="15" fill="rgb(232,218,39)"/><text x="33.3818%" y="559.50">alloc::sli..</text></g><g><title>alloc::slice::hack::to_vec (4,396 samples, 7.28%)</title><rect x="33.1318%" y="533" width="7.2816%" height="15" fill="rgb(248,166,6)"/><text x="33.3818%" y="543.50">alloc::sli..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,396 samples, 7.28%)</title><rect x="33.1318%" y="517" width="7.2816%" height="15" fill="rgb(247,89,20)"/><text x="33.3818%" y="527.50">&lt;T as allo..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (73 samples, 0.12%)</title><rect x="40.2925%" y="501" width="0.1209%" height="15" fill="rgb(248,130,54)"/><text x="40.5425%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (73 samples, 0.12%)</title><rect x="40.2925%" y="485" width="0.1209%" height="15" fill="rgb(234,196,4)"/><text x="40.5425%" y="495.50"></text></g><g><title>__memmove_avx_unaligned_erms (55 samples, 0.09%)</title><rect x="40.3223%" y="469" width="0.0911%" height="15" fill="rgb(250,143,31)"/><text x="40.5723%" y="479.50"></text></g><g><title>_int_malloc (907 samples, 1.50%)</title><rect x="40.4549%" y="565" width="1.5024%" height="15" fill="rgb(211,110,34)"/><text x="40.7049%" y="575.50"></text></g><g><title>malloc_consolidate (762 samples, 1.26%)</title><rect x="40.6950%" y="549" width="1.2622%" height="15" fill="rgb(215,124,48)"/><text x="40.9450%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,662 samples, 9.38%)</title><rect x="32.5819%" y="597" width="9.3787%" height="15" fill="rgb(216,46,13)"/><text x="32.8319%" y="607.50">&lt;alloc::vec::..</text></g><g><title>__GI___libc_malloc (934 samples, 1.55%)</title><rect x="40.4134%" y="581" width="1.5471%" height="15" fill="rgb(205,184,25)"/><text x="40.6634%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (18 samples, 0.03%)</title><rect x="41.9605%" y="597" width="0.0298%" height="15" fill="rgb(228,1,10)"/><text x="42.2105%" y="607.50"></text></g><g><title>_int_free (23 samples, 0.04%)</title><rect x="41.9953%" y="581" width="0.0381%" height="15" fill="rgb(213,116,27)"/><text x="42.2453%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (89 samples, 0.15%)</title><rect x="42.1013%" y="565" width="0.1474%" height="15" fill="rgb(241,95,50)"/><text x="42.3513%" y="575.50"></text></g><g><title>bytes::bytes::promotable_even_drop (35 samples, 0.06%)</title><rect x="42.1908%" y="549" width="0.0580%" height="15" fill="rgb(238,48,32)"/><text x="42.4408%" y="559.50"></text></g><g><title>__GI___libc_free (393 samples, 0.65%)</title><rect x="42.2488%" y="565" width="0.6510%" height="15" fill="rgb(235,113,49)"/><text x="42.4988%" y="575.50"></text></g><g><title>__rdl_dealloc (18 samples, 0.03%)</title><rect x="42.8997%" y="565" width="0.0298%" height="15" fill="rgb(205,127,43)"/><text x="43.1497%" y="575.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (18 samples, 0.03%)</title><rect x="42.8997%" y="549" width="0.0298%" height="15" fill="rgb(250,162,2)"/><text x="43.1497%" y="559.50"></text></g><g><title>__rust_dealloc (16 samples, 0.03%)</title><rect x="42.9296%" y="565" width="0.0265%" height="15" fill="rgb(220,13,41)"/><text x="43.1796%" y="575.50"></text></g><g><title>free_perturb (21 samples, 0.03%)</title><rect x="43.9979%" y="549" width="0.0348%" height="15" fill="rgb(249,221,25)"/><text x="44.2479%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,949 samples, 11.51%)</title><rect x="32.5289%" y="613" width="11.5105%" height="15" fill="rgb(215,208,19)"/><text x="32.7789%" y="623.50">&lt;core::future::fr..</text></g><g><title>core::ptr::drop_in_place (1,235 samples, 2.05%)</title><rect x="41.9937%" y="597" width="2.0457%" height="15" fill="rgb(236,175,2)"/><text x="42.2437%" y="607.50">c..</text></g><g><title>core::ptr::drop_in_place (1,211 samples, 2.01%)</title><rect x="42.0334%" y="581" width="2.0059%" height="15" fill="rgb(241,52,2)"/><text x="42.2834%" y="591.50">c..</text></g><g><title>_int_free (654 samples, 1.08%)</title><rect x="42.9561%" y="565" width="1.0833%" height="15" fill="rgb(248,140,14)"/><text x="43.2061%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (7,729 samples, 12.80%)</title><rect x="31.2385%" y="661" width="12.8025%" height="15" fill="rgb(253,22,42)"/><text x="31.4885%" y="671.50">tokio::runtime::thr..</text></g><g><title>tokio::park::thread::CachedParkThread::block_on (7,729 samples, 12.80%)</title><rect x="31.2385%" y="645" width="12.8025%" height="15" fill="rgb(234,61,47)"/><text x="31.4885%" y="655.50">tokio::park::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,957 samples, 11.52%)</title><rect x="32.5173%" y="629" width="11.5237%" height="15" fill="rgb(208,226,15)"/><text x="32.7673%" y="639.50">std::thread::loca..</text></g><g><title>[unknown] (25,695 samples, 42.56%)</title><rect x="1.4858%" y="677" width="42.5618%" height="15" fill="rgb(217,221,4)"/><text x="1.7358%" y="687.50">[unknown]</text></g><g><title>ret_from_fork (46 samples, 0.08%)</title><rect x="44.0493%" y="661" width="0.0762%" height="15" fill="rgb(212,174,34)"/><text x="44.2993%" y="671.50"></text></g><g><title>schedule_tail (46 samples, 0.08%)</title><rect x="44.0493%" y="645" width="0.0762%" height="15" fill="rgb(253,83,4)"/><text x="44.2993%" y="655.50"></text></g><g><title>finish_task_switch (46 samples, 0.08%)</title><rect x="44.0493%" y="629" width="0.0762%" height="15" fill="rgb(250,195,49)"/><text x="44.2993%" y="639.50"></text></g><g><title>__perf_event_task_sched_in (45 samples, 0.07%)</title><rect x="44.0510%" y="613" width="0.0745%" height="15" fill="rgb(241,192,25)"/><text x="44.3010%" y="623.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (45 samples, 0.07%)</title><rect x="44.0510%" y="597" width="0.0745%" height="15" fill="rgb(208,124,10)"/><text x="44.3010%" y="607.50"></text></g><g><title>native_write_msr (45 samples, 0.07%)</title><rect x="44.0510%" y="581" width="0.0745%" height="15" fill="rgb(222,33,0)"/><text x="44.3010%" y="591.50"></text></g><g><title>__GI___clone (60 samples, 0.10%)</title><rect x="44.0476%" y="677" width="0.0994%" height="15" fill="rgb(234,209,28)"/><text x="44.2976%" y="687.50"></text></g><g><title>start_thread (13 samples, 0.02%)</title><rect x="44.1255%" y="661" width="0.0215%" height="15" fill="rgb(224,11,23)"/><text x="44.3755%" y="671.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (11 samples, 0.02%)</title><rect x="44.1288%" y="645" width="0.0182%" height="15" fill="rgb(232,99,1)"/><text x="44.3788%" y="655.50"></text></g><g><title>__vdso_clock_gettime (7 samples, 0.01%)</title><rect x="44.1520%" y="677" width="0.0116%" height="15" fill="rgb(237,95,45)"/><text x="44.4020%" y="687.50"></text></g><g><title>asm_exc_page_fault (301 samples, 0.50%)</title><rect x="44.1652%" y="677" width="0.4986%" height="15" fill="rgb(208,109,11)"/><text x="44.4152%" y="687.50"></text></g><g><title>blake3_compress_in_place_sse41 (6,094 samples, 10.09%)</title><rect x="44.6721%" y="677" width="10.0943%" height="15" fill="rgb(216,190,48)"/><text x="44.9221%" y="687.50">blake3_compress..</text></g><g><title>asm_sysvec_apic_timer_interrupt (14 samples, 0.02%)</title><rect x="54.7432%" y="661" width="0.0232%" height="15" fill="rgb(251,171,36)"/><text x="54.9932%" y="671.50"></text></g><g><title>sysvec_apic_timer_interrupt (13 samples, 0.02%)</title><rect x="54.7448%" y="645" width="0.0215%" height="15" fill="rgb(230,62,22)"/><text x="54.9948%" y="655.50"></text></g><g><title>irq_exit_rcu (8 samples, 0.01%)</title><rect x="54.7531%" y="629" width="0.0133%" height="15" fill="rgb(225,114,35)"/><text x="55.0031%" y="639.50"></text></g><g><title>do_softirq_own_stack (8 samples, 0.01%)</title><rect x="54.7531%" y="613" width="0.0133%" height="15" fill="rgb(215,118,42)"/><text x="55.0031%" y="623.50"></text></g><g><title>asm_call_sysvec_on_stack (8 samples, 0.01%)</title><rect x="54.7531%" y="597" width="0.0133%" height="15" fill="rgb(243,119,21)"/><text x="55.0031%" y="607.50"></text></g><g><title>__softirqentry_text_start (8 samples, 0.01%)</title><rect x="54.7531%" y="581" width="0.0133%" height="15" fill="rgb(252,177,53)"/><text x="55.0031%" y="591.50"></text></g><g><title>page_remove_rmap (17 samples, 0.03%)</title><rect x="54.8426%" y="533" width="0.0282%" height="15" fill="rgb(237,209,29)"/><text x="55.0926%" y="543.50"></text></g><g><title>free_pages_and_swap_cache (13 samples, 0.02%)</title><rect x="54.8724%" y="517" width="0.0215%" height="15" fill="rgb(212,65,23)"/><text x="55.1224%" y="527.50"></text></g><g><title>__list_del_entry_valid (21 samples, 0.03%)</title><rect x="55.0099%" y="453" width="0.0348%" height="15" fill="rgb(230,222,46)"/><text x="55.2599%" y="463.50"></text></g><g><title>__free_one_page (57 samples, 0.09%)</title><rect x="54.9535%" y="469" width="0.0944%" height="15" fill="rgb(215,135,32)"/><text x="55.2035%" y="479.50"></text></g><g><title>free_pcppages_bulk (63 samples, 0.10%)</title><rect x="54.9502%" y="485" width="0.1044%" height="15" fill="rgb(246,101,22)"/><text x="55.2002%" y="495.50"></text></g><g><title>free_unref_page_list (76 samples, 0.13%)</title><rect x="54.9370%" y="501" width="0.1259%" height="15" fill="rgb(206,107,13)"/><text x="55.1870%" y="511.50"></text></g><g><title>tlb_flush_mmu (117 samples, 0.19%)</title><rect x="54.8707%" y="533" width="0.1938%" height="15" fill="rgb(250,100,44)"/><text x="55.1207%" y="543.50"></text></g><g><title>release_pages (103 samples, 0.17%)</title><rect x="54.8939%" y="517" width="0.1706%" height="15" fill="rgb(231,147,38)"/><text x="55.1439%" y="527.50"></text></g><g><title>__x64_sys_exit_group (180 samples, 0.30%)</title><rect x="54.7730%" y="645" width="0.2982%" height="15" fill="rgb(229,8,40)"/><text x="55.0230%" y="655.50"></text></g><g><title>do_group_exit (180 samples, 0.30%)</title><rect x="54.7730%" y="629" width="0.2982%" height="15" fill="rgb(221,135,30)"/><text x="55.0230%" y="639.50"></text></g><g><title>do_exit (180 samples, 0.30%)</title><rect x="54.7730%" y="613" width="0.2982%" height="15" fill="rgb(249,193,18)"/><text x="55.0230%" y="623.50"></text></g><g><title>mmput (180 samples, 0.30%)</title><rect x="54.7730%" y="597" width="0.2982%" height="15" fill="rgb(209,133,39)"/><text x="55.0230%" y="607.50"></text></g><g><title>exit_mmap (180 samples, 0.30%)</title><rect x="54.7730%" y="581" width="0.2982%" height="15" fill="rgb(232,100,14)"/><text x="55.0230%" y="591.50"></text></g><g><title>unmap_vmas (178 samples, 0.29%)</title><rect x="54.7763%" y="565" width="0.2948%" height="15" fill="rgb(224,185,1)"/><text x="55.0263%" y="575.50"></text></g><g><title>unmap_page_range (178 samples, 0.29%)</title><rect x="54.7763%" y="549" width="0.2948%" height="15" fill="rgb(223,139,8)"/><text x="55.0263%" y="559.50"></text></g><g><title>do_syscall_64 (183 samples, 0.30%)</title><rect x="54.7713%" y="661" width="0.3031%" height="15" fill="rgb(232,213,38)"/><text x="55.0213%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (187 samples, 0.31%)</title><rect x="54.7680%" y="677" width="0.3098%" height="15" fill="rgb(207,94,22)"/><text x="55.0180%" y="687.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (32 samples, 0.05%)</title><rect x="55.0778%" y="677" width="0.0530%" height="15" fill="rgb(219,183,54)"/><text x="55.3278%" y="687.50"></text></g><g><title>stress (33,281 samples, 55.13%)</title><rect x="0.0083%" y="693" width="55.1275%" height="15" fill="rgb(216,185,54)"/><text x="0.2583%" y="703.50">stress</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.02%)</title><rect x="55.3014%" y="661" width="0.0215%" height="15" fill="rgb(254,217,39)"/><text x="55.5514%" y="671.50"></text></g><g><title>__GI___clock_gettime (9 samples, 0.01%)</title><rect x="55.3362%" y="661" width="0.0149%" height="15" fill="rgb(240,178,23)"/><text x="55.5862%" y="671.50"></text></g><g><title>ate::event::EventData::as_header_raw (8 samples, 0.01%)</title><rect x="55.3726%" y="661" width="0.0133%" height="15" fill="rgb(218,11,47)"/><text x="55.6226%" y="671.50"></text></g><g><title>blake3::ChunkState::update (9 samples, 0.01%)</title><rect x="55.3991%" y="661" width="0.0149%" height="15" fill="rgb(218,51,51)"/><text x="55.6491%" y="671.50"></text></g><g><title>blake3::hash (9 samples, 0.01%)</title><rect x="55.4140%" y="661" width="0.0149%" height="15" fill="rgb(238,126,27)"/><text x="55.6640%" y="671.50"></text></g><g><title>syscall (10 samples, 0.02%)</title><rect x="55.4505%" y="661" width="0.0166%" height="15" fill="rgb(249,202,22)"/><text x="55.7005%" y="671.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (22 samples, 0.04%)</title><rect x="55.4670%" y="661" width="0.0364%" height="15" fill="rgb(254,195,49)"/><text x="55.7170%" y="671.50"></text></g><g><title>[[heap]] (138 samples, 0.23%)</title><rect x="55.2832%" y="677" width="0.2286%" height="15" fill="rgb(208,123,14)"/><text x="55.5332%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.04%)</title><rect x="55.5267%" y="661" width="0.0447%" height="15" fill="rgb(224,200,8)"/><text x="55.7767%" y="671.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (16 samples, 0.03%)</title><rect x="55.5730%" y="661" width="0.0265%" height="15" fill="rgb(217,61,36)"/><text x="55.8230%" y="671.50"></text></g><g><title>__GI___clock_gettime (10 samples, 0.02%)</title><rect x="55.6111%" y="661" width="0.0166%" height="15" fill="rgb(206,35,45)"/><text x="55.8611%" y="671.50"></text></g><g><title>_int_free (16 samples, 0.03%)</title><rect x="55.6360%" y="661" width="0.0265%" height="15" fill="rgb(217,65,33)"/><text x="55.8860%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.01%)</title><rect x="55.6724%" y="661" width="0.0116%" height="15" fill="rgb(222,158,48)"/><text x="55.9224%" y="671.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (11 samples, 0.02%)</title><rect x="55.6840%" y="661" width="0.0182%" height="15" fill="rgb(254,2,54)"/><text x="55.9340%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.01%)</title><rect x="55.7321%" y="661" width="0.0149%" height="15" fill="rgb(250,143,38)"/><text x="55.9821%" y="671.50"></text></g><g><title>syscall (20 samples, 0.03%)</title><rect x="55.7784%" y="661" width="0.0331%" height="15" fill="rgb(248,25,0)"/><text x="56.0284%" y="671.50"></text></g><g><title>sysmalloc (7 samples, 0.01%)</title><rect x="55.8116%" y="661" width="0.0116%" height="15" fill="rgb(206,152,27)"/><text x="56.0616%" y="671.50"></text></g><g><title>tokio::park::thread::wake_by_ref (11 samples, 0.02%)</title><rect x="55.8265%" y="661" width="0.0182%" height="15" fill="rgb(240,77,30)"/><text x="56.0765%" y="671.50"></text></g><g><title>[anon] (204 samples, 0.34%)</title><rect x="55.5118%" y="677" width="0.3379%" height="15" fill="rgb(231,5,3)"/><text x="55.7618%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="55.8679%" y="661" width="0.0116%" height="15" fill="rgb(207,226,32)"/><text x="56.1179%" y="671.50"></text></g><g><title>_int_free (11 samples, 0.02%)</title><rect x="55.9275%" y="661" width="0.0182%" height="15" fill="rgb(222,207,47)"/><text x="56.1775%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::next_kv_unchecked_dealloc (8 samples, 0.01%)</title><rect x="55.9524%" y="661" width="0.0133%" height="15" fill="rgb(229,115,45)"/><text x="56.2024%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="55.9689%" y="661" width="0.0133%" height="15" fill="rgb(224,191,6)"/><text x="56.2189%" y="671.50"></text></g><g><title>blake3::ChunkState::update (14 samples, 0.02%)</title><rect x="56.0070%" y="661" width="0.0232%" height="15" fill="rgb(230,227,24)"/><text x="56.2570%" y="671.50"></text></g><g><title>blake3::Hasher::update (13 samples, 0.02%)</title><rect x="56.0517%" y="661" width="0.0215%" height="15" fill="rgb(228,80,19)"/><text x="56.3017%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.01%)</title><rect x="56.0932%" y="661" width="0.0116%" height="15" fill="rgb(247,229,0)"/><text x="56.3432%" y="671.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (7 samples, 0.01%)</title><rect x="56.1313%" y="661" width="0.0116%" height="15" fill="rgb(237,194,15)"/><text x="56.3813%" y="671.50"></text></g><g><title>std::panicking::try (8 samples, 0.01%)</title><rect x="56.1611%" y="661" width="0.0133%" height="15" fill="rgb(219,203,20)"/><text x="56.4111%" y="671.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (8 samples, 0.01%)</title><rect x="56.1611%" y="645" width="0.0133%" height="15" fill="rgb(234,128,8)"/><text x="56.4111%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (8 samples, 0.01%)</title><rect x="56.1611%" y="629" width="0.0133%" height="15" fill="rgb(248,202,8)"/><text x="56.4111%" y="639.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (8 samples, 0.01%)</title><rect x="56.1611%" y="613" width="0.0133%" height="15" fill="rgb(206,104,37)"/><text x="56.4111%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (8 samples, 0.01%)</title><rect x="56.1611%" y="597" width="0.0133%" height="15" fill="rgb(223,8,27)"/><text x="56.4111%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (8 samples, 0.01%)</title><rect x="56.1611%" y="581" width="0.0133%" height="15" fill="rgb(216,217,28)"/><text x="56.4111%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.01%)</title><rect x="56.1611%" y="565" width="0.0133%" height="15" fill="rgb(249,199,1)"/><text x="56.4111%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (8 samples, 0.01%)</title><rect x="56.1611%" y="549" width="0.0133%" height="15" fill="rgb(240,85,17)"/><text x="56.4111%" y="559.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (8 samples, 0.01%)</title><rect x="56.1611%" y="533" width="0.0133%" height="15" fill="rgb(206,108,45)"/><text x="56.4111%" y="543.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="56.1611%" y="517" width="0.0133%" height="15" fill="rgb(245,210,41)"/><text x="56.4111%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="56.1611%" y="501" width="0.0133%" height="15" fill="rgb(206,13,37)"/><text x="56.4111%" y="511.50"></text></g><g><title>ate::chain::ChainOfTrust::add_history (8 samples, 0.01%)</title><rect x="56.1611%" y="485" width="0.0133%" height="15" fill="rgb(250,61,18)"/><text x="56.4111%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (8 samples, 0.01%)</title><rect x="56.1611%" y="469" width="0.0133%" height="15" fill="rgb(235,172,48)"/><text x="56.4111%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (8 samples, 0.01%)</title><rect x="56.1611%" y="453" width="0.0133%" height="15" fill="rgb(249,201,17)"/><text x="56.4111%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (8 samples, 0.01%)</title><rect x="56.1611%" y="437" width="0.0133%" height="15" fill="rgb(219,208,6)"/><text x="56.4111%" y="447.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.01%)</title><rect x="56.1611%" y="421" width="0.0133%" height="15" fill="rgb(248,31,23)"/><text x="56.4111%" y="431.50"></text></g><g><title>_int_malloc (8 samples, 0.01%)</title><rect x="56.1611%" y="405" width="0.0133%" height="15" fill="rgb(245,15,42)"/><text x="56.4111%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (34 samples, 0.06%)</title><rect x="56.1793%" y="389" width="0.0563%" height="15" fill="rgb(222,217,39)"/><text x="56.4293%" y="399.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (38 samples, 0.06%)</title><rect x="56.1776%" y="661" width="0.0629%" height="15" fill="rgb(210,219,27)"/><text x="56.4276%" y="671.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (38 samples, 0.06%)</title><rect x="56.1776%" y="645" width="0.0629%" height="15" fill="rgb(252,166,36)"/><text x="56.4276%" y="655.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (38 samples, 0.06%)</title><rect x="56.1776%" y="629" width="0.0629%" height="15" fill="rgb(245,132,34)"/><text x="56.4276%" y="639.50"></text></g><g><title>std::panicking::try (38 samples, 0.06%)</title><rect x="56.1776%" y="613" width="0.0629%" height="15" fill="rgb(236,54,3)"/><text x="56.4276%" y="623.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (38 samples, 0.06%)</title><rect x="56.1776%" y="597" width="0.0629%" height="15" fill="rgb(241,173,43)"/><text x="56.4276%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (38 samples, 0.06%)</title><rect x="56.1776%" y="581" width="0.0629%" height="15" fill="rgb(215,190,9)"/><text x="56.4276%" y="591.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (38 samples, 0.06%)</title><rect x="56.1776%" y="565" width="0.0629%" height="15" fill="rgb(242,101,16)"/><text x="56.4276%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (38 samples, 0.06%)</title><rect x="56.1776%" y="549" width="0.0629%" height="15" fill="rgb(223,190,21)"/><text x="56.4276%" y="559.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (38 samples, 0.06%)</title><rect x="56.1776%" y="533" width="0.0629%" height="15" fill="rgb(215,228,25)"/><text x="56.4276%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (38 samples, 0.06%)</title><rect x="56.1776%" y="517" width="0.0629%" height="15" fill="rgb(225,36,22)"/><text x="56.4276%" y="527.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (38 samples, 0.06%)</title><rect x="56.1776%" y="501" width="0.0629%" height="15" fill="rgb(251,106,46)"/><text x="56.4276%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (38 samples, 0.06%)</title><rect x="56.1776%" y="485" width="0.0629%" height="15" fill="rgb(208,90,1)"/><text x="56.4276%" y="495.50"></text></g><g><title>std::panic::catch_unwind (38 samples, 0.06%)</title><rect x="56.1776%" y="469" width="0.0629%" height="15" fill="rgb(243,10,4)"/><text x="56.4276%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.06%)</title><rect x="56.1776%" y="453" width="0.0629%" height="15" fill="rgb(212,137,27)"/><text x="56.4276%" y="463.50"></text></g><g><title>ate::accessor::ChainProtectedSync::validate_event (38 samples, 0.06%)</title><rect x="56.1776%" y="437" width="0.0629%" height="15" fill="rgb(231,220,49)"/><text x="56.4276%" y="447.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::validator::EventValidator&gt;::validate (38 samples, 0.06%)</title><rect x="56.1776%" y="421" width="0.0629%" height="15" fill="rgb(237,96,20)"/><text x="56.4276%" y="431.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (38 samples, 0.06%)</title><rect x="56.1776%" y="405" width="0.0629%" height="15" fill="rgb(239,229,30)"/><text x="56.4276%" y="415.50"></text></g><g><title>syscall (7 samples, 0.01%)</title><rect x="56.2522%" y="661" width="0.0116%" height="15" fill="rgb(219,65,33)"/><text x="56.5022%" y="671.50"></text></g><g><title>alloc_pages_vma (12 samples, 0.02%)</title><rect x="56.2986%" y="325" width="0.0199%" height="15" fill="rgb(243,134,7)"/><text x="56.5486%" y="335.50"></text></g><g><title>__alloc_pages_nodemask (11 samples, 0.02%)</title><rect x="56.3002%" y="309" width="0.0182%" height="15" fill="rgb(216,177,54)"/><text x="56.5502%" y="319.50"></text></g><g><title>get_page_from_freelist (8 samples, 0.01%)</title><rect x="56.3052%" y="293" width="0.0133%" height="15" fill="rgb(211,160,20)"/><text x="56.5552%" y="303.50"></text></g><g><title>exc_page_fault (24 samples, 0.04%)</title><rect x="56.2919%" y="373" width="0.0398%" height="15" fill="rgb(239,85,39)"/><text x="56.5419%" y="383.50"></text></g><g><title>do_user_addr_fault (24 samples, 0.04%)</title><rect x="56.2919%" y="357" width="0.0398%" height="15" fill="rgb(232,125,22)"/><text x="56.5419%" y="367.50"></text></g><g><title>handle_mm_fault (23 samples, 0.04%)</title><rect x="56.2936%" y="341" width="0.0381%" height="15" fill="rgb(244,57,34)"/><text x="56.5436%" y="351.50"></text></g><g><title>asm_exc_page_fault (29 samples, 0.05%)</title><rect x="56.2903%" y="389" width="0.0480%" height="15" fill="rgb(214,203,32)"/><text x="56.5403%" y="399.50"></text></g><g><title>perf_event_mmap (8 samples, 0.01%)</title><rect x="56.3598%" y="277" width="0.0133%" height="15" fill="rgb(207,58,43)"/><text x="56.6098%" y="287.50"></text></g><g><title>perf_iterate_sb (8 samples, 0.01%)</title><rect x="56.3598%" y="261" width="0.0133%" height="15" fill="rgb(215,193,15)"/><text x="56.6098%" y="271.50"></text></g><g><title>perf_iterate_ctx (8 samples, 0.01%)</title><rect x="56.3598%" y="245" width="0.0133%" height="15" fill="rgb(232,15,44)"/><text x="56.6098%" y="255.50"></text></g><g><title>__x64_sys_mprotect (20 samples, 0.03%)</title><rect x="56.3433%" y="325" width="0.0331%" height="15" fill="rgb(212,3,48)"/><text x="56.5933%" y="335.50"></text></g><g><title>do_mprotect_pkey (18 samples, 0.03%)</title><rect x="56.3466%" y="309" width="0.0298%" height="15" fill="rgb(218,128,7)"/><text x="56.5966%" y="319.50"></text></g><g><title>mprotect_fixup (14 samples, 0.02%)</title><rect x="56.3532%" y="293" width="0.0232%" height="15" fill="rgb(226,216,39)"/><text x="56.6032%" y="303.50"></text></g><g><title>do_syscall_64 (22 samples, 0.04%)</title><rect x="56.3433%" y="341" width="0.0364%" height="15" fill="rgb(243,47,51)"/><text x="56.5933%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 0.05%)</title><rect x="56.3433%" y="357" width="0.0547%" height="15" fill="rgb(241,183,40)"/><text x="56.5933%" y="367.50"></text></g><g><title>syscall_exit_to_user_mode (11 samples, 0.02%)</title><rect x="56.3797%" y="341" width="0.0182%" height="15" fill="rgb(231,217,32)"/><text x="56.6297%" y="351.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (78 samples, 0.13%)</title><rect x="56.2754%" y="661" width="0.1292%" height="15" fill="rgb(229,61,38)"/><text x="56.5254%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (78 samples, 0.13%)</title><rect x="56.2754%" y="645" width="0.1292%" height="15" fill="rgb(225,210,5)"/><text x="56.5254%" y="655.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (78 samples, 0.13%)</title><rect x="56.2754%" y="629" width="0.1292%" height="15" fill="rgb(231,79,45)"/><text x="56.5254%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (78 samples, 0.13%)</title><rect x="56.2754%" y="613" width="0.1292%" height="15" fill="rgb(224,100,7)"/><text x="56.5254%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (78 samples, 0.13%)</title><rect x="56.2754%" y="597" width="0.1292%" height="15" fill="rgb(241,198,18)"/><text x="56.5254%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (78 samples, 0.13%)</title><rect x="56.2754%" y="581" width="0.1292%" height="15" fill="rgb(252,97,53)"/><text x="56.5254%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (78 samples, 0.13%)</title><rect x="56.2754%" y="565" width="0.1292%" height="15" fill="rgb(220,88,7)"/><text x="56.5254%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (78 samples, 0.13%)</title><rect x="56.2754%" y="549" width="0.1292%" height="15" fill="rgb(213,176,14)"/><text x="56.5254%" y="559.50"></text></g><g><title>std::panic::catch_unwind (78 samples, 0.13%)</title><rect x="56.2754%" y="533" width="0.1292%" height="15" fill="rgb(246,73,7)"/><text x="56.5254%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (78 samples, 0.13%)</title><rect x="56.2754%" y="517" width="0.1292%" height="15" fill="rgb(245,64,36)"/><text x="56.5254%" y="527.50"></text></g><g><title>ate::chain::ChainOfTrust::add_history (78 samples, 0.13%)</title><rect x="56.2754%" y="501" width="0.1292%" height="15" fill="rgb(245,80,10)"/><text x="56.5254%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (78 samples, 0.13%)</title><rect x="56.2754%" y="485" width="0.1292%" height="15" fill="rgb(232,107,50)"/><text x="56.5254%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (78 samples, 0.13%)</title><rect x="56.2754%" y="469" width="0.1292%" height="15" fill="rgb(253,3,0)"/><text x="56.5254%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (78 samples, 0.13%)</title><rect x="56.2754%" y="453" width="0.1292%" height="15" fill="rgb(212,99,53)"/><text x="56.5254%" y="463.50"></text></g><g><title>__GI___libc_malloc (78 samples, 0.13%)</title><rect x="56.2754%" y="437" width="0.1292%" height="15" fill="rgb(249,111,54)"/><text x="56.5254%" y="447.50"></text></g><g><title>_int_malloc (78 samples, 0.13%)</title><rect x="56.2754%" y="421" width="0.1292%" height="15" fill="rgb(249,55,30)"/><text x="56.5254%" y="431.50"></text></g><g><title>sysmalloc (78 samples, 0.13%)</title><rect x="56.2754%" y="405" width="0.1292%" height="15" fill="rgb(237,47,42)"/><text x="56.5254%" y="415.50"></text></g><g><title>grow_heap (37 samples, 0.06%)</title><rect x="56.3433%" y="389" width="0.0613%" height="15" fill="rgb(211,20,18)"/><text x="56.5933%" y="399.50"></text></g><g><title>__GI___mprotect (37 samples, 0.06%)</title><rect x="56.3433%" y="373" width="0.0613%" height="15" fill="rgb(231,203,46)"/><text x="56.5933%" y="383.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (7 samples, 0.01%)</title><rect x="56.4046%" y="661" width="0.0116%" height="15" fill="rgb(237,142,3)"/><text x="56.6546%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (7 samples, 0.01%)</title><rect x="56.4046%" y="645" width="0.0116%" height="15" fill="rgb(241,107,1)"/><text x="56.6546%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (7 samples, 0.01%)</title><rect x="56.4046%" y="629" width="0.0116%" height="15" fill="rgb(229,83,13)"/><text x="56.6546%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.01%)</title><rect x="56.4046%" y="613" width="0.0116%" height="15" fill="rgb(241,91,40)"/><text x="56.6546%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7 samples, 0.01%)</title><rect x="56.4046%" y="597" width="0.0116%" height="15" fill="rgb(225,3,45)"/><text x="56.6546%" y="607.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (7 samples, 0.01%)</title><rect x="56.4046%" y="581" width="0.0116%" height="15" fill="rgb(244,223,14)"/><text x="56.6546%" y="591.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.01%)</title><rect x="56.4046%" y="565" width="0.0116%" height="15" fill="rgb(224,124,37)"/><text x="56.6546%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="56.4046%" y="549" width="0.0116%" height="15" fill="rgb(251,171,30)"/><text x="56.6546%" y="559.50"></text></g><g><title>ate::event::EventData::as_header (7 samples, 0.01%)</title><rect x="56.4046%" y="533" width="0.0116%" height="15" fill="rgb(236,46,54)"/><text x="56.6546%" y="543.50"></text></g><g><title>ate::event::EventData::as_header_raw (7 samples, 0.01%)</title><rect x="56.4046%" y="517" width="0.0116%" height="15" fill="rgb(245,213,5)"/><text x="56.6546%" y="527.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (7 samples, 0.01%)</title><rect x="56.4046%" y="501" width="0.0116%" height="15" fill="rgb(230,144,27)"/><text x="56.6546%" y="511.50"></text></g><g><title>blake3::Hasher::update (7 samples, 0.01%)</title><rect x="56.4046%" y="485" width="0.0116%" height="15" fill="rgb(220,86,6)"/><text x="56.6546%" y="495.50"></text></g><g><title>blake3::ChunkState::update (7 samples, 0.01%)</title><rect x="56.4046%" y="469" width="0.0116%" height="15" fill="rgb(240,20,13)"/><text x="56.6546%" y="479.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (33 samples, 0.05%)</title><rect x="56.4244%" y="661" width="0.0547%" height="15" fill="rgb(217,89,34)"/><text x="56.6744%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (33 samples, 0.05%)</title><rect x="56.4244%" y="645" width="0.0547%" height="15" fill="rgb(229,13,5)"/><text x="56.6744%" y="655.50"></text></g><g><title>std::panicking::try (33 samples, 0.05%)</title><rect x="56.4244%" y="629" width="0.0547%" height="15" fill="rgb(244,67,35)"/><text x="56.6744%" y="639.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (33 samples, 0.05%)</title><rect x="56.4244%" y="613" width="0.0547%" height="15" fill="rgb(221,40,2)"/><text x="56.6744%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (33 samples, 0.05%)</title><rect x="56.4244%" y="597" width="0.0547%" height="15" fill="rgb(237,157,21)"/><text x="56.6744%" y="607.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (33 samples, 0.05%)</title><rect x="56.4244%" y="581" width="0.0547%" height="15" fill="rgb(222,94,11)"/><text x="56.6744%" y="591.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (33 samples, 0.05%)</title><rect x="56.4244%" y="565" width="0.0547%" height="15" fill="rgb(249,113,6)"/><text x="56.6744%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (33 samples, 0.05%)</title><rect x="56.4244%" y="549" width="0.0547%" height="15" fill="rgb(238,137,36)"/><text x="56.6744%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.05%)</title><rect x="56.4244%" y="533" width="0.0547%" height="15" fill="rgb(210,102,26)"/><text x="56.6744%" y="543.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (33 samples, 0.05%)</title><rect x="56.4244%" y="517" width="0.0547%" height="15" fill="rgb(218,30,30)"/><text x="56.6744%" y="527.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (33 samples, 0.05%)</title><rect x="56.4244%" y="501" width="0.0547%" height="15" fill="rgb(214,67,26)"/><text x="56.6744%" y="511.50"></text></g><g><title>std::panic::catch_unwind (33 samples, 0.05%)</title><rect x="56.4244%" y="485" width="0.0547%" height="15" fill="rgb(251,9,53)"/><text x="56.6744%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.05%)</title><rect x="56.4244%" y="469" width="0.0547%" height="15" fill="rgb(228,204,25)"/><text x="56.6744%" y="479.50"></text></g><g><title>ate::chain::ChainOfTrust::add_history (33 samples, 0.05%)</title><rect x="56.4244%" y="453" width="0.0547%" height="15" fill="rgb(207,153,8)"/><text x="56.6744%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (33 samples, 0.05%)</title><rect x="56.4244%" y="437" width="0.0547%" height="15" fill="rgb(242,9,16)"/><text x="56.6744%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (33 samples, 0.05%)</title><rect x="56.4244%" y="421" width="0.0547%" height="15" fill="rgb(217,211,10)"/><text x="56.6744%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (33 samples, 0.05%)</title><rect x="56.4244%" y="405" width="0.0547%" height="15" fill="rgb(219,228,52)"/><text x="56.6744%" y="415.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (8 samples, 0.01%)</title><rect x="56.4841%" y="661" width="0.0133%" height="15" fill="rgb(231,92,29)"/><text x="56.7341%" y="671.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.02%)</title><rect x="56.5023%" y="645" width="0.0232%" height="15" fill="rgb(232,8,23)"/><text x="56.7523%" y="655.50"></text></g><g><title>std::io::Write::write_all (14 samples, 0.02%)</title><rect x="56.5023%" y="629" width="0.0232%" height="15" fill="rgb(216,211,34)"/><text x="56.7523%" y="639.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (14 samples, 0.02%)</title><rect x="56.5023%" y="613" width="0.0232%" height="15" fill="rgb(236,151,0)"/><text x="56.7523%" y="623.50"></text></g><g><title>std::sys::unix::fs::File::write (14 samples, 0.02%)</title><rect x="56.5023%" y="597" width="0.0232%" height="15" fill="rgb(209,168,3)"/><text x="56.7523%" y="607.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (14 samples, 0.02%)</title><rect x="56.5023%" y="581" width="0.0232%" height="15" fill="rgb(208,129,28)"/><text x="56.7523%" y="591.50"></text></g><g><title>__libc_write (14 samples, 0.02%)</title><rect x="56.5023%" y="565" width="0.0232%" height="15" fill="rgb(229,78,22)"/><text x="56.7523%" y="575.50"></text></g><g><title>__libc_write (14 samples, 0.02%)</title><rect x="56.5023%" y="549" width="0.0232%" height="15" fill="rgb(228,187,13)"/><text x="56.7523%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (14 samples, 0.02%)</title><rect x="56.5023%" y="533" width="0.0232%" height="15" fill="rgb(240,119,24)"/><text x="56.7523%" y="543.50"></text></g><g><title>tokio::park::thread::wake_by_ref (114 samples, 0.19%)</title><rect x="56.5255%" y="645" width="0.1888%" height="15" fill="rgb(209,194,42)"/><text x="56.7755%" y="655.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (114 samples, 0.19%)</title><rect x="56.5255%" y="629" width="0.1888%" height="15" fill="rgb(247,200,46)"/><text x="56.7755%" y="639.50"></text></g><g><title>syscall (114 samples, 0.19%)</title><rect x="56.5255%" y="613" width="0.1888%" height="15" fill="rgb(218,76,16)"/><text x="56.7755%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (114 samples, 0.19%)</title><rect x="56.5255%" y="597" width="0.1888%" height="15" fill="rgb(225,21,48)"/><text x="56.7755%" y="607.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (133 samples, 0.22%)</title><rect x="56.4973%" y="661" width="0.2203%" height="15" fill="rgb(239,223,50)"/><text x="56.7473%" y="671.50"></text></g><g><title>ate::accessor::ChainProtectedSync::validate_event (11 samples, 0.02%)</title><rect x="56.7243%" y="469" width="0.0182%" height="15" fill="rgb(244,45,21)"/><text x="56.9743%" y="479.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::validator::EventValidator&gt;::validate (11 samples, 0.02%)</title><rect x="56.7243%" y="453" width="0.0182%" height="15" fill="rgb(232,33,43)"/><text x="56.9743%" y="463.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (11 samples, 0.02%)</title><rect x="56.7243%" y="437" width="0.0182%" height="15" fill="rgb(209,8,3)"/><text x="56.9743%" y="447.50"></text></g><g><title>blake3::Hasher::update (8 samples, 0.01%)</title><rect x="56.7292%" y="421" width="0.0133%" height="15" fill="rgb(214,25,53)"/><text x="56.9792%" y="431.50"></text></g><g><title>blake3::ChunkState::update (8 samples, 0.01%)</title><rect x="56.7292%" y="405" width="0.0133%" height="15" fill="rgb(254,186,54)"/><text x="56.9792%" y="415.50"></text></g><g><title>ate::chain::ChainOfTrust::add_history (8 samples, 0.01%)</title><rect x="56.7425%" y="469" width="0.0133%" height="15" fill="rgb(208,174,49)"/><text x="56.9925%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (8 samples, 0.01%)</title><rect x="56.7425%" y="453" width="0.0133%" height="15" fill="rgb(233,191,51)"/><text x="56.9925%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (8 samples, 0.01%)</title><rect x="56.7425%" y="437" width="0.0133%" height="15" fill="rgb(222,134,10)"/><text x="56.9925%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (8 samples, 0.01%)</title><rect x="56.7425%" y="421" width="0.0133%" height="15" fill="rgb(230,226,20)"/><text x="56.9925%" y="431.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.01%)</title><rect x="56.7425%" y="405" width="0.0133%" height="15" fill="rgb(251,111,25)"/><text x="56.9925%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (30 samples, 0.05%)</title><rect x="56.7574%" y="421" width="0.0497%" height="15" fill="rgb(224,40,46)"/><text x="57.0074%" y="431.50"></text></g><g><title>std::panicking::try (53 samples, 0.09%)</title><rect x="56.7243%" y="645" width="0.0878%" height="15" fill="rgb(236,108,47)"/><text x="56.9743%" y="655.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (53 samples, 0.09%)</title><rect x="56.7243%" y="629" width="0.0878%" height="15" fill="rgb(234,93,0)"/><text x="56.9743%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (53 samples, 0.09%)</title><rect x="56.7243%" y="613" width="0.0878%" height="15" fill="rgb(224,213,32)"/><text x="56.9743%" y="623.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (53 samples, 0.09%)</title><rect x="56.7243%" y="597" width="0.0878%" height="15" fill="rgb(251,11,48)"/><text x="56.9743%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (53 samples, 0.09%)</title><rect x="56.7243%" y="581" width="0.0878%" height="15" fill="rgb(236,173,5)"/><text x="56.9743%" y="591.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (53 samples, 0.09%)</title><rect x="56.7243%" y="565" width="0.0878%" height="15" fill="rgb(230,95,12)"/><text x="56.9743%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (53 samples, 0.09%)</title><rect x="56.7243%" y="549" width="0.0878%" height="15" fill="rgb(232,209,1)"/><text x="56.9743%" y="559.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (53 samples, 0.09%)</title><rect x="56.7243%" y="533" width="0.0878%" height="15" fill="rgb(232,6,1)"/><text x="56.9743%" y="543.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (53 samples, 0.09%)</title><rect x="56.7243%" y="517" width="0.0878%" height="15" fill="rgb(210,224,50)"/><text x="56.9743%" y="527.50"></text></g><g><title>std::panic::catch_unwind (53 samples, 0.09%)</title><rect x="56.7243%" y="501" width="0.0878%" height="15" fill="rgb(228,127,35)"/><text x="56.9743%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 0.09%)</title><rect x="56.7243%" y="485" width="0.0878%" height="15" fill="rgb(245,102,45)"/><text x="56.9743%" y="495.50"></text></g><g><title>ate::event::EventData::as_header (34 samples, 0.06%)</title><rect x="56.7557%" y="469" width="0.0563%" height="15" fill="rgb(214,1,49)"/><text x="57.0057%" y="479.50"></text></g><g><title>ate::event::EventData::as_header_raw (34 samples, 0.06%)</title><rect x="56.7557%" y="453" width="0.0563%" height="15" fill="rgb(226,163,40)"/><text x="57.0057%" y="463.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (34 samples, 0.06%)</title><rect x="56.7557%" y="437" width="0.0563%" height="15" fill="rgb(239,212,28)"/><text x="57.0057%" y="447.50"></text></g><g><title>blake3::Hasher::finalize (7 samples, 0.01%)</title><rect x="56.8120%" y="533" width="0.0116%" height="15" fill="rgb(220,20,13)"/><text x="57.0620%" y="543.50"></text></g><g><title>blake3::Hasher::final_output (7 samples, 0.01%)</title><rect x="56.8120%" y="517" width="0.0116%" height="15" fill="rgb(210,164,35)"/><text x="57.0620%" y="527.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (73 samples, 0.12%)</title><rect x="56.7176%" y="661" width="0.1209%" height="15" fill="rgb(248,109,41)"/><text x="56.9676%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (16 samples, 0.03%)</title><rect x="56.8120%" y="645" width="0.0265%" height="15" fill="rgb(238,23,50)"/><text x="57.0620%" y="655.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.03%)</title><rect x="56.8120%" y="629" width="0.0265%" height="15" fill="rgb(211,48,49)"/><text x="57.0620%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.03%)</title><rect x="56.8120%" y="613" width="0.0265%" height="15" fill="rgb(223,36,21)"/><text x="57.0620%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.03%)</title><rect x="56.8120%" y="597" width="0.0265%" height="15" fill="rgb(207,123,46)"/><text x="57.0620%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.03%)</title><rect x="56.8120%" y="581" width="0.0265%" height="15" fill="rgb(240,218,32)"/><text x="57.0620%" y="591.50"></text></g><g><title>ate::event::EventData::as_header_raw (16 samples, 0.03%)</title><rect x="56.8120%" y="565" width="0.0265%" height="15" fill="rgb(252,5,43)"/><text x="57.0620%" y="575.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (16 samples, 0.03%)</title><rect x="56.8120%" y="549" width="0.0265%" height="15" fill="rgb(252,84,19)"/><text x="57.0620%" y="559.50"></text></g><g><title>blake3::Hasher::update (9 samples, 0.01%)</title><rect x="56.8236%" y="533" width="0.0149%" height="15" fill="rgb(243,152,39)"/><text x="57.0736%" y="543.50"></text></g><g><title>blake3::ChunkState::update (9 samples, 0.01%)</title><rect x="56.8236%" y="517" width="0.0149%" height="15" fill="rgb(234,160,15)"/><text x="57.0736%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (56 samples, 0.09%)</title><rect x="56.8501%" y="485" width="0.0928%" height="15" fill="rgb(237,34,20)"/><text x="57.1001%" y="495.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (63 samples, 0.10%)</title><rect x="56.8435%" y="661" width="0.1044%" height="15" fill="rgb(229,97,13)"/><text x="57.0935%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (63 samples, 0.10%)</title><rect x="56.8435%" y="645" width="0.1044%" height="15" fill="rgb(234,71,50)"/><text x="57.0935%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (63 samples, 0.10%)</title><rect x="56.8435%" y="629" width="0.1044%" height="15" fill="rgb(253,155,4)"/><text x="57.0935%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (63 samples, 0.10%)</title><rect x="56.8435%" y="613" width="0.1044%" height="15" fill="rgb(222,185,37)"/><text x="57.0935%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (63 samples, 0.10%)</title><rect x="56.8435%" y="597" width="0.1044%" height="15" fill="rgb(251,177,13)"/><text x="57.0935%" y="607.50"></text></g><g><title>std::panic::catch_unwind (63 samples, 0.10%)</title><rect x="56.8435%" y="581" width="0.1044%" height="15" fill="rgb(250,179,40)"/><text x="57.0935%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (63 samples, 0.10%)</title><rect x="56.8435%" y="565" width="0.1044%" height="15" fill="rgb(242,44,2)"/><text x="57.0935%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (63 samples, 0.10%)</title><rect x="56.8435%" y="549" width="0.1044%" height="15" fill="rgb(216,177,13)"/><text x="57.0935%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (63 samples, 0.10%)</title><rect x="56.8435%" y="533" width="0.1044%" height="15" fill="rgb(216,106,43)"/><text x="57.0935%" y="543.50"></text></g><g><title>ate::event::EventData::as_header_raw (63 samples, 0.10%)</title><rect x="56.8435%" y="517" width="0.1044%" height="15" fill="rgb(216,183,2)"/><text x="57.0935%" y="527.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (63 samples, 0.10%)</title><rect x="56.8435%" y="501" width="0.1044%" height="15" fill="rgb(249,75,3)"/><text x="57.0935%" y="511.50"></text></g><g><title>[unknown] (672 samples, 1.11%)</title><rect x="55.8563%" y="677" width="1.1131%" height="15" fill="rgb(219,67,39)"/><text x="56.1063%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (8 samples, 0.01%)</title><rect x="56.9562%" y="661" width="0.0133%" height="15" fill="rgb(253,228,2)"/><text x="57.2062%" y="671.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (8 samples, 0.01%)</title><rect x="56.9562%" y="645" width="0.0133%" height="15" fill="rgb(235,138,27)"/><text x="57.2062%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (8 samples, 0.01%)</title><rect x="56.9562%" y="629" width="0.0133%" height="15" fill="rgb(236,97,51)"/><text x="57.2062%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (8 samples, 0.01%)</title><rect x="56.9562%" y="613" width="0.0133%" height="15" fill="rgb(240,80,30)"/><text x="57.2062%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.01%)</title><rect x="56.9562%" y="597" width="0.0133%" height="15" fill="rgb(230,178,19)"/><text x="57.2062%" y="607.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (8 samples, 0.01%)</title><rect x="56.9562%" y="581" width="0.0133%" height="15" fill="rgb(210,190,27)"/><text x="57.2062%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (8 samples, 0.01%)</title><rect x="56.9562%" y="565" width="0.0133%" height="15" fill="rgb(222,107,31)"/><text x="57.2062%" y="575.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="56.9562%" y="549" width="0.0133%" height="15" fill="rgb(216,127,34)"/><text x="57.2062%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="56.9562%" y="533" width="0.0133%" height="15" fill="rgb(234,116,52)"/><text x="57.2062%" y="543.50"></text></g><g><title>ate::event::EventData::as_header (7 samples, 0.01%)</title><rect x="56.9578%" y="517" width="0.0116%" height="15" fill="rgb(222,124,15)"/><text x="57.2078%" y="527.50"></text></g><g><title>ate::event::EventData::as_header_raw (7 samples, 0.01%)</title><rect x="56.9578%" y="501" width="0.0116%" height="15" fill="rgb(231,179,28)"/><text x="57.2078%" y="511.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (7 samples, 0.01%)</title><rect x="56.9578%" y="485" width="0.0116%" height="15" fill="rgb(226,93,45)"/><text x="57.2078%" y="495.50"></text></g><g><title>free_pcppages_bulk (7 samples, 0.01%)</title><rect x="56.9876%" y="421" width="0.0116%" height="15" fill="rgb(215,8,51)"/><text x="57.2376%" y="431.50"></text></g><g><title>__free_one_page (7 samples, 0.01%)</title><rect x="56.9876%" y="405" width="0.0116%" height="15" fill="rgb(223,106,5)"/><text x="57.2376%" y="415.50"></text></g><g><title>free_unref_page_list (9 samples, 0.01%)</title><rect x="56.9860%" y="437" width="0.0149%" height="15" fill="rgb(250,191,5)"/><text x="57.2360%" y="447.50"></text></g><g><title>tlb_finish_mmu (13 samples, 0.02%)</title><rect x="56.9827%" y="469" width="0.0215%" height="15" fill="rgb(242,132,44)"/><text x="57.2327%" y="479.50"></text></g><g><title>release_pages (11 samples, 0.02%)</title><rect x="56.9860%" y="453" width="0.0182%" height="15" fill="rgb(251,152,29)"/><text x="57.2360%" y="463.50"></text></g><g><title>__GI_munmap (41 samples, 0.07%)</title><rect x="56.9827%" y="581" width="0.0679%" height="15" fill="rgb(218,179,5)"/><text x="57.2327%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (41 samples, 0.07%)</title><rect x="56.9827%" y="565" width="0.0679%" height="15" fill="rgb(227,67,19)"/><text x="57.2327%" y="575.50"></text></g><g><title>do_syscall_64 (41 samples, 0.07%)</title><rect x="56.9827%" y="549" width="0.0679%" height="15" fill="rgb(233,119,31)"/><text x="57.2327%" y="559.50"></text></g><g><title>__x64_sys_munmap (41 samples, 0.07%)</title><rect x="56.9827%" y="533" width="0.0679%" height="15" fill="rgb(241,120,22)"/><text x="57.2327%" y="543.50"></text></g><g><title>__vm_munmap (41 samples, 0.07%)</title><rect x="56.9827%" y="517" width="0.0679%" height="15" fill="rgb(224,102,30)"/><text x="57.2327%" y="527.50"></text></g><g><title>__do_munmap (41 samples, 0.07%)</title><rect x="56.9827%" y="501" width="0.0679%" height="15" fill="rgb(210,164,37)"/><text x="57.2327%" y="511.50"></text></g><g><title>unmap_region (41 samples, 0.07%)</title><rect x="56.9827%" y="485" width="0.0679%" height="15" fill="rgb(226,191,16)"/><text x="57.2327%" y="495.50"></text></g><g><title>unmap_vmas (28 samples, 0.05%)</title><rect x="57.0042%" y="469" width="0.0464%" height="15" fill="rgb(214,40,45)"/><text x="57.2542%" y="479.50"></text></g><g><title>unmap_page_range (28 samples, 0.05%)</title><rect x="57.0042%" y="453" width="0.0464%" height="15" fill="rgb(244,29,26)"/><text x="57.2542%" y="463.50"></text></g><g><title>tlb_flush_mmu (15 samples, 0.02%)</title><rect x="57.0257%" y="437" width="0.0248%" height="15" fill="rgb(216,16,5)"/><text x="57.2757%" y="447.50"></text></g><g><title>release_pages (14 samples, 0.02%)</title><rect x="57.0274%" y="421" width="0.0232%" height="15" fill="rgb(249,76,35)"/><text x="57.2774%" y="431.50"></text></g><g><title>free_unref_page_list (9 samples, 0.01%)</title><rect x="57.0357%" y="405" width="0.0149%" height="15" fill="rgb(207,11,44)"/><text x="57.2857%" y="415.50"></text></g><g><title>__malloc_arena_thread_freeres (60 samples, 0.10%)</title><rect x="56.9727%" y="645" width="0.0994%" height="15" fill="rgb(228,190,49)"/><text x="57.2227%" y="655.50"></text></g><g><title>tcache_thread_shutdown (60 samples, 0.10%)</title><rect x="56.9727%" y="629" width="0.0994%" height="15" fill="rgb(214,173,12)"/><text x="57.2227%" y="639.50"></text></g><g><title>_int_free (60 samples, 0.10%)</title><rect x="56.9727%" y="613" width="0.0994%" height="15" fill="rgb(218,26,35)"/><text x="57.2227%" y="623.50"></text></g><g><title>heap_trim (54 samples, 0.09%)</title><rect x="56.9827%" y="597" width="0.0894%" height="15" fill="rgb(220,200,19)"/><text x="57.2327%" y="607.50"></text></g><g><title>shrink_heap (13 samples, 0.02%)</title><rect x="57.0506%" y="581" width="0.0215%" height="15" fill="rgb(239,95,49)"/><text x="57.3006%" y="591.50"></text></g><g><title>__GI_madvise (13 samples, 0.02%)</title><rect x="57.0506%" y="565" width="0.0215%" height="15" fill="rgb(235,85,53)"/><text x="57.3006%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.02%)</title><rect x="57.0506%" y="549" width="0.0215%" height="15" fill="rgb(233,133,31)"/><text x="57.3006%" y="559.50"></text></g><g><title>do_syscall_64 (13 samples, 0.02%)</title><rect x="57.0506%" y="533" width="0.0215%" height="15" fill="rgb(218,25,20)"/><text x="57.3006%" y="543.50"></text></g><g><title>__x64_sys_madvise (13 samples, 0.02%)</title><rect x="57.0506%" y="517" width="0.0215%" height="15" fill="rgb(252,210,38)"/><text x="57.3006%" y="527.50"></text></g><g><title>do_madvise.part.0 (13 samples, 0.02%)</title><rect x="57.0506%" y="501" width="0.0215%" height="15" fill="rgb(242,134,21)"/><text x="57.3006%" y="511.50"></text></g><g><title>zap_page_range (13 samples, 0.02%)</title><rect x="57.0506%" y="485" width="0.0215%" height="15" fill="rgb(213,28,48)"/><text x="57.3006%" y="495.50"></text></g><g><title>unmap_page_range (11 samples, 0.02%)</title><rect x="57.0539%" y="469" width="0.0182%" height="15" fill="rgb(250,196,2)"/><text x="57.3039%" y="479.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (14 samples, 0.02%)</title><rect x="57.8225%" y="533" width="0.0232%" height="15" fill="rgb(227,5,17)"/><text x="58.0725%" y="543.50"></text></g><g><title>std::time::Instant::duration_since (13 samples, 0.02%)</title><rect x="57.8241%" y="517" width="0.0215%" height="15" fill="rgb(221,226,24)"/><text x="58.0741%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (13 samples, 0.02%)</title><rect x="57.8241%" y="501" width="0.0215%" height="15" fill="rgb(211,5,48)"/><text x="58.0741%" y="511.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (11 samples, 0.02%)</title><rect x="57.8274%" y="485" width="0.0182%" height="15" fill="rgb(219,150,6)"/><text x="58.0774%" y="495.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit (10 samples, 0.02%)</title><rect x="57.8473%" y="533" width="0.0166%" height="15" fill="rgb(251,46,16)"/><text x="58.0973%" y="543.50"></text></g><g><title>[[vdso]] (18 samples, 0.03%)</title><rect x="57.8854%" y="453" width="0.0298%" height="15" fill="rgb(220,204,40)"/><text x="58.1354%" y="463.50"></text></g><g><title>std::time::Instant::now (32 samples, 0.05%)</title><rect x="57.8639%" y="533" width="0.0530%" height="15" fill="rgb(211,85,2)"/><text x="58.1139%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (32 samples, 0.05%)</title><rect x="57.8639%" y="517" width="0.0530%" height="15" fill="rgb(229,17,7)"/><text x="58.1139%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::now (32 samples, 0.05%)</title><rect x="57.8639%" y="501" width="0.0530%" height="15" fill="rgb(239,72,28)"/><text x="58.1139%" y="511.50"></text></g><g><title>__GI___clock_gettime (28 samples, 0.05%)</title><rect x="57.8705%" y="485" width="0.0464%" height="15" fill="rgb(230,47,54)"/><text x="58.1205%" y="495.50"></text></g><g><title>__vdso_clock_gettime (26 samples, 0.04%)</title><rect x="57.8738%" y="469" width="0.0431%" height="15" fill="rgb(214,50,8)"/><text x="58.1238%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (151 samples, 0.25%)</title><rect x="58.0063%" y="517" width="0.2501%" height="15" fill="rgb(216,198,43)"/><text x="58.2563%" y="527.50"></text></g><g><title>_raw_spin_unlock_irqrestore (10 samples, 0.02%)</title><rect x="58.7832%" y="421" width="0.0166%" height="15" fill="rgb(234,20,35)"/><text x="59.0332%" y="431.50"></text></g><g><title>_raw_spin_lock_irqsave (16 samples, 0.03%)</title><rect x="58.8544%" y="405" width="0.0265%" height="15" fill="rgb(254,45,19)"/><text x="59.1044%" y="415.50"></text></g><g><title>enqueue_hrtimer (112 samples, 0.19%)</title><rect x="58.8809%" y="405" width="0.1855%" height="15" fill="rgb(219,14,44)"/><text x="59.1309%" y="415.50"></text></g><g><title>timerqueue_add (106 samples, 0.18%)</title><rect x="58.8909%" y="389" width="0.1756%" height="15" fill="rgb(217,220,26)"/><text x="59.1409%" y="399.50"></text></g><g><title>rb_insert_color (9 samples, 0.01%)</title><rect x="59.0515%" y="373" width="0.0149%" height="15" fill="rgb(213,158,28)"/><text x="59.3015%" y="383.50"></text></g><g><title>hrtimer_start_range_ns (179 samples, 0.30%)</title><rect x="58.8080%" y="421" width="0.2965%" height="15" fill="rgb(252,51,52)"/><text x="59.0580%" y="431.50"></text></g><g><title>get_nohz_timer_target (23 samples, 0.04%)</title><rect x="59.0664%" y="405" width="0.0381%" height="15" fill="rgb(246,89,16)"/><text x="59.3164%" y="415.50"></text></g><g><title>plist_add (11 samples, 0.02%)</title><rect x="59.1045%" y="421" width="0.0182%" height="15" fill="rgb(216,158,49)"/><text x="59.3545%" y="431.50"></text></g><g><title>_raw_spin_lock (20 samples, 0.03%)</title><rect x="59.3861%" y="373" width="0.0331%" height="15" fill="rgb(236,107,19)"/><text x="59.6361%" y="383.50"></text></g><g><title>__perf_event_task_sched_out (78 samples, 0.13%)</title><rect x="59.3182%" y="389" width="0.1292%" height="15" fill="rgb(228,185,30)"/><text x="59.5682%" y="399.50"></text></g><g><title>x86_pmu_disable (11 samples, 0.02%)</title><rect x="59.4292%" y="373" width="0.0182%" height="15" fill="rgb(246,134,8)"/><text x="59.6792%" y="383.50"></text></g><g><title>__x86_retpoline_rax (8 samples, 0.01%)</title><rect x="59.4474%" y="389" width="0.0133%" height="15" fill="rgb(214,143,50)"/><text x="59.6974%" y="399.50"></text></g><g><title>_raw_spin_lock (13 samples, 0.02%)</title><rect x="59.4607%" y="389" width="0.0215%" height="15" fill="rgb(228,75,8)"/><text x="59.7107%" y="399.50"></text></g><g><title>reweight_entity (28 samples, 0.05%)</title><rect x="59.6793%" y="357" width="0.0464%" height="15" fill="rgb(207,175,4)"/><text x="59.9293%" y="367.50"></text></g><g><title>update_cfs_group (34 samples, 0.06%)</title><rect x="59.7257%" y="357" width="0.0563%" height="15" fill="rgb(205,108,24)"/><text x="59.9757%" y="367.50"></text></g><g><title>__calc_delta (36 samples, 0.06%)</title><rect x="59.9029%" y="341" width="0.0596%" height="15" fill="rgb(244,120,49)"/><text x="60.1529%" y="351.50"></text></g><g><title>__cgroup_account_cputime (28 samples, 0.05%)</title><rect x="59.9626%" y="341" width="0.0464%" height="15" fill="rgb(223,47,38)"/><text x="60.2126%" y="351.50"></text></g><g><title>cpuacct_charge (31 samples, 0.05%)</title><rect x="60.0089%" y="341" width="0.0513%" height="15" fill="rgb(229,179,11)"/><text x="60.2589%" y="351.50"></text></g><g><title>update_curr (186 samples, 0.31%)</title><rect x="59.7820%" y="357" width="0.3081%" height="15" fill="rgb(231,122,1)"/><text x="60.0320%" y="367.50"></text></g><g><title>update_min_vruntime (17 samples, 0.03%)</title><rect x="60.0620%" y="341" width="0.0282%" height="15" fill="rgb(245,119,9)"/><text x="60.3120%" y="351.50"></text></g><g><title>__update_load_avg_cfs_rq (39 samples, 0.06%)</title><rect x="60.1398%" y="341" width="0.0646%" height="15" fill="rgb(241,163,25)"/><text x="60.3898%" y="351.50"></text></g><g><title>dequeue_entity (408 samples, 0.68%)</title><rect x="59.5733%" y="373" width="0.6758%" height="15" fill="rgb(217,214,3)"/><text x="59.8233%" y="383.50"></text></g><g><title>update_load_avg (96 samples, 0.16%)</title><rect x="60.0901%" y="357" width="0.1590%" height="15" fill="rgb(240,86,28)"/><text x="60.3401%" y="367.50"></text></g><g><title>__update_load_avg_se (27 samples, 0.04%)</title><rect x="60.2044%" y="341" width="0.0447%" height="15" fill="rgb(215,47,9)"/><text x="60.4544%" y="351.50"></text></g><g><title>dequeue_task_fair (466 samples, 0.77%)</title><rect x="59.4822%" y="389" width="0.7719%" height="15" fill="rgb(252,25,45)"/><text x="59.7322%" y="399.50"></text></g><g><title>__perf_event_task_sched_in (139 samples, 0.23%)</title><rect x="60.4164%" y="373" width="0.2302%" height="15" fill="rgb(251,164,9)"/><text x="60.6664%" y="383.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (132 samples, 0.22%)</title><rect x="60.4280%" y="357" width="0.2186%" height="15" fill="rgb(233,194,0)"/><text x="60.6780%" y="367.50"></text></g><g><title>native_write_msr (122 samples, 0.20%)</title><rect x="60.4446%" y="341" width="0.2021%" height="15" fill="rgb(249,111,24)"/><text x="60.6946%" y="351.50"></text></g><g><title>__handle_irq_event_percpu (8 samples, 0.01%)</title><rect x="60.6500%" y="293" width="0.0133%" height="15" fill="rgb(250,223,3)"/><text x="60.9000%" y="303.50"></text></g><g><title>nvme_irq (8 samples, 0.01%)</title><rect x="60.6500%" y="277" width="0.0133%" height="15" fill="rgb(236,178,37)"/><text x="60.9000%" y="287.50"></text></g><g><title>nvme_process_cq (8 samples, 0.01%)</title><rect x="60.6500%" y="261" width="0.0133%" height="15" fill="rgb(241,158,50)"/><text x="60.9000%" y="271.50"></text></g><g><title>asm_call_sysvec_on_stack (10 samples, 0.02%)</title><rect x="60.6483%" y="341" width="0.0166%" height="15" fill="rgb(213,121,41)"/><text x="60.8983%" y="351.50"></text></g><g><title>handle_edge_irq (9 samples, 0.01%)</title><rect x="60.6500%" y="325" width="0.0149%" height="15" fill="rgb(240,92,3)"/><text x="60.9000%" y="335.50"></text></g><g><title>handle_irq_event (9 samples, 0.01%)</title><rect x="60.6500%" y="309" width="0.0149%" height="15" fill="rgb(205,123,3)"/><text x="60.9000%" y="319.50"></text></g><g><title>asm_common_interrupt (12 samples, 0.02%)</title><rect x="60.6467%" y="373" width="0.0199%" height="15" fill="rgb(205,97,47)"/><text x="60.8967%" y="383.50"></text></g><g><title>common_interrupt (12 samples, 0.02%)</title><rect x="60.6467%" y="357" width="0.0199%" height="15" fill="rgb(247,152,14)"/><text x="60.8967%" y="367.50"></text></g><g><title>finish_task_switch (255 samples, 0.42%)</title><rect x="60.2541%" y="389" width="0.4224%" height="15" fill="rgb(248,195,53)"/><text x="60.5041%" y="399.50"></text></g><g><title>pick_next_task_fair (56 samples, 0.09%)</title><rect x="60.6798%" y="389" width="0.0928%" height="15" fill="rgb(226,201,16)"/><text x="60.9298%" y="399.50"></text></g><g><title>newidle_balance (42 samples, 0.07%)</title><rect x="60.7030%" y="373" width="0.0696%" height="15" fill="rgb(205,98,0)"/><text x="60.9530%" y="383.50"></text></g><g><title>pick_next_task_idle (42 samples, 0.07%)</title><rect x="60.7726%" y="389" width="0.0696%" height="15" fill="rgb(214,191,48)"/><text x="61.0226%" y="399.50"></text></g><g><title>__update_idle_core (31 samples, 0.05%)</title><rect x="60.7908%" y="373" width="0.0513%" height="15" fill="rgb(237,112,39)"/><text x="61.0408%" y="383.50"></text></g><g><title>psi_task_change (398 samples, 0.66%)</title><rect x="60.8438%" y="389" width="0.6593%" height="15" fill="rgb(247,203,27)"/><text x="61.0938%" y="399.50"></text></g><g><title>psi_group_change (341 samples, 0.56%)</title><rect x="60.9382%" y="373" width="0.5648%" height="15" fill="rgb(235,124,28)"/><text x="61.1882%" y="383.50"></text></g><g><title>record_times (84 samples, 0.14%)</title><rect x="61.3639%" y="357" width="0.1391%" height="15" fill="rgb(208,207,46)"/><text x="61.6139%" y="367.50"></text></g><g><title>sched_clock_cpu (60 samples, 0.10%)</title><rect x="61.4037%" y="341" width="0.0994%" height="15" fill="rgb(234,176,4)"/><text x="61.6537%" y="351.50"></text></g><g><title>sched_clock (49 samples, 0.08%)</title><rect x="61.4219%" y="325" width="0.0812%" height="15" fill="rgb(230,133,28)"/><text x="61.6719%" y="335.50"></text></g><g><title>native_sched_clock (39 samples, 0.06%)</title><rect x="61.4384%" y="309" width="0.0646%" height="15" fill="rgb(211,137,40)"/><text x="61.6884%" y="319.50"></text></g><g><title>put_prev_task_fair (36 samples, 0.06%)</title><rect x="61.5130%" y="389" width="0.0596%" height="15" fill="rgb(254,35,13)"/><text x="61.7630%" y="399.50"></text></g><g><title>put_prev_entity (13 samples, 0.02%)</title><rect x="61.5511%" y="373" width="0.0215%" height="15" fill="rgb(225,49,51)"/><text x="61.8011%" y="383.50"></text></g><g><title>futex_wait_queue_me (1,810 samples, 3.00%)</title><rect x="58.6788%" y="437" width="2.9981%" height="15" fill="rgb(251,10,15)"/><text x="58.9288%" y="447.50">fut..</text></g><g><title>schedule (1,542 samples, 2.55%)</title><rect x="59.1228%" y="421" width="2.5542%" height="15" fill="rgb(228,207,15)"/><text x="59.3728%" y="431.50">sc..</text></g><g><title>__schedule (1,524 samples, 2.52%)</title><rect x="59.1526%" y="405" width="2.5244%" height="15" fill="rgb(241,99,19)"/><text x="59.4026%" y="415.50">__..</text></g><g><title>update_rq_clock (58 samples, 0.10%)</title><rect x="61.5809%" y="389" width="0.0961%" height="15" fill="rgb(207,104,49)"/><text x="61.8309%" y="399.50"></text></g><g><title>sched_clock_cpu (37 samples, 0.06%)</title><rect x="61.6157%" y="373" width="0.0613%" height="15" fill="rgb(234,99,18)"/><text x="61.8657%" y="383.50"></text></g><g><title>sched_clock (35 samples, 0.06%)</title><rect x="61.6190%" y="357" width="0.0580%" height="15" fill="rgb(213,191,49)"/><text x="61.8690%" y="367.50"></text></g><g><title>native_sched_clock (35 samples, 0.06%)</title><rect x="61.6190%" y="341" width="0.0580%" height="15" fill="rgb(210,226,19)"/><text x="61.8690%" y="351.50"></text></g><g><title>__get_user_nocheck_4 (38 samples, 0.06%)</title><rect x="61.8476%" y="421" width="0.0629%" height="15" fill="rgb(229,97,18)"/><text x="62.0976%" y="431.50"></text></g><g><title>_raw_spin_lock (18 samples, 0.03%)</title><rect x="61.9105%" y="421" width="0.0298%" height="15" fill="rgb(211,167,15)"/><text x="62.1605%" y="431.50"></text></g><g><title>get_futex_key (14 samples, 0.02%)</title><rect x="61.9420%" y="421" width="0.0232%" height="15" fill="rgb(210,169,34)"/><text x="62.1920%" y="431.50"></text></g><g><title>futex_wait_setup (199 samples, 0.33%)</title><rect x="61.6770%" y="437" width="0.3296%" height="15" fill="rgb(241,121,31)"/><text x="61.9270%" y="447.50"></text></g><g><title>hash_futex (25 samples, 0.04%)</title><rect x="61.9652%" y="421" width="0.0414%" height="15" fill="rgb(232,40,11)"/><text x="62.2152%" y="431.50"></text></g><g><title>hrtimer_active (11 samples, 0.02%)</title><rect x="62.0248%" y="421" width="0.0182%" height="15" fill="rgb(205,86,26)"/><text x="62.2748%" y="431.50"></text></g><g><title>__remove_hrtimer (32 samples, 0.05%)</title><rect x="62.0596%" y="405" width="0.0530%" height="15" fill="rgb(231,126,28)"/><text x="62.3096%" y="415.50"></text></g><g><title>timerqueue_del (24 samples, 0.04%)</title><rect x="62.0728%" y="389" width="0.0398%" height="15" fill="rgb(219,221,18)"/><text x="62.3228%" y="399.50"></text></g><g><title>rb_erase (21 samples, 0.03%)</title><rect x="62.0778%" y="373" width="0.0348%" height="15" fill="rgb(211,40,0)"/><text x="62.3278%" y="383.50"></text></g><g><title>_raw_spin_lock_irqsave (26 samples, 0.04%)</title><rect x="62.1126%" y="405" width="0.0431%" height="15" fill="rgb(239,85,43)"/><text x="62.3626%" y="415.50"></text></g><g><title>hrtimer_cancel (104 samples, 0.17%)</title><rect x="62.0066%" y="437" width="0.1723%" height="15" fill="rgb(231,55,21)"/><text x="62.2566%" y="447.50"></text></g><g><title>hrtimer_try_to_cancel.part.0 (82 samples, 0.14%)</title><rect x="62.0430%" y="421" width="0.1358%" height="15" fill="rgb(225,184,43)"/><text x="62.2930%" y="431.50"></text></g><g><title>_raw_spin_unlock_irqrestore (14 samples, 0.02%)</title><rect x="62.1557%" y="405" width="0.0232%" height="15" fill="rgb(251,158,41)"/><text x="62.4057%" y="415.50"></text></g><g><title>hrtimer_init_sleeper (36 samples, 0.06%)</title><rect x="62.1789%" y="437" width="0.0596%" height="15" fill="rgb(234,159,37)"/><text x="62.4289%" y="447.50"></text></g><g><title>__hrtimer_init (33 samples, 0.05%)</title><rect x="62.1838%" y="421" width="0.0547%" height="15" fill="rgb(216,204,22)"/><text x="62.4338%" y="431.50"></text></g><g><title>do_futex (2,271 samples, 3.76%)</title><rect x="58.4801%" y="469" width="3.7617%" height="15" fill="rgb(214,17,3)"/><text x="58.7301%" y="479.50">do_f..</text></g><g><title>futex_wait (2,213 samples, 3.67%)</title><rect x="58.5761%" y="453" width="3.6657%" height="15" fill="rgb(212,111,17)"/><text x="58.8261%" y="463.50">fute..</text></g><g><title>copy_user_enhanced_fast_string (13 samples, 0.02%)</title><rect x="62.3147%" y="437" width="0.0215%" height="15" fill="rgb(221,157,24)"/><text x="62.5647%" y="447.50"></text></g><g><title>get_timespec64 (81 samples, 0.13%)</title><rect x="62.2418%" y="469" width="0.1342%" height="15" fill="rgb(252,16,13)"/><text x="62.4918%" y="479.50"></text></g><g><title>_copy_from_user (65 samples, 0.11%)</title><rect x="62.2683%" y="453" width="0.1077%" height="15" fill="rgb(221,62,2)"/><text x="62.5183%" y="463.50"></text></g><g><title>copy_user_generic_unrolled (24 samples, 0.04%)</title><rect x="62.3362%" y="437" width="0.0398%" height="15" fill="rgb(247,87,22)"/><text x="62.5862%" y="447.50"></text></g><g><title>ktime_add_safe (7 samples, 0.01%)</title><rect x="62.3760%" y="469" width="0.0116%" height="15" fill="rgb(215,73,9)"/><text x="62.6260%" y="479.50"></text></g><g><title>__x64_sys_futex (2,514 samples, 4.16%)</title><rect x="58.3591%" y="485" width="4.1643%" height="15" fill="rgb(207,175,33)"/><text x="58.6091%" y="495.50">__x64..</text></g><g><title>ktime_get (82 samples, 0.14%)</title><rect x="62.3876%" y="469" width="0.1358%" height="15" fill="rgb(243,129,54)"/><text x="62.6376%" y="479.50"></text></g><g><title>read_tsc (54 samples, 0.09%)</title><rect x="62.4340%" y="453" width="0.0894%" height="15" fill="rgb(227,119,45)"/><text x="62.6840%" y="463.50"></text></g><g><title>do_syscall_64 (2,563 samples, 4.25%)</title><rect x="58.2813%" y="501" width="4.2454%" height="15" fill="rgb(205,109,36)"/><text x="58.5313%" y="511.50">do_sy..</text></g><g><title>fpregs_assert_state_consistent (9 samples, 0.01%)</title><rect x="63.3417%" y="469" width="0.0149%" height="15" fill="rgb(205,6,39)"/><text x="63.5917%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3,165 samples, 5.24%)</title><rect x="58.2564%" y="517" width="5.2426%" height="15" fill="rgb(221,32,16)"/><text x="58.5064%" y="527.50">entry_..</text></g><g><title>syscall_exit_to_user_mode (587 samples, 0.97%)</title><rect x="62.5267%" y="501" width="0.9723%" height="15" fill="rgb(228,144,50)"/><text x="62.7767%" y="511.50"></text></g><g><title>exit_to_user_mode_prepare (110 samples, 0.18%)</title><rect x="63.3168%" y="485" width="0.1822%" height="15" fill="rgb(229,201,53)"/><text x="63.5668%" y="495.50"></text></g><g><title>switch_fpu_return (86 samples, 0.14%)</title><rect x="63.3566%" y="469" width="0.1425%" height="15" fill="rgb(249,153,27)"/><text x="63.6066%" y="479.50"></text></g><g><title>copy_kernel_to_fpregs (51 samples, 0.08%)</title><rect x="63.4146%" y="453" width="0.0845%" height="15" fill="rgb(227,106,25)"/><text x="63.6646%" y="463.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (3,868 samples, 6.41%)</title><rect x="57.3653%" y="549" width="6.4070%" height="15" fill="rgb(230,65,29)"/><text x="57.6153%" y="559.50">parking_..</text></g><g><title>syscall (3,535 samples, 5.86%)</title><rect x="57.9169%" y="533" width="5.8555%" height="15" fill="rgb(221,57,46)"/><text x="58.1669%" y="543.50">syscall</text></g><g><title>syscall_return_via_sysret (165 samples, 0.27%)</title><rect x="63.4990%" y="517" width="0.2733%" height="15" fill="rgb(229,161,17)"/><text x="63.7490%" y="527.50"></text></g><g><title>std::time::Instant::now (40 samples, 0.07%)</title><rect x="63.7806%" y="549" width="0.0663%" height="15" fill="rgb(222,213,11)"/><text x="64.0306%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (40 samples, 0.07%)</title><rect x="63.7806%" y="533" width="0.0663%" height="15" fill="rgb(235,35,13)"/><text x="64.0306%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::now (40 samples, 0.07%)</title><rect x="63.7806%" y="517" width="0.0663%" height="15" fill="rgb(233,158,34)"/><text x="64.0306%" y="527.50"></text></g><g><title>__GI___clock_gettime (39 samples, 0.06%)</title><rect x="63.7823%" y="501" width="0.0646%" height="15" fill="rgb(215,151,48)"/><text x="64.0323%" y="511.50"></text></g><g><title>__vdso_clock_gettime (30 samples, 0.05%)</title><rect x="63.7972%" y="485" width="0.0497%" height="15" fill="rgb(229,84,14)"/><text x="64.0472%" y="495.50"></text></g><g><title>[[vdso]] (22 samples, 0.04%)</title><rect x="63.8104%" y="469" width="0.0364%" height="15" fill="rgb(229,68,14)"/><text x="64.0604%" y="479.50"></text></g><g><title>std::time::SystemTime::checked_add (9 samples, 0.01%)</title><rect x="63.8469%" y="549" width="0.0149%" height="15" fill="rgb(243,106,26)"/><text x="64.0969%" y="559.50"></text></g><g><title>pick_next_task_fair (8 samples, 0.01%)</title><rect x="64.0440%" y="325" width="0.0133%" height="15" fill="rgb(206,45,38)"/><text x="64.2940%" y="335.50"></text></g><g><title>__x64_sys_sched_yield (18 samples, 0.03%)</title><rect x="64.0324%" y="373" width="0.0298%" height="15" fill="rgb(226,6,15)"/><text x="64.2824%" y="383.50"></text></g><g><title>schedule (15 samples, 0.02%)</title><rect x="64.0374%" y="357" width="0.0248%" height="15" fill="rgb(232,22,54)"/><text x="64.2874%" y="367.50"></text></g><g><title>__schedule (14 samples, 0.02%)</title><rect x="64.0390%" y="341" width="0.0232%" height="15" fill="rgb(229,222,32)"/><text x="64.2890%" y="351.50"></text></g><g><title>do_syscall_64 (20 samples, 0.03%)</title><rect x="64.0307%" y="389" width="0.0331%" height="15" fill="rgb(228,62,29)"/><text x="64.2807%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (29 samples, 0.05%)</title><rect x="64.0307%" y="405" width="0.0480%" height="15" fill="rgb(251,103,34)"/><text x="64.2807%" y="415.50"></text></g><g><title>syscall_exit_to_user_mode (9 samples, 0.01%)</title><rect x="64.0639%" y="389" width="0.0149%" height="15" fill="rgb(233,12,30)"/><text x="64.3139%" y="399.50"></text></g><g><title>__GI___sched_yield (33 samples, 0.05%)</title><rect x="64.0258%" y="421" width="0.0547%" height="15" fill="rgb(238,52,0)"/><text x="64.2758%" y="431.50"></text></g><g><title>dequeue_entity (13 samples, 0.02%)</title><rect x="64.1218%" y="245" width="0.0215%" height="15" fill="rgb(223,98,5)"/><text x="64.3718%" y="255.50"></text></g><g><title>dequeue_task_fair (15 samples, 0.02%)</title><rect x="64.1202%" y="261" width="0.0248%" height="15" fill="rgb(228,75,37)"/><text x="64.3702%" y="271.50"></text></g><g><title>__perf_event_task_sched_in (64 samples, 0.11%)</title><rect x="64.1500%" y="245" width="0.1060%" height="15" fill="rgb(205,115,49)"/><text x="64.4000%" y="255.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (63 samples, 0.10%)</title><rect x="64.1517%" y="229" width="0.1044%" height="15" fill="rgb(250,154,43)"/><text x="64.4017%" y="239.50"></text></g><g><title>native_write_msr (63 samples, 0.10%)</title><rect x="64.1517%" y="213" width="0.1044%" height="15" fill="rgb(226,43,29)"/><text x="64.4017%" y="223.50"></text></g><g><title>finish_task_switch (68 samples, 0.11%)</title><rect x="64.1450%" y="261" width="0.1126%" height="15" fill="rgb(249,228,39)"/><text x="64.3950%" y="271.50"></text></g><g><title>psi_task_change (13 samples, 0.02%)</title><rect x="64.2676%" y="261" width="0.0215%" height="15" fill="rgb(216,79,43)"/><text x="64.5176%" y="271.50"></text></g><g><title>psi_group_change (13 samples, 0.02%)</title><rect x="64.2676%" y="245" width="0.0215%" height="15" fill="rgb(228,95,12)"/><text x="64.5176%" y="255.50"></text></g><g><title>futex_wait_queue_me (108 samples, 0.18%)</title><rect x="64.1119%" y="309" width="0.1789%" height="15" fill="rgb(249,221,15)"/><text x="64.3619%" y="319.50"></text></g><g><title>schedule (106 samples, 0.18%)</title><rect x="64.1152%" y="293" width="0.1756%" height="15" fill="rgb(233,34,13)"/><text x="64.3652%" y="303.50"></text></g><g><title>__schedule (105 samples, 0.17%)</title><rect x="64.1169%" y="277" width="0.1739%" height="15" fill="rgb(214,103,39)"/><text x="64.3669%" y="287.50"></text></g><g><title>do_syscall_64 (117 samples, 0.19%)</title><rect x="64.1053%" y="373" width="0.1938%" height="15" fill="rgb(251,126,39)"/><text x="64.3553%" y="383.50"></text></g><g><title>__x64_sys_futex (117 samples, 0.19%)</title><rect x="64.1053%" y="357" width="0.1938%" height="15" fill="rgb(214,216,36)"/><text x="64.3553%" y="367.50"></text></g><g><title>do_futex (116 samples, 0.19%)</title><rect x="64.1069%" y="341" width="0.1921%" height="15" fill="rgb(220,221,8)"/><text x="64.3569%" y="351.50"></text></g><g><title>futex_wait (115 samples, 0.19%)</title><rect x="64.1086%" y="325" width="0.1905%" height="15" fill="rgb(240,216,3)"/><text x="64.3586%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (122 samples, 0.20%)</title><rect x="64.1053%" y="389" width="0.2021%" height="15" fill="rgb(232,218,17)"/><text x="64.3553%" y="399.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (138 samples, 0.23%)</title><rect x="64.0804%" y="421" width="0.2286%" height="15" fill="rgb(229,163,45)"/><text x="64.3304%" y="431.50"></text></g><g><title>syscall (127 samples, 0.21%)</title><rect x="64.0987%" y="405" width="0.2104%" height="15" fill="rgb(231,110,42)"/><text x="64.3487%" y="415.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (179 samples, 0.30%)</title><rect x="64.0158%" y="453" width="0.2965%" height="15" fill="rgb(208,170,48)"/><text x="64.2658%" y="463.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (176 samples, 0.29%)</title><rect x="64.0208%" y="437" width="0.2915%" height="15" fill="rgb(239,116,25)"/><text x="64.2708%" y="447.50"></text></g><g><title>ttwu_do_activate (10 samples, 0.02%)</title><rect x="64.3455%" y="293" width="0.0166%" height="15" fill="rgb(219,200,50)"/><text x="64.5955%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (22 samples, 0.04%)</title><rect x="64.3289%" y="405" width="0.0364%" height="15" fill="rgb(245,200,0)"/><text x="64.5789%" y="415.50"></text></g><g><title>do_syscall_64 (22 samples, 0.04%)</title><rect x="64.3289%" y="389" width="0.0364%" height="15" fill="rgb(245,119,33)"/><text x="64.5789%" y="399.50"></text></g><g><title>__x64_sys_futex (22 samples, 0.04%)</title><rect x="64.3289%" y="373" width="0.0364%" height="15" fill="rgb(231,125,12)"/><text x="64.5789%" y="383.50"></text></g><g><title>do_futex (22 samples, 0.04%)</title><rect x="64.3289%" y="357" width="0.0364%" height="15" fill="rgb(216,96,41)"/><text x="64.5789%" y="367.50"></text></g><g><title>futex_wake (21 samples, 0.03%)</title><rect x="64.3306%" y="341" width="0.0348%" height="15" fill="rgb(248,43,45)"/><text x="64.5806%" y="351.50"></text></g><g><title>wake_up_q (18 samples, 0.03%)</title><rect x="64.3355%" y="325" width="0.0298%" height="15" fill="rgb(217,222,7)"/><text x="64.5855%" y="335.50"></text></g><g><title>try_to_wake_up (18 samples, 0.03%)</title><rect x="64.3355%" y="309" width="0.0298%" height="15" fill="rgb(233,28,6)"/><text x="64.5855%" y="319.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (32 samples, 0.05%)</title><rect x="64.3140%" y="437" width="0.0530%" height="15" fill="rgb(231,218,15)"/><text x="64.5640%" y="447.50"></text></g><g><title>syscall (24 samples, 0.04%)</title><rect x="64.3272%" y="421" width="0.0398%" height="15" fill="rgb(226,171,48)"/><text x="64.5772%" y="431.50"></text></g><g><title>exc_page_fault (10 samples, 0.02%)</title><rect x="64.7099%" y="277" width="0.0166%" height="15" fill="rgb(235,201,9)"/><text x="64.9599%" y="287.50"></text></g><g><title>do_user_addr_fault (10 samples, 0.02%)</title><rect x="64.7099%" y="261" width="0.0166%" height="15" fill="rgb(217,80,15)"/><text x="64.9599%" y="271.50"></text></g><g><title>handle_mm_fault (10 samples, 0.02%)</title><rect x="64.7099%" y="245" width="0.0166%" height="15" fill="rgb(219,152,8)"/><text x="64.9599%" y="255.50"></text></g><g><title>asm_exc_page_fault (15 samples, 0.02%)</title><rect x="64.7099%" y="293" width="0.0248%" height="15" fill="rgb(243,107,38)"/><text x="64.9599%" y="303.50"></text></g><g><title>&lt;ate::anti_replay::AntiReplayPlugin as ate::sink::EventSink&gt;::feed (86 samples, 0.14%)</title><rect x="64.6055%" y="357" width="0.1425%" height="15" fill="rgb(231,17,5)"/><text x="64.8555%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (83 samples, 0.14%)</title><rect x="64.6105%" y="341" width="0.1375%" height="15" fill="rgb(209,25,54)"/><text x="64.8605%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (77 samples, 0.13%)</title><rect x="64.6204%" y="325" width="0.1275%" height="15" fill="rgb(219,0,2)"/><text x="64.8704%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (42 samples, 0.07%)</title><rect x="64.6784%" y="309" width="0.0696%" height="15" fill="rgb(246,9,5)"/><text x="64.9284%" y="319.50"></text></g><g><title>&lt;ate::redo::RedoLog as ate::redo::LogWritable&gt;::write (9 samples, 0.01%)</title><rect x="64.7480%" y="357" width="0.0149%" height="15" fill="rgb(226,159,4)"/><text x="64.9980%" y="367.50"></text></g><g><title>&lt;ate::signature::SignaturePlugin as ate::sink::EventSink&gt;::feed (9 samples, 0.01%)</title><rect x="64.7894%" y="341" width="0.0149%" height="15" fill="rgb(219,175,34)"/><text x="65.0394%" y="351.50"></text></g><g><title>ate::tree::TreeAuthorityPlugin::compute_auth (27 samples, 0.04%)</title><rect x="64.8043%" y="341" width="0.0447%" height="15" fill="rgb(236,10,46)"/><text x="65.0543%" y="351.50"></text></g><g><title>__GI_munmap (7 samples, 0.01%)</title><rect x="65.0378%" y="293" width="0.0116%" height="15" fill="rgb(240,211,16)"/><text x="65.2878%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="65.0378%" y="277" width="0.0116%" height="15" fill="rgb(205,3,43)"/><text x="65.2878%" y="287.50"></text></g><g><title>do_syscall_64 (7 samples, 0.01%)</title><rect x="65.0378%" y="261" width="0.0116%" height="15" fill="rgb(245,7,22)"/><text x="65.2878%" y="271.50"></text></g><g><title>__x64_sys_munmap (7 samples, 0.01%)</title><rect x="65.0378%" y="245" width="0.0116%" height="15" fill="rgb(239,132,32)"/><text x="65.2878%" y="255.50"></text></g><g><title>__vm_munmap (7 samples, 0.01%)</title><rect x="65.0378%" y="229" width="0.0116%" height="15" fill="rgb(228,202,34)"/><text x="65.2878%" y="239.50"></text></g><g><title>__do_munmap (7 samples, 0.01%)</title><rect x="65.0378%" y="213" width="0.0116%" height="15" fill="rgb(254,200,22)"/><text x="65.2878%" y="223.50"></text></g><g><title>unmap_region (7 samples, 0.01%)</title><rect x="65.0378%" y="197" width="0.0116%" height="15" fill="rgb(219,10,39)"/><text x="65.2878%" y="207.50"></text></g><g><title>unmap_vmas (7 samples, 0.01%)</title><rect x="65.0378%" y="181" width="0.0116%" height="15" fill="rgb(226,210,39)"/><text x="65.2878%" y="191.50"></text></g><g><title>unmap_page_range (7 samples, 0.01%)</title><rect x="65.0378%" y="165" width="0.0116%" height="15" fill="rgb(208,219,16)"/><text x="65.2878%" y="175.50"></text></g><g><title>__irqentry_text_end (7 samples, 0.01%)</title><rect x="65.0494%" y="293" width="0.0116%" height="15" fill="rgb(216,158,51)"/><text x="65.2994%" y="303.50"></text></g><g><title>shrink_lruvec (13 samples, 0.02%)</title><rect x="65.0909%" y="133" width="0.0215%" height="15" fill="rgb(233,14,44)"/><text x="65.3409%" y="143.50"></text></g><g><title>shrink_inactive_list (10 samples, 0.02%)</title><rect x="65.0958%" y="117" width="0.0166%" height="15" fill="rgb(237,97,39)"/><text x="65.3458%" y="127.50"></text></g><g><title>shrink_page_list (9 samples, 0.01%)</title><rect x="65.0975%" y="101" width="0.0149%" height="15" fill="rgb(218,198,43)"/><text x="65.3475%" y="111.50"></text></g><g><title>try_to_free_pages (22 samples, 0.04%)</title><rect x="65.0859%" y="181" width="0.0364%" height="15" fill="rgb(231,104,20)"/><text x="65.3359%" y="191.50"></text></g><g><title>do_try_to_free_pages (22 samples, 0.04%)</title><rect x="65.0859%" y="165" width="0.0364%" height="15" fill="rgb(254,36,13)"/><text x="65.3359%" y="175.50"></text></g><g><title>shrink_node (22 samples, 0.04%)</title><rect x="65.0859%" y="149" width="0.0364%" height="15" fill="rgb(248,14,50)"/><text x="65.3359%" y="159.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (29 samples, 0.05%)</title><rect x="65.0759%" y="197" width="0.0480%" height="15" fill="rgb(217,107,29)"/><text x="65.3259%" y="207.50"></text></g><g><title>__alloc_pages_nodemask (41 samples, 0.07%)</title><rect x="65.0759%" y="213" width="0.0679%" height="15" fill="rgb(251,169,33)"/><text x="65.3259%" y="223.50"></text></g><g><title>get_page_from_freelist (12 samples, 0.02%)</title><rect x="65.1240%" y="197" width="0.0199%" height="15" fill="rgb(217,108,32)"/><text x="65.3740%" y="207.50"></text></g><g><title>alloc_pages_vma (43 samples, 0.07%)</title><rect x="65.0743%" y="229" width="0.0712%" height="15" fill="rgb(219,66,42)"/><text x="65.3243%" y="239.50"></text></g><g><title>handle_mm_fault (57 samples, 0.09%)</title><rect x="65.0660%" y="245" width="0.0944%" height="15" fill="rgb(206,180,7)"/><text x="65.3160%" y="255.50"></text></g><g><title>do_user_addr_fault (58 samples, 0.10%)</title><rect x="65.0660%" y="261" width="0.0961%" height="15" fill="rgb(208,226,31)"/><text x="65.3160%" y="271.50"></text></g><g><title>exc_page_fault (60 samples, 0.10%)</title><rect x="65.0644%" y="277" width="0.0994%" height="15" fill="rgb(218,26,49)"/><text x="65.3144%" y="287.50"></text></g><g><title>asm_exc_page_fault (70 samples, 0.12%)</title><rect x="65.0627%" y="293" width="0.1159%" height="15" fill="rgb(233,197,48)"/><text x="65.3127%" y="303.50"></text></g><g><title>irqentry_exit_to_user_mode (9 samples, 0.01%)</title><rect x="65.1637%" y="277" width="0.0149%" height="15" fill="rgb(252,181,51)"/><text x="65.4137%" y="287.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::sink::EventSink&gt;::feed (260 samples, 0.43%)</title><rect x="64.7712%" y="357" width="0.4307%" height="15" fill="rgb(253,90,19)"/><text x="65.0212%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (213 samples, 0.35%)</title><rect x="64.8490%" y="341" width="0.3528%" height="15" fill="rgb(215,171,30)"/><text x="65.0990%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (211 samples, 0.35%)</title><rect x="64.8523%" y="325" width="0.3495%" height="15" fill="rgb(214,222,9)"/><text x="65.1023%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (139 samples, 0.23%)</title><rect x="64.9716%" y="309" width="0.2302%" height="15" fill="rgb(223,3,22)"/><text x="65.2216%" y="319.50"></text></g><g><title>error_entry (14 samples, 0.02%)</title><rect x="65.1786%" y="293" width="0.0232%" height="15" fill="rgb(225,196,46)"/><text x="65.4286%" y="303.50"></text></g><g><title>get_page_from_freelist (26 samples, 0.04%)</title><rect x="65.7253%" y="165" width="0.0431%" height="15" fill="rgb(209,110,37)"/><text x="65.9753%" y="175.50"></text></g><g><title>prep_new_page (18 samples, 0.03%)</title><rect x="65.7385%" y="149" width="0.0298%" height="15" fill="rgb(249,89,12)"/><text x="65.9885%" y="159.50"></text></g><g><title>kernel_init_free_pages (18 samples, 0.03%)</title><rect x="65.7385%" y="133" width="0.0298%" height="15" fill="rgb(226,27,33)"/><text x="65.9885%" y="143.50"></text></g><g><title>clear_page_erms (18 samples, 0.03%)</title><rect x="65.7385%" y="117" width="0.0298%" height="15" fill="rgb(213,82,22)"/><text x="65.9885%" y="127.50"></text></g><g><title>alloc_pages_vma (30 samples, 0.05%)</title><rect x="65.7203%" y="197" width="0.0497%" height="15" fill="rgb(248,140,0)"/><text x="65.9703%" y="207.50"></text></g><g><title>__alloc_pages_nodemask (28 samples, 0.05%)</title><rect x="65.7236%" y="181" width="0.0464%" height="15" fill="rgb(228,106,3)"/><text x="65.9736%" y="191.50"></text></g><g><title>lru_cache_add (7 samples, 0.01%)</title><rect x="65.7799%" y="197" width="0.0116%" height="15" fill="rgb(209,23,37)"/><text x="66.0299%" y="207.50"></text></g><g><title>exc_page_fault (63 samples, 0.10%)</title><rect x="65.7021%" y="245" width="0.1044%" height="15" fill="rgb(241,93,50)"/><text x="65.9521%" y="255.50"></text></g><g><title>do_user_addr_fault (62 samples, 0.10%)</title><rect x="65.7037%" y="229" width="0.1027%" height="15" fill="rgb(253,46,43)"/><text x="65.9537%" y="239.50"></text></g><g><title>handle_mm_fault (61 samples, 0.10%)</title><rect x="65.7054%" y="213" width="0.1010%" height="15" fill="rgb(226,206,43)"/><text x="65.9554%" y="223.50"></text></g><g><title>asm_exc_page_fault (82 samples, 0.14%)</title><rect x="65.7021%" y="261" width="0.1358%" height="15" fill="rgb(217,54,7)"/><text x="65.9521%" y="271.50"></text></g><g><title>irqentry_exit_to_user_mode (19 samples, 0.03%)</title><rect x="65.8064%" y="245" width="0.0315%" height="15" fill="rgb(223,5,52)"/><text x="66.0564%" y="255.50"></text></g><g><title>change_protection (7 samples, 0.01%)</title><rect x="65.8694%" y="149" width="0.0116%" height="15" fill="rgb(206,52,46)"/><text x="66.1194%" y="159.50"></text></g><g><title>perf_event_mmap (22 samples, 0.04%)</title><rect x="65.8810%" y="149" width="0.0364%" height="15" fill="rgb(253,136,11)"/><text x="66.1310%" y="159.50"></text></g><g><title>perf_iterate_sb (20 samples, 0.03%)</title><rect x="65.8843%" y="133" width="0.0331%" height="15" fill="rgb(208,106,33)"/><text x="66.1343%" y="143.50"></text></g><g><title>perf_iterate_ctx (18 samples, 0.03%)</title><rect x="65.8876%" y="117" width="0.0298%" height="15" fill="rgb(206,54,4)"/><text x="66.1376%" y="127.50"></text></g><g><title>perf_event_mmap_output (14 samples, 0.02%)</title><rect x="65.8942%" y="101" width="0.0232%" height="15" fill="rgb(213,3,15)"/><text x="66.1442%" y="111.50"></text></g><g><title>vma_merge (12 samples, 0.02%)</title><rect x="65.9207%" y="149" width="0.0199%" height="15" fill="rgb(252,211,39)"/><text x="66.1707%" y="159.50"></text></g><g><title>__vma_adjust (11 samples, 0.02%)</title><rect x="65.9224%" y="133" width="0.0182%" height="15" fill="rgb(223,6,36)"/><text x="66.1724%" y="143.50"></text></g><g><title>mprotect_fixup (47 samples, 0.08%)</title><rect x="65.8661%" y="165" width="0.0779%" height="15" fill="rgb(252,169,45)"/><text x="66.1161%" y="175.50"></text></g><g><title>do_syscall_64 (56 samples, 0.09%)</title><rect x="65.8561%" y="213" width="0.0928%" height="15" fill="rgb(212,48,26)"/><text x="66.1061%" y="223.50"></text></g><g><title>__x64_sys_mprotect (56 samples, 0.09%)</title><rect x="65.8561%" y="197" width="0.0928%" height="15" fill="rgb(251,102,48)"/><text x="66.1061%" y="207.50"></text></g><g><title>do_mprotect_pkey (56 samples, 0.09%)</title><rect x="65.8561%" y="181" width="0.0928%" height="15" fill="rgb(243,208,16)"/><text x="66.1061%" y="191.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (74 samples, 0.12%)</title><rect x="65.8545%" y="229" width="0.1226%" height="15" fill="rgb(219,96,24)"/><text x="66.1045%" y="239.50"></text></g><g><title>syscall_exit_to_user_mode (17 samples, 0.03%)</title><rect x="65.9489%" y="213" width="0.0282%" height="15" fill="rgb(219,33,29)"/><text x="66.1989%" y="223.50"></text></g><g><title>_int_malloc (208 samples, 0.34%)</title><rect x="65.6474%" y="293" width="0.3445%" height="15" fill="rgb(223,176,5)"/><text x="65.8974%" y="303.50"></text></g><g><title>sysmalloc (188 samples, 0.31%)</title><rect x="65.6805%" y="277" width="0.3114%" height="15" fill="rgb(228,140,14)"/><text x="65.9305%" y="287.50"></text></g><g><title>grow_heap (86 samples, 0.14%)</title><rect x="65.8495%" y="261" width="0.1425%" height="15" fill="rgb(217,179,31)"/><text x="66.0995%" y="271.50"></text></g><g><title>__GI___mprotect (86 samples, 0.14%)</title><rect x="65.8495%" y="245" width="0.1425%" height="15" fill="rgb(230,9,30)"/><text x="66.0995%" y="255.50"></text></g><g><title>__GI___libc_malloc (238 samples, 0.39%)</title><rect x="65.5994%" y="309" width="0.3942%" height="15" fill="rgb(230,136,20)"/><text x="65.8494%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (297 samples, 0.49%)</title><rect x="65.5050%" y="325" width="0.4920%" height="15" fill="rgb(215,210,22)"/><text x="65.7550%" y="335.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (7 samples, 0.01%)</title><rect x="66.1129%" y="293" width="0.0116%" height="15" fill="rgb(218,43,5)"/><text x="66.3629%" y="303.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 0.08%)</title><rect x="66.0599%" y="309" width="0.0762%" height="15" fill="rgb(216,11,5)"/><text x="66.3099%" y="319.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_slice (7 samples, 0.01%)</title><rect x="66.1245%" y="293" width="0.0116%" height="15" fill="rgb(209,82,29)"/><text x="66.3745%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (32 samples, 0.05%)</title><rect x="66.1526%" y="293" width="0.0530%" height="15" fill="rgb(244,115,12)"/><text x="66.4026%" y="303.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.01%)</title><rect x="66.2388%" y="261" width="0.0149%" height="15" fill="rgb(222,82,18)"/><text x="66.4888%" y="271.50"></text></g><g><title>__memmove_avx_unaligned_erms (40 samples, 0.07%)</title><rect x="66.2553%" y="261" width="0.0663%" height="15" fill="rgb(249,227,8)"/><text x="66.5053%" y="271.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.01%)</title><rect x="66.3381%" y="245" width="0.0116%" height="15" fill="rgb(253,141,45)"/><text x="66.5881%" y="255.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (15 samples, 0.02%)</title><rect x="66.3531%" y="229" width="0.0248%" height="15" fill="rgb(234,184,4)"/><text x="66.6031%" y="239.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (9 samples, 0.01%)</title><rect x="66.3630%" y="213" width="0.0149%" height="15" fill="rgb(218,194,23)"/><text x="66.6130%" y="223.50"></text></g><g><title>mark_wake_futex (9 samples, 0.01%)</title><rect x="66.4243%" y="117" width="0.0149%" height="15" fill="rgb(235,66,41)"/><text x="66.6743%" y="127.50"></text></g><g><title>select_task_rq_fair (11 samples, 0.02%)</title><rect x="66.4640%" y="85" width="0.0182%" height="15" fill="rgb(245,217,1)"/><text x="66.7140%" y="95.50"></text></g><g><title>enqueue_task_fair (37 samples, 0.06%)</title><rect x="66.4872%" y="69" width="0.0613%" height="15" fill="rgb(229,91,1)"/><text x="66.7372%" y="79.50"></text></g><g><title>enqueue_entity (26 samples, 0.04%)</title><rect x="66.5054%" y="53" width="0.0431%" height="15" fill="rgb(207,101,30)"/><text x="66.7554%" y="63.50"></text></g><g><title>update_load_avg (9 samples, 0.01%)</title><rect x="66.5336%" y="37" width="0.0149%" height="15" fill="rgb(223,82,49)"/><text x="66.7836%" y="47.50"></text></g><g><title>ttwu_do_activate (80 samples, 0.13%)</title><rect x="66.4823%" y="85" width="0.1325%" height="15" fill="rgb(218,167,17)"/><text x="66.7323%" y="95.50"></text></g><g><title>psi_task_change (40 samples, 0.07%)</title><rect x="66.5485%" y="69" width="0.0663%" height="15" fill="rgb(208,103,14)"/><text x="66.7985%" y="79.50"></text></g><g><title>psi_group_change (36 samples, 0.06%)</title><rect x="66.5551%" y="53" width="0.0596%" height="15" fill="rgb(238,20,8)"/><text x="66.8051%" y="63.50"></text></g><g><title>__x64_sys_futex (136 samples, 0.23%)</title><rect x="66.4027%" y="165" width="0.2253%" height="15" fill="rgb(218,80,54)"/><text x="66.6527%" y="175.50"></text></g><g><title>do_futex (135 samples, 0.22%)</title><rect x="66.4044%" y="149" width="0.2236%" height="15" fill="rgb(240,144,17)"/><text x="66.6544%" y="159.50"></text></g><g><title>futex_wake (134 samples, 0.22%)</title><rect x="66.4061%" y="133" width="0.2220%" height="15" fill="rgb(245,27,50)"/><text x="66.6561%" y="143.50"></text></g><g><title>wake_up_q (114 samples, 0.19%)</title><rect x="66.4392%" y="117" width="0.1888%" height="15" fill="rgb(251,51,7)"/><text x="66.6892%" y="127.50"></text></g><g><title>try_to_wake_up (109 samples, 0.18%)</title><rect x="66.4475%" y="101" width="0.1806%" height="15" fill="rgb(245,217,29)"/><text x="66.6975%" y="111.50"></text></g><g><title>do_syscall_64 (140 samples, 0.23%)</title><rect x="66.4011%" y="181" width="0.2319%" height="15" fill="rgb(221,176,29)"/><text x="66.6511%" y="191.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (172 samples, 0.28%)</title><rect x="66.4011%" y="197" width="0.2849%" height="15" fill="rgb(212,180,24)"/><text x="66.6511%" y="207.50"></text></g><g><title>syscall_exit_to_user_mode (32 samples, 0.05%)</title><rect x="66.6330%" y="181" width="0.0530%" height="15" fill="rgb(254,24,2)"/><text x="66.8830%" y="191.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (232 samples, 0.38%)</title><rect x="66.3265%" y="261" width="0.3843%" height="15" fill="rgb(230,100,2)"/><text x="66.5765%" y="271.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn (218 samples, 0.36%)</title><rect x="66.3497%" y="245" width="0.3611%" height="15" fill="rgb(219,142,25)"/><text x="66.5997%" y="255.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (201 samples, 0.33%)</title><rect x="66.3779%" y="229" width="0.3329%" height="15" fill="rgb(240,73,43)"/><text x="66.6279%" y="239.50"></text></g><g><title>syscall (195 samples, 0.32%)</title><rect x="66.3878%" y="213" width="0.3230%" height="15" fill="rgb(214,114,15)"/><text x="66.6378%" y="223.50"></text></g><g><title>syscall_return_via_sysret (15 samples, 0.02%)</title><rect x="66.6860%" y="197" width="0.0248%" height="15" fill="rgb(207,130,4)"/><text x="66.9360%" y="207.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_write::AsyncWrite&gt;::poll_write (309 samples, 0.51%)</title><rect x="66.2056%" y="277" width="0.5118%" height="15" fill="rgb(221,25,40)"/><text x="66.4556%" y="287.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (352 samples, 0.58%)</title><rect x="66.1361%" y="309" width="0.5831%" height="15" fill="rgb(241,184,7)"/><text x="66.3861%" y="319.50"></text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (310 samples, 0.51%)</title><rect x="66.2056%" y="293" width="0.5135%" height="15" fill="rgb(235,159,4)"/><text x="66.4556%" y="303.50"></text></g><g><title>__GI___libc_free (7 samples, 0.01%)</title><rect x="66.7191%" y="309" width="0.0116%" height="15" fill="rgb(214,87,48)"/><text x="66.9691%" y="319.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.01%)</title><rect x="66.7307%" y="309" width="0.0149%" height="15" fill="rgb(246,198,24)"/><text x="66.9807%" y="319.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (468 samples, 0.78%)</title><rect x="65.9969%" y="325" width="0.7752%" height="15" fill="rgb(209,66,40)"/><text x="66.2469%" y="335.50"></text></g><g><title>_int_free (11 samples, 0.02%)</title><rect x="66.7539%" y="309" width="0.0182%" height="15" fill="rgb(233,147,39)"/><text x="67.0039%" y="319.50"></text></g><g><title>__GI___libc_free (12 samples, 0.02%)</title><rect x="66.7721%" y="325" width="0.0199%" height="15" fill="rgb(231,145,52)"/><text x="67.0221%" y="335.50"></text></g><g><title>asm_exc_page_fault (8 samples, 0.01%)</title><rect x="66.8583%" y="277" width="0.0133%" height="15" fill="rgb(206,20,26)"/><text x="67.1083%" y="287.50"></text></g><g><title>sysmalloc (17 samples, 0.03%)</title><rect x="66.8583%" y="293" width="0.0282%" height="15" fill="rgb(238,220,4)"/><text x="67.1083%" y="303.50"></text></g><g><title>grow_heap (8 samples, 0.01%)</title><rect x="66.8732%" y="277" width="0.0133%" height="15" fill="rgb(252,195,42)"/><text x="67.1232%" y="287.50"></text></g><g><title>__GI___mprotect (8 samples, 0.01%)</title><rect x="66.8732%" y="261" width="0.0133%" height="15" fill="rgb(209,10,6)"/><text x="67.1232%" y="271.50"></text></g><g><title>_int_malloc (34 samples, 0.06%)</title><rect x="66.8318%" y="309" width="0.0563%" height="15" fill="rgb(229,3,52)"/><text x="67.0818%" y="319.50"></text></g><g><title>__GI___libc_malloc (67 samples, 0.11%)</title><rect x="66.7920%" y="325" width="0.1110%" height="15" fill="rgb(253,49,37)"/><text x="67.0420%" y="335.50"></text></g><g><title>_int_free (21 samples, 0.03%)</title><rect x="66.9262%" y="325" width="0.0348%" height="15" fill="rgb(240,103,49)"/><text x="67.1762%" y="335.50"></text></g><g><title>tcache_put (7 samples, 0.01%)</title><rect x="66.9494%" y="309" width="0.0116%" height="15" fill="rgb(250,182,30)"/><text x="67.1994%" y="319.50"></text></g><g><title>asm_exc_page_fault (8 samples, 0.01%)</title><rect x="67.1514%" y="229" width="0.0133%" height="15" fill="rgb(248,8,30)"/><text x="67.4014%" y="239.50"></text></g><g><title>exc_page_fault (8 samples, 0.01%)</title><rect x="67.1514%" y="213" width="0.0133%" height="15" fill="rgb(237,120,30)"/><text x="67.4014%" y="223.50"></text></g><g><title>do_user_addr_fault (8 samples, 0.01%)</title><rect x="67.1514%" y="197" width="0.0133%" height="15" fill="rgb(221,146,34)"/><text x="67.4014%" y="207.50"></text></g><g><title>handle_mm_fault (8 samples, 0.01%)</title><rect x="67.1514%" y="181" width="0.0133%" height="15" fill="rgb(242,55,13)"/><text x="67.4014%" y="191.50"></text></g><g><title>do_syscall_64 (7 samples, 0.01%)</title><rect x="67.1647%" y="181" width="0.0116%" height="15" fill="rgb(242,112,31)"/><text x="67.4147%" y="191.50"></text></g><g><title>__x64_sys_mprotect (7 samples, 0.01%)</title><rect x="67.1647%" y="165" width="0.0116%" height="15" fill="rgb(249,192,27)"/><text x="67.4147%" y="175.50"></text></g><g><title>do_mprotect_pkey (7 samples, 0.01%)</title><rect x="67.1647%" y="149" width="0.0116%" height="15" fill="rgb(208,204,44)"/><text x="67.4147%" y="159.50"></text></g><g><title>mprotect_fixup (7 samples, 0.01%)</title><rect x="67.1647%" y="133" width="0.0116%" height="15" fill="rgb(208,93,54)"/><text x="67.4147%" y="143.50"></text></g><g><title>__GI___libc_malloc (72 samples, 0.12%)</title><rect x="67.0653%" y="277" width="0.1193%" height="15" fill="rgb(242,1,31)"/><text x="67.3153%" y="287.50"></text></g><g><title>_int_malloc (39 samples, 0.06%)</title><rect x="67.1200%" y="261" width="0.0646%" height="15" fill="rgb(241,83,25)"/><text x="67.3700%" y="271.50"></text></g><g><title>sysmalloc (20 samples, 0.03%)</title><rect x="67.1514%" y="245" width="0.0331%" height="15" fill="rgb(205,169,50)"/><text x="67.4014%" y="255.50"></text></g><g><title>grow_heap (12 samples, 0.02%)</title><rect x="67.1647%" y="229" width="0.0199%" height="15" fill="rgb(239,186,37)"/><text x="67.4147%" y="239.50"></text></g><g><title>__GI___mprotect (12 samples, 0.02%)</title><rect x="67.1647%" y="213" width="0.0199%" height="15" fill="rgb(205,221,10)"/><text x="67.4147%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.02%)</title><rect x="67.1647%" y="197" width="0.0199%" height="15" fill="rgb(218,196,15)"/><text x="67.4147%" y="207.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (68 samples, 0.11%)</title><rect x="67.2028%" y="261" width="0.1126%" height="15" fill="rgb(218,196,35)"/><text x="67.4528%" y="271.50"></text></g><g><title>ate::spec::SerializationFormat::serialize (182 samples, 0.30%)</title><rect x="67.0222%" y="309" width="0.3015%" height="15" fill="rgb(233,63,24)"/><text x="67.2722%" y="319.50"></text></g><g><title>bincode::serialize (164 samples, 0.27%)</title><rect x="67.0521%" y="293" width="0.2717%" height="15" fill="rgb(225,8,4)"/><text x="67.3021%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (83 samples, 0.14%)</title><rect x="67.1862%" y="277" width="0.1375%" height="15" fill="rgb(234,105,35)"/><text x="67.4362%" y="287.50"></text></g><g><title>ate::event::EventData::as_header_raw (287 samples, 0.48%)</title><rect x="66.9610%" y="325" width="0.4754%" height="15" fill="rgb(236,21,32)"/><text x="67.2110%" y="335.50"></text></g><g><title>blake3::hash (68 samples, 0.11%)</title><rect x="67.3237%" y="309" width="0.1126%" height="15" fill="rgb(228,109,6)"/><text x="67.5737%" y="319.50"></text></g><g><title>blake3::ChunkState::update (29 samples, 0.05%)</title><rect x="67.3883%" y="293" width="0.0480%" height="15" fill="rgb(229,215,31)"/><text x="67.6383%" y="303.50"></text></g><g><title>bytes::bytes::shared_clone (42 samples, 0.07%)</title><rect x="67.4364%" y="325" width="0.0696%" height="15" fill="rgb(221,52,54)"/><text x="67.6864%" y="335.50"></text></g><g><title>__memmove_avx_unaligned_erms (83 samples, 0.14%)</title><rect x="68.0211%" y="293" width="0.1375%" height="15" fill="rgb(252,129,43)"/><text x="68.2711%" y="303.50"></text></g><g><title>__GI_munmap (19 samples, 0.03%)</title><rect x="68.2165%" y="277" width="0.0315%" height="15" fill="rgb(248,183,27)"/><text x="68.4665%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (19 samples, 0.03%)</title><rect x="68.2165%" y="261" width="0.0315%" height="15" fill="rgb(250,0,22)"/><text x="68.4665%" y="271.50"></text></g><g><title>do_syscall_64 (19 samples, 0.03%)</title><rect x="68.2165%" y="245" width="0.0315%" height="15" fill="rgb(213,166,10)"/><text x="68.4665%" y="255.50"></text></g><g><title>__x64_sys_munmap (19 samples, 0.03%)</title><rect x="68.2165%" y="229" width="0.0315%" height="15" fill="rgb(207,163,36)"/><text x="68.4665%" y="239.50"></text></g><g><title>__vm_munmap (19 samples, 0.03%)</title><rect x="68.2165%" y="213" width="0.0315%" height="15" fill="rgb(208,122,22)"/><text x="68.4665%" y="223.50"></text></g><g><title>__do_munmap (19 samples, 0.03%)</title><rect x="68.2165%" y="197" width="0.0315%" height="15" fill="rgb(207,104,49)"/><text x="68.4665%" y="207.50"></text></g><g><title>unmap_region (19 samples, 0.03%)</title><rect x="68.2165%" y="181" width="0.0315%" height="15" fill="rgb(248,211,50)"/><text x="68.4665%" y="191.50"></text></g><g><title>unmap_vmas (18 samples, 0.03%)</title><rect x="68.2182%" y="165" width="0.0298%" height="15" fill="rgb(217,13,45)"/><text x="68.4682%" y="175.50"></text></g><g><title>unmap_page_range (18 samples, 0.03%)</title><rect x="68.2182%" y="149" width="0.0298%" height="15" fill="rgb(211,216,49)"/><text x="68.4682%" y="159.50"></text></g><g><title>tlb_flush_mmu (13 samples, 0.02%)</title><rect x="68.2265%" y="133" width="0.0215%" height="15" fill="rgb(221,58,53)"/><text x="68.4765%" y="143.50"></text></g><g><title>release_pages (11 samples, 0.02%)</title><rect x="68.2298%" y="117" width="0.0182%" height="15" fill="rgb(220,112,41)"/><text x="68.4798%" y="127.50"></text></g><g><title>__irqentry_text_end (21 samples, 0.03%)</title><rect x="68.3109%" y="261" width="0.0348%" height="15" fill="rgb(236,38,28)"/><text x="68.5609%" y="271.50"></text></g><g><title>get_page_from_freelist (22 samples, 0.04%)</title><rect x="68.3971%" y="149" width="0.0364%" height="15" fill="rgb(227,195,22)"/><text x="68.6471%" y="159.50"></text></g><g><title>prep_new_page (15 samples, 0.02%)</title><rect x="68.4087%" y="133" width="0.0248%" height="15" fill="rgb(214,55,33)"/><text x="68.6587%" y="143.50"></text></g><g><title>kernel_init_free_pages (15 samples, 0.02%)</title><rect x="68.4087%" y="117" width="0.0248%" height="15" fill="rgb(248,80,13)"/><text x="68.6587%" y="127.50"></text></g><g><title>clear_page_erms (15 samples, 0.02%)</title><rect x="68.4087%" y="101" width="0.0248%" height="15" fill="rgb(238,52,6)"/><text x="68.6587%" y="111.50"></text></g><g><title>mem_cgroup_iter (10 samples, 0.02%)</title><rect x="68.4335%" y="101" width="0.0166%" height="15" fill="rgb(224,198,47)"/><text x="68.6835%" y="111.50"></text></g><g><title>page_referenced (7 samples, 0.01%)</title><rect x="68.4915%" y="53" width="0.0116%" height="15" fill="rgb(233,171,20)"/><text x="68.7415%" y="63.50"></text></g><g><title>pageout (8 samples, 0.01%)</title><rect x="68.5031%" y="53" width="0.0133%" height="15" fill="rgb(241,30,25)"/><text x="68.7531%" y="63.50"></text></g><g><title>shrink_lruvec (43 samples, 0.07%)</title><rect x="68.4501%" y="101" width="0.0712%" height="15" fill="rgb(207,171,38)"/><text x="68.7001%" y="111.50"></text></g><g><title>shrink_inactive_list (33 samples, 0.05%)</title><rect x="68.4666%" y="85" width="0.0547%" height="15" fill="rgb(234,70,1)"/><text x="68.7166%" y="95.50"></text></g><g><title>shrink_page_list (28 samples, 0.05%)</title><rect x="68.4749%" y="69" width="0.0464%" height="15" fill="rgb(232,178,18)"/><text x="68.7249%" y="79.50"></text></g><g><title>count_shadow_nodes (9 samples, 0.01%)</title><rect x="68.5246%" y="69" width="0.0149%" height="15" fill="rgb(241,78,40)"/><text x="68.7746%" y="79.50"></text></g><g><title>do_shrink_slab (12 samples, 0.02%)</title><rect x="68.5230%" y="85" width="0.0199%" height="15" fill="rgb(222,35,25)"/><text x="68.7730%" y="95.50"></text></g><g><title>try_to_free_pages (69 samples, 0.11%)</title><rect x="68.4335%" y="149" width="0.1143%" height="15" fill="rgb(207,92,16)"/><text x="68.6835%" y="159.50"></text></g><g><title>do_try_to_free_pages (69 samples, 0.11%)</title><rect x="68.4335%" y="133" width="0.1143%" height="15" fill="rgb(216,59,51)"/><text x="68.6835%" y="143.50"></text></g><g><title>shrink_node (69 samples, 0.11%)</title><rect x="68.4335%" y="117" width="0.1143%" height="15" fill="rgb(213,80,28)"/><text x="68.6835%" y="127.50"></text></g><g><title>shrink_slab (16 samples, 0.03%)</title><rect x="68.5213%" y="101" width="0.0265%" height="15" fill="rgb(220,93,7)"/><text x="68.7713%" y="111.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (98 samples, 0.16%)</title><rect x="68.3938%" y="165" width="0.1623%" height="15" fill="rgb(225,24,44)"/><text x="68.6438%" y="175.50"></text></g><g><title>__alloc_pages_nodemask (128 samples, 0.21%)</title><rect x="68.3921%" y="181" width="0.2120%" height="15" fill="rgb(243,74,40)"/><text x="68.6421%" y="191.50"></text></g><g><title>get_page_from_freelist (27 samples, 0.04%)</title><rect x="68.5594%" y="165" width="0.0447%" height="15" fill="rgb(228,39,7)"/><text x="68.8094%" y="175.50"></text></g><g><title>prep_new_page (15 samples, 0.02%)</title><rect x="68.5793%" y="149" width="0.0248%" height="15" fill="rgb(227,79,8)"/><text x="68.8293%" y="159.50"></text></g><g><title>kernel_init_free_pages (14 samples, 0.02%)</title><rect x="68.5809%" y="133" width="0.0232%" height="15" fill="rgb(236,58,11)"/><text x="68.8309%" y="143.50"></text></g><g><title>clear_page_erms (14 samples, 0.02%)</title><rect x="68.5809%" y="117" width="0.0232%" height="15" fill="rgb(249,63,35)"/><text x="68.8309%" y="127.50"></text></g><g><title>alloc_pages_vma (131 samples, 0.22%)</title><rect x="68.3888%" y="197" width="0.2170%" height="15" fill="rgb(252,114,16)"/><text x="68.6388%" y="207.50"></text></g><g><title>__pagevec_lru_add_fn (11 samples, 0.02%)</title><rect x="68.6190%" y="165" width="0.0182%" height="15" fill="rgb(254,151,24)"/><text x="68.8690%" y="175.50"></text></g><g><title>lru_cache_add (19 samples, 0.03%)</title><rect x="68.6124%" y="197" width="0.0315%" height="15" fill="rgb(253,54,39)"/><text x="68.8624%" y="207.50"></text></g><g><title>pagevec_lru_move_fn (16 samples, 0.03%)</title><rect x="68.6174%" y="181" width="0.0265%" height="15" fill="rgb(243,25,45)"/><text x="68.8674%" y="191.50"></text></g><g><title>mem_cgroup_charge (19 samples, 0.03%)</title><rect x="68.6439%" y="197" width="0.0315%" height="15" fill="rgb(234,134,9)"/><text x="68.8939%" y="207.50"></text></g><g><title>try_charge (7 samples, 0.01%)</title><rect x="68.6638%" y="181" width="0.0116%" height="15" fill="rgb(227,166,31)"/><text x="68.9138%" y="191.50"></text></g><g><title>handle_mm_fault (192 samples, 0.32%)</title><rect x="68.3639%" y="213" width="0.3180%" height="15" fill="rgb(245,143,41)"/><text x="68.6139%" y="223.50"></text></g><g><title>exc_page_fault (200 samples, 0.33%)</title><rect x="68.3524%" y="245" width="0.3313%" height="15" fill="rgb(238,181,32)"/><text x="68.6024%" y="255.50"></text></g><g><title>do_user_addr_fault (199 samples, 0.33%)</title><rect x="68.3540%" y="229" width="0.3296%" height="15" fill="rgb(224,113,18)"/><text x="68.6040%" y="239.50"></text></g><g><title>asm_exc_page_fault (234 samples, 0.39%)</title><rect x="68.3474%" y="261" width="0.3876%" height="15" fill="rgb(240,229,28)"/><text x="68.5974%" y="271.50"></text></g><g><title>irqentry_exit_to_user_mode (31 samples, 0.05%)</title><rect x="68.6836%" y="245" width="0.0513%" height="15" fill="rgb(250,185,3)"/><text x="68.9336%" y="255.50"></text></g><g><title>error_entry (31 samples, 0.05%)</title><rect x="68.7366%" y="261" width="0.0513%" height="15" fill="rgb(212,59,25)"/><text x="68.9866%" y="271.50"></text></g><g><title>sync_regs (11 samples, 0.02%)</title><rect x="68.7698%" y="245" width="0.0182%" height="15" fill="rgb(221,87,20)"/><text x="69.0198%" y="255.50"></text></g><g><title>__memmove_avx_unaligned_erms (327 samples, 0.54%)</title><rect x="68.2497%" y="277" width="0.5417%" height="15" fill="rgb(213,74,28)"/><text x="68.4997%" y="287.50"></text></g><g><title>exc_page_fault (16 samples, 0.03%)</title><rect x="68.7946%" y="261" width="0.0265%" height="15" fill="rgb(224,132,34)"/><text x="69.0446%" y="271.50"></text></g><g><title>do_user_addr_fault (16 samples, 0.03%)</title><rect x="68.7946%" y="245" width="0.0265%" height="15" fill="rgb(222,101,24)"/><text x="69.0446%" y="255.50"></text></g><g><title>handle_mm_fault (15 samples, 0.02%)</title><rect x="68.7963%" y="229" width="0.0248%" height="15" fill="rgb(254,142,4)"/><text x="69.0463%" y="239.50"></text></g><g><title>asm_exc_page_fault (18 samples, 0.03%)</title><rect x="68.7946%" y="277" width="0.0298%" height="15" fill="rgb(230,229,49)"/><text x="69.0446%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (29 samples, 0.05%)</title><rect x="68.8244%" y="277" width="0.0480%" height="15" fill="rgb(238,70,47)"/><text x="69.0744%" y="287.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,208 samples, 3.66%)</title><rect x="65.2201%" y="341" width="3.6574%" height="15" fill="rgb(231,160,17)"/><text x="65.4701%" y="351.50">&lt;cor..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (826 samples, 1.37%)</title><rect x="67.5092%" y="325" width="1.3682%" height="15" fill="rgb(218,68,53)"/><text x="67.7592%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (604 samples, 1.00%)</title><rect x="67.8770%" y="309" width="1.0005%" height="15" fill="rgb(236,111,10)"/><text x="68.1270%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (433 samples, 0.72%)</title><rect x="68.1602%" y="293" width="0.7172%" height="15" fill="rgb(224,34,41)"/><text x="68.4102%" y="303.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,220 samples, 3.68%)</title><rect x="65.2018%" y="357" width="3.6773%" height="15" fill="rgb(241,118,19)"/><text x="65.4518%" y="367.50">&lt;cor..</text></g><g><title>malloc_consolidate (13 samples, 0.02%)</title><rect x="68.9288%" y="341" width="0.0215%" height="15" fill="rgb(238,129,25)"/><text x="69.1788%" y="351.50"></text></g><g><title>_int_free (40 samples, 0.07%)</title><rect x="68.8857%" y="357" width="0.0663%" height="15" fill="rgb(238,22,31)"/><text x="69.1357%" y="367.50"></text></g><g><title>alloc_pages_vma (8 samples, 0.01%)</title><rect x="68.9669%" y="213" width="0.0133%" height="15" fill="rgb(222,174,48)"/><text x="69.2169%" y="223.50"></text></g><g><title>__alloc_pages_nodemask (8 samples, 0.01%)</title><rect x="68.9669%" y="197" width="0.0133%" height="15" fill="rgb(206,152,40)"/><text x="69.2169%" y="207.50"></text></g><g><title>get_page_from_freelist (8 samples, 0.01%)</title><rect x="68.9669%" y="181" width="0.0133%" height="15" fill="rgb(218,99,54)"/><text x="69.2169%" y="191.50"></text></g><g><title>exc_page_fault (10 samples, 0.02%)</title><rect x="68.9669%" y="261" width="0.0166%" height="15" fill="rgb(220,174,26)"/><text x="69.2169%" y="271.50"></text></g><g><title>do_user_addr_fault (10 samples, 0.02%)</title><rect x="68.9669%" y="245" width="0.0166%" height="15" fill="rgb(245,116,9)"/><text x="69.2169%" y="255.50"></text></g><g><title>handle_mm_fault (10 samples, 0.02%)</title><rect x="68.9669%" y="229" width="0.0166%" height="15" fill="rgb(209,72,35)"/><text x="69.2169%" y="239.50"></text></g><g><title>asm_exc_page_fault (14 samples, 0.02%)</title><rect x="68.9669%" y="277" width="0.0232%" height="15" fill="rgb(226,126,21)"/><text x="69.2169%" y="287.50"></text></g><g><title>__memmove_avx_unaligned_erms (27 samples, 0.04%)</title><rect x="68.9520%" y="293" width="0.0447%" height="15" fill="rgb(227,192,1)"/><text x="69.2020%" y="303.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.01%)</title><rect x="69.0033%" y="261" width="0.0116%" height="15" fill="rgb(237,180,29)"/><text x="69.2533%" y="271.50"></text></g><g><title>sysmalloc (17 samples, 0.03%)</title><rect x="68.9984%" y="277" width="0.0282%" height="15" fill="rgb(230,197,35)"/><text x="69.2484%" y="287.50"></text></g><g><title>grow_heap (7 samples, 0.01%)</title><rect x="69.0149%" y="261" width="0.0116%" height="15" fill="rgb(246,193,31)"/><text x="69.2649%" y="271.50"></text></g><g><title>__GI___mprotect (7 samples, 0.01%)</title><rect x="69.0149%" y="245" width="0.0116%" height="15" fill="rgb(241,36,4)"/><text x="69.2649%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="69.0149%" y="229" width="0.0116%" height="15" fill="rgb(241,130,17)"/><text x="69.2649%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (46 samples, 0.08%)</title><rect x="68.9520%" y="357" width="0.0762%" height="15" fill="rgb(206,137,32)"/><text x="69.2020%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (46 samples, 0.08%)</title><rect x="68.9520%" y="341" width="0.0762%" height="15" fill="rgb(237,228,51)"/><text x="69.2020%" y="351.50"></text></g><g><title>__GI___libc_realloc (46 samples, 0.08%)</title><rect x="68.9520%" y="325" width="0.0762%" height="15" fill="rgb(243,6,42)"/><text x="69.2020%" y="335.50"></text></g><g><title>_int_realloc (46 samples, 0.08%)</title><rect x="68.9520%" y="309" width="0.0762%" height="15" fill="rgb(251,74,28)"/><text x="69.2020%" y="319.50"></text></g><g><title>_int_malloc (18 samples, 0.03%)</title><rect x="68.9984%" y="293" width="0.0298%" height="15" fill="rgb(218,20,49)"/><text x="69.2484%" y="303.50"></text></g><g><title>__GI___libc_free (10 samples, 0.02%)</title><rect x="69.2452%" y="325" width="0.0166%" height="15" fill="rgb(238,28,14)"/><text x="69.4952%" y="335.50"></text></g><g><title>_int_free (72 samples, 0.12%)</title><rect x="69.2717%" y="325" width="0.1193%" height="15" fill="rgb(229,40,46)"/><text x="69.5217%" y="335.50"></text></g><g><title>do_syscall_64 (7 samples, 0.01%)</title><rect x="69.5516%" y="261" width="0.0116%" height="15" fill="rgb(244,195,20)"/><text x="69.8016%" y="271.50"></text></g><g><title>__x64_sys_futex (7 samples, 0.01%)</title><rect x="69.5516%" y="245" width="0.0116%" height="15" fill="rgb(253,56,35)"/><text x="69.8016%" y="255.50"></text></g><g><title>do_futex (7 samples, 0.01%)</title><rect x="69.5516%" y="229" width="0.0116%" height="15" fill="rgb(210,149,44)"/><text x="69.8016%" y="239.50"></text></g><g><title>futex_wait (7 samples, 0.01%)</title><rect x="69.5516%" y="213" width="0.0116%" height="15" fill="rgb(240,135,12)"/><text x="69.8016%" y="223.50"></text></g><g><title>__lll_lock_wait_private (14 samples, 0.02%)</title><rect x="69.5450%" y="293" width="0.0232%" height="15" fill="rgb(251,24,50)"/><text x="69.7950%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 0.02%)</title><rect x="69.5516%" y="277" width="0.0166%" height="15" fill="rgb(243,200,47)"/><text x="69.8016%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.02%)</title><rect x="69.5748%" y="293" width="0.0182%" height="15" fill="rgb(224,166,26)"/><text x="69.8248%" y="303.50"></text></g><g><title>syscall_exit_to_user_mode (7 samples, 0.01%)</title><rect x="69.5814%" y="277" width="0.0116%" height="15" fill="rgb(233,0,47)"/><text x="69.8314%" y="287.50"></text></g><g><title>malloc_consolidate (434 samples, 0.72%)</title><rect x="69.5930%" y="293" width="0.7189%" height="15" fill="rgb(253,80,5)"/><text x="69.8430%" y="303.50"></text></g><g><title>unlink_chunk (213 samples, 0.35%)</title><rect x="69.9591%" y="277" width="0.3528%" height="15" fill="rgb(214,133,25)"/><text x="70.2091%" y="287.50"></text></g><g><title>alloc::collections::btree::navigate::next_kv_unchecked_dealloc (608 samples, 1.01%)</title><rect x="69.3909%" y="325" width="1.0071%" height="15" fill="rgb(209,27,14)"/><text x="69.6409%" y="335.50"></text></g><g><title>_int_free (572 samples, 0.95%)</title><rect x="69.4506%" y="309" width="0.9475%" height="15" fill="rgb(219,102,51)"/><text x="69.7006%" y="319.50"></text></g><g><title>unlink_chunk (50 samples, 0.08%)</title><rect x="70.3152%" y="293" width="0.0828%" height="15" fill="rgb(237,18,16)"/><text x="70.5652%" y="303.50"></text></g><g><title>__GI___libc_free (150 samples, 0.25%)</title><rect x="70.5438%" y="309" width="0.2485%" height="15" fill="rgb(241,85,17)"/><text x="70.7938%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1,180 samples, 1.95%)</title><rect x="69.0282%" y="341" width="1.9546%" height="15" fill="rgb(236,90,42)"/><text x="69.2782%" y="351.50">&lt;..</text></g><g><title>bytes::bytes::shared_drop (353 samples, 0.58%)</title><rect x="70.3980%" y="325" width="0.5847%" height="15" fill="rgb(249,57,21)"/><text x="70.6480%" y="335.50"></text></g><g><title>_int_free (113 samples, 0.19%)</title><rect x="70.7956%" y="309" width="0.1872%" height="15" fill="rgb(243,12,36)"/><text x="71.0456%" y="319.50"></text></g><g><title>__GI_munmap (18 samples, 0.03%)</title><rect x="70.9828%" y="341" width="0.0298%" height="15" fill="rgb(253,128,47)"/><text x="71.2328%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (18 samples, 0.03%)</title><rect x="70.9828%" y="325" width="0.0298%" height="15" fill="rgb(207,33,20)"/><text x="71.2328%" y="335.50"></text></g><g><title>do_syscall_64 (18 samples, 0.03%)</title><rect x="70.9828%" y="309" width="0.0298%" height="15" fill="rgb(233,215,35)"/><text x="71.2328%" y="319.50"></text></g><g><title>__x64_sys_munmap (18 samples, 0.03%)</title><rect x="70.9828%" y="293" width="0.0298%" height="15" fill="rgb(249,188,52)"/><text x="71.2328%" y="303.50"></text></g><g><title>__vm_munmap (18 samples, 0.03%)</title><rect x="70.9828%" y="277" width="0.0298%" height="15" fill="rgb(225,12,32)"/><text x="71.2328%" y="287.50"></text></g><g><title>__do_munmap (18 samples, 0.03%)</title><rect x="70.9828%" y="261" width="0.0298%" height="15" fill="rgb(247,98,14)"/><text x="71.2328%" y="271.50"></text></g><g><title>unmap_region (18 samples, 0.03%)</title><rect x="70.9828%" y="245" width="0.0298%" height="15" fill="rgb(247,219,48)"/><text x="71.2328%" y="255.50"></text></g><g><title>unmap_vmas (15 samples, 0.02%)</title><rect x="70.9877%" y="229" width="0.0248%" height="15" fill="rgb(253,60,48)"/><text x="71.2377%" y="239.50"></text></g><g><title>unmap_page_range (15 samples, 0.02%)</title><rect x="70.9877%" y="213" width="0.0248%" height="15" fill="rgb(245,15,52)"/><text x="71.2377%" y="223.50"></text></g><g><title>tlb_flush_mmu (8 samples, 0.01%)</title><rect x="70.9993%" y="197" width="0.0133%" height="15" fill="rgb(220,133,28)"/><text x="71.2493%" y="207.50"></text></g><g><title>release_pages (8 samples, 0.01%)</title><rect x="70.9993%" y="181" width="0.0133%" height="15" fill="rgb(217,180,4)"/><text x="71.2493%" y="191.50"></text></g><g><title>free_unref_page_list (8 samples, 0.01%)</title><rect x="70.9993%" y="165" width="0.0133%" height="15" fill="rgb(251,24,1)"/><text x="71.2493%" y="175.50"></text></g><g><title>free_pcppages_bulk (7 samples, 0.01%)</title><rect x="71.0010%" y="149" width="0.0116%" height="15" fill="rgb(212,185,49)"/><text x="71.2510%" y="159.50"></text></g><g><title>_int_free (334 samples, 0.55%)</title><rect x="71.0126%" y="341" width="0.5532%" height="15" fill="rgb(215,175,22)"/><text x="71.2626%" y="351.50"></text></g><g><title>malloc_consolidate (334 samples, 0.55%)</title><rect x="71.0126%" y="325" width="0.5532%" height="15" fill="rgb(250,205,14)"/><text x="71.2626%" y="335.50"></text></g><g><title>unlink_chunk (155 samples, 0.26%)</title><rect x="71.3091%" y="309" width="0.2567%" height="15" fill="rgb(225,211,22)"/><text x="71.5591%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.05%)</title><rect x="71.5658%" y="325" width="0.0530%" height="15" fill="rgb(251,179,42)"/><text x="71.8158%" y="335.50"></text></g><g><title>page_remove_rmap (8 samples, 0.01%)</title><rect x="71.6304%" y="181" width="0.0133%" height="15" fill="rgb(208,216,51)"/><text x="71.8804%" y="191.50"></text></g><g><title>__GI_munmap (31 samples, 0.05%)</title><rect x="71.6188%" y="325" width="0.0513%" height="15" fill="rgb(235,36,11)"/><text x="71.8688%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (31 samples, 0.05%)</title><rect x="71.6188%" y="309" width="0.0513%" height="15" fill="rgb(213,189,28)"/><text x="71.8688%" y="319.50"></text></g><g><title>do_syscall_64 (31 samples, 0.05%)</title><rect x="71.6188%" y="293" width="0.0513%" height="15" fill="rgb(227,203,42)"/><text x="71.8688%" y="303.50"></text></g><g><title>__x64_sys_munmap (31 samples, 0.05%)</title><rect x="71.6188%" y="277" width="0.0513%" height="15" fill="rgb(244,72,36)"/><text x="71.8688%" y="287.50"></text></g><g><title>__vm_munmap (31 samples, 0.05%)</title><rect x="71.6188%" y="261" width="0.0513%" height="15" fill="rgb(213,53,17)"/><text x="71.8688%" y="271.50"></text></g><g><title>__do_munmap (31 samples, 0.05%)</title><rect x="71.6188%" y="245" width="0.0513%" height="15" fill="rgb(207,167,3)"/><text x="71.8688%" y="255.50"></text></g><g><title>unmap_region (31 samples, 0.05%)</title><rect x="71.6188%" y="229" width="0.0513%" height="15" fill="rgb(216,98,30)"/><text x="71.8688%" y="239.50"></text></g><g><title>unmap_vmas (28 samples, 0.05%)</title><rect x="71.6238%" y="213" width="0.0464%" height="15" fill="rgb(236,123,15)"/><text x="71.8738%" y="223.50"></text></g><g><title>unmap_page_range (28 samples, 0.05%)</title><rect x="71.6238%" y="197" width="0.0464%" height="15" fill="rgb(248,81,50)"/><text x="71.8738%" y="207.50"></text></g><g><title>tlb_flush_mmu (16 samples, 0.03%)</title><rect x="71.6437%" y="181" width="0.0265%" height="15" fill="rgb(214,120,4)"/><text x="71.8937%" y="191.50"></text></g><g><title>release_pages (13 samples, 0.02%)</title><rect x="71.6486%" y="165" width="0.0215%" height="15" fill="rgb(208,179,34)"/><text x="71.8986%" y="175.50"></text></g><g><title>__GI___libc_free (133 samples, 0.22%)</title><rect x="71.7315%" y="293" width="0.2203%" height="15" fill="rgb(227,140,7)"/><text x="71.9815%" y="303.50"></text></g><g><title>malloc_consolidate (61 samples, 0.10%)</title><rect x="72.1141%" y="277" width="0.1010%" height="15" fill="rgb(214,22,6)"/><text x="72.3641%" y="287.50"></text></g><g><title>unlink_chunk (17 samples, 0.03%)</title><rect x="72.1870%" y="261" width="0.0282%" height="15" fill="rgb(207,137,27)"/><text x="72.4370%" y="271.50"></text></g><g><title>_int_free (183 samples, 0.30%)</title><rect x="71.9600%" y="293" width="0.3031%" height="15" fill="rgb(210,8,46)"/><text x="72.2100%" y="303.50"></text></g><g><title>unlink_chunk (29 samples, 0.05%)</title><rect x="72.2151%" y="277" width="0.0480%" height="15" fill="rgb(240,16,54)"/><text x="72.4651%" y="287.50"></text></g><g><title>__GI___libc_free (169 samples, 0.28%)</title><rect x="72.4851%" y="277" width="0.2799%" height="15" fill="rgb(211,209,29)"/><text x="72.7351%" y="287.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 0.02%)</title><rect x="73.0930%" y="245" width="0.0215%" height="15" fill="rgb(226,228,24)"/><text x="73.3430%" y="255.50"></text></g><g><title>dequeue_task_fair (10 samples, 0.02%)</title><rect x="73.1460%" y="117" width="0.0166%" height="15" fill="rgb(222,84,9)"/><text x="73.3960%" y="127.50"></text></g><g><title>dequeue_entity (9 samples, 0.01%)</title><rect x="73.1477%" y="101" width="0.0149%" height="15" fill="rgb(234,203,30)"/><text x="73.3977%" y="111.50"></text></g><g><title>psi_task_change (16 samples, 0.03%)</title><rect x="73.1742%" y="117" width="0.0265%" height="15" fill="rgb(238,109,14)"/><text x="73.4242%" y="127.50"></text></g><g><title>psi_group_change (9 samples, 0.01%)</title><rect x="73.1858%" y="101" width="0.0149%" height="15" fill="rgb(233,206,34)"/><text x="73.4358%" y="111.50"></text></g><g><title>futex_wait_queue_me (48 samples, 0.08%)</title><rect x="73.1311%" y="165" width="0.0795%" height="15" fill="rgb(220,167,47)"/><text x="73.3811%" y="175.50"></text></g><g><title>schedule (47 samples, 0.08%)</title><rect x="73.1328%" y="149" width="0.0779%" height="15" fill="rgb(238,105,10)"/><text x="73.3828%" y="159.50"></text></g><g><title>__schedule (44 samples, 0.07%)</title><rect x="73.1378%" y="133" width="0.0729%" height="15" fill="rgb(213,227,17)"/><text x="73.3878%" y="143.50"></text></g><g><title>__get_user_nocheck_4 (9 samples, 0.01%)</title><rect x="73.2156%" y="149" width="0.0149%" height="15" fill="rgb(217,132,38)"/><text x="73.4656%" y="159.50"></text></g><g><title>__x64_sys_futex (73 samples, 0.12%)</title><rect x="73.1162%" y="213" width="0.1209%" height="15" fill="rgb(242,146,4)"/><text x="73.3662%" y="223.50"></text></g><g><title>do_futex (71 samples, 0.12%)</title><rect x="73.1195%" y="197" width="0.1176%" height="15" fill="rgb(212,61,9)"/><text x="73.3695%" y="207.50"></text></g><g><title>futex_wait (69 samples, 0.11%)</title><rect x="73.1229%" y="181" width="0.1143%" height="15" fill="rgb(247,126,22)"/><text x="73.3729%" y="191.50"></text></g><g><title>futex_wait_setup (16 samples, 0.03%)</title><rect x="73.2106%" y="165" width="0.0265%" height="15" fill="rgb(220,196,2)"/><text x="73.4606%" y="175.50"></text></g><g><title>do_syscall_64 (74 samples, 0.12%)</title><rect x="73.1162%" y="229" width="0.1226%" height="15" fill="rgb(208,46,4)"/><text x="73.3662%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (98 samples, 0.16%)</title><rect x="73.1146%" y="245" width="0.1623%" height="15" fill="rgb(252,104,46)"/><text x="73.3646%" y="255.50"></text></g><g><title>syscall_exit_to_user_mode (23 samples, 0.04%)</title><rect x="73.2388%" y="229" width="0.0381%" height="15" fill="rgb(237,152,48)"/><text x="73.4888%" y="239.50"></text></g><g><title>__lll_lock_wait_private (129 samples, 0.21%)</title><rect x="73.0798%" y="261" width="0.2137%" height="15" fill="rgb(221,59,37)"/><text x="73.3298%" y="271.50"></text></g><g><title>syscall_return_via_sysret (10 samples, 0.02%)</title><rect x="73.2769%" y="245" width="0.0166%" height="15" fill="rgb(209,202,51)"/><text x="73.5269%" y="255.50"></text></g><g><title>entry_SYSCALL_64 (19 samples, 0.03%)</title><rect x="73.2951%" y="261" width="0.0315%" height="15" fill="rgb(228,81,30)"/><text x="73.5451%" y="271.50"></text></g><g><title>do_syscall_64 (23 samples, 0.04%)</title><rect x="73.3266%" y="245" width="0.0381%" height="15" fill="rgb(227,42,39)"/><text x="73.5766%" y="255.50"></text></g><g><title>__x64_sys_futex (21 samples, 0.03%)</title><rect x="73.3299%" y="229" width="0.0348%" height="15" fill="rgb(221,26,2)"/><text x="73.5799%" y="239.50"></text></g><g><title>do_futex (20 samples, 0.03%)</title><rect x="73.3316%" y="213" width="0.0331%" height="15" fill="rgb(254,61,31)"/><text x="73.5816%" y="223.50"></text></g><g><title>futex_wake (19 samples, 0.03%)</title><rect x="73.3332%" y="197" width="0.0315%" height="15" fill="rgb(222,173,38)"/><text x="73.5832%" y="207.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (65 samples, 0.11%)</title><rect x="73.3266%" y="261" width="0.1077%" height="15" fill="rgb(218,50,12)"/><text x="73.5766%" y="271.50"></text></g><g><title>syscall_exit_to_user_mode (42 samples, 0.07%)</title><rect x="73.3647%" y="245" width="0.0696%" height="15" fill="rgb(223,88,40)"/><text x="73.6147%" y="255.50"></text></g><g><title>syscall_return_via_sysret (17 samples, 0.03%)</title><rect x="73.4343%" y="261" width="0.0282%" height="15" fill="rgb(237,54,19)"/><text x="73.6843%" y="271.50"></text></g><g><title>bytes::bytes::shared_drop (835 samples, 1.38%)</title><rect x="72.2665%" y="293" width="1.3831%" height="15" fill="rgb(251,129,25)"/><text x="72.5165%" y="303.50"></text></g><g><title>_int_free (532 samples, 0.88%)</title><rect x="72.7684%" y="277" width="0.8812%" height="15" fill="rgb(238,97,19)"/><text x="73.0184%" y="287.50"></text></g><g><title>unlink_chunk (113 samples, 0.19%)</title><rect x="73.4624%" y="261" width="0.1872%" height="15" fill="rgb(240,169,18)"/><text x="73.7124%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,240 samples, 2.05%)</title><rect x="71.6702%" y="309" width="2.0540%" height="15" fill="rgb(230,187,49)"/><text x="71.9202%" y="319.50">&lt;..</text></g><g><title>core::ptr::drop_in_place (45 samples, 0.07%)</title><rect x="73.6496%" y="293" width="0.0745%" height="15" fill="rgb(209,44,26)"/><text x="73.8996%" y="303.50"></text></g><g><title>page_remove_rmap (7 samples, 0.01%)</title><rect x="73.7275%" y="165" width="0.0116%" height="15" fill="rgb(244,0,6)"/><text x="73.9775%" y="175.50"></text></g><g><title>free_unref_page_list (8 samples, 0.01%)</title><rect x="73.7556%" y="133" width="0.0133%" height="15" fill="rgb(248,18,21)"/><text x="74.0056%" y="143.50"></text></g><g><title>free_pcppages_bulk (7 samples, 0.01%)</title><rect x="73.7573%" y="117" width="0.0116%" height="15" fill="rgb(245,180,19)"/><text x="74.0073%" y="127.50"></text></g><g><title>__GI_munmap (30 samples, 0.05%)</title><rect x="73.7241%" y="309" width="0.0497%" height="15" fill="rgb(252,118,36)"/><text x="73.9741%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 0.05%)</title><rect x="73.7241%" y="293" width="0.0497%" height="15" fill="rgb(210,224,19)"/><text x="73.9741%" y="303.50"></text></g><g><title>do_syscall_64 (30 samples, 0.05%)</title><rect x="73.7241%" y="277" width="0.0497%" height="15" fill="rgb(218,30,24)"/><text x="73.9741%" y="287.50"></text></g><g><title>__x64_sys_munmap (30 samples, 0.05%)</title><rect x="73.7241%" y="261" width="0.0497%" height="15" fill="rgb(219,75,50)"/><text x="73.9741%" y="271.50"></text></g><g><title>__vm_munmap (30 samples, 0.05%)</title><rect x="73.7241%" y="245" width="0.0497%" height="15" fill="rgb(234,72,50)"/><text x="73.9741%" y="255.50"></text></g><g><title>__do_munmap (30 samples, 0.05%)</title><rect x="73.7241%" y="229" width="0.0497%" height="15" fill="rgb(219,100,48)"/><text x="73.9741%" y="239.50"></text></g><g><title>unmap_region (30 samples, 0.05%)</title><rect x="73.7241%" y="213" width="0.0497%" height="15" fill="rgb(253,5,41)"/><text x="73.9741%" y="223.50"></text></g><g><title>unmap_vmas (30 samples, 0.05%)</title><rect x="73.7241%" y="197" width="0.0497%" height="15" fill="rgb(247,181,11)"/><text x="73.9741%" y="207.50"></text></g><g><title>unmap_page_range (30 samples, 0.05%)</title><rect x="73.7241%" y="181" width="0.0497%" height="15" fill="rgb(222,223,25)"/><text x="73.9741%" y="191.50"></text></g><g><title>tlb_flush_mmu (21 samples, 0.03%)</title><rect x="73.7390%" y="165" width="0.0348%" height="15" fill="rgb(214,198,28)"/><text x="73.9890%" y="175.50"></text></g><g><title>release_pages (19 samples, 0.03%)</title><rect x="73.7424%" y="149" width="0.0315%" height="15" fill="rgb(230,46,43)"/><text x="73.9924%" y="159.50"></text></g><g><title>free_unref_page_list (7 samples, 0.01%)</title><rect x="73.7788%" y="69" width="0.0116%" height="15" fill="rgb(233,65,53)"/><text x="74.0288%" y="79.50"></text></g><g><title>__pagevec_release (13 samples, 0.02%)</title><rect x="73.7738%" y="101" width="0.0215%" height="15" fill="rgb(221,121,27)"/><text x="74.0238%" y="111.50"></text></g><g><title>release_pages (13 samples, 0.02%)</title><rect x="73.7738%" y="85" width="0.0215%" height="15" fill="rgb(247,70,47)"/><text x="74.0238%" y="95.50"></text></g><g><title>delete_from_page_cache_batch (11 samples, 0.02%)</title><rect x="73.7954%" y="101" width="0.0182%" height="15" fill="rgb(228,85,35)"/><text x="74.0454%" y="111.50"></text></g><g><title>xas_store (9 samples, 0.01%)</title><rect x="73.7987%" y="85" width="0.0149%" height="15" fill="rgb(209,50,18)"/><text x="74.0487%" y="95.50"></text></g><g><title>xas_load (9 samples, 0.01%)</title><rect x="73.8302%" y="85" width="0.0149%" height="15" fill="rgb(250,19,35)"/><text x="74.0802%" y="95.50"></text></g><g><title>truncate_exceptional_pvec_entries.part.0 (27 samples, 0.04%)</title><rect x="73.8219%" y="101" width="0.0447%" height="15" fill="rgb(253,107,29)"/><text x="74.0719%" y="111.50"></text></g><g><title>xas_store (13 samples, 0.02%)</title><rect x="73.8451%" y="85" width="0.0215%" height="15" fill="rgb(252,179,29)"/><text x="74.0951%" y="95.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2,922 samples, 4.84%)</title><rect x="69.0282%" y="357" width="4.8401%" height="15" fill="rgb(238,194,6)"/><text x="69.2782%" y="367.50">alloc:..</text></g><g><title>core::ptr::drop_in_place (1,390 samples, 2.30%)</title><rect x="71.5658%" y="341" width="2.3024%" height="15" fill="rgb(238,164,29)"/><text x="71.8158%" y="351.50">c..</text></g><g><title>core::ptr::drop_in_place (1,327 samples, 2.20%)</title><rect x="71.6702%" y="325" width="2.1981%" height="15" fill="rgb(224,25,9)"/><text x="71.9202%" y="335.50">c..</text></g><g><title>core::ptr::drop_in_place (57 samples, 0.09%)</title><rect x="73.7738%" y="309" width="0.0944%" height="15" fill="rgb(244,153,23)"/><text x="74.0238%" y="319.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (57 samples, 0.09%)</title><rect x="73.7738%" y="293" width="0.0944%" height="15" fill="rgb(212,203,14)"/><text x="74.0238%" y="303.50"></text></g><g><title>__close (57 samples, 0.09%)</title><rect x="73.7738%" y="277" width="0.0944%" height="15" fill="rgb(220,164,20)"/><text x="74.0238%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (57 samples, 0.09%)</title><rect x="73.7738%" y="261" width="0.0944%" height="15" fill="rgb(222,203,48)"/><text x="74.0238%" y="271.50"></text></g><g><title>syscall_exit_to_user_mode (57 samples, 0.09%)</title><rect x="73.7738%" y="245" width="0.0944%" height="15" fill="rgb(215,159,22)"/><text x="74.0238%" y="255.50"></text></g><g><title>exit_to_user_mode_prepare (57 samples, 0.09%)</title><rect x="73.7738%" y="229" width="0.0944%" height="15" fill="rgb(216,183,47)"/><text x="74.0238%" y="239.50"></text></g><g><title>task_work_run (57 samples, 0.09%)</title><rect x="73.7738%" y="213" width="0.0944%" height="15" fill="rgb(229,195,25)"/><text x="74.0238%" y="223.50"></text></g><g><title>__fput (57 samples, 0.09%)</title><rect x="73.7738%" y="197" width="0.0944%" height="15" fill="rgb(224,132,51)"/><text x="74.0238%" y="207.50"></text></g><g><title>dput (57 samples, 0.09%)</title><rect x="73.7738%" y="181" width="0.0944%" height="15" fill="rgb(240,63,7)"/><text x="74.0238%" y="191.50"></text></g><g><title>__dentry_kill (57 samples, 0.09%)</title><rect x="73.7738%" y="165" width="0.0944%" height="15" fill="rgb(249,182,41)"/><text x="74.0238%" y="175.50"></text></g><g><title>evict (57 samples, 0.09%)</title><rect x="73.7738%" y="149" width="0.0944%" height="15" fill="rgb(243,47,26)"/><text x="74.0238%" y="159.50"></text></g><g><title>ext4_evict_inode (57 samples, 0.09%)</title><rect x="73.7738%" y="133" width="0.0944%" height="15" fill="rgb(233,48,2)"/><text x="74.0238%" y="143.50"></text></g><g><title>truncate_inode_pages_range (57 samples, 0.09%)</title><rect x="73.7738%" y="117" width="0.0944%" height="15" fill="rgb(244,165,34)"/><text x="74.0238%" y="127.50"></text></g><g><title>alloc_pages_vma (14 samples, 0.02%)</title><rect x="73.8815%" y="293" width="0.0232%" height="15" fill="rgb(207,89,7)"/><text x="74.1315%" y="303.50"></text></g><g><title>__alloc_pages_nodemask (14 samples, 0.02%)</title><rect x="73.8815%" y="277" width="0.0232%" height="15" fill="rgb(244,117,36)"/><text x="74.1315%" y="287.50"></text></g><g><title>get_page_from_freelist (13 samples, 0.02%)</title><rect x="73.8832%" y="261" width="0.0215%" height="15" fill="rgb(226,144,34)"/><text x="74.1332%" y="271.50"></text></g><g><title>lru_cache_add (7 samples, 0.01%)</title><rect x="73.9047%" y="293" width="0.0116%" height="15" fill="rgb(213,23,19)"/><text x="74.1547%" y="303.50"></text></g><g><title>exc_page_fault (33 samples, 0.05%)</title><rect x="73.8682%" y="341" width="0.0547%" height="15" fill="rgb(217,75,12)"/><text x="74.1182%" y="351.50"></text></g><g><title>do_user_addr_fault (33 samples, 0.05%)</title><rect x="73.8682%" y="325" width="0.0547%" height="15" fill="rgb(224,159,17)"/><text x="74.1182%" y="335.50"></text></g><g><title>handle_mm_fault (30 samples, 0.05%)</title><rect x="73.8732%" y="309" width="0.0497%" height="15" fill="rgb(217,118,1)"/><text x="74.1232%" y="319.50"></text></g><g><title>asm_exc_page_fault (39 samples, 0.06%)</title><rect x="73.8682%" y="357" width="0.0646%" height="15" fill="rgb(232,180,48)"/><text x="74.1182%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="74.1184%" y="325" width="0.0133%" height="15" fill="rgb(230,27,33)"/><text x="74.3684%" y="335.50"></text></g><g><title>&lt;ate::anti_replay::AntiReplayPlugin as ate::validator::EventValidator&gt;::validate (121 samples, 0.20%)</title><rect x="73.9428%" y="341" width="0.2004%" height="15" fill="rgb(205,31,21)"/><text x="74.1928%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (7 samples, 0.01%)</title><rect x="74.1697%" y="293" width="0.0116%" height="15" fill="rgb(253,59,4)"/><text x="74.4197%" y="303.50"></text></g><g><title>std::time::SystemTime::duration_since (11 samples, 0.02%)</title><rect x="74.1697%" y="309" width="0.0182%" height="15" fill="rgb(224,201,9)"/><text x="74.4197%" y="319.50"></text></g><g><title>__GI___clock_gettime (17 samples, 0.03%)</title><rect x="74.1879%" y="261" width="0.0282%" height="15" fill="rgb(229,206,30)"/><text x="74.4379%" y="271.50"></text></g><g><title>__vdso_clock_gettime (16 samples, 0.03%)</title><rect x="74.1896%" y="245" width="0.0265%" height="15" fill="rgb(212,67,47)"/><text x="74.4396%" y="255.50"></text></g><g><title>[[vdso]] (12 samples, 0.02%)</title><rect x="74.1962%" y="229" width="0.0199%" height="15" fill="rgb(211,96,50)"/><text x="74.4462%" y="239.50"></text></g><g><title>&lt;ate::time::TimestampEnforcer as ate::validator::EventValidator&gt;::validate (45 samples, 0.07%)</title><rect x="74.1432%" y="341" width="0.0745%" height="15" fill="rgb(252,114,18)"/><text x="74.3932%" y="351.50"></text></g><g><title>ate::time::TimestampEnforcer::current_timestamp (38 samples, 0.06%)</title><rect x="74.1548%" y="325" width="0.0629%" height="15" fill="rgb(223,58,37)"/><text x="74.4048%" y="335.50"></text></g><g><title>std::time::SystemTime::now (18 samples, 0.03%)</title><rect x="74.1879%" y="309" width="0.0298%" height="15" fill="rgb(237,70,4)"/><text x="74.4379%" y="319.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (18 samples, 0.03%)</title><rect x="74.1879%" y="293" width="0.0298%" height="15" fill="rgb(244,85,46)"/><text x="74.4379%" y="303.50"></text></g><g><title>std::sys::unix::time::inner::now (18 samples, 0.03%)</title><rect x="74.1879%" y="277" width="0.0298%" height="15" fill="rgb(223,39,52)"/><text x="74.4379%" y="287.50"></text></g><g><title>ate::accessor::ChainProtectedSync::validate_event (282 samples, 0.47%)</title><rect x="73.9328%" y="357" width="0.4671%" height="15" fill="rgb(218,200,14)"/><text x="74.1828%" y="367.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::validator::EventValidator&gt;::validate (110 samples, 0.18%)</title><rect x="74.2178%" y="341" width="0.1822%" height="15" fill="rgb(208,171,16)"/><text x="74.4678%" y="351.50"></text></g><g><title>ate::tree::TreeAuthorityPlugin::compute_auth (108 samples, 0.18%)</title><rect x="74.2211%" y="325" width="0.1789%" height="15" fill="rgb(234,200,18)"/><text x="74.4711%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (158 samples, 0.26%)</title><rect x="74.4033%" y="341" width="0.2617%" height="15" fill="rgb(228,45,11)"/><text x="74.6533%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (7 samples, 0.01%)</title><rect x="74.6534%" y="325" width="0.0116%" height="15" fill="rgb(237,182,11)"/><text x="74.9034%" y="335.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (10 samples, 0.02%)</title><rect x="74.9714%" y="197" width="0.0166%" height="15" fill="rgb(241,175,49)"/><text x="75.2214%" y="207.50"></text></g><g><title>alloc_pages_vma (13 samples, 0.02%)</title><rect x="74.9714%" y="229" width="0.0215%" height="15" fill="rgb(247,38,35)"/><text x="75.2214%" y="239.50"></text></g><g><title>__alloc_pages_nodemask (13 samples, 0.02%)</title><rect x="74.9714%" y="213" width="0.0215%" height="15" fill="rgb(228,39,49)"/><text x="75.2214%" y="223.50"></text></g><g><title>exc_page_fault (24 samples, 0.04%)</title><rect x="74.9648%" y="277" width="0.0398%" height="15" fill="rgb(226,101,26)"/><text x="75.2148%" y="287.50"></text></g><g><title>do_user_addr_fault (24 samples, 0.04%)</title><rect x="74.9648%" y="261" width="0.0398%" height="15" fill="rgb(206,141,19)"/><text x="75.2148%" y="271.50"></text></g><g><title>handle_mm_fault (24 samples, 0.04%)</title><rect x="74.9648%" y="245" width="0.0398%" height="15" fill="rgb(211,200,13)"/><text x="75.2148%" y="255.50"></text></g><g><title>asm_exc_page_fault (27 samples, 0.04%)</title><rect x="74.9648%" y="293" width="0.0447%" height="15" fill="rgb(241,121,6)"/><text x="75.2148%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (9 samples, 0.01%)</title><rect x="75.0095%" y="293" width="0.0149%" height="15" fill="rgb(234,221,29)"/><text x="75.2595%" y="303.50"></text></g><g><title>ate::chain::ChainOfTrust::add_history (385 samples, 0.64%)</title><rect x="74.4000%" y="357" width="0.6377%" height="15" fill="rgb(229,136,5)"/><text x="74.6500%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (225 samples, 0.37%)</title><rect x="74.6650%" y="341" width="0.3727%" height="15" fill="rgb(238,36,11)"/><text x="74.9150%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (114 samples, 0.19%)</title><rect x="74.8489%" y="325" width="0.1888%" height="15" fill="rgb(251,55,41)"/><text x="75.0989%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (53 samples, 0.09%)</title><rect x="74.9499%" y="309" width="0.0878%" height="15" fill="rgb(242,34,40)"/><text x="75.1999%" y="319.50"></text></g><g><title>error_entry (8 samples, 0.01%)</title><rect x="75.0244%" y="293" width="0.0133%" height="15" fill="rgb(215,42,17)"/><text x="75.2744%" y="303.50"></text></g><g><title>sync_regs (7 samples, 0.01%)</title><rect x="75.0261%" y="277" width="0.0116%" height="15" fill="rgb(207,44,46)"/><text x="75.2761%" y="287.50"></text></g><g><title>asm_exc_page_fault (12 samples, 0.02%)</title><rect x="75.2331%" y="277" width="0.0199%" height="15" fill="rgb(211,206,28)"/><text x="75.4831%" y="287.50"></text></g><g><title>exc_page_fault (12 samples, 0.02%)</title><rect x="75.2331%" y="261" width="0.0199%" height="15" fill="rgb(237,167,16)"/><text x="75.4831%" y="271.50"></text></g><g><title>do_user_addr_fault (12 samples, 0.02%)</title><rect x="75.2331%" y="245" width="0.0199%" height="15" fill="rgb(233,66,6)"/><text x="75.4831%" y="255.50"></text></g><g><title>handle_mm_fault (11 samples, 0.02%)</title><rect x="75.2348%" y="229" width="0.0182%" height="15" fill="rgb(246,123,29)"/><text x="75.4848%" y="239.50"></text></g><g><title>do_syscall_64 (10 samples, 0.02%)</title><rect x="75.2580%" y="229" width="0.0166%" height="15" fill="rgb(209,62,40)"/><text x="75.5080%" y="239.50"></text></g><g><title>__x64_sys_mprotect (10 samples, 0.02%)</title><rect x="75.2580%" y="213" width="0.0166%" height="15" fill="rgb(218,4,25)"/><text x="75.5080%" y="223.50"></text></g><g><title>do_mprotect_pkey (9 samples, 0.01%)</title><rect x="75.2596%" y="197" width="0.0149%" height="15" fill="rgb(253,91,49)"/><text x="75.5096%" y="207.50"></text></g><g><title>mprotect_fixup (8 samples, 0.01%)</title><rect x="75.2613%" y="181" width="0.0133%" height="15" fill="rgb(228,155,29)"/><text x="75.5113%" y="191.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.02%)</title><rect x="75.2580%" y="245" width="0.0232%" height="15" fill="rgb(243,57,37)"/><text x="75.5080%" y="255.50"></text></g><g><title>_int_malloc (62 samples, 0.10%)</title><rect x="75.1834%" y="309" width="0.1027%" height="15" fill="rgb(244,167,17)"/><text x="75.4334%" y="319.50"></text></g><g><title>sysmalloc (35 samples, 0.06%)</title><rect x="75.2282%" y="293" width="0.0580%" height="15" fill="rgb(207,181,38)"/><text x="75.4782%" y="303.50"></text></g><g><title>grow_heap (18 samples, 0.03%)</title><rect x="75.2563%" y="277" width="0.0298%" height="15" fill="rgb(211,8,23)"/><text x="75.5063%" y="287.50"></text></g><g><title>__GI___mprotect (18 samples, 0.03%)</title><rect x="75.2563%" y="261" width="0.0298%" height="15" fill="rgb(235,11,44)"/><text x="75.5063%" y="271.50"></text></g><g><title>__GI___libc_malloc (76 samples, 0.13%)</title><rect x="75.1619%" y="325" width="0.1259%" height="15" fill="rgb(248,18,52)"/><text x="75.4119%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (139 samples, 0.23%)</title><rect x="75.0609%" y="341" width="0.2302%" height="15" fill="rgb(208,4,7)"/><text x="75.3109%" y="351.50"></text></g><g><title>__GI___libc_malloc (111 samples, 0.18%)</title><rect x="75.3574%" y="293" width="0.1839%" height="15" fill="rgb(240,17,39)"/><text x="75.6074%" y="303.50"></text></g><g><title>_int_malloc (92 samples, 0.15%)</title><rect x="75.3888%" y="277" width="0.1524%" height="15" fill="rgb(207,170,3)"/><text x="75.6388%" y="287.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (72 samples, 0.12%)</title><rect x="75.5644%" y="277" width="0.1193%" height="15" fill="rgb(236,100,52)"/><text x="75.8144%" y="287.50"></text></g><g><title>ate::spec::SerializationFormat::serialize (217 samples, 0.36%)</title><rect x="75.3276%" y="325" width="0.3594%" height="15" fill="rgb(246,78,51)"/><text x="75.5776%" y="335.50"></text></g><g><title>bincode::serialize (202 samples, 0.33%)</title><rect x="75.3524%" y="309" width="0.3346%" height="15" fill="rgb(211,17,15)"/><text x="75.6024%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (86 samples, 0.14%)</title><rect x="75.5445%" y="293" width="0.1425%" height="15" fill="rgb(209,59,46)"/><text x="75.7945%" y="303.50"></text></g><g><title>ate::event::EventData::as_header (446 samples, 0.74%)</title><rect x="75.0377%" y="357" width="0.7388%" height="15" fill="rgb(210,92,25)"/><text x="75.2877%" y="367.50"></text></g><g><title>ate::event::EventData::as_header_raw (293 samples, 0.49%)</title><rect x="75.2911%" y="341" width="0.4853%" height="15" fill="rgb(238,174,52)"/><text x="75.5411%" y="351.50"></text></g><g><title>blake3::hash (54 samples, 0.09%)</title><rect x="75.6870%" y="325" width="0.0894%" height="15" fill="rgb(230,73,7)"/><text x="75.9370%" y="335.50"></text></g><g><title>blake3::ChunkState::update (32 samples, 0.05%)</title><rect x="75.7234%" y="309" width="0.0530%" height="15" fill="rgb(243,124,40)"/><text x="75.9734%" y="319.50"></text></g><g><title>__alloc_pages_nodemask (9 samples, 0.01%)</title><rect x="76.1806%" y="229" width="0.0149%" height="15" fill="rgb(244,170,11)"/><text x="76.4306%" y="239.50"></text></g><g><title>alloc_pages_vma (10 samples, 0.02%)</title><rect x="76.1806%" y="245" width="0.0166%" height="15" fill="rgb(207,114,54)"/><text x="76.4306%" y="255.50"></text></g><g><title>handle_mm_fault (14 samples, 0.02%)</title><rect x="76.1790%" y="261" width="0.0232%" height="15" fill="rgb(205,42,20)"/><text x="76.4290%" y="271.50"></text></g><g><title>exc_page_fault (15 samples, 0.02%)</title><rect x="76.1790%" y="293" width="0.0248%" height="15" fill="rgb(230,30,28)"/><text x="76.4290%" y="303.50"></text></g><g><title>do_user_addr_fault (15 samples, 0.02%)</title><rect x="76.1790%" y="277" width="0.0248%" height="15" fill="rgb(205,73,54)"/><text x="76.4290%" y="287.50"></text></g><g><title>asm_exc_page_fault (20 samples, 0.03%)</title><rect x="76.1790%" y="309" width="0.0331%" height="15" fill="rgb(254,227,23)"/><text x="76.4290%" y="319.50"></text></g><g><title>ate::index::BinaryTreeIndexer::feed (268 samples, 0.44%)</title><rect x="75.7764%" y="357" width="0.4439%" height="15" fill="rgb(228,202,34)"/><text x="76.0264%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (115 samples, 0.19%)</title><rect x="76.0299%" y="341" width="0.1905%" height="15" fill="rgb(222,225,37)"/><text x="76.2799%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (53 samples, 0.09%)</title><rect x="76.1326%" y="325" width="0.0878%" height="15" fill="rgb(221,14,54)"/><text x="76.3826%" y="335.50"></text></g><g><title>_int_malloc (11 samples, 0.02%)</title><rect x="76.2552%" y="309" width="0.0182%" height="15" fill="rgb(254,102,2)"/><text x="76.5052%" y="319.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.02%)</title><rect x="76.2535%" y="325" width="0.0215%" height="15" fill="rgb(232,104,17)"/><text x="76.5035%" y="335.50"></text></g><g><title>bytes::bytes::promotable_even_clone (34 samples, 0.06%)</title><rect x="76.2204%" y="357" width="0.0563%" height="15" fill="rgb(250,220,14)"/><text x="76.4704%" y="367.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (34 samples, 0.06%)</title><rect x="76.2204%" y="341" width="0.0563%" height="15" fill="rgb(241,158,9)"/><text x="76.4704%" y="351.50"></text></g><g><title>bytes::bytes::shared_drop (19 samples, 0.03%)</title><rect x="76.2767%" y="357" width="0.0315%" height="15" fill="rgb(246,9,43)"/><text x="76.5267%" y="367.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.01%)</title><rect x="76.5102%" y="309" width="0.0116%" height="15" fill="rgb(206,73,33)"/><text x="76.7602%" y="319.50"></text></g><g><title>__get_user_nocheck_4 (13 samples, 0.02%)</title><rect x="76.5334%" y="213" width="0.0215%" height="15" fill="rgb(222,79,8)"/><text x="76.7834%" y="223.50"></text></g><g><title>__x64_sys_futex (21 samples, 0.03%)</title><rect x="76.5252%" y="277" width="0.0348%" height="15" fill="rgb(234,8,54)"/><text x="76.7752%" y="287.50"></text></g><g><title>do_futex (20 samples, 0.03%)</title><rect x="76.5268%" y="261" width="0.0331%" height="15" fill="rgb(209,134,38)"/><text x="76.7768%" y="271.50"></text></g><g><title>futex_wait (20 samples, 0.03%)</title><rect x="76.5268%" y="245" width="0.0331%" height="15" fill="rgb(230,127,29)"/><text x="76.7768%" y="255.50"></text></g><g><title>futex_wait_setup (20 samples, 0.03%)</title><rect x="76.5268%" y="229" width="0.0331%" height="15" fill="rgb(242,44,41)"/><text x="76.7768%" y="239.50"></text></g><g><title>do_syscall_64 (22 samples, 0.04%)</title><rect x="76.5252%" y="293" width="0.0364%" height="15" fill="rgb(222,56,43)"/><text x="76.7752%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (47 samples, 0.08%)</title><rect x="76.5218%" y="309" width="0.0779%" height="15" fill="rgb(238,39,47)"/><text x="76.7718%" y="319.50"></text></g><g><title>syscall_exit_to_user_mode (23 samples, 0.04%)</title><rect x="76.5616%" y="293" width="0.0381%" height="15" fill="rgb(226,79,43)"/><text x="76.8116%" y="303.50"></text></g><g><title>__lll_lock_wait_private (76 samples, 0.13%)</title><rect x="76.4871%" y="325" width="0.1259%" height="15" fill="rgb(242,105,53)"/><text x="76.7371%" y="335.50"></text></g><g><title>syscall_return_via_sysret (8 samples, 0.01%)</title><rect x="76.5997%" y="309" width="0.0133%" height="15" fill="rgb(251,132,46)"/><text x="76.8497%" y="319.50"></text></g><g><title>entry_SYSCALL_64 (12 samples, 0.02%)</title><rect x="76.6129%" y="325" width="0.0199%" height="15" fill="rgb(231,77,14)"/><text x="76.8629%" y="335.50"></text></g><g><title>_raw_spin_lock (9 samples, 0.01%)</title><rect x="76.6626%" y="245" width="0.0149%" height="15" fill="rgb(240,135,9)"/><text x="76.9126%" y="255.50"></text></g><g><title>__x64_sys_futex (24 samples, 0.04%)</title><rect x="76.6428%" y="293" width="0.0398%" height="15" fill="rgb(248,109,14)"/><text x="76.8928%" y="303.50"></text></g><g><title>do_futex (21 samples, 0.03%)</title><rect x="76.6477%" y="277" width="0.0348%" height="15" fill="rgb(227,146,52)"/><text x="76.8977%" y="287.50"></text></g><g><title>futex_wake (20 samples, 0.03%)</title><rect x="76.6494%" y="261" width="0.0331%" height="15" fill="rgb(232,54,3)"/><text x="76.8994%" y="271.50"></text></g><g><title>do_syscall_64 (28 samples, 0.05%)</title><rect x="76.6378%" y="309" width="0.0464%" height="15" fill="rgb(229,201,43)"/><text x="76.8878%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (94 samples, 0.16%)</title><rect x="76.6328%" y="325" width="0.1557%" height="15" fill="rgb(252,161,33)"/><text x="76.8828%" y="335.50"></text></g><g><title>syscall_exit_to_user_mode (63 samples, 0.10%)</title><rect x="76.6842%" y="309" width="0.1044%" height="15" fill="rgb(226,146,40)"/><text x="76.9342%" y="319.50"></text></g><g><title>_int_free (302 samples, 0.50%)</title><rect x="76.3297%" y="341" width="0.5002%" height="15" fill="rgb(219,47,25)"/><text x="76.5797%" y="351.50"></text></g><g><title>syscall_return_via_sysret (24 samples, 0.04%)</title><rect x="76.7902%" y="325" width="0.0398%" height="15" fill="rgb(250,135,13)"/><text x="77.0402%" y="335.50"></text></g><g><title>bytes::bytes::promotable_even_drop (11 samples, 0.02%)</title><rect x="76.8299%" y="341" width="0.0182%" height="15" fill="rgb(219,229,18)"/><text x="77.0799%" y="351.50"></text></g><g><title>core::ptr::drop_in_place (377 samples, 0.62%)</title><rect x="76.3082%" y="357" width="0.6245%" height="15" fill="rgb(217,152,27)"/><text x="76.5582%" y="367.50"></text></g><g><title>core::ptr::drop_in_place (51 samples, 0.08%)</title><rect x="76.8482%" y="341" width="0.0845%" height="15" fill="rgb(225,71,47)"/><text x="77.0982%" y="351.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (7,626 samples, 12.63%)</title><rect x="64.3123%" y="453" width="12.6319%" height="15" fill="rgb(220,139,14)"/><text x="64.5623%" y="463.50">tokio::runtime::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7,593 samples, 12.58%)</title><rect x="64.3670%" y="437" width="12.5772%" height="15" fill="rgb(247,54,32)"/><text x="64.6170%" y="447.50">std::thread::local:..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7,593 samples, 12.58%)</title><rect x="64.3670%" y="421" width="12.5772%" height="15" fill="rgb(252,131,39)"/><text x="64.6170%" y="431.50">tokio::runtime::tas..</text></g><g><title>tokio::runtime::task::harness::poll_future (7,589 samples, 12.57%)</title><rect x="64.3736%" y="405" width="12.5706%" height="15" fill="rgb(210,108,39)"/><text x="64.6236%" y="415.50">tokio::runtime::tas..</text></g><g><title>std::panic::catch_unwind (7,583 samples, 12.56%)</title><rect x="64.3836%" y="389" width="12.5607%" height="15" fill="rgb(205,23,29)"/><text x="64.6336%" y="399.50">std::panic::catch_u..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,582 samples, 12.56%)</title><rect x="64.3852%" y="373" width="12.5590%" height="15" fill="rgb(246,139,46)"/><text x="64.6352%" y="383.50">&lt;core::future::from..</text></g><g><title>std::panicking::try (7,824 samples, 12.96%)</title><rect x="63.9893%" y="533" width="12.9599%" height="15" fill="rgb(250,81,26)"/><text x="64.2393%" y="543.50">std::panicking::try</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (7,824 samples, 12.96%)</title><rect x="63.9893%" y="517" width="12.9599%" height="15" fill="rgb(214,104,7)"/><text x="64.2393%" y="527.50">tokio::loom::std::u..</text></g><g><title>tokio::runtime::thread_pool::worker::run (7,824 samples, 12.96%)</title><rect x="63.9893%" y="501" width="12.9599%" height="15" fill="rgb(233,189,8)"/><text x="64.2393%" y="511.50">tokio::runtime::thr..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (7,824 samples, 12.96%)</title><rect x="63.9893%" y="485" width="12.9599%" height="15" fill="rgb(228,141,17)"/><text x="64.2393%" y="495.50">tokio::macros::scop..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (7,824 samples, 12.96%)</title><rect x="63.9893%" y="469" width="12.9599%" height="15" fill="rgb(247,157,1)"/><text x="64.2393%" y="479.50">tokio::runtime::thr..</text></g><g><title>__pthread_enable_asynccancel (11 samples, 0.02%)</title><rect x="77.1082%" y="405" width="0.0182%" height="15" fill="rgb(249,225,5)"/><text x="77.3582%" y="415.50"></text></g><g><title>crc32c_pcl_intel_update (61 samples, 0.10%)</title><rect x="77.1297%" y="405" width="0.1010%" height="15" fill="rgb(242,55,13)"/><text x="77.3797%" y="415.50"></text></g><g><title>__x64_sys_write (9 samples, 0.01%)</title><rect x="77.2358%" y="373" width="0.0149%" height="15" fill="rgb(230,49,50)"/><text x="77.4858%" y="383.50"></text></g><g><title>__fget_light (32 samples, 0.05%)</title><rect x="77.2573%" y="341" width="0.0530%" height="15" fill="rgb(241,111,38)"/><text x="77.5073%" y="351.50"></text></g><g><title>__fget_files (23 samples, 0.04%)</title><rect x="77.2722%" y="325" width="0.0381%" height="15" fill="rgb(252,155,4)"/><text x="77.5222%" y="335.50"></text></g><g><title>__fdget_pos (37 samples, 0.06%)</title><rect x="77.2540%" y="357" width="0.0613%" height="15" fill="rgb(212,69,32)"/><text x="77.5040%" y="367.50"></text></g><g><title>ext4_generic_write_checks (7 samples, 0.01%)</title><rect x="77.3832%" y="309" width="0.0116%" height="15" fill="rgb(243,107,47)"/><text x="77.6332%" y="319.50"></text></g><g><title>file_update_time (22 samples, 0.04%)</title><rect x="77.3948%" y="309" width="0.0364%" height="15" fill="rgb(247,130,12)"/><text x="77.6448%" y="319.50"></text></g><g><title>generic_update_time (15 samples, 0.02%)</title><rect x="77.4064%" y="293" width="0.0248%" height="15" fill="rgb(233,74,16)"/><text x="77.6564%" y="303.50"></text></g><g><title>__mark_inode_dirty (14 samples, 0.02%)</title><rect x="77.4080%" y="277" width="0.0232%" height="15" fill="rgb(208,58,18)"/><text x="77.6580%" y="287.50"></text></g><g><title>ext4_dirty_inode (11 samples, 0.02%)</title><rect x="77.4130%" y="261" width="0.0182%" height="15" fill="rgb(242,225,1)"/><text x="77.6630%" y="271.50"></text></g><g><title>__ext4_mark_inode_dirty (8 samples, 0.01%)</title><rect x="77.4180%" y="245" width="0.0133%" height="15" fill="rgb(249,39,40)"/><text x="77.6680%" y="255.50"></text></g><g><title>__radix_tree_lookup (7 samples, 0.01%)</title><rect x="77.5140%" y="277" width="0.0116%" height="15" fill="rgb(207,72,44)"/><text x="77.7640%" y="287.50"></text></g><g><title>balance_dirty_pages_ratelimited (38 samples, 0.06%)</title><rect x="77.4643%" y="293" width="0.0629%" height="15" fill="rgb(215,193,12)"/><text x="77.7143%" y="303.50"></text></g><g><title>ext4_journal_check_start (10 samples, 0.02%)</title><rect x="77.5935%" y="261" width="0.0166%" height="15" fill="rgb(248,41,39)"/><text x="77.8435%" y="271.50"></text></g><g><title>kmem_cache_alloc (40 samples, 0.07%)</title><rect x="77.6267%" y="245" width="0.0663%" height="15" fill="rgb(253,85,4)"/><text x="77.8767%" y="255.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (13 samples, 0.02%)</title><rect x="77.6714%" y="229" width="0.0215%" height="15" fill="rgb(243,70,31)"/><text x="77.9214%" y="239.50"></text></g><g><title>_raw_read_lock (8 samples, 0.01%)</title><rect x="77.7310%" y="229" width="0.0133%" height="15" fill="rgb(253,195,26)"/><text x="77.9810%" y="239.50"></text></g><g><title>__ext4_journal_start_sb (101 samples, 0.17%)</title><rect x="77.5853%" y="277" width="0.1673%" height="15" fill="rgb(243,42,11)"/><text x="77.8353%" y="287.50"></text></g><g><title>jbd2__journal_start (86 samples, 0.14%)</title><rect x="77.6101%" y="261" width="0.1425%" height="15" fill="rgb(239,66,17)"/><text x="77.8601%" y="271.50"></text></g><g><title>start_this_handle (36 samples, 0.06%)</title><rect x="77.6929%" y="245" width="0.0596%" height="15" fill="rgb(217,132,21)"/><text x="77.9429%" y="255.50"></text></g><g><title>__slab_alloc (12 samples, 0.02%)</title><rect x="77.8354%" y="197" width="0.0199%" height="15" fill="rgb(252,202,21)"/><text x="78.0854%" y="207.50"></text></g><g><title>___slab_alloc (11 samples, 0.02%)</title><rect x="77.8370%" y="181" width="0.0182%" height="15" fill="rgb(233,98,36)"/><text x="78.0870%" y="191.50"></text></g><g><title>memcg_slab_post_alloc_hook (33 samples, 0.05%)</title><rect x="77.8553%" y="197" width="0.0547%" height="15" fill="rgb(216,153,54)"/><text x="78.1053%" y="207.50"></text></g><g><title>get_obj_cgroup_from_current (18 samples, 0.03%)</title><rect x="77.9165%" y="181" width="0.0298%" height="15" fill="rgb(250,99,7)"/><text x="78.1665%" y="191.50"></text></g><g><title>alloc_buffer_head (88 samples, 0.15%)</title><rect x="77.8089%" y="229" width="0.1458%" height="15" fill="rgb(207,56,50)"/><text x="78.0589%" y="239.50"></text></g><g><title>kmem_cache_alloc (87 samples, 0.14%)</title><rect x="77.8105%" y="213" width="0.1441%" height="15" fill="rgb(244,61,34)"/><text x="78.0605%" y="223.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (25 samples, 0.04%)</title><rect x="77.9132%" y="197" width="0.0414%" height="15" fill="rgb(241,50,38)"/><text x="78.1632%" y="207.50"></text></g><g><title>create_empty_buffers (109 samples, 0.18%)</title><rect x="77.7791%" y="261" width="0.1806%" height="15" fill="rgb(212,166,30)"/><text x="78.0291%" y="271.50"></text></g><g><title>alloc_page_buffers (93 samples, 0.15%)</title><rect x="77.8056%" y="245" width="0.1540%" height="15" fill="rgb(249,127,32)"/><text x="78.0556%" y="255.50"></text></g><g><title>__dquot_alloc_space (10 samples, 0.02%)</title><rect x="78.0159%" y="229" width="0.0166%" height="15" fill="rgb(209,103,0)"/><text x="78.2659%" y="239.50"></text></g><g><title>_raw_spin_lock (8 samples, 0.01%)</title><rect x="78.0325%" y="229" width="0.0133%" height="15" fill="rgb(238,209,51)"/><text x="78.2825%" y="239.50"></text></g><g><title>ext4_da_reserve_space (30 samples, 0.05%)</title><rect x="78.0126%" y="245" width="0.0497%" height="15" fill="rgb(237,56,23)"/><text x="78.2626%" y="255.50"></text></g><g><title>ext4_claim_free_clusters (10 samples, 0.02%)</title><rect x="78.0458%" y="229" width="0.0166%" height="15" fill="rgb(215,153,46)"/><text x="78.2958%" y="239.50"></text></g><g><title>ext4_es_can_be_merged.isra.0 (8 samples, 0.01%)</title><rect x="78.0872%" y="213" width="0.0133%" height="15" fill="rgb(224,49,31)"/><text x="78.3372%" y="223.50"></text></g><g><title>__es_insert_extent (20 samples, 0.03%)</title><rect x="78.0689%" y="229" width="0.0331%" height="15" fill="rgb(250,18,42)"/><text x="78.3189%" y="239.50"></text></g><g><title>__es_remove_extent (16 samples, 0.03%)</title><rect x="78.1021%" y="229" width="0.0265%" height="15" fill="rgb(215,176,39)"/><text x="78.3521%" y="239.50"></text></g><g><title>__es_tree_search.isra.0 (12 samples, 0.02%)</title><rect x="78.1087%" y="213" width="0.0199%" height="15" fill="rgb(223,77,29)"/><text x="78.3587%" y="223.50"></text></g><g><title>ext4_es_insert_delayed_block (44 samples, 0.07%)</title><rect x="78.0623%" y="245" width="0.0729%" height="15" fill="rgb(234,94,52)"/><text x="78.3123%" y="255.50"></text></g><g><title>ext4_es_lookup_extent (55 samples, 0.09%)</title><rect x="78.1352%" y="245" width="0.0911%" height="15" fill="rgb(220,154,50)"/><text x="78.3852%" y="255.50"></text></g><g><title>ext4_da_get_block_prep (165 samples, 0.27%)</title><rect x="77.9596%" y="261" width="0.2733%" height="15" fill="rgb(212,11,10)"/><text x="78.2096%" y="271.50"></text></g><g><title>ext4_block_write_begin (298 samples, 0.49%)</title><rect x="77.7526%" y="277" width="0.4936%" height="15" fill="rgb(205,166,19)"/><text x="78.0026%" y="287.50"></text></g><g><title>memset_erms (8 samples, 0.01%)</title><rect x="78.2329%" y="261" width="0.0133%" height="15" fill="rgb(244,198,16)"/><text x="78.4829%" y="271.50"></text></g><g><title>ext4_nonda_switch (9 samples, 0.01%)</title><rect x="78.2462%" y="277" width="0.0149%" height="15" fill="rgb(219,69,12)"/><text x="78.4962%" y="287.50"></text></g><g><title>__next_zones_zonelist (17 samples, 0.03%)</title><rect x="78.2892%" y="229" width="0.0282%" height="15" fill="rgb(245,30,7)"/><text x="78.5392%" y="239.50"></text></g><g><title>__list_del_entry_valid (31 samples, 0.05%)</title><rect x="78.3654%" y="213" width="0.0513%" height="15" fill="rgb(218,221,48)"/><text x="78.6154%" y="223.50"></text></g><g><title>node_dirty_ok (19 samples, 0.03%)</title><rect x="78.4184%" y="213" width="0.0315%" height="15" fill="rgb(216,66,15)"/><text x="78.6684%" y="223.50"></text></g><g><title>kernel_init_free_pages (71 samples, 0.12%)</title><rect x="78.4565%" y="197" width="0.1176%" height="15" fill="rgb(226,122,50)"/><text x="78.7065%" y="207.50"></text></g><g><title>clear_page_erms (67 samples, 0.11%)</title><rect x="78.4632%" y="181" width="0.1110%" height="15" fill="rgb(239,156,16)"/><text x="78.7132%" y="191.50"></text></g><g><title>__alloc_pages_nodemask (180 samples, 0.30%)</title><rect x="78.2793%" y="245" width="0.2982%" height="15" fill="rgb(224,27,38)"/><text x="78.5293%" y="255.50"></text></g><g><title>get_page_from_freelist (157 samples, 0.26%)</title><rect x="78.3174%" y="229" width="0.2601%" height="15" fill="rgb(224,39,27)"/><text x="78.5674%" y="239.50"></text></g><g><title>prep_new_page (77 samples, 0.13%)</title><rect x="78.4499%" y="213" width="0.1275%" height="15" fill="rgb(215,92,29)"/><text x="78.6999%" y="223.50"></text></g><g><title>__mod_lruvec_state (9 samples, 0.01%)</title><rect x="78.6669%" y="213" width="0.0149%" height="15" fill="rgb(207,159,16)"/><text x="78.9169%" y="223.50"></text></g><g><title>__mod_node_page_state (9 samples, 0.01%)</title><rect x="78.6669%" y="197" width="0.0149%" height="15" fill="rgb(238,163,47)"/><text x="78.9169%" y="207.50"></text></g><g><title>__mod_memcg_lruvec_state (9 samples, 0.01%)</title><rect x="78.6818%" y="213" width="0.0149%" height="15" fill="rgb(219,91,49)"/><text x="78.9318%" y="223.50"></text></g><g><title>get_mem_cgroup_from_mm (9 samples, 0.01%)</title><rect x="78.7166%" y="197" width="0.0149%" height="15" fill="rgb(227,167,31)"/><text x="78.9666%" y="207.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (11 samples, 0.02%)</title><rect x="78.7315%" y="197" width="0.0182%" height="15" fill="rgb(234,80,54)"/><text x="78.9815%" y="207.50"></text></g><g><title>__count_memcg_events.part.0 (8 samples, 0.01%)</title><rect x="78.7365%" y="181" width="0.0133%" height="15" fill="rgb(212,114,2)"/><text x="78.9865%" y="191.50"></text></g><g><title>mem_cgroup_charge (39 samples, 0.06%)</title><rect x="78.7034%" y="213" width="0.0646%" height="15" fill="rgb(234,50,24)"/><text x="78.9534%" y="223.50"></text></g><g><title>try_charge (9 samples, 0.01%)</title><rect x="78.7530%" y="197" width="0.0149%" height="15" fill="rgb(221,68,8)"/><text x="79.0030%" y="207.50"></text></g><g><title>xa_get_order (9 samples, 0.01%)</title><rect x="78.7713%" y="213" width="0.0149%" height="15" fill="rgb(254,180,31)"/><text x="79.0213%" y="223.50"></text></g><g><title>xas_load (8 samples, 0.01%)</title><rect x="78.7729%" y="197" width="0.0133%" height="15" fill="rgb(247,130,50)"/><text x="79.0229%" y="207.50"></text></g><g><title>__add_to_page_cache_locked (150 samples, 0.25%)</title><rect x="78.5824%" y="229" width="0.2485%" height="15" fill="rgb(211,109,4)"/><text x="78.8324%" y="239.50"></text></g><g><title>xas_store (21 samples, 0.03%)</title><rect x="78.7961%" y="213" width="0.0348%" height="15" fill="rgb(238,50,21)"/><text x="79.0461%" y="223.50"></text></g><g><title>xas_create (9 samples, 0.01%)</title><rect x="78.8160%" y="197" width="0.0149%" height="15" fill="rgb(225,57,45)"/><text x="79.0660%" y="207.50"></text></g><g><title>__pagevec_lru_add_fn (23 samples, 0.04%)</title><rect x="78.8508%" y="197" width="0.0381%" height="15" fill="rgb(209,196,50)"/><text x="79.1008%" y="207.50"></text></g><g><title>add_to_page_cache_lru (198 samples, 0.33%)</title><rect x="78.5775%" y="245" width="0.3280%" height="15" fill="rgb(242,140,13)"/><text x="78.8275%" y="255.50"></text></g><g><title>lru_cache_add (45 samples, 0.07%)</title><rect x="78.8309%" y="229" width="0.0745%" height="15" fill="rgb(217,111,7)"/><text x="79.0809%" y="239.50"></text></g><g><title>pagevec_lru_move_fn (39 samples, 0.06%)</title><rect x="78.8408%" y="213" width="0.0646%" height="15" fill="rgb(253,193,51)"/><text x="79.0908%" y="223.50"></text></g><g><title>pagecache_get_page (440 samples, 0.73%)</title><rect x="78.2644%" y="261" width="0.7288%" height="15" fill="rgb(252,70,29)"/><text x="78.5144%" y="271.50"></text></g><g><title>find_get_entry (49 samples, 0.08%)</title><rect x="78.9121%" y="245" width="0.0812%" height="15" fill="rgb(232,127,12)"/><text x="79.1621%" y="255.50"></text></g><g><title>xas_load (37 samples, 0.06%)</title><rect x="78.9319%" y="229" width="0.0613%" height="15" fill="rgb(211,180,21)"/><text x="79.1819%" y="239.50"></text></g><g><title>xas_start (7 samples, 0.01%)</title><rect x="78.9816%" y="213" width="0.0116%" height="15" fill="rgb(229,72,13)"/><text x="79.2316%" y="223.50"></text></g><g><title>grab_cache_page_write_begin (443 samples, 0.73%)</title><rect x="78.2611%" y="277" width="0.7338%" height="15" fill="rgb(240,211,49)"/><text x="78.5111%" y="287.50"></text></g><g><title>ext4_da_write_begin (892 samples, 1.48%)</title><rect x="77.5273%" y="293" width="1.4775%" height="15" fill="rgb(219,149,40)"/><text x="77.7773%" y="303.50"></text></g><g><title>kmem_cache_free (16 samples, 0.03%)</title><rect x="79.0495%" y="245" width="0.0265%" height="15" fill="rgb(210,127,46)"/><text x="79.2995%" y="255.50"></text></g><g><title>_raw_spin_lock_irqsave (7 samples, 0.01%)</title><rect x="79.1307%" y="213" width="0.0116%" height="15" fill="rgb(220,106,7)"/><text x="79.3807%" y="223.50"></text></g><g><title>__ext4_journal_stop (65 samples, 0.11%)</title><rect x="79.0396%" y="277" width="0.1077%" height="15" fill="rgb(249,31,22)"/><text x="79.2896%" y="287.50"></text></g><g><title>jbd2_journal_stop (64 samples, 0.11%)</title><rect x="79.0413%" y="261" width="0.1060%" height="15" fill="rgb(253,1,49)"/><text x="79.2913%" y="271.50"></text></g><g><title>stop_this_handle (43 samples, 0.07%)</title><rect x="79.0760%" y="245" width="0.0712%" height="15" fill="rgb(227,144,33)"/><text x="79.3260%" y="255.50"></text></g><g><title>__wake_up_common_lock (20 samples, 0.03%)</title><rect x="79.1141%" y="229" width="0.0331%" height="15" fill="rgb(249,163,44)"/><text x="79.3641%" y="239.50"></text></g><g><title>__mark_inode_dirty (9 samples, 0.01%)</title><rect x="79.1903%" y="245" width="0.0149%" height="15" fill="rgb(234,15,39)"/><text x="79.4403%" y="255.50"></text></g><g><title>xas_load (10 samples, 0.02%)</title><rect x="79.2351%" y="197" width="0.0166%" height="15" fill="rgb(207,66,16)"/><text x="79.4851%" y="207.50"></text></g><g><title>__xa_set_mark (17 samples, 0.03%)</title><rect x="79.2334%" y="213" width="0.0282%" height="15" fill="rgb(233,112,24)"/><text x="79.4834%" y="223.50"></text></g><g><title>__mod_memcg_lruvec_state (12 samples, 0.02%)</title><rect x="79.2831%" y="197" width="0.0199%" height="15" fill="rgb(230,90,22)"/><text x="79.5331%" y="207.50"></text></g><g><title>__mod_memcg_state.part.0 (7 samples, 0.01%)</title><rect x="79.2914%" y="181" width="0.0116%" height="15" fill="rgb(229,61,13)"/><text x="79.5414%" y="191.50"></text></g><g><title>__set_page_dirty (64 samples, 0.11%)</title><rect x="79.2235%" y="229" width="0.1060%" height="15" fill="rgb(225,57,24)"/><text x="79.4735%" y="239.50"></text></g><g><title>account_page_dirtied (39 samples, 0.06%)</title><rect x="79.2649%" y="213" width="0.0646%" height="15" fill="rgb(208,169,48)"/><text x="79.5149%" y="223.50"></text></g><g><title>percpu_counter_add_batch (16 samples, 0.03%)</title><rect x="79.3030%" y="197" width="0.0265%" height="15" fill="rgb(244,218,51)"/><text x="79.5530%" y="207.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (116 samples, 0.19%)</title><rect x="79.1589%" y="261" width="0.1921%" height="15" fill="rgb(214,148,10)"/><text x="79.4089%" y="271.50"></text></g><g><title>mark_buffer_dirty (88 samples, 0.15%)</title><rect x="79.2052%" y="245" width="0.1458%" height="15" fill="rgb(225,174,27)"/><text x="79.4552%" y="255.50"></text></g><g><title>__ext4_journal_start_sb (10 samples, 0.02%)</title><rect x="79.3875%" y="229" width="0.0166%" height="15" fill="rgb(230,96,26)"/><text x="79.6375%" y="239.50"></text></g><g><title>__ext4_handle_dirty_metadata (11 samples, 0.02%)</title><rect x="79.5183%" y="197" width="0.0182%" height="15" fill="rgb(232,10,30)"/><text x="79.7683%" y="207.50"></text></g><g><title>ext4_fc_track_inode (9 samples, 0.01%)</title><rect x="79.5448%" y="197" width="0.0149%" height="15" fill="rgb(222,8,50)"/><text x="79.7948%" y="207.50"></text></g><g><title>ext4_inode_csum_set (35 samples, 0.06%)</title><rect x="79.5597%" y="197" width="0.0580%" height="15" fill="rgb(213,81,27)"/><text x="79.8097%" y="207.50"></text></g><g><title>ext4_inode_csum (29 samples, 0.05%)</title><rect x="79.5697%" y="181" width="0.0480%" height="15" fill="rgb(245,50,10)"/><text x="79.8197%" y="191.50"></text></g><g><title>crypto_shash_update (12 samples, 0.02%)</title><rect x="79.5978%" y="165" width="0.0199%" height="15" fill="rgb(216,100,18)"/><text x="79.8478%" y="175.50"></text></g><g><title>ext4_mark_iloc_dirty (129 samples, 0.21%)</title><rect x="79.4189%" y="213" width="0.2137%" height="15" fill="rgb(236,147,54)"/><text x="79.6689%" y="223.50"></text></g><g><title>map_id_up (8 samples, 0.01%)</title><rect x="79.6194%" y="197" width="0.0133%" height="15" fill="rgb(205,143,26)"/><text x="79.8694%" y="207.50"></text></g><g><title>__ext4_journal_get_write_access (20 samples, 0.03%)</title><rect x="79.6392%" y="197" width="0.0331%" height="15" fill="rgb(236,26,9)"/><text x="79.8892%" y="207.50"></text></g><g><title>__getblk_gfp (24 samples, 0.04%)</title><rect x="79.7088%" y="165" width="0.0398%" height="15" fill="rgb(221,165,53)"/><text x="79.9588%" y="175.50"></text></g><g><title>__find_get_block (23 samples, 0.04%)</title><rect x="79.7105%" y="149" width="0.0381%" height="15" fill="rgb(214,110,17)"/><text x="79.9605%" y="159.50"></text></g><g><title>ext4_get_group_desc (14 samples, 0.02%)</title><rect x="79.7486%" y="165" width="0.0232%" height="15" fill="rgb(237,197,12)"/><text x="79.9986%" y="175.50"></text></g><g><title>__mark_inode_dirty (256 samples, 0.42%)</title><rect x="79.3510%" y="261" width="0.4240%" height="15" fill="rgb(205,84,17)"/><text x="79.6010%" y="271.50"></text></g><g><title>ext4_dirty_inode (246 samples, 0.41%)</title><rect x="79.3676%" y="245" width="0.4075%" height="15" fill="rgb(237,18,45)"/><text x="79.6176%" y="255.50"></text></g><g><title>__ext4_mark_inode_dirty (224 samples, 0.37%)</title><rect x="79.4040%" y="229" width="0.3710%" height="15" fill="rgb(221,87,14)"/><text x="79.6540%" y="239.50"></text></g><g><title>ext4_reserve_inode_write (86 samples, 0.14%)</title><rect x="79.6326%" y="213" width="0.1425%" height="15" fill="rgb(238,186,15)"/><text x="79.8826%" y="223.50"></text></g><g><title>ext4_get_inode_loc (62 samples, 0.10%)</title><rect x="79.6724%" y="197" width="0.1027%" height="15" fill="rgb(208,115,11)"/><text x="79.9224%" y="207.50"></text></g><g><title>__ext4_get_inode_loc (59 samples, 0.10%)</title><rect x="79.6773%" y="181" width="0.0977%" height="15" fill="rgb(254,175,0)"/><text x="79.9273%" y="191.50"></text></g><g><title>ext4_da_write_end (474 samples, 0.79%)</title><rect x="79.0048%" y="293" width="0.7851%" height="15" fill="rgb(227,24,42)"/><text x="79.2548%" y="303.50"></text></g><g><title>generic_write_end (388 samples, 0.64%)</title><rect x="79.1473%" y="277" width="0.6427%" height="15" fill="rgb(223,211,37)"/><text x="79.3973%" y="287.50"></text></g><g><title>unlock_page (9 samples, 0.01%)</title><rect x="79.7751%" y="261" width="0.0149%" height="15" fill="rgb(235,49,27)"/><text x="80.0251%" y="271.50"></text></g><g><title>copy_user_enhanced_fast_string (106 samples, 0.18%)</title><rect x="79.8098%" y="277" width="0.1756%" height="15" fill="rgb(254,97,51)"/><text x="80.0598%" y="287.50"></text></g><g><title>iov_iter_copy_from_user_atomic (114 samples, 0.19%)</title><rect x="79.7982%" y="293" width="0.1888%" height="15" fill="rgb(249,51,40)"/><text x="80.0482%" y="303.50"></text></g><g><title>generic_perform_write (1,589 samples, 2.63%)</title><rect x="77.4312%" y="309" width="2.6321%" height="15" fill="rgb(210,128,45)"/><text x="77.6812%" y="319.50">ge..</text></g><g><title>iov_iter_fault_in_readable (46 samples, 0.08%)</title><rect x="79.9871%" y="293" width="0.0762%" height="15" fill="rgb(224,137,50)"/><text x="80.2371%" y="303.50"></text></g><g><title>__get_user_nocheck_1 (37 samples, 0.06%)</title><rect x="80.0020%" y="277" width="0.0613%" height="15" fill="rgb(242,15,9)"/><text x="80.2520%" y="287.50"></text></g><g><title>ext4_buffered_write_iter (1,628 samples, 2.70%)</title><rect x="77.3699%" y="325" width="2.6967%" height="15" fill="rgb(233,187,41)"/><text x="77.6199%" y="335.50">ex..</text></g><g><title>new_sync_write (1,640 samples, 2.72%)</title><rect x="77.3650%" y="341" width="2.7165%" height="15" fill="rgb(227,2,29)"/><text x="77.6150%" y="351.50">ne..</text></g><g><title>ext4_file_write_iter (9 samples, 0.01%)</title><rect x="80.0666%" y="325" width="0.0149%" height="15" fill="rgb(222,70,3)"/><text x="80.3166%" y="335.50"></text></g><g><title>do_syscall_64 (1,733 samples, 2.87%)</title><rect x="77.2358%" y="389" width="2.8706%" height="15" fill="rgb(213,11,42)"/><text x="77.4858%" y="399.50">do..</text></g><g><title>ksys_write (1,724 samples, 2.86%)</title><rect x="77.2507%" y="373" width="2.8557%" height="15" fill="rgb(225,150,9)"/><text x="77.5007%" y="383.50">ks..</text></g><g><title>vfs_write (1,678 samples, 2.78%)</title><rect x="77.3269%" y="357" width="2.7795%" height="15" fill="rgb(230,162,45)"/><text x="77.5769%" y="367.50">vf..</text></g><g><title>security_file_permission (12 samples, 0.02%)</title><rect x="80.0865%" y="341" width="0.0199%" height="15" fill="rgb(222,14,52)"/><text x="80.3365%" y="351.50"></text></g><g><title>apparmor_file_permission (12 samples, 0.02%)</title><rect x="80.0865%" y="325" width="0.0199%" height="15" fill="rgb(254,198,14)"/><text x="80.3365%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,775 samples, 2.94%)</title><rect x="77.2341%" y="405" width="2.9402%" height="15" fill="rgb(220,217,30)"/><text x="77.4841%" y="415.50">en..</text></g><g><title>syscall_exit_to_user_mode (41 samples, 0.07%)</title><rect x="80.1063%" y="389" width="0.0679%" height="15" fill="rgb(215,146,41)"/><text x="80.3563%" y="399.50"></text></g><g><title>syscall_return_via_sysret (14 samples, 0.02%)</title><rect x="80.1776%" y="405" width="0.0232%" height="15" fill="rgb(217,27,36)"/><text x="80.4276%" y="415.50"></text></g><g><title>std::io::Write::write_all (1,881 samples, 3.12%)</title><rect x="77.0867%" y="501" width="3.1157%" height="15" fill="rgb(219,218,39)"/><text x="77.3367%" y="511.50">std..</text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,879 samples, 3.11%)</title><rect x="77.0900%" y="485" width="3.1124%" height="15" fill="rgb(219,4,42)"/><text x="77.3400%" y="495.50">&lt;&amp;s..</text></g><g><title>std::sys::unix::fs::File::write (1,876 samples, 3.11%)</title><rect x="77.0950%" y="469" width="3.1075%" height="15" fill="rgb(249,119,36)"/><text x="77.3450%" y="479.50">std..</text></g><g><title>std::sys::unix::fd::FileDesc::write (1,876 samples, 3.11%)</title><rect x="77.0950%" y="453" width="3.1075%" height="15" fill="rgb(209,23,33)"/><text x="77.3450%" y="463.50">std..</text></g><g><title>__libc_write (1,876 samples, 3.11%)</title><rect x="77.0950%" y="437" width="3.1075%" height="15" fill="rgb(211,10,0)"/><text x="77.3450%" y="447.50">__l..</text></g><g><title>__libc_write (1,875 samples, 3.11%)</title><rect x="77.0966%" y="421" width="3.1058%" height="15" fill="rgb(208,99,37)"/><text x="77.3466%" y="431.50">__l..</text></g><g><title>__pthread_disable_asynccancel (26 samples, 0.04%)</title><rect x="80.3233%" y="405" width="0.0431%" height="15" fill="rgb(213,132,31)"/><text x="80.5733%" y="415.50"></text></g><g><title>__pthread_enable_asynccancel (66 samples, 0.11%)</title><rect x="80.3664%" y="405" width="0.1093%" height="15" fill="rgb(243,129,40)"/><text x="80.6164%" y="415.50"></text></g><g><title>entry_SYSCALL_64 (18 samples, 0.03%)</title><rect x="80.4790%" y="405" width="0.0298%" height="15" fill="rgb(210,66,33)"/><text x="80.7290%" y="415.50"></text></g><g><title>__x64_sys_read (31 samples, 0.05%)</title><rect x="80.5271%" y="373" width="0.0513%" height="15" fill="rgb(209,189,4)"/><text x="80.7771%" y="383.50"></text></g><g><title>__fget_light (175 samples, 0.29%)</title><rect x="80.6414%" y="341" width="0.2899%" height="15" fill="rgb(214,107,37)"/><text x="80.8914%" y="351.50"></text></g><g><title>__fget_files (97 samples, 0.16%)</title><rect x="80.7706%" y="325" width="0.1607%" height="15" fill="rgb(245,88,54)"/><text x="81.0206%" y="335.50"></text></g><g><title>__fdget_pos (204 samples, 0.34%)</title><rect x="80.6215%" y="357" width="0.3379%" height="15" fill="rgb(205,146,20)"/><text x="80.8715%" y="367.50"></text></g><g><title>mutex_lock (17 samples, 0.03%)</title><rect x="80.9312%" y="341" width="0.0282%" height="15" fill="rgb(220,161,25)"/><text x="81.1812%" y="351.50"></text></g><g><title>fput_many (12 samples, 0.02%)</title><rect x="80.9611%" y="357" width="0.0199%" height="15" fill="rgb(215,152,15)"/><text x="81.2111%" y="367.50"></text></g><g><title>mutex_unlock (41 samples, 0.07%)</title><rect x="80.9809%" y="357" width="0.0679%" height="15" fill="rgb(233,192,44)"/><text x="81.2309%" y="367.50"></text></g><g><title>__fsnotify_parent (31 samples, 0.05%)</title><rect x="81.0836%" y="341" width="0.0513%" height="15" fill="rgb(240,170,46)"/><text x="81.3336%" y="351.50"></text></g><g><title>ext4_file_read_iter (57 samples, 0.09%)</title><rect x="81.2443%" y="325" width="0.0944%" height="15" fill="rgb(207,104,33)"/><text x="81.4943%" y="335.50"></text></g><g><title>copy_page_to_iter (1,852 samples, 3.07%)</title><rect x="81.6700%" y="309" width="3.0677%" height="15" fill="rgb(219,21,39)"/><text x="81.9200%" y="319.50">cop..</text></g><g><title>copy_user_enhanced_fast_string (1,807 samples, 2.99%)</title><rect x="81.7445%" y="293" width="2.9932%" height="15" fill="rgb(214,133,29)"/><text x="81.9945%" y="303.50">cop..</text></g><g><title>mark_page_accessed (25 samples, 0.04%)</title><rect x="84.7377%" y="309" width="0.0414%" height="15" fill="rgb(226,93,6)"/><text x="84.9877%" y="319.50"></text></g><g><title>pagevec_lru_move_fn (8 samples, 0.01%)</title><rect x="84.7659%" y="293" width="0.0133%" height="15" fill="rgb(252,222,34)"/><text x="85.0159%" y="303.50"></text></g><g><title>page_cache_async_ra (10 samples, 0.02%)</title><rect x="84.7808%" y="309" width="0.0166%" height="15" fill="rgb(252,92,48)"/><text x="85.0308%" y="319.50"></text></g><g><title>__next_zones_zonelist (23 samples, 0.04%)</title><rect x="84.8669%" y="277" width="0.0381%" height="15" fill="rgb(245,223,24)"/><text x="85.1169%" y="287.50"></text></g><g><title>__list_del_entry_valid (170 samples, 0.28%)</title><rect x="85.1187%" y="261" width="0.2816%" height="15" fill="rgb(205,176,3)"/><text x="85.3687%" y="271.50"></text></g><g><title>kernel_init_free_pages (327 samples, 0.54%)</title><rect x="85.4185%" y="245" width="0.5417%" height="15" fill="rgb(235,151,15)"/><text x="85.6685%" y="255.50"></text></g><g><title>clear_page_erms (319 samples, 0.53%)</title><rect x="85.4317%" y="229" width="0.5284%" height="15" fill="rgb(237,209,11)"/><text x="85.6817%" y="239.50"></text></g><g><title>get_page_from_freelist (636 samples, 1.05%)</title><rect x="84.9100%" y="277" width="1.0535%" height="15" fill="rgb(243,227,24)"/><text x="85.1600%" y="287.50"></text></g><g><title>prep_new_page (338 samples, 0.56%)</title><rect x="85.4036%" y="261" width="0.5599%" height="15" fill="rgb(239,193,16)"/><text x="85.6536%" y="271.50"></text></g><g><title>__alloc_pages_nodemask (683 samples, 1.13%)</title><rect x="84.8338%" y="293" width="1.1313%" height="15" fill="rgb(231,27,9)"/><text x="85.0838%" y="303.50"></text></g><g><title>__mod_lruvec_state (19 samples, 0.03%)</title><rect x="86.3825%" y="261" width="0.0315%" height="15" fill="rgb(219,169,10)"/><text x="86.6325%" y="271.50"></text></g><g><title>__mod_node_page_state (14 samples, 0.02%)</title><rect x="86.3908%" y="245" width="0.0232%" height="15" fill="rgb(244,229,43)"/><text x="86.6408%" y="255.50"></text></g><g><title>__mod_memcg_lruvec_state (21 samples, 0.03%)</title><rect x="86.4140%" y="261" width="0.0348%" height="15" fill="rgb(254,38,20)"/><text x="86.6640%" y="271.50"></text></g><g><title>__mod_memcg_state.part.0 (13 samples, 0.02%)</title><rect x="86.4273%" y="245" width="0.0215%" height="15" fill="rgb(250,47,30)"/><text x="86.6773%" y="255.50"></text></g><g><title>_raw_spin_lock_irq (27 samples, 0.04%)</title><rect x="86.4488%" y="261" width="0.0447%" height="15" fill="rgb(224,124,36)"/><text x="86.6988%" y="271.50"></text></g><g><title>get_mem_cgroup_from_mm (20 samples, 0.03%)</title><rect x="86.5531%" y="245" width="0.0331%" height="15" fill="rgb(246,68,51)"/><text x="86.8031%" y="255.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (15 samples, 0.02%)</title><rect x="86.5863%" y="245" width="0.0248%" height="15" fill="rgb(253,43,49)"/><text x="86.8363%" y="255.50"></text></g><g><title>__count_memcg_events.part.0 (12 samples, 0.02%)</title><rect x="86.5912%" y="229" width="0.0199%" height="15" fill="rgb(219,54,36)"/><text x="86.8412%" y="239.50"></text></g><g><title>mem_cgroup_charge (103 samples, 0.17%)</title><rect x="86.4935%" y="261" width="0.1706%" height="15" fill="rgb(227,133,34)"/><text x="86.7435%" y="271.50"></text></g><g><title>try_charge (29 samples, 0.05%)</title><rect x="86.6161%" y="245" width="0.0480%" height="15" fill="rgb(247,227,15)"/><text x="86.8661%" y="255.50"></text></g><g><title>page_counter_try_charge (7 samples, 0.01%)</title><rect x="86.6525%" y="229" width="0.0116%" height="15" fill="rgb(229,96,14)"/><text x="86.9025%" y="239.50"></text></g><g><title>xa_get_order (95 samples, 0.16%)</title><rect x="86.6674%" y="261" width="0.1574%" height="15" fill="rgb(220,79,17)"/><text x="86.9174%" y="271.50"></text></g><g><title>xas_load (76 samples, 0.13%)</title><rect x="86.6989%" y="245" width="0.1259%" height="15" fill="rgb(205,131,53)"/><text x="86.9489%" y="255.50"></text></g><g><title>xas_start (9 samples, 0.01%)</title><rect x="86.8099%" y="229" width="0.0149%" height="15" fill="rgb(209,50,29)"/><text x="87.0599%" y="239.50"></text></g><g><title>xas_find_conflict (39 samples, 0.06%)</title><rect x="86.8248%" y="261" width="0.0646%" height="15" fill="rgb(245,86,46)"/><text x="87.0748%" y="271.50"></text></g><g><title>workingset_update_node (28 samples, 0.05%)</title><rect x="86.9407%" y="245" width="0.0464%" height="15" fill="rgb(235,66,46)"/><text x="87.1907%" y="255.50"></text></g><g><title>list_lru_del (14 samples, 0.02%)</title><rect x="86.9639%" y="229" width="0.0232%" height="15" fill="rgb(232,148,31)"/><text x="87.2139%" y="239.50"></text></g><g><title>__add_to_page_cache_locked (610 samples, 1.01%)</title><rect x="85.9916%" y="277" width="1.0104%" height="15" fill="rgb(217,149,8)"/><text x="86.2416%" y="287.50"></text></g><g><title>xas_store (66 samples, 0.11%)</title><rect x="86.8927%" y="261" width="0.1093%" height="15" fill="rgb(209,183,11)"/><text x="87.1427%" y="271.50"></text></g><g><title>xas_create (9 samples, 0.01%)</title><rect x="86.9871%" y="245" width="0.0149%" height="15" fill="rgb(208,55,20)"/><text x="87.2371%" y="255.50"></text></g><g><title>__mod_lruvec_state (11 samples, 0.02%)</title><rect x="87.1826%" y="229" width="0.0182%" height="15" fill="rgb(218,39,14)"/><text x="87.4326%" y="239.50"></text></g><g><title>__mod_node_page_state (8 samples, 0.01%)</title><rect x="87.1876%" y="213" width="0.0133%" height="15" fill="rgb(216,169,33)"/><text x="87.4376%" y="223.50"></text></g><g><title>__mod_memcg_lruvec_state (30 samples, 0.05%)</title><rect x="87.2008%" y="229" width="0.0497%" height="15" fill="rgb(233,80,24)"/><text x="87.4508%" y="239.50"></text></g><g><title>__mod_memcg_state.part.0 (17 samples, 0.03%)</title><rect x="87.2223%" y="213" width="0.0282%" height="15" fill="rgb(213,179,31)"/><text x="87.4723%" y="223.50"></text></g><g><title>__mod_zone_page_state (7 samples, 0.01%)</title><rect x="87.2505%" y="229" width="0.0116%" height="15" fill="rgb(209,19,5)"/><text x="87.5005%" y="239.50"></text></g><g><title>page_mapping (24 samples, 0.04%)</title><rect x="87.2671%" y="229" width="0.0398%" height="15" fill="rgb(219,18,35)"/><text x="87.5171%" y="239.50"></text></g><g><title>__pagevec_lru_add_fn (156 samples, 0.26%)</title><rect x="87.0501%" y="245" width="0.2584%" height="15" fill="rgb(209,169,16)"/><text x="87.3001%" y="255.50"></text></g><g><title>mem_cgroup_page_lruvec (8 samples, 0.01%)</title><rect x="87.3217%" y="245" width="0.0133%" height="15" fill="rgb(245,90,51)"/><text x="87.5717%" y="255.50"></text></g><g><title>lru_cache_add (216 samples, 0.36%)</title><rect x="87.0020%" y="277" width="0.3578%" height="15" fill="rgb(220,99,45)"/><text x="87.2520%" y="287.50"></text></g><g><title>pagevec_lru_move_fn (199 samples, 0.33%)</title><rect x="87.0302%" y="261" width="0.3296%" height="15" fill="rgb(249,89,25)"/><text x="87.2802%" y="271.50"></text></g><g><title>release_pages (15 samples, 0.02%)</title><rect x="87.3350%" y="245" width="0.0248%" height="15" fill="rgb(239,193,0)"/><text x="87.5850%" y="255.50"></text></g><g><title>__mod_lruvec_state (39 samples, 0.06%)</title><rect x="87.5487%" y="261" width="0.0646%" height="15" fill="rgb(231,126,1)"/><text x="87.7987%" y="271.50"></text></g><g><title>__mod_node_page_state (31 samples, 0.05%)</title><rect x="87.5619%" y="245" width="0.0513%" height="15" fill="rgb(243,166,3)"/><text x="87.8119%" y="255.50"></text></g><g><title>__mod_memcg_lruvec_state (50 samples, 0.08%)</title><rect x="87.6133%" y="261" width="0.0828%" height="15" fill="rgb(223,22,34)"/><text x="87.8633%" y="271.50"></text></g><g><title>__mod_memcg_state.part.0 (32 samples, 0.05%)</title><rect x="87.6431%" y="245" width="0.0530%" height="15" fill="rgb(251,52,51)"/><text x="87.8931%" y="255.50"></text></g><g><title>__radix_tree_lookup (27 samples, 0.04%)</title><rect x="87.6961%" y="261" width="0.0447%" height="15" fill="rgb(221,165,28)"/><text x="87.9461%" y="271.50"></text></g><g><title>_raw_spin_lock_irq (16 samples, 0.03%)</title><rect x="87.7408%" y="261" width="0.0265%" height="15" fill="rgb(218,121,47)"/><text x="87.9908%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath (11 samples, 0.02%)</title><rect x="87.7491%" y="245" width="0.0182%" height="15" fill="rgb(209,120,9)"/><text x="87.9991%" y="255.50"></text></g><g><title>lru_note_cost (29 samples, 0.05%)</title><rect x="87.7673%" y="261" width="0.0480%" height="15" fill="rgb(236,68,12)"/><text x="88.0173%" y="271.50"></text></g><g><title>lru_note_cost_page (8 samples, 0.01%)</title><rect x="87.8153%" y="261" width="0.0133%" height="15" fill="rgb(225,194,26)"/><text x="88.0653%" y="271.50"></text></g><g><title>mem_cgroup_get_nr_swap_pages (48 samples, 0.08%)</title><rect x="87.8302%" y="261" width="0.0795%" height="15" fill="rgb(231,84,39)"/><text x="88.0802%" y="271.50"></text></g><g><title>add_to_page_cache_lru (1,286 samples, 2.13%)</title><rect x="85.9668%" y="293" width="2.1302%" height="15" fill="rgb(210,11,45)"/><text x="86.2168%" y="303.50">a..</text></g><g><title>workingset_refault (444 samples, 0.74%)</title><rect x="87.3615%" y="277" width="0.7355%" height="15" fill="rgb(224,54,52)"/><text x="87.6115%" y="287.50"></text></g><g><title>workingset_age_nonresident (113 samples, 0.19%)</title><rect x="87.9098%" y="261" width="0.1872%" height="15" fill="rgb(238,102,14)"/><text x="88.1598%" y="271.50"></text></g><g><title>alloc_pages_current (19 samples, 0.03%)</title><rect x="88.0969%" y="293" width="0.0315%" height="15" fill="rgb(243,160,52)"/><text x="88.3469%" y="303.50"></text></g><g><title>__blk_rq_map_sg (28 samples, 0.05%)</title><rect x="88.1698%" y="181" width="0.0464%" height="15" fill="rgb(216,114,19)"/><text x="88.4198%" y="191.50"></text></g><g><title>blk_mq_start_request (8 samples, 0.01%)</title><rect x="88.2162%" y="181" width="0.0133%" height="15" fill="rgb(244,166,37)"/><text x="88.4662%" y="191.50"></text></g><g><title>clflush_cache_range (10 samples, 0.02%)</title><rect x="88.3206%" y="117" width="0.0166%" height="15" fill="rgb(246,29,44)"/><text x="88.5706%" y="127.50"></text></g><g><title>__domain_mapping (35 samples, 0.06%)</title><rect x="88.2858%" y="133" width="0.0580%" height="15" fill="rgb(215,56,53)"/><text x="88.5358%" y="143.50"></text></g><g><title>domain_mapping (50 samples, 0.08%)</title><rect x="88.2626%" y="149" width="0.0828%" height="15" fill="rgb(217,60,2)"/><text x="88.5126%" y="159.50"></text></g><g><title>intel_alloc_iova (14 samples, 0.02%)</title><rect x="88.3454%" y="149" width="0.0232%" height="15" fill="rgb(207,26,24)"/><text x="88.5954%" y="159.50"></text></g><g><title>alloc_iova_fast (13 samples, 0.02%)</title><rect x="88.3471%" y="133" width="0.0215%" height="15" fill="rgb(252,210,15)"/><text x="88.5971%" y="143.50"></text></g><g><title>dma_map_sg_attrs (93 samples, 0.15%)</title><rect x="88.2294%" y="181" width="0.1540%" height="15" fill="rgb(253,209,26)"/><text x="88.4794%" y="191.50"></text></g><g><title>intel_map_sg (90 samples, 0.15%)</title><rect x="88.2344%" y="165" width="0.1491%" height="15" fill="rgb(238,170,14)"/><text x="88.4844%" y="175.50"></text></g><g><title>sg_next (9 samples, 0.01%)</title><rect x="88.3686%" y="149" width="0.0149%" height="15" fill="rgb(216,178,15)"/><text x="88.6186%" y="159.50"></text></g><g><title>dma_pool_alloc (7 samples, 0.01%)</title><rect x="88.3835%" y="181" width="0.0116%" height="15" fill="rgb(250,197,2)"/><text x="88.6335%" y="191.50"></text></g><g><title>memset_erms (7 samples, 0.01%)</title><rect x="88.3984%" y="149" width="0.0116%" height="15" fill="rgb(212,70,42)"/><text x="88.6484%" y="159.50"></text></g><g><title>__kmalloc (9 samples, 0.01%)</title><rect x="88.3967%" y="165" width="0.0149%" height="15" fill="rgb(227,213,9)"/><text x="88.6467%" y="175.50"></text></g><g><title>mempool_alloc (11 samples, 0.02%)</title><rect x="88.3951%" y="181" width="0.0182%" height="15" fill="rgb(245,99,25)"/><text x="88.6451%" y="191.50"></text></g><g><title>blk_finish_plug (176 samples, 0.29%)</title><rect x="88.1367%" y="277" width="0.2915%" height="15" fill="rgb(250,82,29)"/><text x="88.3867%" y="287.50"></text></g><g><title>blk_mq_flush_plug_list (176 samples, 0.29%)</title><rect x="88.1367%" y="261" width="0.2915%" height="15" fill="rgb(241,226,54)"/><text x="88.3867%" y="271.50"></text></g><g><title>blk_mq_sched_insert_requests (174 samples, 0.29%)</title><rect x="88.1400%" y="245" width="0.2882%" height="15" fill="rgb(221,99,41)"/><text x="88.3900%" y="255.50"></text></g><g><title>blk_mq_try_issue_list_directly (172 samples, 0.28%)</title><rect x="88.1433%" y="229" width="0.2849%" height="15" fill="rgb(213,90,21)"/><text x="88.3933%" y="239.50"></text></g><g><title>__blk_mq_try_issue_directly (170 samples, 0.28%)</title><rect x="88.1466%" y="213" width="0.2816%" height="15" fill="rgb(205,208,24)"/><text x="88.3966%" y="223.50"></text></g><g><title>nvme_queue_rq (168 samples, 0.28%)</title><rect x="88.1499%" y="197" width="0.2783%" height="15" fill="rgb(246,31,12)"/><text x="88.3999%" y="207.50"></text></g><g><title>bio_add_page (22 samples, 0.04%)</title><rect x="88.5723%" y="261" width="0.0364%" height="15" fill="rgb(213,154,6)"/><text x="88.8223%" y="271.50"></text></g><g><title>__bio_try_merge_page (9 samples, 0.01%)</title><rect x="88.5939%" y="245" width="0.0149%" height="15" fill="rgb(222,163,29)"/><text x="88.8439%" y="255.50"></text></g><g><title>bvec_alloc (12 samples, 0.02%)</title><rect x="88.6137%" y="245" width="0.0199%" height="15" fill="rgb(227,201,8)"/><text x="88.8637%" y="255.50"></text></g><g><title>kmem_cache_alloc (10 samples, 0.02%)</title><rect x="88.6171%" y="229" width="0.0166%" height="15" fill="rgb(233,9,32)"/><text x="88.8671%" y="239.50"></text></g><g><title>bio_alloc_bioset (22 samples, 0.04%)</title><rect x="88.6088%" y="261" width="0.0364%" height="15" fill="rgb(217,54,24)"/><text x="88.8588%" y="271.50"></text></g><g><title>mempool_alloc (7 samples, 0.01%)</title><rect x="88.6336%" y="245" width="0.0116%" height="15" fill="rgb(235,192,0)"/><text x="88.8836%" y="255.50"></text></g><g><title>__check_block_validity.constprop.0 (13 samples, 0.02%)</title><rect x="88.6585%" y="245" width="0.0215%" height="15" fill="rgb(235,45,9)"/><text x="88.9085%" y="255.50"></text></g><g><title>ext4_inode_block_valid (8 samples, 0.01%)</title><rect x="88.6667%" y="229" width="0.0133%" height="15" fill="rgb(246,42,40)"/><text x="88.9167%" y="239.50"></text></g><g><title>ext4_es_insert_extent (7 samples, 0.01%)</title><rect x="88.6800%" y="245" width="0.0116%" height="15" fill="rgb(248,111,24)"/><text x="88.9300%" y="255.50"></text></g><g><title>ext4_es_lookup_extent (13 samples, 0.02%)</title><rect x="88.6916%" y="245" width="0.0215%" height="15" fill="rgb(249,65,22)"/><text x="88.9416%" y="255.50"></text></g><g><title>ext4_ext_map_blocks (18 samples, 0.03%)</title><rect x="88.7131%" y="245" width="0.0298%" height="15" fill="rgb(238,111,51)"/><text x="88.9631%" y="255.50"></text></g><g><title>ext4_find_extent (13 samples, 0.02%)</title><rect x="88.7214%" y="229" width="0.0215%" height="15" fill="rgb(250,118,22)"/><text x="88.9714%" y="239.50"></text></g><g><title>ext4_map_blocks (55 samples, 0.09%)</title><rect x="88.6535%" y="261" width="0.0911%" height="15" fill="rgb(234,84,26)"/><text x="88.9035%" y="271.50"></text></g><g><title>psi_memstall_enter (19 samples, 0.03%)</title><rect x="88.7496%" y="245" width="0.0315%" height="15" fill="rgb(243,172,12)"/><text x="88.9996%" y="255.50"></text></g><g><title>psi_task_change (18 samples, 0.03%)</title><rect x="88.7512%" y="229" width="0.0298%" height="15" fill="rgb(236,150,49)"/><text x="89.0012%" y="239.50"></text></g><g><title>psi_group_change (13 samples, 0.02%)</title><rect x="88.7595%" y="213" width="0.0215%" height="15" fill="rgb(225,197,26)"/><text x="89.0095%" y="223.50"></text></g><g><title>psi_memstall_leave (8 samples, 0.01%)</title><rect x="88.7810%" y="245" width="0.0133%" height="15" fill="rgb(214,17,42)"/><text x="89.0310%" y="255.50"></text></g><g><title>blk_mq_submit_bio (28 samples, 0.05%)</title><rect x="88.7976%" y="229" width="0.0464%" height="15" fill="rgb(224,165,40)"/><text x="89.0476%" y="239.50"></text></g><g><title>submit_bio (65 samples, 0.11%)</title><rect x="88.7446%" y="261" width="0.1077%" height="15" fill="rgb(246,100,4)"/><text x="88.9946%" y="271.50"></text></g><g><title>submit_bio_noacct (35 samples, 0.06%)</title><rect x="88.7943%" y="245" width="0.0580%" height="15" fill="rgb(222,103,0)"/><text x="89.0443%" y="255.50"></text></g><g><title>__blk_mq_alloc_request (7 samples, 0.01%)</title><rect x="88.8655%" y="229" width="0.0116%" height="15" fill="rgb(227,189,26)"/><text x="89.1155%" y="239.50"></text></g><g><title>blk_mq_get_tag (7 samples, 0.01%)</title><rect x="88.8655%" y="213" width="0.0116%" height="15" fill="rgb(214,202,17)"/><text x="89.1155%" y="223.50"></text></g><g><title>__blk_queue_split (8 samples, 0.01%)</title><rect x="88.8804%" y="229" width="0.0133%" height="15" fill="rgb(229,111,3)"/><text x="89.1304%" y="239.50"></text></g><g><title>blk_mq_submit_bio (42 samples, 0.07%)</title><rect x="88.8556%" y="245" width="0.0696%" height="15" fill="rgb(229,172,15)"/><text x="89.1056%" y="255.50"></text></g><g><title>submit_bio_noacct (48 samples, 0.08%)</title><rect x="88.8523%" y="261" width="0.0795%" height="15" fill="rgb(230,224,35)"/><text x="89.1023%" y="271.50"></text></g><g><title>ext4_mpage_readpages (325 samples, 0.54%)</title><rect x="88.4299%" y="277" width="0.5383%" height="15" fill="rgb(251,141,6)"/><text x="88.6799%" y="287.50"></text></g><g><title>xa_load (22 samples, 0.04%)</title><rect x="88.9318%" y="261" width="0.0364%" height="15" fill="rgb(225,208,6)"/><text x="89.1818%" y="271.50"></text></g><g><title>xas_load (18 samples, 0.03%)</title><rect x="88.9384%" y="245" width="0.0298%" height="15" fill="rgb(246,181,16)"/><text x="89.1884%" y="255.50"></text></g><g><title>read_pages (508 samples, 0.84%)</title><rect x="88.1301%" y="293" width="0.8415%" height="15" fill="rgb(227,129,36)"/><text x="88.3801%" y="303.50"></text></g><g><title>page_cache_ra_unbounded (2,570 samples, 4.26%)</title><rect x="84.7973%" y="309" width="4.2570%" height="15" fill="rgb(248,117,24)"/><text x="85.0473%" y="319.50">page_..</text></g><g><title>xa_load (50 samples, 0.08%)</title><rect x="88.9715%" y="293" width="0.0828%" height="15" fill="rgb(214,185,35)"/><text x="89.2215%" y="303.50"></text></g><g><title>xas_load (44 samples, 0.07%)</title><rect x="88.9815%" y="277" width="0.0729%" height="15" fill="rgb(236,150,34)"/><text x="89.2315%" y="287.50"></text></g><g><title>pagecache_get_page (278 samples, 0.46%)</title><rect x="89.0543%" y="309" width="0.4605%" height="15" fill="rgb(243,228,27)"/><text x="89.3043%" y="319.50"></text></g><g><title>find_get_entry (255 samples, 0.42%)</title><rect x="89.0924%" y="293" width="0.4224%" height="15" fill="rgb(245,77,44)"/><text x="89.3424%" y="303.50"></text></g><g><title>xas_load (141 samples, 0.23%)</title><rect x="89.2813%" y="277" width="0.2336%" height="15" fill="rgb(235,214,42)"/><text x="89.5313%" y="287.50"></text></g><g><title>xas_start (37 samples, 0.06%)</title><rect x="89.4535%" y="261" width="0.0613%" height="15" fill="rgb(221,74,3)"/><text x="89.7035%" y="271.50"></text></g><g><title>touch_atime (38 samples, 0.06%)</title><rect x="89.5148%" y="309" width="0.0629%" height="15" fill="rgb(206,121,29)"/><text x="89.7648%" y="319.50"></text></g><g><title>atime_needs_update (34 samples, 0.06%)</title><rect x="89.5215%" y="293" width="0.0563%" height="15" fill="rgb(249,131,53)"/><text x="89.7715%" y="303.50"></text></g><g><title>current_time (21 samples, 0.03%)</title><rect x="89.5430%" y="277" width="0.0348%" height="15" fill="rgb(236,170,29)"/><text x="89.7930%" y="287.50"></text></g><g><title>ktime_get_coarse_real_ts64 (14 samples, 0.02%)</title><rect x="89.5546%" y="261" width="0.0232%" height="15" fill="rgb(247,96,15)"/><text x="89.8046%" y="271.50"></text></g><g><title>io_schedule (7 samples, 0.01%)</title><rect x="89.5811%" y="293" width="0.0116%" height="15" fill="rgb(211,210,7)"/><text x="89.8311%" y="303.50"></text></g><g><title>schedule (7 samples, 0.01%)</title><rect x="89.5811%" y="277" width="0.0116%" height="15" fill="rgb(240,88,50)"/><text x="89.8311%" y="287.50"></text></g><g><title>__schedule (7 samples, 0.01%)</title><rect x="89.5811%" y="261" width="0.0116%" height="15" fill="rgb(209,229,26)"/><text x="89.8311%" y="271.50"></text></g><g><title>wait_on_page_bit_common (11 samples, 0.02%)</title><rect x="89.5778%" y="309" width="0.0182%" height="15" fill="rgb(210,68,23)"/><text x="89.8278%" y="319.50"></text></g><g><title>generic_file_buffered_read (5,003 samples, 8.29%)</title><rect x="81.3387%" y="325" width="8.2871%" height="15" fill="rgb(229,180,13)"/><text x="81.5887%" y="335.50">generic_file..</text></g><g><title>workingset_activation (18 samples, 0.03%)</title><rect x="89.5960%" y="309" width="0.0298%" height="15" fill="rgb(236,53,44)"/><text x="89.8460%" y="319.50"></text></g><g><title>workingset_age_nonresident (17 samples, 0.03%)</title><rect x="89.5977%" y="293" width="0.0282%" height="15" fill="rgb(244,214,29)"/><text x="89.8477%" y="303.50"></text></g><g><title>generic_file_read_iter (10 samples, 0.02%)</title><rect x="89.6258%" y="325" width="0.0166%" height="15" fill="rgb(220,75,29)"/><text x="89.8758%" y="335.50"></text></g><g><title>new_sync_read (5,138 samples, 8.51%)</title><rect x="81.1350%" y="341" width="8.5107%" height="15" fill="rgb(214,183,37)"/><text x="81.3850%" y="351.50">new_sync_read</text></g><g><title>ksys_read (5,532 samples, 9.16%)</title><rect x="80.5801%" y="373" width="9.1633%" height="15" fill="rgb(239,117,29)"/><text x="80.8301%" y="383.50">ksys_read</text></g><g><title>vfs_read (5,249 samples, 8.69%)</title><rect x="81.0488%" y="357" width="8.6946%" height="15" fill="rgb(237,171,35)"/><text x="81.2988%" y="367.50">vfs_read</text></g><g><title>security_file_permission (57 samples, 0.09%)</title><rect x="89.6490%" y="341" width="0.0944%" height="15" fill="rgb(229,178,53)"/><text x="89.8990%" y="351.50"></text></g><g><title>apparmor_file_permission (41 samples, 0.07%)</title><rect x="89.6755%" y="325" width="0.0679%" height="15" fill="rgb(210,102,19)"/><text x="89.9255%" y="335.50"></text></g><g><title>do_syscall_64 (5,571 samples, 9.23%)</title><rect x="80.5238%" y="389" width="9.2279%" height="15" fill="rgb(235,127,22)"/><text x="80.7738%" y="399.50">do_syscall_64</text></g><g><title>entry_SYSCALL_64_after_hwframe (5,913 samples, 9.79%)</title><rect x="80.5089%" y="405" width="9.7944%" height="15" fill="rgb(244,31,31)"/><text x="80.7589%" y="415.50">entry_SYSCALL_..</text></g><g><title>syscall_exit_to_user_mode (333 samples, 0.55%)</title><rect x="89.7517%" y="389" width="0.5516%" height="15" fill="rgb(231,43,21)"/><text x="90.0017%" y="399.50"></text></g><g><title>exit_to_user_mode_prepare (13 samples, 0.02%)</title><rect x="90.2818%" y="373" width="0.0215%" height="15" fill="rgb(217,131,35)"/><text x="90.5318%" y="383.50"></text></g><g><title>fpregs_assert_state_consistent (8 samples, 0.01%)</title><rect x="90.2900%" y="357" width="0.0133%" height="15" fill="rgb(221,149,4)"/><text x="90.5400%" y="367.50"></text></g><g><title>syscall_return_via_sysret (140 samples, 0.23%)</title><rect x="90.3049%" y="405" width="0.2319%" height="15" fill="rgb(232,170,28)"/><text x="90.5549%" y="415.50"></text></g><g><title>__libc_read (6,212 samples, 10.29%)</title><rect x="80.2703%" y="437" width="10.2897%" height="15" fill="rgb(238,56,10)"/><text x="80.5203%" y="447.50">__libc_read</text></g><g><title>__libc_read (6,208 samples, 10.28%)</title><rect x="80.2770%" y="421" width="10.2831%" height="15" fill="rgb(235,196,14)"/><text x="80.5270%" y="431.50">__libc_read</text></g><g><title>workingset_refault (12 samples, 0.02%)</title><rect x="90.5402%" y="405" width="0.0199%" height="15" fill="rgb(216,45,48)"/><text x="90.7902%" y="415.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (8,221 samples, 13.62%)</title><rect x="76.9492%" y="533" width="13.6175%" height="15" fill="rgb(238,213,17)"/><text x="77.1992%" y="543.50">tokio::runtime::task:..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (8,218 samples, 13.61%)</title><rect x="76.9542%" y="517" width="13.6125%" height="15" fill="rgb(212,13,2)"/><text x="77.2042%" y="527.50">&lt;tokio::runtime::bloc..</text></g><g><title>tokio::io::blocking::Buf::read_from (6,257 samples, 10.36%)</title><rect x="80.2024%" y="501" width="10.3642%" height="15" fill="rgb(240,114,20)"/><text x="80.4524%" y="511.50">tokio::io::bloc..</text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (6,227 samples, 10.31%)</title><rect x="80.2521%" y="485" width="10.3146%" height="15" fill="rgb(228,41,40)"/><text x="80.5021%" y="495.50">&lt;&amp;std::fs::File..</text></g><g><title>std::sys::unix::fs::File::read (6,217 samples, 10.30%)</title><rect x="80.2687%" y="469" width="10.2980%" height="15" fill="rgb(244,132,35)"/><text x="80.5187%" y="479.50">std::sys::unix:..</text></g><g><title>std::sys::unix::fd::FileDesc::read (6,217 samples, 10.30%)</title><rect x="80.2687%" y="453" width="10.2980%" height="15" fill="rgb(253,189,4)"/><text x="80.5187%" y="463.50">std::sys::unix:..</text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (27 samples, 0.04%)</title><rect x="90.9145%" y="485" width="0.0447%" height="15" fill="rgb(224,37,19)"/><text x="91.1645%" y="495.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (27 samples, 0.04%)</title><rect x="90.9145%" y="469" width="0.0447%" height="15" fill="rgb(235,223,18)"/><text x="91.1645%" y="479.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (9 samples, 0.01%)</title><rect x="90.9443%" y="453" width="0.0149%" height="15" fill="rgb(235,163,25)"/><text x="91.1943%" y="463.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (35 samples, 0.06%)</title><rect x="90.9642%" y="485" width="0.0580%" height="15" fill="rgb(217,145,28)"/><text x="91.2142%" y="495.50"></text></g><g><title>__GI___clock_gettime (52 samples, 0.09%)</title><rect x="91.0305%" y="437" width="0.0861%" height="15" fill="rgb(223,223,32)"/><text x="91.2805%" y="447.50"></text></g><g><title>__vdso_clock_gettime (37 samples, 0.06%)</title><rect x="91.0553%" y="421" width="0.0613%" height="15" fill="rgb(227,189,39)"/><text x="91.3053%" y="431.50"></text></g><g><title>[[vdso]] (25 samples, 0.04%)</title><rect x="91.0752%" y="405" width="0.0414%" height="15" fill="rgb(248,10,22)"/><text x="91.3252%" y="415.50"></text></g><g><title>std::time::Instant::now (161 samples, 0.27%)</title><rect x="91.0222%" y="485" width="0.2667%" height="15" fill="rgb(248,46,39)"/><text x="91.2722%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (161 samples, 0.27%)</title><rect x="91.0222%" y="469" width="0.2667%" height="15" fill="rgb(248,113,48)"/><text x="91.2722%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::now (161 samples, 0.27%)</title><rect x="91.0222%" y="453" width="0.2667%" height="15" fill="rgb(245,16,25)"/><text x="91.2722%" y="463.50"></text></g><g><title>tokio::io::blocking::Buf::read_from (104 samples, 0.17%)</title><rect x="91.1166%" y="437" width="0.1723%" height="15" fill="rgb(249,152,16)"/><text x="91.3666%" y="447.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (104 samples, 0.17%)</title><rect x="91.1166%" y="421" width="0.1723%" height="15" fill="rgb(250,16,1)"/><text x="91.3666%" y="431.50"></text></g><g><title>std::sys::unix::fs::File::read (104 samples, 0.17%)</title><rect x="91.1166%" y="405" width="0.1723%" height="15" fill="rgb(249,138,3)"/><text x="91.3666%" y="415.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (104 samples, 0.17%)</title><rect x="91.1166%" y="389" width="0.1723%" height="15" fill="rgb(227,71,41)"/><text x="91.3666%" y="399.50"></text></g><g><title>__libc_read (104 samples, 0.17%)</title><rect x="91.1166%" y="373" width="0.1723%" height="15" fill="rgb(209,184,23)"/><text x="91.3666%" y="383.50"></text></g><g><title>__libc_read (104 samples, 0.17%)</title><rect x="91.1166%" y="357" width="0.1723%" height="15" fill="rgb(223,215,31)"/><text x="91.3666%" y="367.50"></text></g><g><title>entry_SYSCALL_64 (104 samples, 0.17%)</title><rect x="91.1166%" y="341" width="0.1723%" height="15" fill="rgb(210,146,28)"/><text x="91.3666%" y="351.50"></text></g><g><title>entry_SYSCALL_64 (16 samples, 0.03%)</title><rect x="91.3402%" y="469" width="0.0265%" height="15" fill="rgb(209,183,41)"/><text x="91.5902%" y="479.50"></text></g><g><title>_raw_spin_lock (52 samples, 0.09%)</title><rect x="91.6947%" y="389" width="0.0861%" height="15" fill="rgb(209,224,45)"/><text x="91.9447%" y="399.50"></text></g><g><title>get_futex_key (16 samples, 0.03%)</title><rect x="91.7808%" y="389" width="0.0265%" height="15" fill="rgb(224,209,51)"/><text x="92.0308%" y="399.50"></text></g><g><title>hash_futex (24 samples, 0.04%)</title><rect x="91.8073%" y="389" width="0.0398%" height="15" fill="rgb(223,17,39)"/><text x="92.0573%" y="399.50"></text></g><g><title>mark_wake_futex (130 samples, 0.22%)</title><rect x="91.8471%" y="389" width="0.2153%" height="15" fill="rgb(234,204,37)"/><text x="92.0971%" y="399.50"></text></g><g><title>__unqueue_futex (53 samples, 0.09%)</title><rect x="91.9746%" y="373" width="0.0878%" height="15" fill="rgb(236,120,5)"/><text x="92.2246%" y="383.50"></text></g><g><title>plist_del (8 samples, 0.01%)</title><rect x="92.0492%" y="357" width="0.0133%" height="15" fill="rgb(248,97,27)"/><text x="92.2992%" y="367.50"></text></g><g><title>wake_q_add_safe (11 samples, 0.02%)</title><rect x="92.0624%" y="389" width="0.0182%" height="15" fill="rgb(240,66,17)"/><text x="92.3124%" y="399.50"></text></g><g><title>_raw_spin_lock (20 samples, 0.03%)</title><rect x="92.1850%" y="357" width="0.0331%" height="15" fill="rgb(210,79,3)"/><text x="92.4350%" y="367.50"></text></g><g><title>_raw_spin_lock_irqsave (35 samples, 0.06%)</title><rect x="92.2181%" y="357" width="0.0580%" height="15" fill="rgb(214,176,27)"/><text x="92.4681%" y="367.50"></text></g><g><title>available_idle_cpu (56 samples, 0.09%)</title><rect x="92.3970%" y="341" width="0.0928%" height="15" fill="rgb(235,185,3)"/><text x="92.6470%" y="351.50"></text></g><g><title>select_task_rq_fair (145 samples, 0.24%)</title><rect x="92.2860%" y="357" width="0.2402%" height="15" fill="rgb(227,24,12)"/><text x="92.5360%" y="367.50"></text></g><g><title>update_cfs_rq_h_load (22 samples, 0.04%)</title><rect x="92.4898%" y="341" width="0.0364%" height="15" fill="rgb(252,169,48)"/><text x="92.7398%" y="351.50"></text></g><g><title>rb_insert_color (9 samples, 0.01%)</title><rect x="93.0679%" y="309" width="0.0149%" height="15" fill="rgb(212,65,1)"/><text x="93.3179%" y="319.50"></text></g><g><title>reweight_entity (30 samples, 0.05%)</title><rect x="93.0828%" y="309" width="0.0497%" height="15" fill="rgb(242,39,24)"/><text x="93.3328%" y="319.50"></text></g><g><title>update_cfs_group (38 samples, 0.06%)</title><rect x="93.1325%" y="309" width="0.0629%" height="15" fill="rgb(249,32,23)"/><text x="93.3825%" y="319.50"></text></g><g><title>__update_load_avg_cfs_rq (38 samples, 0.06%)</title><rect x="93.2749%" y="293" width="0.0629%" height="15" fill="rgb(251,195,23)"/><text x="93.5249%" y="303.50"></text></g><g><title>enqueue_task_fair (472 samples, 0.78%)</title><rect x="92.5991%" y="341" width="0.7818%" height="15" fill="rgb(236,174,8)"/><text x="92.8491%" y="351.50"></text></g><g><title>enqueue_entity (317 samples, 0.53%)</title><rect x="92.8558%" y="325" width="0.5251%" height="15" fill="rgb(220,197,8)"/><text x="93.1058%" y="335.50"></text></g><g><title>update_load_avg (107 samples, 0.18%)</title><rect x="93.2037%" y="309" width="0.1772%" height="15" fill="rgb(240,108,37)"/><text x="93.4537%" y="319.50"></text></g><g><title>__update_load_avg_se (26 samples, 0.04%)</title><rect x="93.3379%" y="293" width="0.0431%" height="15" fill="rgb(232,176,24)"/><text x="93.5879%" y="303.50"></text></g><g><title>ttwu_do_activate (1,100 samples, 1.82%)</title><rect x="92.5262%" y="357" width="1.8221%" height="15" fill="rgb(243,35,29)"/><text x="92.7762%" y="367.50">t..</text></g><g><title>psi_task_change (584 samples, 0.97%)</title><rect x="93.3809%" y="341" width="0.9674%" height="15" fill="rgb(210,37,18)"/><text x="93.6309%" y="351.50"></text></g><g><title>psi_group_change (531 samples, 0.88%)</title><rect x="93.4687%" y="325" width="0.8796%" height="15" fill="rgb(224,184,40)"/><text x="93.7187%" y="335.50"></text></g><g><title>record_times (82 samples, 0.14%)</title><rect x="94.2125%" y="309" width="0.1358%" height="15" fill="rgb(236,39,29)"/><text x="94.4625%" y="319.50"></text></g><g><title>sched_clock_cpu (57 samples, 0.09%)</title><rect x="94.2539%" y="293" width="0.0944%" height="15" fill="rgb(232,48,39)"/><text x="94.5039%" y="303.50"></text></g><g><title>sched_clock (48 samples, 0.08%)</title><rect x="94.2688%" y="277" width="0.0795%" height="15" fill="rgb(236,34,42)"/><text x="94.5188%" y="287.50"></text></g><g><title>native_sched_clock (42 samples, 0.07%)</title><rect x="94.2787%" y="261" width="0.0696%" height="15" fill="rgb(243,106,37)"/><text x="94.5287%" y="271.50"></text></g><g><title>ttwu_do_wakeup (52 samples, 0.09%)</title><rect x="94.3483%" y="357" width="0.0861%" height="15" fill="rgb(218,96,6)"/><text x="94.5983%" y="367.50"></text></g><g><title>check_preempt_curr (48 samples, 0.08%)</title><rect x="94.3549%" y="341" width="0.0795%" height="15" fill="rgb(235,130,12)"/><text x="94.6049%" y="351.50"></text></g><g><title>resched_curr (35 samples, 0.06%)</title><rect x="94.3764%" y="325" width="0.0580%" height="15" fill="rgb(231,95,0)"/><text x="94.6264%" y="335.50"></text></g><g><title>ttwu_queue_wakelist (34 samples, 0.06%)</title><rect x="94.4344%" y="357" width="0.0563%" height="15" fill="rgb(228,12,23)"/><text x="94.6844%" y="367.50"></text></g><g><title>__x64_sys_futex (1,928 samples, 3.19%)</title><rect x="91.3833%" y="437" width="3.1936%" height="15" fill="rgb(216,12,1)"/><text x="91.6333%" y="447.50">__x..</text></g><g><title>do_futex (1,892 samples, 3.13%)</title><rect x="91.4429%" y="421" width="3.1340%" height="15" fill="rgb(219,59,3)"/><text x="91.6929%" y="431.50">do_..</text></g><g><title>futex_wake (1,851 samples, 3.07%)</title><rect x="91.5108%" y="405" width="3.0660%" height="15" fill="rgb(215,208,46)"/><text x="91.7608%" y="415.50">fut..</text></g><g><title>wake_up_q (1,507 samples, 2.50%)</title><rect x="92.0806%" y="389" width="2.4962%" height="15" fill="rgb(254,224,29)"/><text x="92.3306%" y="399.50">wa..</text></g><g><title>try_to_wake_up (1,474 samples, 2.44%)</title><rect x="92.1353%" y="373" width="2.4416%" height="15" fill="rgb(232,14,29)"/><text x="92.3853%" y="383.50">tr..</text></g><g><title>update_rq_clock (52 samples, 0.09%)</title><rect x="94.4907%" y="357" width="0.0861%" height="15" fill="rgb(208,45,52)"/><text x="94.7407%" y="367.50"></text></g><g><title>sched_clock_cpu (17 samples, 0.03%)</title><rect x="94.5487%" y="341" width="0.0282%" height="15" fill="rgb(234,191,28)"/><text x="94.7987%" y="351.50"></text></g><g><title>sched_clock (16 samples, 0.03%)</title><rect x="94.5504%" y="325" width="0.0265%" height="15" fill="rgb(244,67,43)"/><text x="94.8004%" y="335.50"></text></g><g><title>native_sched_clock (15 samples, 0.02%)</title><rect x="94.5520%" y="309" width="0.0248%" height="15" fill="rgb(236,189,24)"/><text x="94.8020%" y="319.50"></text></g><g><title>do_syscall_64 (1,939 samples, 3.21%)</title><rect x="91.3783%" y="453" width="3.2118%" height="15" fill="rgb(239,214,33)"/><text x="91.6283%" y="463.50">do_..</text></g><g><title>syscall_enter_from_user_mode (8 samples, 0.01%)</title><rect x="94.5769%" y="437" width="0.0133%" height="15" fill="rgb(226,176,41)"/><text x="94.8269%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,289 samples, 3.79%)</title><rect x="91.3667%" y="469" width="3.7916%" height="15" fill="rgb(248,47,8)"/><text x="91.6167%" y="479.50">entr..</text></g><g><title>syscall_exit_to_user_mode (343 samples, 0.57%)</title><rect x="94.5901%" y="453" width="0.5682%" height="15" fill="rgb(218,81,44)"/><text x="94.8401%" y="463.50"></text></g><g><title>exit_to_user_mode_prepare (8 samples, 0.01%)</title><rect x="95.1450%" y="437" width="0.0133%" height="15" fill="rgb(213,98,6)"/><text x="95.3950%" y="447.50"></text></g><g><title>tokio::park::thread::wake_by_ref (2,848 samples, 4.72%)</title><rect x="90.6743%" y="517" width="4.7175%" height="15" fill="rgb(222,85,22)"/><text x="90.9243%" y="527.50">tokio..</text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (2,781 samples, 4.61%)</title><rect x="90.7853%" y="501" width="4.6065%" height="15" fill="rgb(239,46,39)"/><text x="91.0353%" y="511.50">parki..</text></g><g><title>syscall (2,477 samples, 4.10%)</title><rect x="91.2889%" y="485" width="4.1030%" height="15" fill="rgb(237,12,29)"/><text x="91.5389%" y="495.50">sysc..</text></g><g><title>syscall_return_via_sysret (141 samples, 0.23%)</title><rect x="95.1583%" y="469" width="0.2336%" height="15" fill="rgb(214,77,8)"/><text x="95.4083%" y="479.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (18 samples, 0.03%)</title><rect x="95.3918%" y="517" width="0.0298%" height="15" fill="rgb(217,168,37)"/><text x="95.6418%" y="527.50"></text></g><g><title>enqueue_task_fair (11 samples, 0.02%)</title><rect x="95.4614%" y="325" width="0.0182%" height="15" fill="rgb(221,217,23)"/><text x="95.7114%" y="335.50"></text></g><g><title>enqueue_entity (10 samples, 0.02%)</title><rect x="95.4631%" y="309" width="0.0166%" height="15" fill="rgb(243,229,36)"/><text x="95.7131%" y="319.50"></text></g><g><title>do_syscall_64 (30 samples, 0.05%)</title><rect x="95.4382%" y="437" width="0.0497%" height="15" fill="rgb(251,163,40)"/><text x="95.6882%" y="447.50"></text></g><g><title>__x64_sys_futex (30 samples, 0.05%)</title><rect x="95.4382%" y="421" width="0.0497%" height="15" fill="rgb(237,222,12)"/><text x="95.6882%" y="431.50"></text></g><g><title>do_futex (29 samples, 0.05%)</title><rect x="95.4399%" y="405" width="0.0480%" height="15" fill="rgb(248,132,6)"/><text x="95.6899%" y="415.50"></text></g><g><title>futex_wake (28 samples, 0.05%)</title><rect x="95.4415%" y="389" width="0.0464%" height="15" fill="rgb(227,167,50)"/><text x="95.6915%" y="399.50"></text></g><g><title>wake_up_q (23 samples, 0.04%)</title><rect x="95.4498%" y="373" width="0.0381%" height="15" fill="rgb(242,84,37)"/><text x="95.6998%" y="383.50"></text></g><g><title>try_to_wake_up (21 samples, 0.03%)</title><rect x="95.4531%" y="357" width="0.0348%" height="15" fill="rgb(212,4,50)"/><text x="95.7031%" y="367.50"></text></g><g><title>ttwu_do_activate (16 samples, 0.03%)</title><rect x="95.4614%" y="341" width="0.0265%" height="15" fill="rgb(230,228,32)"/><text x="95.7114%" y="351.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (40 samples, 0.07%)</title><rect x="95.4266%" y="485" width="0.0663%" height="15" fill="rgb(248,217,23)"/><text x="95.6766%" y="495.50"></text></g><g><title>syscall (34 samples, 0.06%)</title><rect x="95.4366%" y="469" width="0.0563%" height="15" fill="rgb(238,197,32)"/><text x="95.6866%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 0.05%)</title><rect x="95.4382%" y="453" width="0.0547%" height="15" fill="rgb(236,106,1)"/><text x="95.6882%" y="463.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (19,098 samples, 31.63%)</title><rect x="63.8618%" y="549" width="31.6344%" height="15" fill="rgb(219,228,13)"/><text x="64.1118%" y="559.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (2,976 samples, 4.93%)</title><rect x="90.5667%" y="533" width="4.9295%" height="15" fill="rgb(238,30,35)"/><text x="90.8167%" y="543.50">tokio:..</text></g><g><title>tokio::runtime::task::waker::wake_by_ref (45 samples, 0.07%)</title><rect x="95.4216%" y="517" width="0.0745%" height="15" fill="rgb(236,70,23)"/><text x="95.6716%" y="527.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (44 samples, 0.07%)</title><rect x="95.4233%" y="501" width="0.0729%" height="15" fill="rgb(249,104,48)"/><text x="95.6733%" y="511.50"></text></g><g><title>__GI___clone (23,262 samples, 38.53%)</title><rect x="56.9694%" y="677" width="38.5317%" height="15" fill="rgb(254,117,50)"/><text x="57.2194%" y="687.50">__GI___clone</text></g><g><title>start_thread (23,262 samples, 38.53%)</title><rect x="56.9694%" y="661" width="38.5317%" height="15" fill="rgb(223,152,4)"/><text x="57.2194%" y="671.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (23,200 samples, 38.43%)</title><rect x="57.0721%" y="645" width="38.4290%" height="15" fill="rgb(245,6,2)"/><text x="57.3221%" y="655.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (23,200 samples, 38.43%)</title><rect x="57.0721%" y="629" width="38.4290%" height="15" fill="rgb(249,150,24)"/><text x="57.3221%" y="639.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (23,200 samples, 38.43%)</title><rect x="57.0721%" y="613" width="38.4290%" height="15" fill="rgb(228,185,42)"/><text x="57.3221%" y="623.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (23,200 samples, 38.43%)</title><rect x="57.0721%" y="597" width="38.4290%" height="15" fill="rgb(226,39,33)"/><text x="57.3221%" y="607.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (23,198 samples, 38.43%)</title><rect x="57.0754%" y="581" width="38.4257%" height="15" fill="rgb(221,166,19)"/><text x="57.3254%" y="591.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (23,198 samples, 38.43%)</title><rect x="57.0754%" y="565" width="38.4257%" height="15" fill="rgb(209,109,2)"/><text x="57.3254%" y="575.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>__vdso_clock_gettime (19 samples, 0.03%)</title><rect x="95.5045%" y="677" width="0.0315%" height="15" fill="rgb(252,216,26)"/><text x="95.7545%" y="687.50"></text></g><g><title>asm_exc_page_fault (127 samples, 0.21%)</title><rect x="95.5392%" y="677" width="0.2104%" height="15" fill="rgb(227,173,36)"/><text x="95.7892%" y="687.50"></text></g><g><title>blake3_compress_in_place_sse41 (2,267 samples, 3.76%)</title><rect x="95.7513%" y="677" width="3.7551%" height="15" fill="rgb(209,90,7)"/><text x="96.0013%" y="687.50">blak..</text></g><g><title>__perf_event_task_sched_in (14 samples, 0.02%)</title><rect x="99.5412%" y="533" width="0.0232%" height="15" fill="rgb(250,194,11)"/><text x="99.7912%" y="543.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (14 samples, 0.02%)</title><rect x="99.5412%" y="517" width="0.0232%" height="15" fill="rgb(220,72,50)"/><text x="99.7912%" y="527.50"></text></g><g><title>native_write_msr (13 samples, 0.02%)</title><rect x="99.5428%" y="501" width="0.0215%" height="15" fill="rgb(222,106,48)"/><text x="99.7928%" y="511.50"></text></g><g><title>finish_task_switch (15 samples, 0.02%)</title><rect x="99.5412%" y="549" width="0.0248%" height="15" fill="rgb(216,220,45)"/><text x="99.7912%" y="559.50"></text></g><g><title>futex_wait_queue_me (24 samples, 0.04%)</title><rect x="99.5362%" y="597" width="0.0398%" height="15" fill="rgb(234,112,18)"/><text x="99.7862%" y="607.50"></text></g><g><title>schedule (23 samples, 0.04%)</title><rect x="99.5379%" y="581" width="0.0381%" height="15" fill="rgb(206,179,9)"/><text x="99.7879%" y="591.50"></text></g><g><title>__schedule (23 samples, 0.04%)</title><rect x="99.5379%" y="565" width="0.0381%" height="15" fill="rgb(215,115,40)"/><text x="99.7879%" y="575.50"></text></g><g><title>futex_wait (27 samples, 0.04%)</title><rect x="99.5345%" y="613" width="0.0447%" height="15" fill="rgb(222,69,34)"/><text x="99.7845%" y="623.50"></text></g><g><title>__x64_sys_futex (34 samples, 0.06%)</title><rect x="99.5345%" y="645" width="0.0563%" height="15" fill="rgb(209,161,10)"/><text x="99.7845%" y="655.50"></text></g><g><title>do_futex (34 samples, 0.06%)</title><rect x="99.5345%" y="629" width="0.0563%" height="15" fill="rgb(217,6,38)"/><text x="99.7845%" y="639.50"></text></g><g><title>futex_wake (7 samples, 0.01%)</title><rect x="99.5793%" y="613" width="0.0116%" height="15" fill="rgb(229,229,48)"/><text x="99.8293%" y="623.50"></text></g><g><title>wake_up_q (7 samples, 0.01%)</title><rect x="99.5793%" y="597" width="0.0116%" height="15" fill="rgb(225,21,28)"/><text x="99.8293%" y="607.50"></text></g><g><title>try_to_wake_up (7 samples, 0.01%)</title><rect x="99.5793%" y="581" width="0.0116%" height="15" fill="rgb(206,33,13)"/><text x="99.8293%" y="591.50"></text></g><g><title>add_to_page_cache_lru (7 samples, 0.01%)</title><rect x="99.6157%" y="565" width="0.0116%" height="15" fill="rgb(242,178,17)"/><text x="99.8657%" y="575.50"></text></g><g><title>page_cache_ra_unbounded (13 samples, 0.02%)</title><rect x="99.6107%" y="581" width="0.0215%" height="15" fill="rgb(220,162,5)"/><text x="99.8607%" y="591.50"></text></g><g><title>ksys_read (23 samples, 0.04%)</title><rect x="99.5991%" y="645" width="0.0381%" height="15" fill="rgb(210,33,43)"/><text x="99.8491%" y="655.50"></text></g><g><title>vfs_read (22 samples, 0.04%)</title><rect x="99.6008%" y="629" width="0.0364%" height="15" fill="rgb(216,116,54)"/><text x="99.8508%" y="639.50"></text></g><g><title>new_sync_read (22 samples, 0.04%)</title><rect x="99.6008%" y="613" width="0.0364%" height="15" fill="rgb(249,92,24)"/><text x="99.8508%" y="623.50"></text></g><g><title>generic_file_buffered_read (21 samples, 0.03%)</title><rect x="99.6025%" y="597" width="0.0348%" height="15" fill="rgb(231,189,14)"/><text x="99.8525%" y="607.50"></text></g><g><title>ext4_da_write_begin (18 samples, 0.03%)</title><rect x="99.6422%" y="565" width="0.0298%" height="15" fill="rgb(230,8,41)"/><text x="99.8922%" y="575.50"></text></g><g><title>grab_cache_page_write_begin (9 samples, 0.01%)</title><rect x="99.6571%" y="549" width="0.0149%" height="15" fill="rgb(249,7,27)"/><text x="99.9071%" y="559.50"></text></g><g><title>pagecache_get_page (9 samples, 0.01%)</title><rect x="99.6571%" y="533" width="0.0149%" height="15" fill="rgb(232,86,5)"/><text x="99.9071%" y="543.50"></text></g><g><title>do_syscall_64 (94 samples, 0.16%)</title><rect x="99.5329%" y="661" width="0.1557%" height="15" fill="rgb(224,175,18)"/><text x="99.7829%" y="671.50"></text></g><g><title>ksys_write (31 samples, 0.05%)</title><rect x="99.6372%" y="645" width="0.0513%" height="15" fill="rgb(220,129,12)"/><text x="99.8872%" y="655.50"></text></g><g><title>vfs_write (31 samples, 0.05%)</title><rect x="99.6372%" y="629" width="0.0513%" height="15" fill="rgb(210,19,36)"/><text x="99.8872%" y="639.50"></text></g><g><title>new_sync_write (30 samples, 0.05%)</title><rect x="99.6389%" y="613" width="0.0497%" height="15" fill="rgb(219,96,14)"/><text x="99.8889%" y="623.50"></text></g><g><title>ext4_buffered_write_iter (30 samples, 0.05%)</title><rect x="99.6389%" y="597" width="0.0497%" height="15" fill="rgb(249,106,1)"/><text x="99.8889%" y="607.50"></text></g><g><title>generic_perform_write (29 samples, 0.05%)</title><rect x="99.6406%" y="581" width="0.0480%" height="15" fill="rgb(249,155,20)"/><text x="99.8906%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (112 samples, 0.19%)</title><rect x="99.5097%" y="677" width="0.1855%" height="15" fill="rgb(244,168,9)"/><text x="99.7597%" y="687.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (136 samples, 0.23%)</title><rect x="99.6952%" y="677" width="0.2253%" height="15" fill="rgb(216,23,50)"/><text x="99.9452%" y="687.50"></text></g><g><title>syscall_return_via_sysret (10 samples, 0.02%)</title><rect x="99.9404%" y="677" width="0.0166%" height="15" fill="rgb(224,219,20)"/><text x="100.1904%" y="687.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (22 samples, 0.04%)</title><rect x="99.9569%" y="677" width="0.0364%" height="15" fill="rgb(222,156,15)"/><text x="100.2069%" y="687.50"></text></g><g><title>all (60,371 samples, 100%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(231,97,17)"/><text x="0.2500%" y="719.50"></text></g><g><title>tokio-runtime-w (27,085 samples, 44.86%)</title><rect x="55.1357%" y="693" width="44.8643%" height="15" fill="rgb(218,70,48)"/><text x="55.3857%" y="703.50">tokio-runtime-w</text></g></svg></svg>