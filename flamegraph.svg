<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="854" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="837.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="837.00"> </text><svg id="frames" x="10" width="1180"><g><title>perf_5.10 (5 samples, 0.02%)</title><rect x="0.0000%" y="789" width="0.0247%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="0.0000%" y="773" width="0.0247%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="783.50"></text></g><g><title>do_syscall_64 (5 samples, 0.02%)</title><rect x="0.0000%" y="757" width="0.0247%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="767.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.02%)</title><rect x="0.0000%" y="741" width="0.0247%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="751.50"></text></g><g><title>do_execveat_common (5 samples, 0.02%)</title><rect x="0.0000%" y="725" width="0.0247%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="735.50"></text></g><g><title>bprm_execve (5 samples, 0.02%)</title><rect x="0.0000%" y="709" width="0.0247%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="719.50"></text></g><g><title>load_elf_binary (5 samples, 0.02%)</title><rect x="0.0000%" y="693" width="0.0247%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="703.50"></text></g><g><title>begin_new_exec (5 samples, 0.02%)</title><rect x="0.0000%" y="677" width="0.0247%" height="15" fill="rgb(228,23,34)"/><text x="0.2500%" y="687.50"></text></g><g><title>perf_event_exec (5 samples, 0.02%)</title><rect x="0.0000%" y="661" width="0.0247%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="671.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.02%)</title><rect x="0.0000%" y="645" width="0.0247%" height="15" fill="rgb(220,122,19)"/><text x="0.2500%" y="655.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="0.0000%" y="629" width="0.0247%" height="15" fill="rgb(250,228,42)"/><text x="0.2500%" y="639.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="0.2025%" y="757" width="0.0148%" height="15" fill="rgb(240,193,28)"/><text x="0.4525%" y="767.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="0.2222%" y="757" width="0.0296%" height="15" fill="rgb(216,20,37)"/><text x="0.4722%" y="767.50"></text></g><g><title>_int_malloc (8 samples, 0.04%)</title><rect x="0.2519%" y="757" width="0.0395%" height="15" fill="rgb(206,188,39)"/><text x="0.5019%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (39 samples, 0.19%)</title><rect x="0.2914%" y="757" width="0.1926%" height="15" fill="rgb(217,207,13)"/><text x="0.5414%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="0.4840%" y="757" width="0.0247%" height="15" fill="rgb(231,73,38)"/><text x="0.7340%" y="767.50"></text></g><g><title>[[heap]] (76 samples, 0.38%)</title><rect x="0.1778%" y="773" width="0.3753%" height="15" fill="rgb(225,20,46)"/><text x="0.4278%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (17 samples, 0.08%)</title><rect x="0.5630%" y="757" width="0.0840%" height="15" fill="rgb(210,31,41)"/><text x="0.8130%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.11%)</title><rect x="0.6470%" y="757" width="0.1087%" height="15" fill="rgb(221,200,47)"/><text x="0.8970%" y="767.50"></text></g><g><title>_int_free (27 samples, 0.13%)</title><rect x="0.7655%" y="757" width="0.1333%" height="15" fill="rgb(226,26,5)"/><text x="1.0155%" y="767.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="0.8989%" y="757" width="0.0198%" height="15" fill="rgb(249,33,26)"/><text x="1.1489%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (26 samples, 0.13%)</title><rect x="0.9186%" y="757" width="0.1284%" height="15" fill="rgb(235,183,28)"/><text x="1.1686%" y="767.50"></text></g><g><title>blake3::ChunkState::update (7 samples, 0.03%)</title><rect x="1.0964%" y="757" width="0.0346%" height="15" fill="rgb(221,5,38)"/><text x="1.3464%" y="767.50"></text></g><g><title>blake3::hash (3 samples, 0.01%)</title><rect x="1.1310%" y="757" width="0.0148%" height="15" fill="rgb(247,18,42)"/><text x="1.3810%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (14 samples, 0.07%)</title><rect x="1.1507%" y="757" width="0.0691%" height="15" fill="rgb(241,131,45)"/><text x="1.4007%" y="767.50"></text></g><g><title>serde::ser::Serializer::collect_seq (27 samples, 0.13%)</title><rect x="1.2199%" y="757" width="0.1333%" height="15" fill="rgb(249,31,29)"/><text x="1.4699%" y="767.50"></text></g><g><title>[[stack]] (165 samples, 0.81%)</title><rect x="0.5531%" y="773" width="0.8149%" height="15" fill="rgb(225,111,53)"/><text x="0.8031%" y="783.50"></text></g><g><title>stress::_::&lt;impl serde::ser::Serialize for stress::MyTestObject&gt;::serialize (3 samples, 0.01%)</title><rect x="1.3532%" y="757" width="0.0148%" height="15" fill="rgb(238,160,17)"/><text x="1.6032%" y="767.50"></text></g><g><title>_int_free (24 samples, 0.12%)</title><rect x="1.3779%" y="757" width="0.1185%" height="15" fill="rgb(214,148,48)"/><text x="1.6279%" y="767.50"></text></g><g><title>[stress] (27 samples, 0.13%)</title><rect x="1.3730%" y="773" width="0.1333%" height="15" fill="rgb(232,36,49)"/><text x="1.6230%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.05%)</title><rect x="1.5409%" y="677" width="0.0543%" height="15" fill="rgb(209,103,24)"/><text x="1.7909%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.05%)</title><rect x="1.5409%" y="661" width="0.0543%" height="15" fill="rgb(229,88,8)"/><text x="1.7909%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.05%)</title><rect x="1.5409%" y="645" width="0.0543%" height="15" fill="rgb(213,181,19)"/><text x="1.7909%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.05%)</title><rect x="1.5409%" y="629" width="0.0543%" height="15" fill="rgb(254,191,54)"/><text x="1.7909%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.05%)</title><rect x="1.5409%" y="613" width="0.0543%" height="15" fill="rgb(241,83,37)"/><text x="1.7909%" y="623.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.05%)</title><rect x="1.5409%" y="597" width="0.0543%" height="15" fill="rgb(233,36,39)"/><text x="1.7909%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (27 samples, 0.13%)</title><rect x="1.5063%" y="757" width="0.1333%" height="15" fill="rgb(226,3,54)"/><text x="1.7563%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.10%)</title><rect x="1.5409%" y="741" width="0.0988%" height="15" fill="rgb(245,192,40)"/><text x="1.7909%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.10%)</title><rect x="1.5409%" y="725" width="0.0988%" height="15" fill="rgb(238,167,29)"/><text x="1.7909%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.10%)</title><rect x="1.5409%" y="709" width="0.0988%" height="15" fill="rgb(232,182,51)"/><text x="1.7909%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.10%)</title><rect x="1.5409%" y="693" width="0.0988%" height="15" fill="rgb(231,60,39)"/><text x="1.7909%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (9 samples, 0.04%)</title><rect x="1.5952%" y="677" width="0.0444%" height="15" fill="rgb(208,69,12)"/><text x="1.8452%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.04%)</title><rect x="1.5952%" y="661" width="0.0444%" height="15" fill="rgb(235,93,37)"/><text x="1.8452%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="1.6397%" y="757" width="0.0148%" height="15" fill="rgb(213,116,39)"/><text x="1.8897%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.29%)</title><rect x="1.6891%" y="725" width="0.2864%" height="15" fill="rgb(222,207,29)"/><text x="1.9391%" y="735.50"></text></g><g><title>bytes::bytes::promotable_even_drop (22 samples, 0.11%)</title><rect x="1.8669%" y="709" width="0.1087%" height="15" fill="rgb(206,96,30)"/><text x="2.1169%" y="719.50"></text></g><g><title>__lll_lock_wait_private (3 samples, 0.01%)</title><rect x="2.2224%" y="709" width="0.0148%" height="15" fill="rgb(218,138,4)"/><text x="2.4724%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="2.2471%" y="709" width="0.0346%" height="15" fill="rgb(250,191,14)"/><text x="2.4971%" y="719.50"></text></g><g><title>syscall_exit_to_user_mode (6 samples, 0.03%)</title><rect x="2.2521%" y="693" width="0.0296%" height="15" fill="rgb(239,60,40)"/><text x="2.5021%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (122 samples, 0.60%)</title><rect x="1.6841%" y="741" width="0.6025%" height="15" fill="rgb(206,27,48)"/><text x="1.9341%" y="751.50"></text></g><g><title>_int_free (61 samples, 0.30%)</title><rect x="1.9854%" y="725" width="0.3013%" height="15" fill="rgb(225,35,8)"/><text x="2.2354%" y="735.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="2.3113%" y="565" width="0.0198%" height="15" fill="rgb(250,213,24)"/><text x="2.5613%" y="575.50"></text></g><g><title>tcache_get (3 samples, 0.01%)</title><rect x="2.3163%" y="549" width="0.0148%" height="15" fill="rgb(247,123,22)"/><text x="2.5663%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.04%)</title><rect x="2.3015%" y="661" width="0.0444%" height="15" fill="rgb(231,138,38)"/><text x="2.5515%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.04%)</title><rect x="2.3015%" y="645" width="0.0444%" height="15" fill="rgb(231,145,46)"/><text x="2.5515%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.04%)</title><rect x="2.3015%" y="629" width="0.0444%" height="15" fill="rgb(251,118,11)"/><text x="2.5515%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.04%)</title><rect x="2.3064%" y="613" width="0.0395%" height="15" fill="rgb(217,147,25)"/><text x="2.5564%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.04%)</title><rect x="2.3064%" y="597" width="0.0395%" height="15" fill="rgb(247,81,37)"/><text x="2.5564%" y="607.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.04%)</title><rect x="2.3064%" y="581" width="0.0395%" height="15" fill="rgb(209,12,38)"/><text x="2.5564%" y="591.50"></text></g><g><title>__rust_alloc (3 samples, 0.01%)</title><rect x="2.3311%" y="565" width="0.0148%" height="15" fill="rgb(227,1,9)"/><text x="2.5811%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (15 samples, 0.07%)</title><rect x="2.2866%" y="741" width="0.0741%" height="15" fill="rgb(248,47,43)"/><text x="2.5366%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.06%)</title><rect x="2.2965%" y="725" width="0.0642%" height="15" fill="rgb(221,10,30)"/><text x="2.5465%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.06%)</title><rect x="2.3015%" y="709" width="0.0593%" height="15" fill="rgb(210,229,1)"/><text x="2.5515%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.06%)</title><rect x="2.3015%" y="693" width="0.0593%" height="15" fill="rgb(222,148,37)"/><text x="2.5515%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.06%)</title><rect x="2.3015%" y="677" width="0.0593%" height="15" fill="rgb(234,67,33)"/><text x="2.5515%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.01%)</title><rect x="2.3459%" y="661" width="0.0148%" height="15" fill="rgb(247,98,35)"/><text x="2.5959%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="2.3459%" y="645" width="0.0148%" height="15" fill="rgb(247,138,52)"/><text x="2.5959%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="3.9510%" y="693" width="0.0247%" height="15" fill="rgb(213,79,30)"/><text x="4.2010%" y="703.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="14.8311%" y="517" width="0.0148%" height="15" fill="rgb(246,177,23)"/><text x="15.0811%" y="527.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="14.8311%" y="501" width="0.0148%" height="15" fill="rgb(230,62,27)"/><text x="15.0811%" y="511.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="14.8311%" y="485" width="0.0148%" height="15" fill="rgb(216,154,8)"/><text x="15.0811%" y="495.50"></text></g><g><title>hrtimer_interrupt (3 samples, 0.01%)</title><rect x="14.8311%" y="469" width="0.0148%" height="15" fill="rgb(244,35,45)"/><text x="15.0811%" y="479.50"></text></g><g><title>checked_request2size (4 samples, 0.02%)</title><rect x="14.8459%" y="517" width="0.0198%" height="15" fill="rgb(251,115,12)"/><text x="15.0959%" y="527.50"></text></g><g><title>_int_malloc (2,029 samples, 10.02%)</title><rect x="4.9881%" y="533" width="10.0207%" height="15" fill="rgb(240,54,50)"/><text x="5.2381%" y="543.50">_int_malloc</text></g><g><title>tcache_put (29 samples, 0.14%)</title><rect x="14.8657%" y="517" width="0.1432%" height="15" fill="rgb(233,84,52)"/><text x="15.1157%" y="527.50"></text></g><g><title>checked_request2size (18 samples, 0.09%)</title><rect x="15.0089%" y="533" width="0.0889%" height="15" fill="rgb(207,117,47)"/><text x="15.2589%" y="543.50"></text></g><g><title>__GI___libc_malloc (2,268 samples, 11.20%)</title><rect x="4.0399%" y="549" width="11.2011%" height="15" fill="rgb(249,43,39)"/><text x="4.2899%" y="559.50">__GI___libc_mall..</text></g><g><title>tcache_get (29 samples, 0.14%)</title><rect x="15.0978%" y="533" width="0.1432%" height="15" fill="rgb(209,38,44)"/><text x="15.3478%" y="543.50"></text></g><g><title>__rdl_alloc (37 samples, 0.18%)</title><rect x="15.2410%" y="549" width="0.1827%" height="15" fill="rgb(236,212,23)"/><text x="15.4910%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (37 samples, 0.18%)</title><rect x="15.2410%" y="533" width="0.1827%" height="15" fill="rgb(242,79,21)"/><text x="15.4910%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,336 samples, 11.54%)</title><rect x="3.9757%" y="645" width="11.5369%" height="15" fill="rgb(211,96,35)"/><text x="4.2257%" y="655.50">alloc::vec::Vec&lt;T..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,336 samples, 11.54%)</title><rect x="3.9757%" y="629" width="11.5369%" height="15" fill="rgb(253,215,40)"/><text x="4.2257%" y="639.50">alloc::raw_vec::R..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,336 samples, 11.54%)</title><rect x="3.9757%" y="613" width="11.5369%" height="15" fill="rgb(211,81,21)"/><text x="4.2257%" y="623.50">alloc::raw_vec::R..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,323 samples, 11.47%)</title><rect x="4.0399%" y="597" width="11.4727%" height="15" fill="rgb(208,190,38)"/><text x="4.2899%" y="607.50">&lt;alloc::alloc::Gl..</text></g><g><title>alloc::alloc::Global::alloc_impl (2,323 samples, 11.47%)</title><rect x="4.0399%" y="581" width="11.4727%" height="15" fill="rgb(235,213,38)"/><text x="4.2899%" y="591.50">alloc::alloc::Glo..</text></g><g><title>alloc::alloc::alloc (2,323 samples, 11.47%)</title><rect x="4.0399%" y="565" width="11.4727%" height="15" fill="rgb(237,122,38)"/><text x="4.2899%" y="575.50">alloc::alloc::all..</text></g><g><title>__rust_alloc (18 samples, 0.09%)</title><rect x="15.4237%" y="549" width="0.0889%" height="15" fill="rgb(244,218,35)"/><text x="15.6737%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,434 samples, 12.02%)</title><rect x="3.8819%" y="725" width="12.0209%" height="15" fill="rgb(240,68,47)"/><text x="4.1319%" y="735.50">&lt;alloc::string::St..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,420 samples, 11.95%)</title><rect x="3.9510%" y="709" width="11.9518%" height="15" fill="rgb(210,16,53)"/><text x="4.2010%" y="719.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,415 samples, 11.93%)</title><rect x="3.9757%" y="693" width="11.9271%" height="15" fill="rgb(235,124,12)"/><text x="4.2257%" y="703.50">alloc::slice::&lt;imp..</text></g><g><title>alloc::slice::hack::to_vec (2,415 samples, 11.93%)</title><rect x="3.9757%" y="677" width="11.9271%" height="15" fill="rgb(224,169,11)"/><text x="4.2257%" y="687.50">alloc::slice::hack..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,415 samples, 11.93%)</title><rect x="3.9757%" y="661" width="11.9271%" height="15" fill="rgb(250,166,2)"/><text x="4.2257%" y="671.50">&lt;T as alloc::slice..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (79 samples, 0.39%)</title><rect x="15.5126%" y="645" width="0.3902%" height="15" fill="rgb(242,216,29)"/><text x="15.7626%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (79 samples, 0.39%)</title><rect x="15.5126%" y="629" width="0.3902%" height="15" fill="rgb(230,116,27)"/><text x="15.7626%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (66 samples, 0.33%)</title><rect x="15.5768%" y="613" width="0.3260%" height="15" fill="rgb(228,99,48)"/><text x="15.8268%" y="623.50"></text></g><g><title>_int_malloc (447 samples, 2.21%)</title><rect x="15.9621%" y="709" width="2.2076%" height="15" fill="rgb(253,11,6)"/><text x="16.2121%" y="719.50">_..</text></g><g><title>malloc_consolidate (396 samples, 1.96%)</title><rect x="16.2139%" y="693" width="1.9557%" height="15" fill="rgb(247,143,39)"/><text x="16.4639%" y="703.50">m..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,202 samples, 15.81%)</title><rect x="2.3607%" y="741" width="15.8139%" height="15" fill="rgb(236,97,10)"/><text x="2.6107%" y="751.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>__GI___libc_malloc (460 samples, 2.27%)</title><rect x="15.9028%" y="725" width="2.2718%" height="15" fill="rgb(233,208,19)"/><text x="16.1528%" y="735.50">_..</text></g><g><title>__memmove_avx_unaligned_erms (34 samples, 0.17%)</title><rect x="18.1944%" y="725" width="0.1679%" height="15" fill="rgb(216,164,2)"/><text x="18.4444%" y="735.50"></text></g><g><title>_int_malloc (46 samples, 0.23%)</title><rect x="18.4315%" y="693" width="0.2272%" height="15" fill="rgb(220,129,5)"/><text x="18.6815%" y="703.50"></text></g><g><title>__GI___libc_malloc (52 samples, 0.26%)</title><rect x="18.4068%" y="709" width="0.2568%" height="15" fill="rgb(242,17,10)"/><text x="18.6568%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (15 samples, 0.07%)</title><rect x="18.6636%" y="709" width="0.0741%" height="15" fill="rgb(242,107,0)"/><text x="18.9136%" y="719.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="18.8957%" y="677" width="0.0148%" height="15" fill="rgb(251,28,31)"/><text x="19.1457%" y="687.50"></text></g><g><title>_int_malloc (3 samples, 0.01%)</title><rect x="18.8957%" y="661" width="0.0148%" height="15" fill="rgb(233,223,10)"/><text x="19.1457%" y="671.50"></text></g><g><title>alloc_pages_vma (6 samples, 0.03%)</title><rect x="18.9204%" y="613" width="0.0296%" height="15" fill="rgb(215,21,27)"/><text x="19.1704%" y="623.50"></text></g><g><title>__alloc_pages_nodemask (5 samples, 0.02%)</title><rect x="18.9253%" y="597" width="0.0247%" height="15" fill="rgb(232,23,21)"/><text x="19.1753%" y="607.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.02%)</title><rect x="18.9253%" y="581" width="0.0247%" height="15" fill="rgb(244,5,23)"/><text x="19.1753%" y="591.50"></text></g><g><title>prep_new_page (3 samples, 0.01%)</title><rect x="18.9352%" y="565" width="0.0148%" height="15" fill="rgb(226,81,46)"/><text x="19.1852%" y="575.50"></text></g><g><title>kernel_init_free_pages (3 samples, 0.01%)</title><rect x="18.9352%" y="549" width="0.0148%" height="15" fill="rgb(247,70,30)"/><text x="19.1852%" y="559.50"></text></g><g><title>clear_page_erms (3 samples, 0.01%)</title><rect x="18.9352%" y="533" width="0.0148%" height="15" fill="rgb(212,68,19)"/><text x="19.1852%" y="543.50"></text></g><g><title>lru_cache_add (3 samples, 0.01%)</title><rect x="18.9500%" y="613" width="0.0148%" height="15" fill="rgb(240,187,13)"/><text x="19.2000%" y="623.50"></text></g><g><title>pagevec_lru_move_fn (3 samples, 0.01%)</title><rect x="18.9500%" y="597" width="0.0148%" height="15" fill="rgb(223,113,26)"/><text x="19.2000%" y="607.50"></text></g><g><title>__pagevec_lru_add_fn (3 samples, 0.01%)</title><rect x="18.9500%" y="581" width="0.0148%" height="15" fill="rgb(206,192,2)"/><text x="19.2000%" y="591.50"></text></g><g><title>exc_page_fault (12 samples, 0.06%)</title><rect x="18.9204%" y="661" width="0.0593%" height="15" fill="rgb(241,108,4)"/><text x="19.1704%" y="671.50"></text></g><g><title>do_user_addr_fault (12 samples, 0.06%)</title><rect x="18.9204%" y="645" width="0.0593%" height="15" fill="rgb(247,173,49)"/><text x="19.1704%" y="655.50"></text></g><g><title>handle_mm_fault (12 samples, 0.06%)</title><rect x="18.9204%" y="629" width="0.0593%" height="15" fill="rgb(224,114,35)"/><text x="19.1704%" y="639.50"></text></g><g><title>mem_cgroup_charge (3 samples, 0.01%)</title><rect x="18.9648%" y="613" width="0.0148%" height="15" fill="rgb(245,159,27)"/><text x="19.2148%" y="623.50"></text></g><g><title>asm_exc_page_fault (15 samples, 0.07%)</title><rect x="18.9204%" y="677" width="0.0741%" height="15" fill="rgb(245,172,44)"/><text x="19.1704%" y="687.50"></text></g><g><title>irqentry_exit_to_user_mode (3 samples, 0.01%)</title><rect x="18.9797%" y="661" width="0.0148%" height="15" fill="rgb(236,23,11)"/><text x="19.2297%" y="671.50"></text></g><g><title>ate::dio::DioState::dirty (130 samples, 0.64%)</title><rect x="18.3623%" y="725" width="0.6420%" height="15" fill="rgb(205,117,38)"/><text x="18.6123%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (51 samples, 0.25%)</title><rect x="18.7525%" y="709" width="0.2519%" height="15" fill="rgb(237,72,25)"/><text x="19.0025%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (41 samples, 0.20%)</title><rect x="18.8019%" y="693" width="0.2025%" height="15" fill="rgb(244,70,9)"/><text x="19.0519%" y="703.50"></text></g><g><title>ate::crypto::Hash::from_bytes (52 samples, 0.26%)</title><rect x="19.1377%" y="709" width="0.2568%" height="15" fill="rgb(217,125,39)"/><text x="19.3877%" y="719.50"></text></g><g><title>blake3::hash (52 samples, 0.26%)</title><rect x="19.1377%" y="693" width="0.2568%" height="15" fill="rgb(235,36,10)"/><text x="19.3877%" y="703.50"></text></g><g><title>blake3::ChunkState::update (42 samples, 0.21%)</title><rect x="19.1871%" y="677" width="0.2074%" height="15" fill="rgb(251,123,47)"/><text x="19.4371%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.05%)</title><rect x="19.3402%" y="661" width="0.0543%" height="15" fill="rgb(221,13,13)"/><text x="19.5902%" y="671.50"></text></g><g><title>__irqentry_text_end (5 samples, 0.02%)</title><rect x="21.3305%" y="645" width="0.0247%" height="15" fill="rgb(238,131,9)"/><text x="21.5805%" y="655.50"></text></g><g><title>alloc_pages_vma (10 samples, 0.05%)</title><rect x="21.4095%" y="581" width="0.0494%" height="15" fill="rgb(211,50,8)"/><text x="21.6595%" y="591.50"></text></g><g><title>__alloc_pages_nodemask (9 samples, 0.04%)</title><rect x="21.4145%" y="565" width="0.0444%" height="15" fill="rgb(245,182,24)"/><text x="21.6645%" y="575.50"></text></g><g><title>get_page_from_freelist (8 samples, 0.04%)</title><rect x="21.4194%" y="549" width="0.0395%" height="15" fill="rgb(242,14,37)"/><text x="21.6694%" y="559.50"></text></g><g><title>lru_cache_add (3 samples, 0.01%)</title><rect x="21.4688%" y="581" width="0.0148%" height="15" fill="rgb(246,228,12)"/><text x="21.7188%" y="591.50"></text></g><g><title>pagevec_lru_move_fn (3 samples, 0.01%)</title><rect x="21.4688%" y="565" width="0.0148%" height="15" fill="rgb(213,55,15)"/><text x="21.7188%" y="575.50"></text></g><g><title>__pagevec_lru_add_fn (3 samples, 0.01%)</title><rect x="21.4688%" y="549" width="0.0148%" height="15" fill="rgb(209,9,3)"/><text x="21.7188%" y="559.50"></text></g><g><title>get_mem_cgroup_from_mm (4 samples, 0.02%)</title><rect x="21.4885%" y="565" width="0.0198%" height="15" fill="rgb(230,59,30)"/><text x="21.7385%" y="575.50"></text></g><g><title>exc_page_fault (32 samples, 0.16%)</title><rect x="21.3552%" y="629" width="0.1580%" height="15" fill="rgb(209,121,21)"/><text x="21.6052%" y="639.50"></text></g><g><title>do_user_addr_fault (32 samples, 0.16%)</title><rect x="21.3552%" y="613" width="0.1580%" height="15" fill="rgb(220,109,13)"/><text x="21.6052%" y="623.50"></text></g><g><title>handle_mm_fault (29 samples, 0.14%)</title><rect x="21.3700%" y="597" width="0.1432%" height="15" fill="rgb(232,18,1)"/><text x="21.6200%" y="607.50"></text></g><g><title>mem_cgroup_charge (5 samples, 0.02%)</title><rect x="21.4885%" y="581" width="0.0247%" height="15" fill="rgb(215,41,42)"/><text x="21.7385%" y="591.50"></text></g><g><title>asm_exc_page_fault (36 samples, 0.18%)</title><rect x="21.3552%" y="645" width="0.1778%" height="15" fill="rgb(224,123,36)"/><text x="21.6052%" y="655.50"></text></g><g><title>irqentry_exit_to_user_mode (4 samples, 0.02%)</title><rect x="21.5132%" y="629" width="0.0198%" height="15" fill="rgb(240,125,3)"/><text x="21.7632%" y="639.50"></text></g><g><title>__do_sys_brk (3 samples, 0.01%)</title><rect x="21.5429%" y="533" width="0.0148%" height="15" fill="rgb(205,98,50)"/><text x="21.7929%" y="543.50"></text></g><g><title>do_brk_flags (3 samples, 0.01%)</title><rect x="21.5429%" y="517" width="0.0148%" height="15" fill="rgb(205,185,37)"/><text x="21.7929%" y="527.50"></text></g><g><title>sysmalloc (4 samples, 0.02%)</title><rect x="21.5429%" y="645" width="0.0198%" height="15" fill="rgb(238,207,15)"/><text x="21.7929%" y="655.50"></text></g><g><title>__GI___default_morecore (4 samples, 0.02%)</title><rect x="21.5429%" y="629" width="0.0198%" height="15" fill="rgb(213,199,42)"/><text x="21.7929%" y="639.50"></text></g><g><title>__GI___sbrk (4 samples, 0.02%)</title><rect x="21.5429%" y="613" width="0.0198%" height="15" fill="rgb(235,201,11)"/><text x="21.7929%" y="623.50"></text></g><g><title>__GI___sbrk (4 samples, 0.02%)</title><rect x="21.5429%" y="597" width="0.0198%" height="15" fill="rgb(207,46,11)"/><text x="21.7929%" y="607.50"></text></g><g><title>__brk (4 samples, 0.02%)</title><rect x="21.5429%" y="581" width="0.0198%" height="15" fill="rgb(241,35,35)"/><text x="21.7929%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="21.5429%" y="565" width="0.0198%" height="15" fill="rgb(243,32,47)"/><text x="21.7929%" y="575.50"></text></g><g><title>do_syscall_64 (4 samples, 0.02%)</title><rect x="21.5429%" y="549" width="0.0198%" height="15" fill="rgb(247,202,23)"/><text x="21.7929%" y="559.50"></text></g><g><title>__GI___libc_malloc (431 samples, 2.13%)</title><rect x="19.4587%" y="677" width="2.1286%" height="15" fill="rgb(219,102,11)"/><text x="19.7087%" y="687.50">_..</text></g><g><title>_int_malloc (406 samples, 2.01%)</title><rect x="19.5822%" y="661" width="2.0051%" height="15" fill="rgb(243,110,44)"/><text x="19.8322%" y="671.50">_..</text></g><g><title>unlink_chunk (4 samples, 0.02%)</title><rect x="21.5676%" y="645" width="0.0198%" height="15" fill="rgb(222,74,54)"/><text x="21.8176%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (105 samples, 0.52%)</title><rect x="22.3726%" y="661" width="0.5186%" height="15" fill="rgb(216,99,12)"/><text x="22.6226%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (300 samples, 1.48%)</title><rect x="21.5873%" y="677" width="1.4816%" height="15" fill="rgb(226,22,26)"/><text x="21.8373%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (36 samples, 0.18%)</title><rect x="22.8911%" y="661" width="0.1778%" height="15" fill="rgb(217,163,10)"/><text x="23.1411%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="23.4048%" y="661" width="0.0198%" height="15" fill="rgb(213,25,53)"/><text x="23.6548%" y="671.50"></text></g><g><title>ate::dio::dao::Row&lt;D&gt;::as_row_data (910 samples, 4.49%)</title><rect x="19.0043%" y="725" width="4.4943%" height="15" fill="rgb(252,105,26)"/><text x="19.2543%" y="735.50">ate::..</text></g><g><title>ate::spec::SerializationFormat::serialize (831 samples, 4.10%)</title><rect x="19.3945%" y="709" width="4.1041%" height="15" fill="rgb(220,39,43)"/><text x="19.6445%" y="719.50">ate:..</text></g><g><title>bincode::internal::serialize (823 samples, 4.06%)</title><rect x="19.4340%" y="693" width="4.0646%" height="15" fill="rgb(229,68,48)"/><text x="19.6840%" y="703.50">binc..</text></g><g><title>stress::_::&lt;impl serde::ser::Serialize for stress::MyTestObject&gt;::serialize (87 samples, 0.43%)</title><rect x="23.0689%" y="677" width="0.4297%" height="15" fill="rgb(252,8,32)"/><text x="23.3189%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.07%)</title><rect x="23.4245%" y="661" width="0.0741%" height="15" fill="rgb(223,20,43)"/><text x="23.6745%" y="671.50"></text></g><g><title>&lt;ate::dio::dao::Dao&lt;D&gt; as core::ops::drop::Drop&gt;::drop (1,083 samples, 5.35%)</title><rect x="18.1746%" y="741" width="5.3487%" height="15" fill="rgb(229,81,49)"/><text x="18.4246%" y="751.50">&lt;ate::d..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (5 samples, 0.02%)</title><rect x="23.4986%" y="725" width="0.0247%" height="15" fill="rgb(236,28,36)"/><text x="23.7486%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (24 samples, 0.12%)</title><rect x="23.5233%" y="741" width="0.1185%" height="15" fill="rgb(249,185,26)"/><text x="23.7733%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (56 samples, 0.28%)</title><rect x="23.8147%" y="725" width="0.2766%" height="15" fill="rgb(249,174,33)"/><text x="24.0647%" y="735.50"></text></g><g><title>ate::dio::Dio::store (107 samples, 0.53%)</title><rect x="23.6418%" y="741" width="0.5284%" height="15" fill="rgb(233,201,37)"/><text x="23.8918%" y="751.50"></text></g><g><title>ate::dio::DioState::lock (16 samples, 0.08%)</title><rect x="24.0913%" y="725" width="0.0790%" height="15" fill="rgb(221,78,26)"/><text x="24.3413%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (7 samples, 0.03%)</title><rect x="24.1357%" y="709" width="0.0346%" height="15" fill="rgb(250,127,30)"/><text x="24.3857%" y="719.50"></text></g><g><title>__irqentry_text_end (3 samples, 0.01%)</title><rect x="25.1087%" y="645" width="0.0148%" height="15" fill="rgb(230,49,44)"/><text x="25.3587%" y="655.50"></text></g><g><title>__list_del_entry_valid (3 samples, 0.01%)</title><rect x="25.1976%" y="533" width="0.0148%" height="15" fill="rgb(229,67,23)"/><text x="25.4476%" y="543.50"></text></g><g><title>alloc_pages_vma (21 samples, 0.10%)</title><rect x="25.1778%" y="581" width="0.1037%" height="15" fill="rgb(249,83,47)"/><text x="25.4278%" y="591.50"></text></g><g><title>__alloc_pages_nodemask (20 samples, 0.10%)</title><rect x="25.1827%" y="565" width="0.0988%" height="15" fill="rgb(215,43,3)"/><text x="25.4327%" y="575.50"></text></g><g><title>get_page_from_freelist (19 samples, 0.09%)</title><rect x="25.1877%" y="549" width="0.0938%" height="15" fill="rgb(238,154,13)"/><text x="25.4377%" y="559.50"></text></g><g><title>prep_new_page (14 samples, 0.07%)</title><rect x="25.2124%" y="533" width="0.0691%" height="15" fill="rgb(219,56,2)"/><text x="25.4624%" y="543.50"></text></g><g><title>kernel_init_free_pages (14 samples, 0.07%)</title><rect x="25.2124%" y="517" width="0.0691%" height="15" fill="rgb(233,0,4)"/><text x="25.4624%" y="527.50"></text></g><g><title>clear_page_erms (14 samples, 0.07%)</title><rect x="25.2124%" y="501" width="0.0691%" height="15" fill="rgb(235,30,7)"/><text x="25.4624%" y="511.50"></text></g><g><title>__pagevec_lru_add_fn (4 samples, 0.02%)</title><rect x="25.2864%" y="549" width="0.0198%" height="15" fill="rgb(250,79,13)"/><text x="25.5364%" y="559.50"></text></g><g><title>lru_cache_add (9 samples, 0.04%)</title><rect x="25.2815%" y="581" width="0.0444%" height="15" fill="rgb(211,146,34)"/><text x="25.5315%" y="591.50"></text></g><g><title>pagevec_lru_move_fn (9 samples, 0.04%)</title><rect x="25.2815%" y="565" width="0.0444%" height="15" fill="rgb(228,22,38)"/><text x="25.5315%" y="575.50"></text></g><g><title>release_pages (3 samples, 0.01%)</title><rect x="25.3111%" y="549" width="0.0148%" height="15" fill="rgb(235,168,5)"/><text x="25.5611%" y="559.50"></text></g><g><title>mem_cgroup_charge (6 samples, 0.03%)</title><rect x="25.3260%" y="581" width="0.0296%" height="15" fill="rgb(221,155,16)"/><text x="25.5760%" y="591.50"></text></g><g><title>try_charge (4 samples, 0.02%)</title><rect x="25.3358%" y="565" width="0.0198%" height="15" fill="rgb(215,215,53)"/><text x="25.5858%" y="575.50"></text></g><g><title>handle_mm_fault (49 samples, 0.24%)</title><rect x="25.1333%" y="597" width="0.2420%" height="15" fill="rgb(223,4,10)"/><text x="25.3833%" y="607.50"></text></g><g><title>page_add_new_anon_rmap (4 samples, 0.02%)</title><rect x="25.3556%" y="581" width="0.0198%" height="15" fill="rgb(234,103,6)"/><text x="25.6056%" y="591.50"></text></g><g><title>exc_page_fault (54 samples, 0.27%)</title><rect x="25.1235%" y="629" width="0.2667%" height="15" fill="rgb(227,97,0)"/><text x="25.3735%" y="639.50"></text></g><g><title>do_user_addr_fault (54 samples, 0.27%)</title><rect x="25.1235%" y="613" width="0.2667%" height="15" fill="rgb(234,150,53)"/><text x="25.3735%" y="623.50"></text></g><g><title>up_read (3 samples, 0.01%)</title><rect x="25.3753%" y="597" width="0.0148%" height="15" fill="rgb(228,201,54)"/><text x="25.6253%" y="607.50"></text></g><g><title>schedule (5 samples, 0.02%)</title><rect x="25.4544%" y="597" width="0.0247%" height="15" fill="rgb(222,22,37)"/><text x="25.7044%" y="607.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="25.4544%" y="581" width="0.0247%" height="15" fill="rgb(237,53,32)"/><text x="25.7044%" y="591.50"></text></g><g><title>finish_task_switch (5 samples, 0.02%)</title><rect x="25.4544%" y="565" width="0.0247%" height="15" fill="rgb(233,25,53)"/><text x="25.7044%" y="575.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="25.4544%" y="549" width="0.0247%" height="15" fill="rgb(210,40,34)"/><text x="25.7044%" y="559.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.02%)</title><rect x="25.4544%" y="533" width="0.0247%" height="15" fill="rgb(241,220,44)"/><text x="25.7044%" y="543.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="25.4544%" y="517" width="0.0247%" height="15" fill="rgb(235,28,35)"/><text x="25.7044%" y="527.50"></text></g><g><title>asm_exc_page_fault (73 samples, 0.36%)</title><rect x="25.1235%" y="645" width="0.3605%" height="15" fill="rgb(210,56,17)"/><text x="25.3735%" y="655.50"></text></g><g><title>irqentry_exit_to_user_mode (19 samples, 0.09%)</title><rect x="25.3902%" y="629" width="0.0938%" height="15" fill="rgb(224,130,29)"/><text x="25.6402%" y="639.50"></text></g><g><title>exit_to_user_mode_prepare (6 samples, 0.03%)</title><rect x="25.4544%" y="613" width="0.0296%" height="15" fill="rgb(235,212,8)"/><text x="25.7044%" y="623.50"></text></g><g><title>error_entry (11 samples, 0.05%)</title><rect x="25.4840%" y="645" width="0.0543%" height="15" fill="rgb(223,33,50)"/><text x="25.7340%" y="655.50"></text></g><g><title>sync_regs (8 samples, 0.04%)</title><rect x="25.4988%" y="629" width="0.0395%" height="15" fill="rgb(219,149,13)"/><text x="25.7488%" y="639.50"></text></g><g><title>__GI___libc_malloc (120 samples, 0.59%)</title><rect x="24.9704%" y="677" width="0.5927%" height="15" fill="rgb(250,156,29)"/><text x="25.2204%" y="687.50"></text></g><g><title>_int_malloc (108 samples, 0.53%)</title><rect x="25.0296%" y="661" width="0.5334%" height="15" fill="rgb(216,193,19)"/><text x="25.2796%" y="671.50"></text></g><g><title>sysmalloc (5 samples, 0.02%)</title><rect x="25.5383%" y="645" width="0.0247%" height="15" fill="rgb(216,135,14)"/><text x="25.7883%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (179 samples, 0.88%)</title><rect x="24.6839%" y="693" width="0.8840%" height="15" fill="rgb(241,47,5)"/><text x="24.9339%" y="703.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="25.5680%" y="693" width="0.0148%" height="15" fill="rgb(233,42,35)"/><text x="25.8180%" y="703.50"></text></g><g><title>__irqentry_text_end (7 samples, 0.03%)</title><rect x="25.5828%" y="693" width="0.0346%" height="15" fill="rgb(231,13,6)"/><text x="25.8328%" y="703.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.01%)</title><rect x="25.6272%" y="693" width="0.0148%" height="15" fill="rgb(207,181,40)"/><text x="25.8772%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.01%)</title><rect x="25.6272%" y="677" width="0.0148%" height="15" fill="rgb(254,173,49)"/><text x="25.8772%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.02%)</title><rect x="26.0026%" y="661" width="0.0198%" height="15" fill="rgb(221,1,38)"/><text x="26.2526%" y="671.50"></text></g><g><title>finish_task_switch (5 samples, 0.02%)</title><rect x="26.0421%" y="533" width="0.0247%" height="15" fill="rgb(206,124,46)"/><text x="26.2921%" y="543.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="26.0421%" y="517" width="0.0247%" height="15" fill="rgb(249,21,11)"/><text x="26.2921%" y="527.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.02%)</title><rect x="26.0421%" y="501" width="0.0247%" height="15" fill="rgb(222,201,40)"/><text x="26.2921%" y="511.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="26.0421%" y="485" width="0.0247%" height="15" fill="rgb(235,61,29)"/><text x="26.2921%" y="495.50"></text></g><g><title>futex_wait_queue_me (8 samples, 0.04%)</title><rect x="26.0322%" y="581" width="0.0395%" height="15" fill="rgb(219,207,3)"/><text x="26.2822%" y="591.50"></text></g><g><title>schedule (8 samples, 0.04%)</title><rect x="26.0322%" y="565" width="0.0395%" height="15" fill="rgb(222,56,46)"/><text x="26.2822%" y="575.50"></text></g><g><title>__schedule (7 samples, 0.03%)</title><rect x="26.0371%" y="549" width="0.0346%" height="15" fill="rgb(239,76,54)"/><text x="26.2871%" y="559.50"></text></g><g><title>__get_user_nocheck_4 (4 samples, 0.02%)</title><rect x="26.1162%" y="565" width="0.0198%" height="15" fill="rgb(231,124,27)"/><text x="26.3662%" y="575.50"></text></g><g><title>do_syscall_64 (27 samples, 0.13%)</title><rect x="26.0223%" y="645" width="0.1333%" height="15" fill="rgb(249,195,6)"/><text x="26.2723%" y="655.50"></text></g><g><title>__x64_sys_futex (27 samples, 0.13%)</title><rect x="26.0223%" y="629" width="0.1333%" height="15" fill="rgb(237,174,47)"/><text x="26.2723%" y="639.50"></text></g><g><title>do_futex (25 samples, 0.12%)</title><rect x="26.0322%" y="613" width="0.1235%" height="15" fill="rgb(206,201,31)"/><text x="26.2822%" y="623.50"></text></g><g><title>futex_wait (25 samples, 0.12%)</title><rect x="26.0322%" y="597" width="0.1235%" height="15" fill="rgb(231,57,52)"/><text x="26.2822%" y="607.50"></text></g><g><title>futex_wait_setup (17 samples, 0.08%)</title><rect x="26.0717%" y="581" width="0.0840%" height="15" fill="rgb(248,177,22)"/><text x="26.3217%" y="591.50"></text></g><g><title>hash_futex (3 samples, 0.01%)</title><rect x="26.1409%" y="565" width="0.0148%" height="15" fill="rgb(215,211,37)"/><text x="26.3909%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (45 samples, 0.22%)</title><rect x="26.0223%" y="661" width="0.2222%" height="15" fill="rgb(241,128,51)"/><text x="26.2723%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (18 samples, 0.09%)</title><rect x="26.1557%" y="645" width="0.0889%" height="15" fill="rgb(227,165,31)"/><text x="26.4057%" y="655.50"></text></g><g><title>__lll_lock_wait_private (68 samples, 0.34%)</title><rect x="25.9384%" y="677" width="0.3358%" height="15" fill="rgb(228,167,24)"/><text x="26.1884%" y="687.50"></text></g><g><title>syscall_return_via_sysret (6 samples, 0.03%)</title><rect x="26.2446%" y="661" width="0.0296%" height="15" fill="rgb(228,143,12)"/><text x="26.4946%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (15 samples, 0.07%)</title><rect x="26.2791%" y="677" width="0.0741%" height="15" fill="rgb(249,149,8)"/><text x="26.5291%" y="687.50"></text></g><g><title>_raw_spin_lock (6 samples, 0.03%)</title><rect x="26.3829%" y="597" width="0.0296%" height="15" fill="rgb(243,35,44)"/><text x="26.6329%" y="607.50"></text></g><g><title>native_queued_spin_lock_slowpath (4 samples, 0.02%)</title><rect x="26.3927%" y="581" width="0.0198%" height="15" fill="rgb(246,89,9)"/><text x="26.6427%" y="591.50"></text></g><g><title>do_syscall_64 (17 samples, 0.08%)</title><rect x="26.3582%" y="661" width="0.0840%" height="15" fill="rgb(233,213,13)"/><text x="26.6082%" y="671.50"></text></g><g><title>__x64_sys_futex (17 samples, 0.08%)</title><rect x="26.3582%" y="645" width="0.0840%" height="15" fill="rgb(233,141,41)"/><text x="26.6082%" y="655.50"></text></g><g><title>do_futex (17 samples, 0.08%)</title><rect x="26.3582%" y="629" width="0.0840%" height="15" fill="rgb(239,167,4)"/><text x="26.6082%" y="639.50"></text></g><g><title>futex_wake (16 samples, 0.08%)</title><rect x="26.3631%" y="613" width="0.0790%" height="15" fill="rgb(209,217,16)"/><text x="26.6131%" y="623.50"></text></g><g><title>wake_up_q (3 samples, 0.01%)</title><rect x="26.4273%" y="597" width="0.0148%" height="15" fill="rgb(219,88,35)"/><text x="26.6773%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (54 samples, 0.27%)</title><rect x="26.3532%" y="677" width="0.2667%" height="15" fill="rgb(220,193,23)"/><text x="26.6032%" y="687.50"></text></g><g><title>syscall_exit_to_user_mode (36 samples, 0.18%)</title><rect x="26.4421%" y="661" width="0.1778%" height="15" fill="rgb(230,90,52)"/><text x="26.6921%" y="671.50"></text></g><g><title>malloc_consolidate (13 samples, 0.06%)</title><rect x="26.6199%" y="677" width="0.0642%" height="15" fill="rgb(252,106,19)"/><text x="26.8699%" y="687.50"></text></g><g><title>unlink_chunk (6 samples, 0.03%)</title><rect x="26.6545%" y="661" width="0.0296%" height="15" fill="rgb(206,74,20)"/><text x="26.9045%" y="671.50"></text></g><g><title>_int_free (228 samples, 1.13%)</title><rect x="25.6470%" y="693" width="1.1260%" height="15" fill="rgb(230,138,44)"/><text x="25.8970%" y="703.50"></text></g><g><title>syscall_return_via_sysret (18 samples, 0.09%)</title><rect x="26.6841%" y="677" width="0.0889%" height="15" fill="rgb(235,182,43)"/><text x="26.9341%" y="687.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.02%)</title><rect x="26.7878%" y="661" width="0.0247%" height="15" fill="rgb(242,16,51)"/><text x="27.0378%" y="671.50"></text></g><g><title>alloc_pages_vma (6 samples, 0.03%)</title><rect x="26.8718%" y="549" width="0.0296%" height="15" fill="rgb(248,9,4)"/><text x="27.1218%" y="559.50"></text></g><g><title>__alloc_pages_nodemask (5 samples, 0.02%)</title><rect x="26.8767%" y="533" width="0.0247%" height="15" fill="rgb(210,31,22)"/><text x="27.1267%" y="543.50"></text></g><g><title>get_page_from_freelist (4 samples, 0.02%)</title><rect x="26.8817%" y="517" width="0.0198%" height="15" fill="rgb(239,54,39)"/><text x="27.1317%" y="527.50"></text></g><g><title>prep_new_page (3 samples, 0.01%)</title><rect x="26.8866%" y="501" width="0.0148%" height="15" fill="rgb(230,99,41)"/><text x="27.1366%" y="511.50"></text></g><g><title>exc_page_fault (13 samples, 0.06%)</title><rect x="26.8619%" y="597" width="0.0642%" height="15" fill="rgb(253,106,12)"/><text x="27.1119%" y="607.50"></text></g><g><title>do_user_addr_fault (13 samples, 0.06%)</title><rect x="26.8619%" y="581" width="0.0642%" height="15" fill="rgb(213,46,41)"/><text x="27.1119%" y="591.50"></text></g><g><title>handle_mm_fault (13 samples, 0.06%)</title><rect x="26.8619%" y="565" width="0.0642%" height="15" fill="rgb(215,133,35)"/><text x="27.1119%" y="575.50"></text></g><g><title>mem_cgroup_charge (4 samples, 0.02%)</title><rect x="26.9064%" y="549" width="0.0198%" height="15" fill="rgb(213,28,5)"/><text x="27.1564%" y="559.50"></text></g><g><title>asm_exc_page_fault (19 samples, 0.09%)</title><rect x="26.8619%" y="613" width="0.0938%" height="15" fill="rgb(215,77,49)"/><text x="27.1119%" y="623.50"></text></g><g><title>irqentry_exit_to_user_mode (6 samples, 0.03%)</title><rect x="26.9261%" y="597" width="0.0296%" height="15" fill="rgb(248,100,22)"/><text x="27.1761%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (32 samples, 0.16%)</title><rect x="26.8273%" y="629" width="0.1580%" height="15" fill="rgb(208,67,9)"/><text x="27.0773%" y="639.50"></text></g><g><title>error_entry (6 samples, 0.03%)</title><rect x="26.9557%" y="613" width="0.0296%" height="15" fill="rgb(219,133,21)"/><text x="27.2057%" y="623.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.01%)</title><rect x="27.0002%" y="549" width="0.0148%" height="15" fill="rgb(246,46,29)"/><text x="27.2502%" y="559.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.01%)</title><rect x="27.0002%" y="533" width="0.0148%" height="15" fill="rgb(246,185,52)"/><text x="27.2502%" y="543.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.01%)</title><rect x="27.0002%" y="517" width="0.0148%" height="15" fill="rgb(252,136,11)"/><text x="27.2502%" y="527.50"></text></g><g><title>prep_new_page (3 samples, 0.01%)</title><rect x="27.0002%" y="501" width="0.0148%" height="15" fill="rgb(219,138,53)"/><text x="27.2502%" y="511.50"></text></g><g><title>kernel_init_free_pages (3 samples, 0.01%)</title><rect x="27.0002%" y="485" width="0.0148%" height="15" fill="rgb(211,51,23)"/><text x="27.2502%" y="495.50"></text></g><g><title>clear_page_erms (3 samples, 0.01%)</title><rect x="27.0002%" y="469" width="0.0148%" height="15" fill="rgb(247,221,28)"/><text x="27.2502%" y="479.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.02%)</title><rect x="27.0002%" y="613" width="0.0198%" height="15" fill="rgb(251,222,45)"/><text x="27.2502%" y="623.50"></text></g><g><title>exc_page_fault (4 samples, 0.02%)</title><rect x="27.0002%" y="597" width="0.0198%" height="15" fill="rgb(217,162,53)"/><text x="27.2502%" y="607.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.02%)</title><rect x="27.0002%" y="581" width="0.0198%" height="15" fill="rgb(229,93,14)"/><text x="27.2502%" y="591.50"></text></g><g><title>handle_mm_fault (4 samples, 0.02%)</title><rect x="27.0002%" y="565" width="0.0198%" height="15" fill="rgb(209,67,49)"/><text x="27.2502%" y="575.50"></text></g><g><title>exc_page_fault (3 samples, 0.01%)</title><rect x="27.0249%" y="581" width="0.0148%" height="15" fill="rgb(213,87,29)"/><text x="27.2749%" y="591.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.01%)</title><rect x="27.0249%" y="565" width="0.0148%" height="15" fill="rgb(205,151,52)"/><text x="27.2749%" y="575.50"></text></g><g><title>_int_malloc (11 samples, 0.05%)</title><rect x="26.9903%" y="629" width="0.0543%" height="15" fill="rgb(253,215,39)"/><text x="27.2403%" y="639.50"></text></g><g><title>sysmalloc (5 samples, 0.02%)</title><rect x="27.0200%" y="613" width="0.0247%" height="15" fill="rgb(221,220,41)"/><text x="27.2700%" y="623.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.02%)</title><rect x="27.0249%" y="597" width="0.0198%" height="15" fill="rgb(218,133,21)"/><text x="27.2749%" y="607.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.01%)</title><rect x="27.0446%" y="565" width="0.0148%" height="15" fill="rgb(221,193,43)"/><text x="27.2946%" y="575.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.01%)</title><rect x="27.0446%" y="549" width="0.0148%" height="15" fill="rgb(240,128,52)"/><text x="27.2946%" y="559.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.01%)</title><rect x="27.0446%" y="533" width="0.0148%" height="15" fill="rgb(253,114,12)"/><text x="27.2946%" y="543.50"></text></g><g><title>exc_page_fault (4 samples, 0.02%)</title><rect x="27.0446%" y="613" width="0.0198%" height="15" fill="rgb(215,223,47)"/><text x="27.2946%" y="623.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.02%)</title><rect x="27.0446%" y="597" width="0.0198%" height="15" fill="rgb(248,225,23)"/><text x="27.2946%" y="607.50"></text></g><g><title>handle_mm_fault (4 samples, 0.02%)</title><rect x="27.0446%" y="581" width="0.0198%" height="15" fill="rgb(250,108,0)"/><text x="27.2946%" y="591.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.02%)</title><rect x="27.0446%" y="629" width="0.0247%" height="15" fill="rgb(228,208,7)"/><text x="27.2946%" y="639.50"></text></g><g><title>_int_realloc (52 samples, 0.26%)</title><rect x="26.8175%" y="645" width="0.2568%" height="15" fill="rgb(244,45,10)"/><text x="27.0675%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (62 samples, 0.31%)</title><rect x="26.7730%" y="693" width="0.3062%" height="15" fill="rgb(207,125,25)"/><text x="27.0230%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (61 samples, 0.30%)</title><rect x="26.7780%" y="677" width="0.3013%" height="15" fill="rgb(210,195,18)"/><text x="27.0280%" y="687.50"></text></g><g><title>__GI___libc_realloc (54 samples, 0.27%)</title><rect x="26.8125%" y="661" width="0.2667%" height="15" fill="rgb(249,80,12)"/><text x="27.0625%" y="671.50"></text></g><g><title>__list_del_entry_valid (3 samples, 0.01%)</title><rect x="27.1187%" y="581" width="0.0148%" height="15" fill="rgb(221,65,9)"/><text x="27.3687%" y="591.50"></text></g><g><title>alloc_pages_vma (14 samples, 0.07%)</title><rect x="27.0990%" y="629" width="0.0691%" height="15" fill="rgb(235,49,36)"/><text x="27.3490%" y="639.50"></text></g><g><title>__alloc_pages_nodemask (12 samples, 0.06%)</title><rect x="27.1089%" y="613" width="0.0593%" height="15" fill="rgb(225,32,20)"/><text x="27.3589%" y="623.50"></text></g><g><title>get_page_from_freelist (11 samples, 0.05%)</title><rect x="27.1138%" y="597" width="0.0543%" height="15" fill="rgb(215,141,46)"/><text x="27.3638%" y="607.50"></text></g><g><title>prep_new_page (7 samples, 0.03%)</title><rect x="27.1335%" y="581" width="0.0346%" height="15" fill="rgb(250,160,47)"/><text x="27.3835%" y="591.50"></text></g><g><title>kernel_init_free_pages (7 samples, 0.03%)</title><rect x="27.1335%" y="565" width="0.0346%" height="15" fill="rgb(216,222,40)"/><text x="27.3835%" y="575.50"></text></g><g><title>clear_page_erms (6 samples, 0.03%)</title><rect x="27.1385%" y="549" width="0.0296%" height="15" fill="rgb(234,217,39)"/><text x="27.3885%" y="559.50"></text></g><g><title>lru_cache_add (7 samples, 0.03%)</title><rect x="27.1681%" y="629" width="0.0346%" height="15" fill="rgb(207,178,40)"/><text x="27.4181%" y="639.50"></text></g><g><title>pagevec_lru_move_fn (6 samples, 0.03%)</title><rect x="27.1731%" y="613" width="0.0296%" height="15" fill="rgb(221,136,13)"/><text x="27.4231%" y="623.50"></text></g><g><title>__pagevec_lru_add_fn (4 samples, 0.02%)</title><rect x="27.1829%" y="597" width="0.0198%" height="15" fill="rgb(249,199,10)"/><text x="27.4329%" y="607.50"></text></g><g><title>exc_page_fault (27 samples, 0.13%)</title><rect x="27.0792%" y="677" width="0.1333%" height="15" fill="rgb(249,222,13)"/><text x="27.3292%" y="687.50"></text></g><g><title>do_user_addr_fault (27 samples, 0.13%)</title><rect x="27.0792%" y="661" width="0.1333%" height="15" fill="rgb(244,185,38)"/><text x="27.3292%" y="671.50"></text></g><g><title>handle_mm_fault (25 samples, 0.12%)</title><rect x="27.0891%" y="645" width="0.1235%" height="15" fill="rgb(236,202,9)"/><text x="27.3391%" y="655.50"></text></g><g><title>asm_exc_page_fault (34 samples, 0.17%)</title><rect x="27.0792%" y="693" width="0.1679%" height="15" fill="rgb(250,229,37)"/><text x="27.3292%" y="703.50"></text></g><g><title>irqentry_exit_to_user_mode (7 samples, 0.03%)</title><rect x="27.2126%" y="677" width="0.0346%" height="15" fill="rgb(206,174,23)"/><text x="27.4626%" y="687.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (3 samples, 0.01%)</title><rect x="27.3163%" y="677" width="0.0148%" height="15" fill="rgb(211,33,43)"/><text x="27.5663%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (25 samples, 0.12%)</title><rect x="27.3410%" y="661" width="0.1235%" height="15" fill="rgb(245,58,50)"/><text x="27.5910%" y="671.50"></text></g><g><title>blake3::Hasher::finalize (3 samples, 0.01%)</title><rect x="27.4644%" y="661" width="0.0148%" height="15" fill="rgb(244,68,36)"/><text x="27.7144%" y="671.50"></text></g><g><title>blake3::Hasher::new (3 samples, 0.01%)</title><rect x="27.4793%" y="661" width="0.0148%" height="15" fill="rgb(232,229,15)"/><text x="27.7293%" y="671.50"></text></g><g><title>blake3::ChunkState::update (5 samples, 0.02%)</title><rect x="27.5188%" y="645" width="0.0247%" height="15" fill="rgb(254,30,23)"/><text x="27.7688%" y="655.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (44 samples, 0.22%)</title><rect x="27.3311%" y="677" width="0.2173%" height="15" fill="rgb(235,160,14)"/><text x="27.5811%" y="687.50"></text></g><g><title>blake3::Hasher::update (11 samples, 0.05%)</title><rect x="27.4941%" y="661" width="0.0543%" height="15" fill="rgb(212,155,44)"/><text x="27.7441%" y="671.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.01%)</title><rect x="27.7213%" y="549" width="0.0148%" height="15" fill="rgb(226,2,50)"/><text x="27.9713%" y="559.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.01%)</title><rect x="27.7213%" y="533" width="0.0148%" height="15" fill="rgb(234,177,6)"/><text x="27.9713%" y="543.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.01%)</title><rect x="27.7213%" y="517" width="0.0148%" height="15" fill="rgb(217,24,9)"/><text x="27.9713%" y="527.50"></text></g><g><title>exc_page_fault (6 samples, 0.03%)</title><rect x="27.7163%" y="597" width="0.0296%" height="15" fill="rgb(220,13,46)"/><text x="27.9663%" y="607.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.03%)</title><rect x="27.7163%" y="581" width="0.0296%" height="15" fill="rgb(239,221,27)"/><text x="27.9663%" y="591.50"></text></g><g><title>handle_mm_fault (5 samples, 0.02%)</title><rect x="27.7213%" y="565" width="0.0247%" height="15" fill="rgb(222,198,25)"/><text x="27.9713%" y="575.50"></text></g><g><title>asm_exc_page_fault (8 samples, 0.04%)</title><rect x="27.7163%" y="613" width="0.0395%" height="15" fill="rgb(211,99,13)"/><text x="27.9663%" y="623.50"></text></g><g><title>_int_malloc (21 samples, 0.10%)</title><rect x="27.6620%" y="629" width="0.1037%" height="15" fill="rgb(232,111,31)"/><text x="27.9120%" y="639.50"></text></g><g><title>__GI___libc_malloc (38 samples, 0.19%)</title><rect x="27.5879%" y="645" width="0.1877%" height="15" fill="rgb(245,82,37)"/><text x="27.8379%" y="655.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (44 samples, 0.22%)</title><rect x="27.8151%" y="629" width="0.2173%" height="15" fill="rgb(227,149,46)"/><text x="28.0651%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="28.0126%" y="613" width="0.0198%" height="15" fill="rgb(218,36,50)"/><text x="28.2626%" y="623.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::MetaAuthorization&gt;::serialize (3 samples, 0.01%)</title><rect x="28.0324%" y="629" width="0.0148%" height="15" fill="rgb(226,80,48)"/><text x="28.2824%" y="639.50"></text></g><g><title>ate::spec::SerializationFormat::serialize (104 samples, 0.51%)</title><rect x="27.5484%" y="677" width="0.5136%" height="15" fill="rgb(238,224,15)"/><text x="27.7984%" y="687.50"></text></g><g><title>bincode::internal::serialize (99 samples, 0.49%)</title><rect x="27.5731%" y="661" width="0.4889%" height="15" fill="rgb(241,136,10)"/><text x="27.8231%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (57 samples, 0.28%)</title><rect x="27.7805%" y="645" width="0.2815%" height="15" fill="rgb(208,32,45)"/><text x="28.0305%" y="655.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::ReadOption&gt;::serialize (3 samples, 0.01%)</title><rect x="28.0472%" y="629" width="0.0148%" height="15" fill="rgb(207,135,9)"/><text x="28.2972%" y="639.50"></text></g><g><title>ate::event::EventData::as_header_raw (204 samples, 1.01%)</title><rect x="27.2471%" y="693" width="1.0075%" height="15" fill="rgb(206,86,44)"/><text x="27.4971%" y="703.50"></text></g><g><title>blake3::hash (39 samples, 0.19%)</title><rect x="28.0620%" y="677" width="0.1926%" height="15" fill="rgb(245,177,15)"/><text x="28.3120%" y="687.50"></text></g><g><title>blake3::ChunkState::update (21 samples, 0.10%)</title><rect x="28.1509%" y="661" width="0.1037%" height="15" fill="rgb(206,64,50)"/><text x="28.4009%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="28.2349%" y="645" width="0.0198%" height="15" fill="rgb(234,36,40)"/><text x="28.4849%" y="655.50"></text></g><g><title>ate::multi::ChainMultiUser::data_as_underlay (44 samples, 0.22%)</title><rect x="28.2546%" y="693" width="0.2173%" height="15" fill="rgb(213,64,8)"/><text x="28.5046%" y="703.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::transform::EventDataTransformer&gt;::data_as_underlay (7 samples, 0.03%)</title><rect x="28.4374%" y="677" width="0.0346%" height="15" fill="rgb(210,75,36)"/><text x="28.6874%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.03%)</title><rect x="28.7238%" y="661" width="0.0296%" height="15" fill="rgb(229,88,21)"/><text x="28.9738%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.03%)</title><rect x="28.7238%" y="645" width="0.0296%" height="15" fill="rgb(252,204,47)"/><text x="28.9738%" y="655.50"></text></g><g><title>__rdl_alloc (3 samples, 0.01%)</title><rect x="28.7386%" y="629" width="0.0148%" height="15" fill="rgb(208,77,27)"/><text x="28.9886%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.01%)</title><rect x="28.7386%" y="613" width="0.0148%" height="15" fill="rgb(221,76,26)"/><text x="28.9886%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.02%)</title><rect x="28.8226%" y="629" width="0.0198%" height="15" fill="rgb(225,139,18)"/><text x="29.0726%" y="639.50"></text></g><g><title>std::time::SystemTime::duration_since (10 samples, 0.05%)</title><rect x="28.8226%" y="645" width="0.0494%" height="15" fill="rgb(230,137,11)"/><text x="29.0726%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (6 samples, 0.03%)</title><rect x="28.8424%" y="629" width="0.0296%" height="15" fill="rgb(212,28,1)"/><text x="29.0924%" y="639.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (6 samples, 0.03%)</title><rect x="28.8424%" y="613" width="0.0296%" height="15" fill="rgb(248,164,17)"/><text x="29.0924%" y="623.50"></text></g><g><title>&lt;ate::time::TimestampEnforcer as ate::lint::EventMetadataLinter&gt;::metadata_lint_event (61 samples, 0.30%)</title><rect x="28.6794%" y="677" width="0.3013%" height="15" fill="rgb(222,171,42)"/><text x="28.9294%" y="687.50"></text></g><g><title>ate::time::TimestampEnforcer::current_timestamp (46 samples, 0.23%)</title><rect x="28.7535%" y="661" width="0.2272%" height="15" fill="rgb(243,84,45)"/><text x="29.0035%" y="671.50"></text></g><g><title>std::time::SystemTime::now (22 samples, 0.11%)</title><rect x="28.8720%" y="645" width="0.1087%" height="15" fill="rgb(252,49,23)"/><text x="29.1220%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (22 samples, 0.11%)</title><rect x="28.8720%" y="629" width="0.1087%" height="15" fill="rgb(215,19,7)"/><text x="29.1220%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::now (22 samples, 0.11%)</title><rect x="28.8720%" y="613" width="0.1087%" height="15" fill="rgb(238,81,41)"/><text x="29.1220%" y="623.50"></text></g><g><title>__GI___clock_gettime (21 samples, 0.10%)</title><rect x="28.8769%" y="597" width="0.1037%" height="15" fill="rgb(210,199,37)"/><text x="29.1269%" y="607.50"></text></g><g><title>__vdso_clock_gettime (19 samples, 0.09%)</title><rect x="28.8868%" y="581" width="0.0938%" height="15" fill="rgb(244,192,49)"/><text x="29.1368%" y="591.50"></text></g><g><title>[[vdso]] (12 samples, 0.06%)</title><rect x="28.9214%" y="565" width="0.0593%" height="15" fill="rgb(226,211,11)"/><text x="29.1714%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="29.0300%" y="661" width="0.0198%" height="15" fill="rgb(236,162,54)"/><text x="29.2800%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="29.0350%" y="645" width="0.0148%" height="15" fill="rgb(220,229,9)"/><text x="29.2850%" y="655.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::lint::EventMetadataLinter&gt;::metadata_lint_event (145 samples, 0.72%)</title><rect x="28.9806%" y="677" width="0.7161%" height="15" fill="rgb(250,87,22)"/><text x="29.2306%" y="687.50"></text></g><g><title>ate::tree::TreeAuthorityPlugin::compute_auth (131 samples, 0.65%)</title><rect x="29.0498%" y="661" width="0.6470%" height="15" fill="rgb(239,43,17)"/><text x="29.2998%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.04%)</title><rect x="29.7017%" y="677" width="0.0444%" height="15" fill="rgb(231,177,25)"/><text x="29.9517%" y="687.50"></text></g><g><title>_int_free (11 samples, 0.05%)</title><rect x="29.7560%" y="677" width="0.0543%" height="15" fill="rgb(219,179,1)"/><text x="30.0060%" y="687.50"></text></g><g><title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="30.0227%" y="549" width="0.0198%" height="15" fill="rgb(238,219,53)"/><text x="30.2727%" y="559.50"></text></g><g><title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="30.0227%" y="533" width="0.0198%" height="15" fill="rgb(232,167,36)"/><text x="30.2727%" y="543.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.01%)</title><rect x="30.0277%" y="517" width="0.0148%" height="15" fill="rgb(244,19,51)"/><text x="30.2777%" y="527.50"></text></g><g><title>exc_page_fault (8 samples, 0.04%)</title><rect x="30.0178%" y="597" width="0.0395%" height="15" fill="rgb(224,6,22)"/><text x="30.2678%" y="607.50"></text></g><g><title>do_user_addr_fault (8 samples, 0.04%)</title><rect x="30.0178%" y="581" width="0.0395%" height="15" fill="rgb(224,145,5)"/><text x="30.2678%" y="591.50"></text></g><g><title>handle_mm_fault (8 samples, 0.04%)</title><rect x="30.0178%" y="565" width="0.0395%" height="15" fill="rgb(234,130,49)"/><text x="30.2678%" y="575.50"></text></g><g><title>asm_exc_page_fault (10 samples, 0.05%)</title><rect x="30.0178%" y="613" width="0.0494%" height="15" fill="rgb(254,6,2)"/><text x="30.2678%" y="623.50"></text></g><g><title>__GI___default_morecore (3 samples, 0.01%)</title><rect x="30.0721%" y="597" width="0.0148%" height="15" fill="rgb(208,96,46)"/><text x="30.3221%" y="607.50"></text></g><g><title>__GI___sbrk (3 samples, 0.01%)</title><rect x="30.0721%" y="581" width="0.0148%" height="15" fill="rgb(239,3,39)"/><text x="30.3221%" y="591.50"></text></g><g><title>__GI___sbrk (3 samples, 0.01%)</title><rect x="30.0721%" y="565" width="0.0148%" height="15" fill="rgb(233,210,1)"/><text x="30.3221%" y="575.50"></text></g><g><title>__brk (3 samples, 0.01%)</title><rect x="30.0721%" y="549" width="0.0148%" height="15" fill="rgb(244,137,37)"/><text x="30.3221%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="30.0721%" y="533" width="0.0148%" height="15" fill="rgb(240,136,2)"/><text x="30.3221%" y="543.50"></text></g><g><title>do_syscall_64 (3 samples, 0.01%)</title><rect x="30.0721%" y="517" width="0.0148%" height="15" fill="rgb(239,18,37)"/><text x="30.3221%" y="527.50"></text></g><g><title>__do_sys_brk (3 samples, 0.01%)</title><rect x="30.0721%" y="501" width="0.0148%" height="15" fill="rgb(218,185,22)"/><text x="30.3221%" y="511.50"></text></g><g><title>sysmalloc (4 samples, 0.02%)</title><rect x="30.0721%" y="613" width="0.0198%" height="15" fill="rgb(225,218,4)"/><text x="30.3221%" y="623.50"></text></g><g><title>_int_malloc (48 samples, 0.24%)</title><rect x="29.8696%" y="629" width="0.2371%" height="15" fill="rgb(230,182,32)"/><text x="30.1196%" y="639.50"></text></g><g><title>__GI___libc_malloc (60 samples, 0.30%)</title><rect x="29.8202%" y="645" width="0.2963%" height="15" fill="rgb(242,56,43)"/><text x="30.0702%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (64 samples, 0.32%)</title><rect x="29.8104%" y="677" width="0.3161%" height="15" fill="rgb(233,99,24)"/><text x="30.0604%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (63 samples, 0.31%)</title><rect x="29.8153%" y="661" width="0.3111%" height="15" fill="rgb(234,209,42)"/><text x="30.0653%" y="671.50"></text></g><g><title>ate::multi::ChainMultiUser::metadata_lint_event (336 samples, 1.66%)</title><rect x="28.4719%" y="693" width="1.6594%" height="15" fill="rgb(227,7,12)"/><text x="28.7219%" y="703.50"></text></g><g><title>ate::multi::ChainMultiUser::metadata_lint_many (16 samples, 0.08%)</title><rect x="30.1314%" y="693" width="0.0790%" height="15" fill="rgb(245,203,43)"/><text x="30.3814%" y="703.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::lint::EventMetadataLinter&gt;::metadata_lint_many (16 samples, 0.08%)</title><rect x="30.1314%" y="677" width="0.0790%" height="15" fill="rgb(238,205,33)"/><text x="30.3814%" y="687.50"></text></g><g><title>&lt;ate::signature::SignaturePlugin as ate::lint::EventMetadataLinter&gt;::metadata_lint_many (16 samples, 0.08%)</title><rect x="30.1314%" y="661" width="0.0790%" height="15" fill="rgb(231,56,7)"/><text x="30.3814%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.08%)</title><rect x="30.1314%" y="645" width="0.0790%" height="15" fill="rgb(244,186,29)"/><text x="30.3814%" y="655.50"></text></g><g><title>_int_malloc (16 samples, 0.08%)</title><rect x="30.3882%" y="645" width="0.0790%" height="15" fill="rgb(234,111,31)"/><text x="30.6382%" y="655.50"></text></g><g><title>unlink_chunk (3 samples, 0.01%)</title><rect x="30.4524%" y="629" width="0.0148%" height="15" fill="rgb(241,149,10)"/><text x="30.7024%" y="639.50"></text></g><g><title>__GI___libc_malloc (44 samples, 0.22%)</title><rect x="30.2548%" y="661" width="0.2173%" height="15" fill="rgb(249,206,44)"/><text x="30.5048%" y="671.50"></text></g><g><title>bytes::bytes::promotable_even_clone (54 samples, 0.27%)</title><rect x="30.2104%" y="693" width="0.2667%" height="15" fill="rgb(251,153,30)"/><text x="30.4604%" y="703.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (54 samples, 0.27%)</title><rect x="30.2104%" y="677" width="0.2667%" height="15" fill="rgb(239,152,38)"/><text x="30.4604%" y="687.50"></text></g><g><title>_int_free (27 samples, 0.13%)</title><rect x="30.5117%" y="677" width="0.1333%" height="15" fill="rgb(249,139,47)"/><text x="30.7617%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (50 samples, 0.25%)</title><rect x="30.4771%" y="693" width="0.2469%" height="15" fill="rgb(244,64,35)"/><text x="30.7271%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (16 samples, 0.08%)</title><rect x="30.6450%" y="677" width="0.0790%" height="15" fill="rgb(216,46,15)"/><text x="30.8950%" y="687.50"></text></g><g><title>error_entry (5 samples, 0.02%)</title><rect x="30.7240%" y="693" width="0.0247%" height="15" fill="rgb(250,74,19)"/><text x="30.9740%" y="703.50"></text></g><g><title>sync_regs (3 samples, 0.01%)</title><rect x="30.7339%" y="677" width="0.0148%" height="15" fill="rgb(249,42,33)"/><text x="30.9839%" y="687.50"></text></g><g><title>do_syscall_64 (3 samples, 0.01%)</title><rect x="30.7537%" y="549" width="0.0148%" height="15" fill="rgb(242,149,17)"/><text x="31.0037%" y="559.50"></text></g><g><title>__x64_sys_futex (3 samples, 0.01%)</title><rect x="30.7537%" y="533" width="0.0148%" height="15" fill="rgb(244,29,21)"/><text x="31.0037%" y="543.50"></text></g><g><title>do_futex (3 samples, 0.01%)</title><rect x="30.7537%" y="517" width="0.0148%" height="15" fill="rgb(220,130,37)"/><text x="31.0037%" y="527.50"></text></g><g><title>futex_wait (3 samples, 0.01%)</title><rect x="30.7537%" y="501" width="0.0148%" height="15" fill="rgb(211,67,2)"/><text x="31.0037%" y="511.50"></text></g><g><title>futex_wait_queue_me (3 samples, 0.01%)</title><rect x="30.7537%" y="485" width="0.0148%" height="15" fill="rgb(235,68,52)"/><text x="31.0037%" y="495.50"></text></g><g><title>schedule (3 samples, 0.01%)</title><rect x="30.7537%" y="469" width="0.0148%" height="15" fill="rgb(246,142,3)"/><text x="31.0037%" y="479.50"></text></g><g><title>__schedule (3 samples, 0.01%)</title><rect x="30.7537%" y="453" width="0.0148%" height="15" fill="rgb(241,25,7)"/><text x="31.0037%" y="463.50"></text></g><g><title>tokio::runtime::thread_pool::worker::block_in_place (5 samples, 0.02%)</title><rect x="30.7487%" y="693" width="0.0247%" height="15" fill="rgb(242,119,39)"/><text x="30.9987%" y="703.50"></text></g><g><title>tokio::runtime::enter::exit (4 samples, 0.02%)</title><rect x="30.7537%" y="677" width="0.0198%" height="15" fill="rgb(241,98,45)"/><text x="31.0037%" y="687.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (4 samples, 0.02%)</title><rect x="30.7537%" y="661" width="0.0198%" height="15" fill="rgb(254,28,30)"/><text x="31.0037%" y="671.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (4 samples, 0.02%)</title><rect x="30.7537%" y="645" width="0.0198%" height="15" fill="rgb(241,142,54)"/><text x="31.0037%" y="655.50"></text></g><g><title>std::thread::park (4 samples, 0.02%)</title><rect x="30.7537%" y="629" width="0.0198%" height="15" fill="rgb(222,85,15)"/><text x="31.0037%" y="639.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (4 samples, 0.02%)</title><rect x="30.7537%" y="613" width="0.0198%" height="15" fill="rgb(210,85,47)"/><text x="31.0037%" y="623.50"></text></g><g><title>std::sys::unix::futex::futex_wait (4 samples, 0.02%)</title><rect x="30.7537%" y="597" width="0.0198%" height="15" fill="rgb(224,206,25)"/><text x="31.0037%" y="607.50"></text></g><g><title>syscall (4 samples, 0.02%)</title><rect x="30.7537%" y="581" width="0.0198%" height="15" fill="rgb(243,201,19)"/><text x="31.0037%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="30.7537%" y="565" width="0.0198%" height="15" fill="rgb(236,59,4)"/><text x="31.0037%" y="575.50"></text></g><g><title>do_syscall_64 (4 samples, 0.02%)</title><rect x="30.7783%" y="597" width="0.0198%" height="15" fill="rgb(254,179,45)"/><text x="31.0283%" y="607.50"></text></g><g><title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="30.7783%" y="581" width="0.0198%" height="15" fill="rgb(226,14,10)"/><text x="31.0283%" y="591.50"></text></g><g><title>do_futex (4 samples, 0.02%)</title><rect x="30.7783%" y="565" width="0.0198%" height="15" fill="rgb(244,27,41)"/><text x="31.0283%" y="575.50"></text></g><g><title>futex_wake (4 samples, 0.02%)</title><rect x="30.7783%" y="549" width="0.0198%" height="15" fill="rgb(235,35,32)"/><text x="31.0283%" y="559.50"></text></g><g><title>&lt;ate::dio::Dio as core::ops::drop::Drop&gt;::drop (1,345 samples, 6.64%)</title><rect x="24.1703%" y="725" width="6.6426%" height="15" fill="rgb(218,68,31)"/><text x="24.4203%" y="735.50">&lt;ate::dio..</text></g><g><title>ate::dio::Dio::commit (1,345 samples, 6.64%)</title><rect x="24.1703%" y="709" width="6.6426%" height="15" fill="rgb(207,120,37)"/><text x="24.4203%" y="719.50">ate::dio:..</text></g><g><title>tokio::task::spawn::spawn (8 samples, 0.04%)</title><rect x="30.7734%" y="693" width="0.0395%" height="15" fill="rgb(227,98,0)"/><text x="31.0234%" y="703.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (7 samples, 0.03%)</title><rect x="30.7783%" y="677" width="0.0346%" height="15" fill="rgb(207,7,3)"/><text x="31.0283%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (7 samples, 0.03%)</title><rect x="30.7783%" y="661" width="0.0346%" height="15" fill="rgb(206,98,19)"/><text x="31.0283%" y="671.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (7 samples, 0.03%)</title><rect x="30.7783%" y="645" width="0.0346%" height="15" fill="rgb(217,5,26)"/><text x="31.0283%" y="655.50"></text></g><g><title>syscall (7 samples, 0.03%)</title><rect x="30.7783%" y="629" width="0.0346%" height="15" fill="rgb(235,190,38)"/><text x="31.0283%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="30.7783%" y="613" width="0.0346%" height="15" fill="rgb(247,86,24)"/><text x="31.0283%" y="623.50"></text></g><g><title>syscall_exit_to_user_mode (3 samples, 0.01%)</title><rect x="30.7981%" y="597" width="0.0148%" height="15" fill="rgb(205,101,16)"/><text x="31.0481%" y="607.50"></text></g><g><title>_int_free (25 samples, 0.12%)</title><rect x="30.8129%" y="725" width="0.1235%" height="15" fill="rgb(246,168,33)"/><text x="31.0629%" y="735.50"></text></g><g><title>__GI___libc_free (99 samples, 0.49%)</title><rect x="31.1290%" y="709" width="0.4889%" height="15" fill="rgb(231,114,1)"/><text x="31.3790%" y="719.50"></text></g><g><title>__rdl_dealloc (12 samples, 0.06%)</title><rect x="31.6179%" y="709" width="0.0593%" height="15" fill="rgb(207,184,53)"/><text x="31.8679%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (12 samples, 0.06%)</title><rect x="31.6179%" y="693" width="0.0593%" height="15" fill="rgb(224,95,51)"/><text x="31.8679%" y="703.50"></text></g><g><title>__rust_dealloc (17 samples, 0.08%)</title><rect x="31.6772%" y="709" width="0.0840%" height="15" fill="rgb(212,188,45)"/><text x="31.9272%" y="719.50"></text></g><g><title>free_perturb (13 samples, 0.06%)</title><rect x="34.4182%" y="693" width="0.0642%" height="15" fill="rgb(223,154,38)"/><text x="34.6682%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,647 samples, 32.83%)</title><rect x="1.6644%" y="757" width="32.8279%" height="15" fill="rgb(251,22,52)"/><text x="1.9144%" y="767.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::..</text></g><g><title>core::ptr::drop_in_place (2,090 samples, 10.32%)</title><rect x="24.1703%" y="741" width="10.3220%" height="15" fill="rgb(229,209,22)"/><text x="24.4203%" y="751.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place (720 samples, 3.56%)</title><rect x="30.9364%" y="725" width="3.5559%" height="15" fill="rgb(234,138,34)"/><text x="31.1864%" y="735.50">core..</text></g><g><title>_int_free (553 samples, 2.73%)</title><rect x="31.7612%" y="709" width="2.7311%" height="15" fill="rgb(212,95,11)"/><text x="32.0112%" y="719.50">_i..</text></g><g><title>__GI___libc_free (15 samples, 0.07%)</title><rect x="34.5170%" y="757" width="0.0741%" height="15" fill="rgb(240,179,47)"/><text x="34.7670%" y="767.50"></text></g><g><title>__vdso_clock_gettime (5 samples, 0.02%)</title><rect x="34.5911%" y="757" width="0.0247%" height="15" fill="rgb(240,163,11)"/><text x="34.8411%" y="767.50"></text></g><g><title>_int_free (45 samples, 0.22%)</title><rect x="34.6158%" y="757" width="0.2222%" height="15" fill="rgb(236,37,12)"/><text x="34.8658%" y="767.50"></text></g><g><title>_int_malloc (8 samples, 0.04%)</title><rect x="34.8380%" y="757" width="0.0395%" height="15" fill="rgb(232,164,16)"/><text x="35.0880%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.11%)</title><rect x="34.8775%" y="757" width="0.1087%" height="15" fill="rgb(244,205,15)"/><text x="35.1275%" y="767.50"></text></g><g><title>ate::dio::DioState::dirty (3 samples, 0.01%)</title><rect x="34.9960%" y="757" width="0.0148%" height="15" fill="rgb(223,117,47)"/><text x="35.2460%" y="767.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (3 samples, 0.01%)</title><rect x="35.0158%" y="757" width="0.0148%" height="15" fill="rgb(244,107,35)"/><text x="35.2658%" y="767.50"></text></g><g><title>bincode::internal::serialize (4 samples, 0.02%)</title><rect x="35.0701%" y="757" width="0.0198%" height="15" fill="rgb(205,140,8)"/><text x="35.3201%" y="767.50"></text></g><g><title>blake3::ChunkState::update (8 samples, 0.04%)</title><rect x="35.0899%" y="757" width="0.0395%" height="15" fill="rgb(228,84,46)"/><text x="35.3399%" y="767.50"></text></g><g><title>blake3::Hasher::update (6 samples, 0.03%)</title><rect x="35.1393%" y="757" width="0.0296%" height="15" fill="rgb(254,188,9)"/><text x="35.3893%" y="767.50"></text></g><g><title>blake3_compress_in_place_sse41 (59 samples, 0.29%)</title><rect x="35.1738%" y="757" width="0.2914%" height="15" fill="rgb(206,112,54)"/><text x="35.4238%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="35.4652%" y="757" width="0.0247%" height="15" fill="rgb(216,84,49)"/><text x="35.7152%" y="767.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.02%)</title><rect x="35.5146%" y="757" width="0.0198%" height="15" fill="rgb(214,194,35)"/><text x="35.7646%" y="767.50"></text></g><g><title>[unknown] (6,893 samples, 34.04%)</title><rect x="1.5063%" y="773" width="34.0429%" height="15" fill="rgb(249,28,3)"/><text x="1.7563%" y="783.50">[unknown]</text></g><g><title>schedule_tail (51 samples, 0.25%)</title><rect x="35.5541%" y="741" width="0.2519%" height="15" fill="rgb(222,56,52)"/><text x="35.8041%" y="751.50"></text></g><g><title>finish_task_switch (51 samples, 0.25%)</title><rect x="35.5541%" y="725" width="0.2519%" height="15" fill="rgb(245,217,50)"/><text x="35.8041%" y="735.50"></text></g><g><title>__perf_event_task_sched_in (51 samples, 0.25%)</title><rect x="35.5541%" y="709" width="0.2519%" height="15" fill="rgb(213,201,24)"/><text x="35.8041%" y="719.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (50 samples, 0.25%)</title><rect x="35.5591%" y="693" width="0.2469%" height="15" fill="rgb(248,116,28)"/><text x="35.8091%" y="703.50"></text></g><g><title>native_write_msr (50 samples, 0.25%)</title><rect x="35.5591%" y="677" width="0.2469%" height="15" fill="rgb(219,72,43)"/><text x="35.8091%" y="687.50"></text></g><g><title>ret_from_fork (53 samples, 0.26%)</title><rect x="35.5492%" y="757" width="0.2618%" height="15" fill="rgb(209,138,14)"/><text x="35.7992%" y="767.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="35.8159%" y="453" width="0.0247%" height="15" fill="rgb(222,18,33)"/><text x="36.0659%" y="463.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.02%)</title><rect x="35.8159%" y="437" width="0.0247%" height="15" fill="rgb(213,199,7)"/><text x="36.0659%" y="447.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="35.8159%" y="421" width="0.0247%" height="15" fill="rgb(250,110,10)"/><text x="36.0659%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 0.03%)</title><rect x="35.8109%" y="725" width="0.0346%" height="15" fill="rgb(248,123,6)"/><text x="36.0609%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 0.03%)</title><rect x="35.8109%" y="709" width="0.0346%" height="15" fill="rgb(206,91,31)"/><text x="36.0609%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (7 samples, 0.03%)</title><rect x="35.8109%" y="693" width="0.0346%" height="15" fill="rgb(211,154,13)"/><text x="36.0609%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.03%)</title><rect x="35.8109%" y="677" width="0.0346%" height="15" fill="rgb(225,148,7)"/><text x="36.0609%" y="687.50"></text></g><g><title>std::thread::sleep (7 samples, 0.03%)</title><rect x="35.8109%" y="661" width="0.0346%" height="15" fill="rgb(220,160,43)"/><text x="36.0609%" y="671.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (7 samples, 0.03%)</title><rect x="35.8109%" y="645" width="0.0346%" height="15" fill="rgb(213,52,39)"/><text x="36.0609%" y="655.50"></text></g><g><title>__GI___nanosleep (7 samples, 0.03%)</title><rect x="35.8109%" y="629" width="0.0346%" height="15" fill="rgb(243,137,7)"/><text x="36.0609%" y="639.50"></text></g><g><title>__GI___clock_nanosleep (7 samples, 0.03%)</title><rect x="35.8109%" y="613" width="0.0346%" height="15" fill="rgb(230,79,13)"/><text x="36.0609%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="35.8109%" y="597" width="0.0346%" height="15" fill="rgb(247,105,23)"/><text x="36.0609%" y="607.50"></text></g><g><title>do_syscall_64 (7 samples, 0.03%)</title><rect x="35.8109%" y="581" width="0.0346%" height="15" fill="rgb(223,179,41)"/><text x="36.0609%" y="591.50"></text></g><g><title>__x64_sys_clock_nanosleep (7 samples, 0.03%)</title><rect x="35.8109%" y="565" width="0.0346%" height="15" fill="rgb(218,9,34)"/><text x="36.0609%" y="575.50"></text></g><g><title>common_nsleep (7 samples, 0.03%)</title><rect x="35.8109%" y="549" width="0.0346%" height="15" fill="rgb(222,106,8)"/><text x="36.0609%" y="559.50"></text></g><g><title>hrtimer_nanosleep (6 samples, 0.03%)</title><rect x="35.8159%" y="533" width="0.0296%" height="15" fill="rgb(211,220,0)"/><text x="36.0659%" y="543.50"></text></g><g><title>do_nanosleep (6 samples, 0.03%)</title><rect x="35.8159%" y="517" width="0.0296%" height="15" fill="rgb(229,52,16)"/><text x="36.0659%" y="527.50"></text></g><g><title>schedule (6 samples, 0.03%)</title><rect x="35.8159%" y="501" width="0.0296%" height="15" fill="rgb(212,155,18)"/><text x="36.0659%" y="511.50"></text></g><g><title>__schedule (6 samples, 0.03%)</title><rect x="35.8159%" y="485" width="0.0296%" height="15" fill="rgb(242,21,14)"/><text x="36.0659%" y="495.50"></text></g><g><title>finish_task_switch (6 samples, 0.03%)</title><rect x="35.8159%" y="469" width="0.0296%" height="15" fill="rgb(222,19,48)"/><text x="36.0659%" y="479.50"></text></g><g><title>__GI___mmap64 (3 samples, 0.01%)</title><rect x="35.8554%" y="661" width="0.0148%" height="15" fill="rgb(232,45,27)"/><text x="36.1054%" y="671.50"></text></g><g><title>__GI___mmap64 (3 samples, 0.01%)</title><rect x="35.8554%" y="645" width="0.0148%" height="15" fill="rgb(249,103,42)"/><text x="36.1054%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="35.8554%" y="629" width="0.0148%" height="15" fill="rgb(246,81,33)"/><text x="36.1054%" y="639.50"></text></g><g><title>do_syscall_64 (3 samples, 0.01%)</title><rect x="35.8554%" y="613" width="0.0148%" height="15" fill="rgb(252,33,42)"/><text x="36.1054%" y="623.50"></text></g><g><title>vm_mmap_pgoff (3 samples, 0.01%)</title><rect x="35.8554%" y="597" width="0.0148%" height="15" fill="rgb(209,212,41)"/><text x="36.1054%" y="607.50"></text></g><g><title>do_mmap (3 samples, 0.01%)</title><rect x="35.8554%" y="581" width="0.0148%" height="15" fill="rgb(207,154,6)"/><text x="36.1054%" y="591.50"></text></g><g><title>__GI___clone (68 samples, 0.34%)</title><rect x="35.5492%" y="773" width="0.3358%" height="15" fill="rgb(223,64,47)"/><text x="35.7992%" y="783.50"></text></g><g><title>start_thread (15 samples, 0.07%)</title><rect x="35.8109%" y="757" width="0.0741%" height="15" fill="rgb(211,161,38)"/><text x="36.0609%" y="767.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (15 samples, 0.07%)</title><rect x="35.8109%" y="741" width="0.0741%" height="15" fill="rgb(219,138,40)"/><text x="36.0609%" y="751.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (8 samples, 0.04%)</title><rect x="35.8455%" y="725" width="0.0395%" height="15" fill="rgb(241,228,46)"/><text x="36.0955%" y="735.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (8 samples, 0.04%)</title><rect x="35.8455%" y="709" width="0.0395%" height="15" fill="rgb(223,209,38)"/><text x="36.0955%" y="719.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (6 samples, 0.03%)</title><rect x="35.8554%" y="693" width="0.0296%" height="15" fill="rgb(236,164,45)"/><text x="36.1054%" y="703.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (6 samples, 0.03%)</title><rect x="35.8554%" y="677" width="0.0296%" height="15" fill="rgb(231,15,5)"/><text x="36.1054%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="35.9048%" y="773" width="0.0198%" height="15" fill="rgb(252,35,15)"/><text x="36.1548%" y="783.50"></text></g><g><title>asm_exc_page_fault (65 samples, 0.32%)</title><rect x="35.9245%" y="773" width="0.3210%" height="15" fill="rgb(248,181,18)"/><text x="36.1745%" y="783.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="44.9180%" y="757" width="0.0148%" height="15" fill="rgb(233,39,42)"/><text x="45.1680%" y="767.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="44.9180%" y="741" width="0.0148%" height="15" fill="rgb(238,110,33)"/><text x="45.1680%" y="751.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="44.9180%" y="725" width="0.0148%" height="15" fill="rgb(233,195,10)"/><text x="45.1680%" y="735.50"></text></g><g><title>hrtimer_interrupt (3 samples, 0.01%)</title><rect x="44.9180%" y="709" width="0.0148%" height="15" fill="rgb(254,105,3)"/><text x="45.1680%" y="719.50"></text></g><g><title>__hrtimer_run_queues (3 samples, 0.01%)</title><rect x="44.9180%" y="693" width="0.0148%" height="15" fill="rgb(221,225,9)"/><text x="45.1680%" y="703.50"></text></g><g><title>blake3_compress_in_place_sse41 (1,759 samples, 8.69%)</title><rect x="36.2505%" y="773" width="8.6873%" height="15" fill="rgb(224,227,45)"/><text x="36.5005%" y="783.50">blake3_compr..</text></g><g><title>page_remove_rmap (8 samples, 0.04%)</title><rect x="44.9872%" y="629" width="0.0395%" height="15" fill="rgb(229,198,43)"/><text x="45.2372%" y="639.50"></text></g><g><title>__mod_memcg_lruvec_state (3 samples, 0.01%)</title><rect x="45.0119%" y="613" width="0.0148%" height="15" fill="rgb(206,209,35)"/><text x="45.2619%" y="623.50"></text></g><g><title>free_pages_and_swap_cache (4 samples, 0.02%)</title><rect x="45.0267%" y="613" width="0.0198%" height="15" fill="rgb(245,195,53)"/><text x="45.2767%" y="623.50"></text></g><g><title>__free_one_page (11 samples, 0.05%)</title><rect x="45.0958%" y="565" width="0.0543%" height="15" fill="rgb(240,92,26)"/><text x="45.3458%" y="575.50"></text></g><g><title>free_pcppages_bulk (14 samples, 0.07%)</title><rect x="45.0909%" y="581" width="0.0691%" height="15" fill="rgb(207,40,23)"/><text x="45.3409%" y="591.50"></text></g><g><title>free_unref_page_list (18 samples, 0.09%)</title><rect x="45.0761%" y="597" width="0.0889%" height="15" fill="rgb(223,111,35)"/><text x="45.3261%" y="607.50"></text></g><g><title>__x64_sys_exit_group (46 samples, 0.23%)</title><rect x="44.9526%" y="741" width="0.2272%" height="15" fill="rgb(229,147,28)"/><text x="45.2026%" y="751.50"></text></g><g><title>do_group_exit (46 samples, 0.23%)</title><rect x="44.9526%" y="725" width="0.2272%" height="15" fill="rgb(211,29,28)"/><text x="45.2026%" y="735.50"></text></g><g><title>do_exit (46 samples, 0.23%)</title><rect x="44.9526%" y="709" width="0.2272%" height="15" fill="rgb(228,72,33)"/><text x="45.2026%" y="719.50"></text></g><g><title>mmput (46 samples, 0.23%)</title><rect x="44.9526%" y="693" width="0.2272%" height="15" fill="rgb(205,214,31)"/><text x="45.2026%" y="703.50"></text></g><g><title>exit_mmap (46 samples, 0.23%)</title><rect x="44.9526%" y="677" width="0.2272%" height="15" fill="rgb(224,111,15)"/><text x="45.2026%" y="687.50"></text></g><g><title>unmap_vmas (46 samples, 0.23%)</title><rect x="44.9526%" y="661" width="0.2272%" height="15" fill="rgb(253,21,26)"/><text x="45.2026%" y="671.50"></text></g><g><title>unmap_page_range (46 samples, 0.23%)</title><rect x="44.9526%" y="645" width="0.2272%" height="15" fill="rgb(245,139,43)"/><text x="45.2026%" y="655.50"></text></g><g><title>tlb_flush_mmu (31 samples, 0.15%)</title><rect x="45.0267%" y="629" width="0.1531%" height="15" fill="rgb(252,170,7)"/><text x="45.2767%" y="639.50"></text></g><g><title>release_pages (27 samples, 0.13%)</title><rect x="45.0464%" y="613" width="0.1333%" height="15" fill="rgb(231,118,14)"/><text x="45.2964%" y="623.50"></text></g><g><title>do_syscall_64 (49 samples, 0.24%)</title><rect x="44.9476%" y="757" width="0.2420%" height="15" fill="rgb(238,83,0)"/><text x="45.1976%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (52 samples, 0.26%)</title><rect x="44.9378%" y="773" width="0.2568%" height="15" fill="rgb(221,39,39)"/><text x="45.1878%" y="783.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (6 samples, 0.03%)</title><rect x="45.1946%" y="773" width="0.0296%" height="15" fill="rgb(222,119,46)"/><text x="45.4446%" y="783.50"></text></g><g><title>stress (9,156 samples, 45.22%)</title><rect x="0.0247%" y="789" width="45.2193%" height="15" fill="rgb(222,165,49)"/><text x="0.2747%" y="799.50">stress</text></g><g><title>syscall_return_via_sysret (3 samples, 0.01%)</title><rect x="45.2292%" y="773" width="0.0148%" height="15" fill="rgb(219,113,52)"/><text x="45.4792%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.08%)</title><rect x="45.4465%" y="757" width="0.0790%" height="15" fill="rgb(214,7,15)"/><text x="45.6965%" y="767.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="45.5650%" y="757" width="0.0296%" height="15" fill="rgb(235,32,4)"/><text x="45.8150%" y="767.50"></text></g><g><title>_int_malloc (3 samples, 0.01%)</title><rect x="45.5946%" y="757" width="0.0148%" height="15" fill="rgb(238,90,54)"/><text x="45.8446%" y="767.50"></text></g><g><title>alloc::collections::btree::navigate::next_kv_unchecked_dealloc (3 samples, 0.01%)</title><rect x="45.6193%" y="757" width="0.0148%" height="15" fill="rgb(213,208,19)"/><text x="45.8693%" y="767.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (4 samples, 0.02%)</title><rect x="45.6341%" y="757" width="0.0198%" height="15" fill="rgb(233,156,4)"/><text x="45.8841%" y="767.50"></text></g><g><title>ate::event::EventData::as_header_raw (3 samples, 0.01%)</title><rect x="45.6736%" y="757" width="0.0148%" height="15" fill="rgb(207,194,5)"/><text x="45.9236%" y="767.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (12 samples, 0.06%)</title><rect x="45.6934%" y="757" width="0.0593%" height="15" fill="rgb(206,111,30)"/><text x="45.9434%" y="767.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::MetaAuthorization&gt;::serialize (4 samples, 0.02%)</title><rect x="45.7527%" y="757" width="0.0198%" height="15" fill="rgb(243,70,54)"/><text x="46.0027%" y="767.50"></text></g><g><title>blake3::ChunkState::update (9 samples, 0.04%)</title><rect x="45.7872%" y="757" width="0.0444%" height="15" fill="rgb(242,28,8)"/><text x="46.0372%" y="767.50"></text></g><g><title>blake3::hash (6 samples, 0.03%)</title><rect x="45.8514%" y="757" width="0.0296%" height="15" fill="rgb(219,106,18)"/><text x="46.1014%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.02%)</title><rect x="45.8910%" y="757" width="0.0198%" height="15" fill="rgb(244,222,10)"/><text x="46.1410%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (4 samples, 0.02%)</title><rect x="45.9206%" y="757" width="0.0198%" height="15" fill="rgb(236,179,52)"/><text x="46.1706%" y="767.50"></text></g><g><title>[[heap]] (118 samples, 0.58%)</title><rect x="45.4168%" y="773" width="0.5828%" height="15" fill="rgb(213,23,39)"/><text x="45.6668%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.08%)</title><rect x="45.9996%" y="757" width="0.0790%" height="15" fill="rgb(238,48,10)"/><text x="46.2496%" y="767.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (8 samples, 0.04%)</title><rect x="46.0786%" y="757" width="0.0395%" height="15" fill="rgb(251,196,23)"/><text x="46.3286%" y="767.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="46.1330%" y="757" width="0.0296%" height="15" fill="rgb(250,152,24)"/><text x="46.3830%" y="767.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="46.1626%" y="757" width="0.0198%" height="15" fill="rgb(209,150,17)"/><text x="46.4126%" y="767.50"></text></g><g><title>alloc::collections::btree::navigate::next_kv_unchecked_dealloc (3 samples, 0.01%)</title><rect x="46.2021%" y="757" width="0.0148%" height="15" fill="rgb(234,202,34)"/><text x="46.4521%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.02%)</title><rect x="46.2169%" y="757" width="0.0247%" height="15" fill="rgb(253,148,53)"/><text x="46.4669%" y="767.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (8 samples, 0.04%)</title><rect x="46.2515%" y="757" width="0.0395%" height="15" fill="rgb(218,129,16)"/><text x="46.5015%" y="767.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_slice (5 samples, 0.02%)</title><rect x="46.3107%" y="757" width="0.0247%" height="15" fill="rgb(216,85,19)"/><text x="46.5607%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (14 samples, 0.07%)</title><rect x="46.3453%" y="757" width="0.0691%" height="15" fill="rgb(235,228,7)"/><text x="46.5953%" y="767.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.04%)</title><rect x="46.4145%" y="757" width="0.0395%" height="15" fill="rgb(245,175,0)"/><text x="46.6645%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.03%)</title><rect x="46.4589%" y="741" width="0.0296%" height="15" fill="rgb(208,168,36)"/><text x="46.7089%" y="751.50"></text></g><g><title>syscall (7 samples, 0.03%)</title><rect x="46.4589%" y="757" width="0.0346%" height="15" fill="rgb(246,171,24)"/><text x="46.7089%" y="767.50"></text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (4 samples, 0.02%)</title><rect x="46.4984%" y="757" width="0.0198%" height="15" fill="rgb(215,142,24)"/><text x="46.7484%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3 samples, 0.01%)</title><rect x="46.5330%" y="757" width="0.0148%" height="15" fill="rgb(250,187,7)"/><text x="46.7830%" y="767.50"></text></g><g><title>[anon] (115 samples, 0.57%)</title><rect x="45.9996%" y="773" width="0.5680%" height="15" fill="rgb(228,66,33)"/><text x="46.2496%" y="783.50"></text></g><g><title>&lt;ate::time::TimestampEnforcer as ate::validator::EventValidator&gt;::validate (3 samples, 0.01%)</title><rect x="46.5972%" y="757" width="0.0148%" height="15" fill="rgb(234,215,21)"/><text x="46.8472%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.03%)</title><rect x="46.6219%" y="757" width="0.0296%" height="15" fill="rgb(222,191,20)"/><text x="46.8719%" y="767.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::Sub&gt;::sub (4 samples, 0.02%)</title><rect x="46.6515%" y="757" width="0.0198%" height="15" fill="rgb(245,79,54)"/><text x="46.9015%" y="767.50"></text></g><g><title>_int_free (10 samples, 0.05%)</title><rect x="46.7207%" y="757" width="0.0494%" height="15" fill="rgb(240,10,37)"/><text x="46.9707%" y="767.50"></text></g><g><title>_int_malloc (3 samples, 0.01%)</title><rect x="46.7701%" y="757" width="0.0148%" height="15" fill="rgb(214,192,32)"/><text x="47.0201%" y="767.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (6 samples, 0.03%)</title><rect x="46.7947%" y="757" width="0.0296%" height="15" fill="rgb(209,36,54)"/><text x="47.0447%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.03%)</title><rect x="46.8244%" y="757" width="0.0296%" height="15" fill="rgb(220,10,11)"/><text x="47.0744%" y="767.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (3 samples, 0.01%)</title><rect x="46.8836%" y="757" width="0.0148%" height="15" fill="rgb(221,106,17)"/><text x="47.1336%" y="767.50"></text></g><g><title>ate::spec::SerializationFormat::serialize (3 samples, 0.01%)</title><rect x="46.9083%" y="757" width="0.0148%" height="15" fill="rgb(251,142,44)"/><text x="47.1583%" y="767.50"></text></g><g><title>blake3::ChunkState::update (12 samples, 0.06%)</title><rect x="46.9281%" y="757" width="0.0593%" height="15" fill="rgb(238,13,15)"/><text x="47.1781%" y="767.50"></text></g><g><title>blake3::Hasher::final_output (4 samples, 0.02%)</title><rect x="46.9874%" y="757" width="0.0198%" height="15" fill="rgb(208,107,27)"/><text x="47.2374%" y="767.50"></text></g><g><title>blake3::Hasher::update (6 samples, 0.03%)</title><rect x="47.0219%" y="757" width="0.0296%" height="15" fill="rgb(205,136,37)"/><text x="47.2719%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.02%)</title><rect x="47.0812%" y="757" width="0.0198%" height="15" fill="rgb(250,205,27)"/><text x="47.3312%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (7 samples, 0.03%)</title><rect x="47.1009%" y="757" width="0.0346%" height="15" fill="rgb(210,80,43)"/><text x="47.3509%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (3 samples, 0.01%)</title><rect x="47.1355%" y="757" width="0.0148%" height="15" fill="rgb(247,160,36)"/><text x="47.3855%" y="767.50"></text></g><g><title>ate::chain::ChainOfTrust::add_history (6 samples, 0.03%)</title><rect x="47.1948%" y="581" width="0.0296%" height="15" fill="rgb(234,13,49)"/><text x="47.4448%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (6 samples, 0.03%)</title><rect x="47.1948%" y="565" width="0.0296%" height="15" fill="rgb(234,122,0)"/><text x="47.4448%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (6 samples, 0.03%)</title><rect x="47.1948%" y="549" width="0.0296%" height="15" fill="rgb(207,146,38)"/><text x="47.4448%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (6 samples, 0.03%)</title><rect x="47.1948%" y="533" width="0.0296%" height="15" fill="rgb(207,177,25)"/><text x="47.4448%" y="543.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="47.1948%" y="517" width="0.0296%" height="15" fill="rgb(211,178,42)"/><text x="47.4448%" y="527.50"></text></g><g><title>_int_malloc (6 samples, 0.03%)</title><rect x="47.1948%" y="501" width="0.0296%" height="15" fill="rgb(230,69,54)"/><text x="47.4448%" y="511.50"></text></g><g><title>std::panicking::try (8 samples, 0.04%)</title><rect x="47.1948%" y="757" width="0.0395%" height="15" fill="rgb(214,135,41)"/><text x="47.4448%" y="767.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (8 samples, 0.04%)</title><rect x="47.1948%" y="741" width="0.0395%" height="15" fill="rgb(237,67,25)"/><text x="47.4448%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (8 samples, 0.04%)</title><rect x="47.1948%" y="725" width="0.0395%" height="15" fill="rgb(222,189,50)"/><text x="47.4448%" y="735.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (8 samples, 0.04%)</title><rect x="47.1948%" y="709" width="0.0395%" height="15" fill="rgb(245,148,34)"/><text x="47.4448%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (8 samples, 0.04%)</title><rect x="47.1948%" y="693" width="0.0395%" height="15" fill="rgb(222,29,6)"/><text x="47.4448%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (8 samples, 0.04%)</title><rect x="47.1948%" y="677" width="0.0395%" height="15" fill="rgb(221,189,43)"/><text x="47.4448%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.04%)</title><rect x="47.1948%" y="661" width="0.0395%" height="15" fill="rgb(207,36,27)"/><text x="47.4448%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (8 samples, 0.04%)</title><rect x="47.1948%" y="645" width="0.0395%" height="15" fill="rgb(217,90,24)"/><text x="47.4448%" y="655.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (8 samples, 0.04%)</title><rect x="47.1948%" y="629" width="0.0395%" height="15" fill="rgb(224,66,35)"/><text x="47.4448%" y="639.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.04%)</title><rect x="47.1948%" y="613" width="0.0395%" height="15" fill="rgb(221,13,50)"/><text x="47.4448%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.04%)</title><rect x="47.1948%" y="597" width="0.0395%" height="15" fill="rgb(236,68,49)"/><text x="47.4448%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (24 samples, 0.12%)</title><rect x="47.2590%" y="501" width="0.1185%" height="15" fill="rgb(229,146,28)"/><text x="47.5090%" y="511.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (36 samples, 0.18%)</title><rect x="47.2392%" y="757" width="0.1778%" height="15" fill="rgb(225,31,38)"/><text x="47.4892%" y="767.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (36 samples, 0.18%)</title><rect x="47.2392%" y="741" width="0.1778%" height="15" fill="rgb(250,208,3)"/><text x="47.4892%" y="751.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (36 samples, 0.18%)</title><rect x="47.2392%" y="725" width="0.1778%" height="15" fill="rgb(246,54,23)"/><text x="47.4892%" y="735.50"></text></g><g><title>std::panicking::try (36 samples, 0.18%)</title><rect x="47.2392%" y="709" width="0.1778%" height="15" fill="rgb(243,76,11)"/><text x="47.4892%" y="719.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (36 samples, 0.18%)</title><rect x="47.2392%" y="693" width="0.1778%" height="15" fill="rgb(245,21,50)"/><text x="47.4892%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (36 samples, 0.18%)</title><rect x="47.2392%" y="677" width="0.1778%" height="15" fill="rgb(228,9,43)"/><text x="47.4892%" y="687.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (36 samples, 0.18%)</title><rect x="47.2392%" y="661" width="0.1778%" height="15" fill="rgb(208,100,47)"/><text x="47.4892%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (36 samples, 0.18%)</title><rect x="47.2392%" y="645" width="0.1778%" height="15" fill="rgb(232,26,8)"/><text x="47.4892%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (36 samples, 0.18%)</title><rect x="47.2392%" y="629" width="0.1778%" height="15" fill="rgb(216,166,38)"/><text x="47.4892%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (36 samples, 0.18%)</title><rect x="47.2392%" y="613" width="0.1778%" height="15" fill="rgb(251,202,51)"/><text x="47.4892%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (36 samples, 0.18%)</title><rect x="47.2392%" y="597" width="0.1778%" height="15" fill="rgb(254,216,34)"/><text x="47.4892%" y="607.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (36 samples, 0.18%)</title><rect x="47.2392%" y="581" width="0.1778%" height="15" fill="rgb(251,32,27)"/><text x="47.4892%" y="591.50"></text></g><g><title>std::panic::catch_unwind (36 samples, 0.18%)</title><rect x="47.2392%" y="565" width="0.1778%" height="15" fill="rgb(208,127,28)"/><text x="47.4892%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.18%)</title><rect x="47.2392%" y="549" width="0.1778%" height="15" fill="rgb(224,137,22)"/><text x="47.4892%" y="559.50"></text></g><g><title>ate::accessor::ChainProtectedSync::validate_event (36 samples, 0.18%)</title><rect x="47.2392%" y="533" width="0.1778%" height="15" fill="rgb(254,70,32)"/><text x="47.4892%" y="543.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::validator::EventValidator&gt;::validate (36 samples, 0.18%)</title><rect x="47.2392%" y="517" width="0.1778%" height="15" fill="rgb(229,75,37)"/><text x="47.4892%" y="527.50"></text></g><g><title>blake3::Hasher::new (6 samples, 0.03%)</title><rect x="47.3874%" y="501" width="0.0296%" height="15" fill="rgb(252,64,23)"/><text x="47.6374%" y="511.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.01%)</title><rect x="47.4318%" y="757" width="0.0148%" height="15" fill="rgb(232,162,48)"/><text x="47.6818%" y="767.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (3 samples, 0.01%)</title><rect x="47.4318%" y="741" width="0.0148%" height="15" fill="rgb(246,160,12)"/><text x="47.6818%" y="751.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (3 samples, 0.01%)</title><rect x="47.4318%" y="725" width="0.0148%" height="15" fill="rgb(247,166,0)"/><text x="47.6818%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (3 samples, 0.01%)</title><rect x="47.4318%" y="709" width="0.0148%" height="15" fill="rgb(249,219,21)"/><text x="47.6818%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (3 samples, 0.01%)</title><rect x="47.4318%" y="693" width="0.0148%" height="15" fill="rgb(205,209,3)"/><text x="47.6818%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.01%)</title><rect x="47.4318%" y="677" width="0.0148%" height="15" fill="rgb(243,44,1)"/><text x="47.6818%" y="687.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3 samples, 0.01%)</title><rect x="47.4318%" y="661" width="0.0148%" height="15" fill="rgb(206,159,16)"/><text x="47.6818%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (3 samples, 0.01%)</title><rect x="47.4318%" y="645" width="0.0148%" height="15" fill="rgb(244,77,30)"/><text x="47.6818%" y="655.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.01%)</title><rect x="47.4318%" y="629" width="0.0148%" height="15" fill="rgb(218,69,12)"/><text x="47.6818%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="47.4318%" y="613" width="0.0148%" height="15" fill="rgb(212,87,7)"/><text x="47.6818%" y="623.50"></text></g><g><title>ate::accessor::ChainProtectedSync::validate_event (3 samples, 0.01%)</title><rect x="47.4318%" y="597" width="0.0148%" height="15" fill="rgb(245,114,25)"/><text x="47.6818%" y="607.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::validator::EventValidator&gt;::validate (3 samples, 0.01%)</title><rect x="47.4318%" y="581" width="0.0148%" height="15" fill="rgb(210,61,42)"/><text x="47.6818%" y="591.50"></text></g><g><title>blake3::Hasher::update (3 samples, 0.01%)</title><rect x="47.4318%" y="565" width="0.0148%" height="15" fill="rgb(211,52,33)"/><text x="47.6818%" y="575.50"></text></g><g><title>blake3::Hasher::merge_cv_stack (3 samples, 0.01%)</title><rect x="47.4318%" y="549" width="0.0148%" height="15" fill="rgb(234,58,33)"/><text x="47.6818%" y="559.50"></text></g><g><title>blake3::Hasher::finalize (7 samples, 0.03%)</title><rect x="47.4467%" y="581" width="0.0346%" height="15" fill="rgb(220,115,36)"/><text x="47.6967%" y="591.50"></text></g><g><title>blake3::Hasher::final_output (7 samples, 0.03%)</title><rect x="47.4467%" y="565" width="0.0346%" height="15" fill="rgb(243,153,54)"/><text x="47.6967%" y="575.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (16 samples, 0.08%)</title><rect x="47.4467%" y="757" width="0.0790%" height="15" fill="rgb(251,47,18)"/><text x="47.6967%" y="767.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (16 samples, 0.08%)</title><rect x="47.4467%" y="741" width="0.0790%" height="15" fill="rgb(242,102,42)"/><text x="47.6967%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (16 samples, 0.08%)</title><rect x="47.4467%" y="725" width="0.0790%" height="15" fill="rgb(234,31,38)"/><text x="47.6967%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16 samples, 0.08%)</title><rect x="47.4467%" y="709" width="0.0790%" height="15" fill="rgb(221,117,51)"/><text x="47.6967%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (16 samples, 0.08%)</title><rect x="47.4467%" y="693" width="0.0790%" height="15" fill="rgb(212,20,18)"/><text x="47.6967%" y="703.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (16 samples, 0.08%)</title><rect x="47.4467%" y="677" width="0.0790%" height="15" fill="rgb(245,133,36)"/><text x="47.6967%" y="687.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.08%)</title><rect x="47.4467%" y="661" width="0.0790%" height="15" fill="rgb(212,6,19)"/><text x="47.6967%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.08%)</title><rect x="47.4467%" y="645" width="0.0790%" height="15" fill="rgb(218,1,36)"/><text x="47.6967%" y="655.50"></text></g><g><title>ate::event::EventData::as_header (16 samples, 0.08%)</title><rect x="47.4467%" y="629" width="0.0790%" height="15" fill="rgb(246,84,54)"/><text x="47.6967%" y="639.50"></text></g><g><title>ate::event::EventData::as_header_raw (16 samples, 0.08%)</title><rect x="47.4467%" y="613" width="0.0790%" height="15" fill="rgb(242,110,6)"/><text x="47.6967%" y="623.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (16 samples, 0.08%)</title><rect x="47.4467%" y="597" width="0.0790%" height="15" fill="rgb(214,47,5)"/><text x="47.6967%" y="607.50"></text></g><g><title>blake3::Hasher::update (9 samples, 0.04%)</title><rect x="47.4812%" y="581" width="0.0444%" height="15" fill="rgb(218,159,25)"/><text x="47.7312%" y="591.50"></text></g><g><title>blake3::ChunkState::update (9 samples, 0.04%)</title><rect x="47.4812%" y="565" width="0.0444%" height="15" fill="rgb(215,211,28)"/><text x="47.7312%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="47.5059%" y="549" width="0.0198%" height="15" fill="rgb(238,59,32)"/><text x="47.7559%" y="559.50"></text></g><g><title>ate::tree::TreeAuthorityPlugin::compute_auth (71 samples, 0.35%)</title><rect x="47.5257%" y="517" width="0.3507%" height="15" fill="rgb(226,82,3)"/><text x="47.7757%" y="527.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (74 samples, 0.37%)</title><rect x="47.5257%" y="757" width="0.3655%" height="15" fill="rgb(240,164,32)"/><text x="47.7757%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (74 samples, 0.37%)</title><rect x="47.5257%" y="741" width="0.3655%" height="15" fill="rgb(232,46,7)"/><text x="47.7757%" y="751.50"></text></g><g><title>std::panicking::try (74 samples, 0.37%)</title><rect x="47.5257%" y="725" width="0.3655%" height="15" fill="rgb(229,129,53)"/><text x="47.7757%" y="735.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (74 samples, 0.37%)</title><rect x="47.5257%" y="709" width="0.3655%" height="15" fill="rgb(234,188,29)"/><text x="47.7757%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (74 samples, 0.37%)</title><rect x="47.5257%" y="693" width="0.3655%" height="15" fill="rgb(246,141,4)"/><text x="47.7757%" y="703.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (74 samples, 0.37%)</title><rect x="47.5257%" y="677" width="0.3655%" height="15" fill="rgb(229,23,39)"/><text x="47.7757%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (74 samples, 0.37%)</title><rect x="47.5257%" y="661" width="0.3655%" height="15" fill="rgb(206,12,3)"/><text x="47.7757%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (74 samples, 0.37%)</title><rect x="47.5257%" y="645" width="0.3655%" height="15" fill="rgb(252,226,20)"/><text x="47.7757%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (74 samples, 0.37%)</title><rect x="47.5257%" y="629" width="0.3655%" height="15" fill="rgb(216,123,35)"/><text x="47.7757%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (74 samples, 0.37%)</title><rect x="47.5257%" y="613" width="0.3655%" height="15" fill="rgb(212,68,40)"/><text x="47.7757%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (74 samples, 0.37%)</title><rect x="47.5257%" y="597" width="0.3655%" height="15" fill="rgb(254,125,32)"/><text x="47.7757%" y="607.50"></text></g><g><title>std::panic::catch_unwind (74 samples, 0.37%)</title><rect x="47.5257%" y="581" width="0.3655%" height="15" fill="rgb(253,97,22)"/><text x="47.7757%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (74 samples, 0.37%)</title><rect x="47.5257%" y="565" width="0.3655%" height="15" fill="rgb(241,101,14)"/><text x="47.7757%" y="575.50"></text></g><g><title>ate::accessor::ChainProtectedSync::validate_event (74 samples, 0.37%)</title><rect x="47.5257%" y="549" width="0.3655%" height="15" fill="rgb(238,103,29)"/><text x="47.7757%" y="559.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::validator::EventValidator&gt;::validate (74 samples, 0.37%)</title><rect x="47.5257%" y="533" width="0.3655%" height="15" fill="rgb(233,195,47)"/><text x="47.7757%" y="543.50"></text></g><g><title>blake3::Hasher::update (3 samples, 0.01%)</title><rect x="47.8763%" y="517" width="0.0148%" height="15" fill="rgb(246,218,30)"/><text x="48.1263%" y="527.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn (3 samples, 0.01%)</title><rect x="47.8911%" y="757" width="0.0148%" height="15" fill="rgb(219,145,47)"/><text x="48.1411%" y="767.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.06%)</title><rect x="47.9158%" y="741" width="0.0642%" height="15" fill="rgb(243,12,26)"/><text x="48.1658%" y="751.50"></text></g><g><title>std::io::Write::write_all (13 samples, 0.06%)</title><rect x="47.9158%" y="725" width="0.0642%" height="15" fill="rgb(214,87,16)"/><text x="48.1658%" y="735.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (13 samples, 0.06%)</title><rect x="47.9158%" y="709" width="0.0642%" height="15" fill="rgb(208,99,42)"/><text x="48.1658%" y="719.50"></text></g><g><title>std::sys::unix::fs::File::write (13 samples, 0.06%)</title><rect x="47.9158%" y="693" width="0.0642%" height="15" fill="rgb(253,99,2)"/><text x="48.1658%" y="703.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (13 samples, 0.06%)</title><rect x="47.9158%" y="677" width="0.0642%" height="15" fill="rgb(220,168,23)"/><text x="48.1658%" y="687.50"></text></g><g><title>__libc_write (13 samples, 0.06%)</title><rect x="47.9158%" y="661" width="0.0642%" height="15" fill="rgb(242,38,24)"/><text x="48.1658%" y="671.50"></text></g><g><title>__libc_write (13 samples, 0.06%)</title><rect x="47.9158%" y="645" width="0.0642%" height="15" fill="rgb(225,182,9)"/><text x="48.1658%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 0.06%)</title><rect x="47.9158%" y="629" width="0.0642%" height="15" fill="rgb(243,178,37)"/><text x="48.1658%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (15 samples, 0.07%)</title><rect x="47.9109%" y="757" width="0.0741%" height="15" fill="rgb(232,139,19)"/><text x="48.1609%" y="767.50"></text></g><g><title>blake3::Hasher::finalize (4 samples, 0.02%)</title><rect x="47.9850%" y="533" width="0.0198%" height="15" fill="rgb(225,201,24)"/><text x="48.2350%" y="543.50"></text></g><g><title>blake3::Hasher::final_output (4 samples, 0.02%)</title><rect x="47.9850%" y="517" width="0.0198%" height="15" fill="rgb(221,47,46)"/><text x="48.2350%" y="527.50"></text></g><g><title>ate::accessor::ChainProtectedSync::validate_event (8 samples, 0.04%)</title><rect x="47.9850%" y="565" width="0.0395%" height="15" fill="rgb(249,23,13)"/><text x="48.2350%" y="575.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::validator::EventValidator&gt;::validate (8 samples, 0.04%)</title><rect x="47.9850%" y="549" width="0.0395%" height="15" fill="rgb(219,9,5)"/><text x="48.2350%" y="559.50"></text></g><g><title>blake3::Hasher::update (4 samples, 0.02%)</title><rect x="48.0047%" y="533" width="0.0198%" height="15" fill="rgb(254,171,16)"/><text x="48.2547%" y="543.50"></text></g><g><title>blake3::ChunkState::update (4 samples, 0.02%)</title><rect x="48.0047%" y="517" width="0.0198%" height="15" fill="rgb(230,171,20)"/><text x="48.2547%" y="527.50"></text></g><g><title>ate::chain::ChainOfTrust::add_history (28 samples, 0.14%)</title><rect x="48.0245%" y="565" width="0.1383%" height="15" fill="rgb(210,71,41)"/><text x="48.2745%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (28 samples, 0.14%)</title><rect x="48.0245%" y="549" width="0.1383%" height="15" fill="rgb(206,173,20)"/><text x="48.2745%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (28 samples, 0.14%)</title><rect x="48.0245%" y="533" width="0.1383%" height="15" fill="rgb(233,88,34)"/><text x="48.2745%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (28 samples, 0.14%)</title><rect x="48.0245%" y="517" width="0.1383%" height="15" fill="rgb(223,209,46)"/><text x="48.2745%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.03%)</title><rect x="48.1282%" y="501" width="0.0346%" height="15" fill="rgb(250,43,18)"/><text x="48.3782%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (19 samples, 0.09%)</title><rect x="48.1776%" y="517" width="0.0938%" height="15" fill="rgb(208,13,10)"/><text x="48.4276%" y="527.50"></text></g><g><title>std::panicking::try (60 samples, 0.30%)</title><rect x="47.9850%" y="741" width="0.2963%" height="15" fill="rgb(212,200,36)"/><text x="48.2350%" y="751.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (60 samples, 0.30%)</title><rect x="47.9850%" y="725" width="0.2963%" height="15" fill="rgb(225,90,30)"/><text x="48.2350%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (60 samples, 0.30%)</title><rect x="47.9850%" y="709" width="0.2963%" height="15" fill="rgb(236,182,39)"/><text x="48.2350%" y="719.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (60 samples, 0.30%)</title><rect x="47.9850%" y="693" width="0.2963%" height="15" fill="rgb(212,144,35)"/><text x="48.2350%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (60 samples, 0.30%)</title><rect x="47.9850%" y="677" width="0.2963%" height="15" fill="rgb(228,63,44)"/><text x="48.2350%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (60 samples, 0.30%)</title><rect x="47.9850%" y="661" width="0.2963%" height="15" fill="rgb(228,109,6)"/><text x="48.2350%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (60 samples, 0.30%)</title><rect x="47.9850%" y="645" width="0.2963%" height="15" fill="rgb(238,117,24)"/><text x="48.2350%" y="655.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (60 samples, 0.30%)</title><rect x="47.9850%" y="629" width="0.2963%" height="15" fill="rgb(242,26,26)"/><text x="48.2350%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (60 samples, 0.30%)</title><rect x="47.9850%" y="613" width="0.2963%" height="15" fill="rgb(221,92,48)"/><text x="48.2350%" y="623.50"></text></g><g><title>std::panic::catch_unwind (60 samples, 0.30%)</title><rect x="47.9850%" y="597" width="0.2963%" height="15" fill="rgb(209,209,32)"/><text x="48.2350%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (60 samples, 0.30%)</title><rect x="47.9850%" y="581" width="0.2963%" height="15" fill="rgb(221,70,22)"/><text x="48.2350%" y="591.50"></text></g><g><title>ate::event::EventData::as_header (24 samples, 0.12%)</title><rect x="48.1628%" y="565" width="0.1185%" height="15" fill="rgb(248,145,5)"/><text x="48.4128%" y="575.50"></text></g><g><title>ate::event::EventData::as_header_raw (24 samples, 0.12%)</title><rect x="48.1628%" y="549" width="0.1185%" height="15" fill="rgb(226,116,26)"/><text x="48.4128%" y="559.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (24 samples, 0.12%)</title><rect x="48.1628%" y="533" width="0.1185%" height="15" fill="rgb(244,5,17)"/><text x="48.4128%" y="543.50"></text></g><g><title>blake3::Hasher::finalize (5 samples, 0.02%)</title><rect x="48.2813%" y="629" width="0.0247%" height="15" fill="rgb(252,159,33)"/><text x="48.5313%" y="639.50"></text></g><g><title>blake3::Hasher::final_output (5 samples, 0.02%)</title><rect x="48.2813%" y="613" width="0.0247%" height="15" fill="rgb(206,71,0)"/><text x="48.5313%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (70 samples, 0.35%)</title><rect x="47.9850%" y="757" width="0.3457%" height="15" fill="rgb(233,118,54)"/><text x="48.2350%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (10 samples, 0.05%)</title><rect x="48.2813%" y="741" width="0.0494%" height="15" fill="rgb(234,83,48)"/><text x="48.5313%" y="751.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.05%)</title><rect x="48.2813%" y="725" width="0.0494%" height="15" fill="rgb(228,3,54)"/><text x="48.5313%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.05%)</title><rect x="48.2813%" y="709" width="0.0494%" height="15" fill="rgb(226,155,13)"/><text x="48.5313%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.05%)</title><rect x="48.2813%" y="693" width="0.0494%" height="15" fill="rgb(241,28,37)"/><text x="48.5313%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.05%)</title><rect x="48.2813%" y="677" width="0.0494%" height="15" fill="rgb(233,93,10)"/><text x="48.5313%" y="687.50"></text></g><g><title>ate::event::EventData::as_header_raw (10 samples, 0.05%)</title><rect x="48.2813%" y="661" width="0.0494%" height="15" fill="rgb(225,113,19)"/><text x="48.5313%" y="671.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (10 samples, 0.05%)</title><rect x="48.2813%" y="645" width="0.0494%" height="15" fill="rgb(241,2,18)"/><text x="48.5313%" y="655.50"></text></g><g><title>blake3::Hasher::update (5 samples, 0.02%)</title><rect x="48.3060%" y="629" width="0.0247%" height="15" fill="rgb(228,207,21)"/><text x="48.5560%" y="639.50"></text></g><g><title>blake3::ChunkState::update (5 samples, 0.02%)</title><rect x="48.3060%" y="613" width="0.0247%" height="15" fill="rgb(213,211,35)"/><text x="48.5560%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (3 samples, 0.01%)</title><rect x="48.3307%" y="757" width="0.0148%" height="15" fill="rgb(209,83,10)"/><text x="48.5807%" y="767.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.01%)</title><rect x="48.3307%" y="741" width="0.0148%" height="15" fill="rgb(209,164,1)"/><text x="48.5807%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="48.3307%" y="725" width="0.0148%" height="15" fill="rgb(213,184,43)"/><text x="48.5807%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="48.3307%" y="709" width="0.0148%" height="15" fill="rgb(231,61,34)"/><text x="48.5807%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="48.3307%" y="693" width="0.0148%" height="15" fill="rgb(235,75,3)"/><text x="48.5807%" y="703.50"></text></g><g><title>ate::event::EventData::as_header_raw (3 samples, 0.01%)</title><rect x="48.3307%" y="677" width="0.0148%" height="15" fill="rgb(220,106,47)"/><text x="48.5807%" y="687.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (3 samples, 0.01%)</title><rect x="48.3307%" y="661" width="0.0148%" height="15" fill="rgb(210,196,33)"/><text x="48.5807%" y="671.50"></text></g><g><title>blake3::Hasher::update (3 samples, 0.01%)</title><rect x="48.3307%" y="645" width="0.0148%" height="15" fill="rgb(229,154,42)"/><text x="48.5807%" y="655.50"></text></g><g><title>blake3::Hasher::merge_cv_stack (3 samples, 0.01%)</title><rect x="48.3307%" y="629" width="0.0148%" height="15" fill="rgb(228,114,26)"/><text x="48.5807%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (60 samples, 0.30%)</title><rect x="48.3455%" y="581" width="0.2963%" height="15" fill="rgb(208,144,1)"/><text x="48.5955%" y="591.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (65 samples, 0.32%)</title><rect x="48.3455%" y="757" width="0.3210%" height="15" fill="rgb(239,112,37)"/><text x="48.5955%" y="767.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (65 samples, 0.32%)</title><rect x="48.3455%" y="741" width="0.3210%" height="15" fill="rgb(210,96,50)"/><text x="48.5955%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (65 samples, 0.32%)</title><rect x="48.3455%" y="725" width="0.3210%" height="15" fill="rgb(222,178,2)"/><text x="48.5955%" y="735.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (65 samples, 0.32%)</title><rect x="48.3455%" y="709" width="0.3210%" height="15" fill="rgb(226,74,18)"/><text x="48.5955%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (65 samples, 0.32%)</title><rect x="48.3455%" y="693" width="0.3210%" height="15" fill="rgb(225,67,54)"/><text x="48.5955%" y="703.50"></text></g><g><title>std::panic::catch_unwind (65 samples, 0.32%)</title><rect x="48.3455%" y="677" width="0.3210%" height="15" fill="rgb(251,92,32)"/><text x="48.5955%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (65 samples, 0.32%)</title><rect x="48.3455%" y="661" width="0.3210%" height="15" fill="rgb(228,149,22)"/><text x="48.5955%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (65 samples, 0.32%)</title><rect x="48.3455%" y="645" width="0.3210%" height="15" fill="rgb(243,54,13)"/><text x="48.5955%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (65 samples, 0.32%)</title><rect x="48.3455%" y="629" width="0.3210%" height="15" fill="rgb(243,180,28)"/><text x="48.5955%" y="639.50"></text></g><g><title>ate::event::EventData::as_header_raw (65 samples, 0.32%)</title><rect x="48.3455%" y="613" width="0.3210%" height="15" fill="rgb(208,167,24)"/><text x="48.5955%" y="623.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (65 samples, 0.32%)</title><rect x="48.3455%" y="597" width="0.3210%" height="15" fill="rgb(245,73,45)"/><text x="48.5955%" y="607.50"></text></g><g><title>blake3::Hasher::new (5 samples, 0.02%)</title><rect x="48.6418%" y="581" width="0.0247%" height="15" fill="rgb(237,203,48)"/><text x="48.8918%" y="591.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (5 samples, 0.02%)</title><rect x="48.6665%" y="757" width="0.0247%" height="15" fill="rgb(211,197,16)"/><text x="48.9165%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.02%)</title><rect x="48.6665%" y="741" width="0.0247%" height="15" fill="rgb(243,99,51)"/><text x="48.9165%" y="751.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5 samples, 0.02%)</title><rect x="48.6665%" y="725" width="0.0247%" height="15" fill="rgb(215,123,29)"/><text x="48.9165%" y="735.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (5 samples, 0.02%)</title><rect x="48.6665%" y="709" width="0.0247%" height="15" fill="rgb(239,186,37)"/><text x="48.9165%" y="719.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.02%)</title><rect x="48.6665%" y="693" width="0.0247%" height="15" fill="rgb(252,136,39)"/><text x="48.9165%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="48.6665%" y="677" width="0.0247%" height="15" fill="rgb(223,213,32)"/><text x="48.9165%" y="687.50"></text></g><g><title>ate::event::EventData::as_header (4 samples, 0.02%)</title><rect x="48.6715%" y="661" width="0.0198%" height="15" fill="rgb(233,115,5)"/><text x="48.9215%" y="671.50"></text></g><g><title>ate::event::EventData::as_header_raw (4 samples, 0.02%)</title><rect x="48.6715%" y="645" width="0.0198%" height="15" fill="rgb(207,226,44)"/><text x="48.9215%" y="655.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (4 samples, 0.02%)</title><rect x="48.6715%" y="629" width="0.0198%" height="15" fill="rgb(208,126,0)"/><text x="48.9215%" y="639.50"></text></g><g><title>blake3::Hasher::update (4 samples, 0.02%)</title><rect x="48.6715%" y="613" width="0.0198%" height="15" fill="rgb(244,66,21)"/><text x="48.9215%" y="623.50"></text></g><g><title>blake3::Hasher::merge_cv_stack (4 samples, 0.02%)</title><rect x="48.6715%" y="597" width="0.0198%" height="15" fill="rgb(222,97,12)"/><text x="48.9215%" y="607.50"></text></g><g><title>__irqentry_text_end (3 samples, 0.01%)</title><rect x="48.7011%" y="501" width="0.0148%" height="15" fill="rgb(219,213,19)"/><text x="48.9511%" y="511.50"></text></g><g><title>alloc_pages_vma (11 samples, 0.05%)</title><rect x="48.7357%" y="437" width="0.0543%" height="15" fill="rgb(252,169,30)"/><text x="48.9857%" y="447.50"></text></g><g><title>__alloc_pages_nodemask (11 samples, 0.05%)</title><rect x="48.7357%" y="421" width="0.0543%" height="15" fill="rgb(206,32,51)"/><text x="48.9857%" y="431.50"></text></g><g><title>get_page_from_freelist (11 samples, 0.05%)</title><rect x="48.7357%" y="405" width="0.0543%" height="15" fill="rgb(250,172,42)"/><text x="48.9857%" y="415.50"></text></g><g><title>prep_new_page (3 samples, 0.01%)</title><rect x="48.7752%" y="389" width="0.0148%" height="15" fill="rgb(209,34,43)"/><text x="49.0252%" y="399.50"></text></g><g><title>kernel_init_free_pages (3 samples, 0.01%)</title><rect x="48.7752%" y="373" width="0.0148%" height="15" fill="rgb(223,11,35)"/><text x="49.0252%" y="383.50"></text></g><g><title>clear_page_erms (3 samples, 0.01%)</title><rect x="48.7752%" y="357" width="0.0148%" height="15" fill="rgb(251,219,26)"/><text x="49.0252%" y="367.50"></text></g><g><title>__pagevec_lru_add_fn (4 samples, 0.02%)</title><rect x="48.7999%" y="405" width="0.0198%" height="15" fill="rgb(231,119,3)"/><text x="49.0499%" y="415.50"></text></g><g><title>lru_cache_add (5 samples, 0.02%)</title><rect x="48.7999%" y="437" width="0.0247%" height="15" fill="rgb(216,97,11)"/><text x="49.0499%" y="447.50"></text></g><g><title>pagevec_lru_move_fn (5 samples, 0.02%)</title><rect x="48.7999%" y="421" width="0.0247%" height="15" fill="rgb(223,59,9)"/><text x="49.0499%" y="431.50"></text></g><g><title>get_mem_cgroup_from_mm (3 samples, 0.01%)</title><rect x="48.8345%" y="421" width="0.0148%" height="15" fill="rgb(233,93,31)"/><text x="49.0845%" y="431.50"></text></g><g><title>mem_cgroup_charge (6 samples, 0.03%)</title><rect x="48.8295%" y="437" width="0.0296%" height="15" fill="rgb(239,81,33)"/><text x="49.0795%" y="447.50"></text></g><g><title>exc_page_fault (30 samples, 0.15%)</title><rect x="48.7159%" y="485" width="0.1482%" height="15" fill="rgb(213,120,34)"/><text x="48.9659%" y="495.50"></text></g><g><title>do_user_addr_fault (30 samples, 0.15%)</title><rect x="48.7159%" y="469" width="0.1482%" height="15" fill="rgb(243,49,53)"/><text x="48.9659%" y="479.50"></text></g><g><title>handle_mm_fault (29 samples, 0.14%)</title><rect x="48.7209%" y="453" width="0.1432%" height="15" fill="rgb(247,216,33)"/><text x="48.9709%" y="463.50"></text></g><g><title>asm_exc_page_fault (36 samples, 0.18%)</title><rect x="48.7159%" y="501" width="0.1778%" height="15" fill="rgb(226,26,14)"/><text x="48.9659%" y="511.50"></text></g><g><title>irqentry_exit_to_user_mode (6 samples, 0.03%)</title><rect x="48.8641%" y="485" width="0.0296%" height="15" fill="rgb(215,49,53)"/><text x="49.1141%" y="495.50"></text></g><g><title>error_entry (3 samples, 0.01%)</title><rect x="48.8937%" y="501" width="0.0148%" height="15" fill="rgb(245,162,40)"/><text x="49.1437%" y="511.50"></text></g><g><title>change_protection (3 samples, 0.01%)</title><rect x="48.9184%" y="389" width="0.0148%" height="15" fill="rgb(229,68,17)"/><text x="49.1684%" y="399.50"></text></g><g><title>__perf_event__output_id_sample (3 samples, 0.01%)</title><rect x="48.9777%" y="325" width="0.0148%" height="15" fill="rgb(213,182,10)"/><text x="49.2277%" y="335.50"></text></g><g><title>perf_output_copy (3 samples, 0.01%)</title><rect x="48.9777%" y="309" width="0.0148%" height="15" fill="rgb(245,125,30)"/><text x="49.2277%" y="319.50"></text></g><g><title>perf_event_mmap (14 samples, 0.07%)</title><rect x="48.9382%" y="389" width="0.0691%" height="15" fill="rgb(232,202,2)"/><text x="49.1882%" y="399.50"></text></g><g><title>perf_iterate_sb (13 samples, 0.06%)</title><rect x="48.9431%" y="373" width="0.0642%" height="15" fill="rgb(237,140,51)"/><text x="49.1931%" y="383.50"></text></g><g><title>perf_iterate_ctx (11 samples, 0.05%)</title><rect x="48.9530%" y="357" width="0.0543%" height="15" fill="rgb(236,157,25)"/><text x="49.2030%" y="367.50"></text></g><g><title>perf_event_mmap_output (6 samples, 0.03%)</title><rect x="48.9777%" y="341" width="0.0296%" height="15" fill="rgb(219,209,0)"/><text x="49.2277%" y="351.50"></text></g><g><title>__x64_sys_mprotect (22 samples, 0.11%)</title><rect x="48.9085%" y="437" width="0.1087%" height="15" fill="rgb(240,116,54)"/><text x="49.1585%" y="447.50"></text></g><g><title>do_mprotect_pkey (21 samples, 0.10%)</title><rect x="48.9135%" y="421" width="0.1037%" height="15" fill="rgb(216,10,36)"/><text x="49.1635%" y="431.50"></text></g><g><title>mprotect_fixup (20 samples, 0.10%)</title><rect x="48.9184%" y="405" width="0.0988%" height="15" fill="rgb(222,72,44)"/><text x="49.1684%" y="415.50"></text></g><g><title>do_syscall_64 (23 samples, 0.11%)</title><rect x="48.9085%" y="453" width="0.1136%" height="15" fill="rgb(232,159,9)"/><text x="49.1585%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.12%)</title><rect x="48.9085%" y="469" width="0.1235%" height="15" fill="rgb(210,39,32)"/><text x="49.1585%" y="479.50"></text></g><g><title>ate::chain::ChainOfTrust::add_history (72 samples, 0.36%)</title><rect x="48.6912%" y="613" width="0.3556%" height="15" fill="rgb(216,194,45)"/><text x="48.9412%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (72 samples, 0.36%)</title><rect x="48.6912%" y="597" width="0.3556%" height="15" fill="rgb(218,18,35)"/><text x="48.9412%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (72 samples, 0.36%)</title><rect x="48.6912%" y="581" width="0.3556%" height="15" fill="rgb(207,83,51)"/><text x="48.9412%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (72 samples, 0.36%)</title><rect x="48.6912%" y="565" width="0.3556%" height="15" fill="rgb(225,63,43)"/><text x="48.9412%" y="575.50"></text></g><g><title>__GI___libc_malloc (72 samples, 0.36%)</title><rect x="48.6912%" y="549" width="0.3556%" height="15" fill="rgb(207,57,36)"/><text x="48.9412%" y="559.50"></text></g><g><title>_int_malloc (72 samples, 0.36%)</title><rect x="48.6912%" y="533" width="0.3556%" height="15" fill="rgb(216,99,33)"/><text x="48.9412%" y="543.50"></text></g><g><title>sysmalloc (72 samples, 0.36%)</title><rect x="48.6912%" y="517" width="0.3556%" height="15" fill="rgb(225,42,16)"/><text x="48.9412%" y="527.50"></text></g><g><title>grow_heap (28 samples, 0.14%)</title><rect x="48.9085%" y="501" width="0.1383%" height="15" fill="rgb(220,201,45)"/><text x="49.1585%" y="511.50"></text></g><g><title>__GI___mprotect (28 samples, 0.14%)</title><rect x="48.9085%" y="485" width="0.1383%" height="15" fill="rgb(225,33,4)"/><text x="49.1585%" y="495.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (73 samples, 0.36%)</title><rect x="48.6912%" y="757" width="0.3605%" height="15" fill="rgb(224,33,50)"/><text x="48.9412%" y="767.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (73 samples, 0.36%)</title><rect x="48.6912%" y="741" width="0.3605%" height="15" fill="rgb(246,198,51)"/><text x="48.9412%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (73 samples, 0.36%)</title><rect x="48.6912%" y="725" width="0.3605%" height="15" fill="rgb(205,22,4)"/><text x="48.9412%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (73 samples, 0.36%)</title><rect x="48.6912%" y="709" width="0.3605%" height="15" fill="rgb(206,3,8)"/><text x="48.9412%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (73 samples, 0.36%)</title><rect x="48.6912%" y="693" width="0.3605%" height="15" fill="rgb(251,23,15)"/><text x="48.9412%" y="703.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (73 samples, 0.36%)</title><rect x="48.6912%" y="677" width="0.3605%" height="15" fill="rgb(252,88,28)"/><text x="48.9412%" y="687.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (73 samples, 0.36%)</title><rect x="48.6912%" y="661" width="0.3605%" height="15" fill="rgb(212,127,14)"/><text x="48.9412%" y="671.50"></text></g><g><title>std::panic::catch_unwind (73 samples, 0.36%)</title><rect x="48.6912%" y="645" width="0.3605%" height="15" fill="rgb(247,145,37)"/><text x="48.9412%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (73 samples, 0.36%)</title><rect x="48.6912%" y="629" width="0.3605%" height="15" fill="rgb(209,117,53)"/><text x="48.9412%" y="639.50"></text></g><g><title>[unknown] (503 samples, 2.48%)</title><rect x="46.5774%" y="773" width="2.4842%" height="15" fill="rgb(212,90,42)"/><text x="46.8274%" y="783.50">[u..</text></g><g><title>ret_from_fork (5 samples, 0.02%)</title><rect x="49.0616%" y="757" width="0.0247%" height="15" fill="rgb(218,164,37)"/><text x="49.3116%" y="767.50"></text></g><g><title>schedule_tail (5 samples, 0.02%)</title><rect x="49.0616%" y="741" width="0.0247%" height="15" fill="rgb(246,65,34)"/><text x="49.3116%" y="751.50"></text></g><g><title>finish_task_switch (5 samples, 0.02%)</title><rect x="49.0616%" y="725" width="0.0247%" height="15" fill="rgb(231,100,33)"/><text x="49.3116%" y="735.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="49.0616%" y="709" width="0.0247%" height="15" fill="rgb(228,126,14)"/><text x="49.3116%" y="719.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.02%)</title><rect x="49.0616%" y="693" width="0.0247%" height="15" fill="rgb(215,173,21)"/><text x="49.3116%" y="703.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="49.0616%" y="677" width="0.0247%" height="15" fill="rgb(210,6,40)"/><text x="49.3116%" y="687.50"></text></g><g><title>free_pcppages_bulk (3 samples, 0.01%)</title><rect x="49.1061%" y="517" width="0.0148%" height="15" fill="rgb(212,48,18)"/><text x="49.3561%" y="527.50"></text></g><g><title>__free_one_page (3 samples, 0.01%)</title><rect x="49.1061%" y="501" width="0.0148%" height="15" fill="rgb(230,214,11)"/><text x="49.3561%" y="511.50"></text></g><g><title>tlb_finish_mmu (9 samples, 0.04%)</title><rect x="49.0863%" y="565" width="0.0444%" height="15" fill="rgb(254,105,39)"/><text x="49.3363%" y="575.50"></text></g><g><title>release_pages (9 samples, 0.04%)</title><rect x="49.0863%" y="549" width="0.0444%" height="15" fill="rgb(245,158,5)"/><text x="49.3363%" y="559.50"></text></g><g><title>free_unref_page_list (5 samples, 0.02%)</title><rect x="49.1061%" y="533" width="0.0247%" height="15" fill="rgb(249,208,11)"/><text x="49.3561%" y="543.50"></text></g><g><title>page_remove_rmap (3 samples, 0.01%)</title><rect x="49.1752%" y="533" width="0.0148%" height="15" fill="rgb(210,39,28)"/><text x="49.4252%" y="543.50"></text></g><g><title>free_unref_page_list (4 samples, 0.02%)</title><rect x="49.2296%" y="501" width="0.0198%" height="15" fill="rgb(211,56,53)"/><text x="49.4796%" y="511.50"></text></g><g><title>__GI_munmap (35 samples, 0.17%)</title><rect x="49.0863%" y="677" width="0.1729%" height="15" fill="rgb(226,201,30)"/><text x="49.3363%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (35 samples, 0.17%)</title><rect x="49.0863%" y="661" width="0.1729%" height="15" fill="rgb(239,101,34)"/><text x="49.3363%" y="671.50"></text></g><g><title>do_syscall_64 (35 samples, 0.17%)</title><rect x="49.0863%" y="645" width="0.1729%" height="15" fill="rgb(226,209,5)"/><text x="49.3363%" y="655.50"></text></g><g><title>__x64_sys_munmap (35 samples, 0.17%)</title><rect x="49.0863%" y="629" width="0.1729%" height="15" fill="rgb(250,105,47)"/><text x="49.3363%" y="639.50"></text></g><g><title>__vm_munmap (35 samples, 0.17%)</title><rect x="49.0863%" y="613" width="0.1729%" height="15" fill="rgb(230,72,3)"/><text x="49.3363%" y="623.50"></text></g><g><title>__do_munmap (35 samples, 0.17%)</title><rect x="49.0863%" y="597" width="0.1729%" height="15" fill="rgb(232,218,39)"/><text x="49.3363%" y="607.50"></text></g><g><title>unmap_region (35 samples, 0.17%)</title><rect x="49.0863%" y="581" width="0.1729%" height="15" fill="rgb(248,166,6)"/><text x="49.3363%" y="591.50"></text></g><g><title>unmap_vmas (26 samples, 0.13%)</title><rect x="49.1308%" y="565" width="0.1284%" height="15" fill="rgb(247,89,20)"/><text x="49.3808%" y="575.50"></text></g><g><title>unmap_page_range (26 samples, 0.13%)</title><rect x="49.1308%" y="549" width="0.1284%" height="15" fill="rgb(248,130,54)"/><text x="49.3808%" y="559.50"></text></g><g><title>tlb_flush_mmu (14 samples, 0.07%)</title><rect x="49.1900%" y="533" width="0.0691%" height="15" fill="rgb(234,196,4)"/><text x="49.4400%" y="543.50"></text></g><g><title>release_pages (13 samples, 0.06%)</title><rect x="49.1950%" y="517" width="0.0642%" height="15" fill="rgb(250,143,31)"/><text x="49.4450%" y="527.50"></text></g><g><title>tlb_finish_mmu (3 samples, 0.01%)</title><rect x="49.2592%" y="565" width="0.0148%" height="15" fill="rgb(211,110,34)"/><text x="49.5092%" y="575.50"></text></g><g><title>release_pages (3 samples, 0.01%)</title><rect x="49.2592%" y="549" width="0.0148%" height="15" fill="rgb(215,124,48)"/><text x="49.5092%" y="559.50"></text></g><g><title>free_unref_page_list (3 samples, 0.01%)</title><rect x="49.2592%" y="533" width="0.0148%" height="15" fill="rgb(216,46,13)"/><text x="49.5092%" y="543.50"></text></g><g><title>free_pcppages_bulk (3 samples, 0.01%)</title><rect x="49.2592%" y="517" width="0.0148%" height="15" fill="rgb(205,184,25)"/><text x="49.5092%" y="527.50"></text></g><g><title>__free_one_page (3 samples, 0.01%)</title><rect x="49.2592%" y="501" width="0.0148%" height="15" fill="rgb(228,1,10)"/><text x="49.5092%" y="511.50"></text></g><g><title>page_remove_rmap (4 samples, 0.02%)</title><rect x="49.2789%" y="549" width="0.0198%" height="15" fill="rgb(213,116,27)"/><text x="49.5289%" y="559.50"></text></g><g><title>__malloc_arena_thread_freeres (48 samples, 0.24%)</title><rect x="49.0863%" y="741" width="0.2371%" height="15" fill="rgb(241,95,50)"/><text x="49.3363%" y="751.50"></text></g><g><title>tcache_thread_shutdown (48 samples, 0.24%)</title><rect x="49.0863%" y="725" width="0.2371%" height="15" fill="rgb(238,48,32)"/><text x="49.3363%" y="735.50"></text></g><g><title>_int_free (48 samples, 0.24%)</title><rect x="49.0863%" y="709" width="0.2371%" height="15" fill="rgb(235,113,49)"/><text x="49.3363%" y="719.50"></text></g><g><title>heap_trim (48 samples, 0.24%)</title><rect x="49.0863%" y="693" width="0.2371%" height="15" fill="rgb(205,127,43)"/><text x="49.3363%" y="703.50"></text></g><g><title>shrink_heap (13 samples, 0.06%)</title><rect x="49.2592%" y="677" width="0.0642%" height="15" fill="rgb(250,162,2)"/><text x="49.5092%" y="687.50"></text></g><g><title>__GI_madvise (13 samples, 0.06%)</title><rect x="49.2592%" y="661" width="0.0642%" height="15" fill="rgb(220,13,41)"/><text x="49.5092%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.06%)</title><rect x="49.2592%" y="645" width="0.0642%" height="15" fill="rgb(249,221,25)"/><text x="49.5092%" y="655.50"></text></g><g><title>do_syscall_64 (13 samples, 0.06%)</title><rect x="49.2592%" y="629" width="0.0642%" height="15" fill="rgb(215,208,19)"/><text x="49.5092%" y="639.50"></text></g><g><title>__x64_sys_madvise (13 samples, 0.06%)</title><rect x="49.2592%" y="613" width="0.0642%" height="15" fill="rgb(236,175,2)"/><text x="49.5092%" y="623.50"></text></g><g><title>do_madvise.part.0 (13 samples, 0.06%)</title><rect x="49.2592%" y="597" width="0.0642%" height="15" fill="rgb(241,52,2)"/><text x="49.5092%" y="607.50"></text></g><g><title>zap_page_range (13 samples, 0.06%)</title><rect x="49.2592%" y="581" width="0.0642%" height="15" fill="rgb(248,140,14)"/><text x="49.5092%" y="591.50"></text></g><g><title>unmap_page_range (10 samples, 0.05%)</title><rect x="49.2740%" y="565" width="0.0494%" height="15" fill="rgb(253,22,42)"/><text x="49.5240%" y="575.50"></text></g><g><title>tlb_flush_mmu (5 samples, 0.02%)</title><rect x="49.2987%" y="549" width="0.0247%" height="15" fill="rgb(234,61,47)"/><text x="49.5487%" y="559.50"></text></g><g><title>release_pages (5 samples, 0.02%)</title><rect x="49.2987%" y="533" width="0.0247%" height="15" fill="rgb(208,226,15)"/><text x="49.5487%" y="543.50"></text></g><g><title>free_unref_page_list (5 samples, 0.02%)</title><rect x="49.2987%" y="517" width="0.0247%" height="15" fill="rgb(217,221,4)"/><text x="49.5487%" y="527.50"></text></g><g><title>free_pcppages_bulk (5 samples, 0.02%)</title><rect x="49.2987%" y="501" width="0.0247%" height="15" fill="rgb(212,174,34)"/><text x="49.5487%" y="511.50"></text></g><g><title>__free_one_page (4 samples, 0.02%)</title><rect x="49.3036%" y="485" width="0.0198%" height="15" fill="rgb(253,83,4)"/><text x="49.5536%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="49.3234%" y="581" width="0.0247%" height="15" fill="rgb(250,195,49)"/><text x="49.5734%" y="591.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.02%)</title><rect x="49.3234%" y="565" width="0.0247%" height="15" fill="rgb(241,192,25)"/><text x="49.5734%" y="575.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="49.3234%" y="549" width="0.0247%" height="15" fill="rgb(208,124,10)"/><text x="49.5734%" y="559.50"></text></g><g><title>rwsem_down_read_slowpath (6 samples, 0.03%)</title><rect x="49.3234%" y="645" width="0.0296%" height="15" fill="rgb(222,33,0)"/><text x="49.5734%" y="655.50"></text></g><g><title>schedule (6 samples, 0.03%)</title><rect x="49.3234%" y="629" width="0.0296%" height="15" fill="rgb(234,209,28)"/><text x="49.5734%" y="639.50"></text></g><g><title>__schedule (6 samples, 0.03%)</title><rect x="49.3234%" y="613" width="0.0296%" height="15" fill="rgb(224,11,23)"/><text x="49.5734%" y="623.50"></text></g><g><title>finish_task_switch (6 samples, 0.03%)</title><rect x="49.3234%" y="597" width="0.0296%" height="15" fill="rgb(232,99,1)"/><text x="49.5734%" y="607.50"></text></g><g><title>advise_stack_range (7 samples, 0.03%)</title><rect x="49.3234%" y="741" width="0.0346%" height="15" fill="rgb(237,95,45)"/><text x="49.5734%" y="751.50"></text></g><g><title>__GI_madvise (7 samples, 0.03%)</title><rect x="49.3234%" y="725" width="0.0346%" height="15" fill="rgb(208,109,11)"/><text x="49.5734%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="49.3234%" y="709" width="0.0346%" height="15" fill="rgb(216,190,48)"/><text x="49.5734%" y="719.50"></text></g><g><title>do_syscall_64 (7 samples, 0.03%)</title><rect x="49.3234%" y="693" width="0.0346%" height="15" fill="rgb(251,171,36)"/><text x="49.5734%" y="703.50"></text></g><g><title>__x64_sys_madvise (7 samples, 0.03%)</title><rect x="49.3234%" y="677" width="0.0346%" height="15" fill="rgb(230,62,22)"/><text x="49.5734%" y="687.50"></text></g><g><title>do_madvise.part.0 (7 samples, 0.03%)</title><rect x="49.3234%" y="661" width="0.0346%" height="15" fill="rgb(225,114,35)"/><text x="49.5734%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 0.06%)</title><rect x="49.5358%" y="613" width="0.0642%" height="15" fill="rgb(215,118,42)"/><text x="49.7858%" y="623.50"></text></g><g><title>hrtimer_sleeper_start_expires (3 samples, 0.01%)</title><rect x="49.7728%" y="517" width="0.0148%" height="15" fill="rgb(243,119,21)"/><text x="50.0228%" y="527.50"></text></g><g><title>_raw_spin_lock_irqsave (4 samples, 0.02%)</title><rect x="49.8024%" y="501" width="0.0198%" height="15" fill="rgb(252,177,53)"/><text x="50.0524%" y="511.50"></text></g><g><title>enqueue_hrtimer (12 samples, 0.06%)</title><rect x="49.8222%" y="501" width="0.0593%" height="15" fill="rgb(237,209,29)"/><text x="50.0722%" y="511.50"></text></g><g><title>timerqueue_add (12 samples, 0.06%)</title><rect x="49.8222%" y="485" width="0.0593%" height="15" fill="rgb(212,65,23)"/><text x="50.0722%" y="495.50"></text></g><g><title>hrtimer_start_range_ns (21 samples, 0.10%)</title><rect x="49.7876%" y="517" width="0.1037%" height="15" fill="rgb(230,222,46)"/><text x="50.0376%" y="527.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.01%)</title><rect x="49.9654%" y="469" width="0.0148%" height="15" fill="rgb(215,135,32)"/><text x="50.2154%" y="479.50"></text></g><g><title>__perf_event_task_sched_out (10 samples, 0.05%)</title><rect x="49.9358%" y="485" width="0.0494%" height="15" fill="rgb(246,101,22)"/><text x="50.1858%" y="495.50"></text></g><g><title>reweight_entity (4 samples, 0.02%)</title><rect x="50.0790%" y="453" width="0.0198%" height="15" fill="rgb(206,107,13)"/><text x="50.3290%" y="463.50"></text></g><g><title>update_cfs_group (4 samples, 0.02%)</title><rect x="50.0988%" y="453" width="0.0198%" height="15" fill="rgb(250,100,44)"/><text x="50.3488%" y="463.50"></text></g><g><title>__calc_delta (4 samples, 0.02%)</title><rect x="50.1531%" y="437" width="0.0198%" height="15" fill="rgb(231,147,38)"/><text x="50.4031%" y="447.50"></text></g><g><title>cpuacct_charge (7 samples, 0.03%)</title><rect x="50.1827%" y="437" width="0.0346%" height="15" fill="rgb(229,8,40)"/><text x="50.4327%" y="447.50"></text></g><g><title>update_curr (21 samples, 0.10%)</title><rect x="50.1185%" y="453" width="0.1037%" height="15" fill="rgb(221,135,30)"/><text x="50.3685%" y="463.50"></text></g><g><title>dequeue_task_fair (53 samples, 0.26%)</title><rect x="49.9951%" y="485" width="0.2618%" height="15" fill="rgb(249,193,18)"/><text x="50.2451%" y="495.50"></text></g><g><title>dequeue_entity (44 samples, 0.22%)</title><rect x="50.0395%" y="469" width="0.2173%" height="15" fill="rgb(209,133,39)"/><text x="50.2895%" y="479.50"></text></g><g><title>update_load_avg (7 samples, 0.03%)</title><rect x="50.2222%" y="453" width="0.0346%" height="15" fill="rgb(232,100,14)"/><text x="50.4722%" y="463.50"></text></g><g><title>__update_load_avg_se (3 samples, 0.01%)</title><rect x="50.2420%" y="437" width="0.0148%" height="15" fill="rgb(224,185,1)"/><text x="50.4920%" y="447.50"></text></g><g><title>finish_task_switch (113 samples, 0.56%)</title><rect x="50.2568%" y="485" width="0.5581%" height="15" fill="rgb(223,139,8)"/><text x="50.5068%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (105 samples, 0.52%)</title><rect x="50.2963%" y="469" width="0.5186%" height="15" fill="rgb(232,213,38)"/><text x="50.5463%" y="479.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (105 samples, 0.52%)</title><rect x="50.2963%" y="453" width="0.5186%" height="15" fill="rgb(207,94,22)"/><text x="50.5463%" y="463.50"></text></g><g><title>native_write_msr (104 samples, 0.51%)</title><rect x="50.3013%" y="437" width="0.5136%" height="15" fill="rgb(219,183,54)"/><text x="50.5513%" y="447.50"></text></g><g><title>pick_next_task_fair (11 samples, 0.05%)</title><rect x="50.8149%" y="485" width="0.0543%" height="15" fill="rgb(216,185,54)"/><text x="51.0649%" y="495.50"></text></g><g><title>newidle_balance (11 samples, 0.05%)</title><rect x="50.8149%" y="469" width="0.0543%" height="15" fill="rgb(254,217,39)"/><text x="51.0649%" y="479.50"></text></g><g><title>pick_next_task_idle (10 samples, 0.05%)</title><rect x="50.8692%" y="485" width="0.0494%" height="15" fill="rgb(240,178,23)"/><text x="51.1192%" y="495.50"></text></g><g><title>__update_idle_core (6 samples, 0.03%)</title><rect x="50.8890%" y="469" width="0.0296%" height="15" fill="rgb(218,11,47)"/><text x="51.1390%" y="479.50"></text></g><g><title>psi_task_change (45 samples, 0.22%)</title><rect x="50.9186%" y="485" width="0.2222%" height="15" fill="rgb(218,51,51)"/><text x="51.1686%" y="495.50"></text></g><g><title>psi_group_change (34 samples, 0.17%)</title><rect x="50.9729%" y="469" width="0.1679%" height="15" fill="rgb(238,126,27)"/><text x="51.2229%" y="479.50"></text></g><g><title>record_times (9 samples, 0.04%)</title><rect x="51.0964%" y="453" width="0.0444%" height="15" fill="rgb(249,202,22)"/><text x="51.3464%" y="463.50"></text></g><g><title>sched_clock_cpu (7 samples, 0.03%)</title><rect x="51.1063%" y="437" width="0.0346%" height="15" fill="rgb(254,195,49)"/><text x="51.3563%" y="447.50"></text></g><g><title>sched_clock (7 samples, 0.03%)</title><rect x="51.1063%" y="421" width="0.0346%" height="15" fill="rgb(208,123,14)"/><text x="51.3563%" y="431.50"></text></g><g><title>native_sched_clock (6 samples, 0.03%)</title><rect x="51.1112%" y="405" width="0.0296%" height="15" fill="rgb(224,200,8)"/><text x="51.3612%" y="415.50"></text></g><g><title>put_prev_task_fair (8 samples, 0.04%)</title><rect x="51.1458%" y="485" width="0.0395%" height="15" fill="rgb(217,61,36)"/><text x="51.3958%" y="495.50"></text></g><g><title>put_prev_entity (6 samples, 0.03%)</title><rect x="51.1557%" y="469" width="0.0296%" height="15" fill="rgb(206,35,45)"/><text x="51.4057%" y="479.50"></text></g><g><title>futex_wait_queue_me (302 samples, 1.49%)</title><rect x="49.7284%" y="533" width="1.4915%" height="15" fill="rgb(217,65,33)"/><text x="49.9784%" y="543.50"></text></g><g><title>schedule (269 samples, 1.33%)</title><rect x="49.8913%" y="517" width="1.3285%" height="15" fill="rgb(222,158,48)"/><text x="50.1413%" y="527.50"></text></g><g><title>__schedule (267 samples, 1.32%)</title><rect x="49.9012%" y="501" width="1.3186%" height="15" fill="rgb(254,2,54)"/><text x="50.1512%" y="511.50"></text></g><g><title>update_rq_clock (7 samples, 0.03%)</title><rect x="51.1853%" y="485" width="0.0346%" height="15" fill="rgb(250,143,38)"/><text x="51.4353%" y="495.50"></text></g><g><title>futex_wait_setup (11 samples, 0.05%)</title><rect x="51.2199%" y="533" width="0.0543%" height="15" fill="rgb(248,25,0)"/><text x="51.4699%" y="543.50"></text></g><g><title>hrtimer_cancel (7 samples, 0.03%)</title><rect x="51.2742%" y="533" width="0.0346%" height="15" fill="rgb(206,152,27)"/><text x="51.5242%" y="543.50"></text></g><g><title>hrtimer_try_to_cancel.part.0 (6 samples, 0.03%)</title><rect x="51.2791%" y="517" width="0.0296%" height="15" fill="rgb(240,77,30)"/><text x="51.5291%" y="527.50"></text></g><g><title>do_futex (342 samples, 1.69%)</title><rect x="49.6493%" y="565" width="1.6891%" height="15" fill="rgb(231,5,3)"/><text x="49.8993%" y="575.50"></text></g><g><title>futex_wait (336 samples, 1.66%)</title><rect x="49.6790%" y="549" width="1.6594%" height="15" fill="rgb(207,226,32)"/><text x="49.9290%" y="559.50"></text></g><g><title>hrtimer_init_sleeper (6 samples, 0.03%)</title><rect x="51.3088%" y="533" width="0.0296%" height="15" fill="rgb(222,207,47)"/><text x="51.5588%" y="543.50"></text></g><g><title>__hrtimer_init (5 samples, 0.02%)</title><rect x="51.3137%" y="517" width="0.0247%" height="15" fill="rgb(229,115,45)"/><text x="51.5637%" y="527.50"></text></g><g><title>get_timespec64 (3 samples, 0.01%)</title><rect x="51.3384%" y="565" width="0.0148%" height="15" fill="rgb(224,191,6)"/><text x="51.5884%" y="575.50"></text></g><g><title>do_syscall_64 (360 samples, 1.78%)</title><rect x="49.6148%" y="597" width="1.7780%" height="15" fill="rgb(230,227,24)"/><text x="49.8648%" y="607.50">d..</text></g><g><title>__x64_sys_futex (356 samples, 1.76%)</title><rect x="49.6345%" y="581" width="1.7582%" height="15" fill="rgb(228,80,19)"/><text x="49.8845%" y="591.50"></text></g><g><title>ktime_get (8 samples, 0.04%)</title><rect x="51.3532%" y="565" width="0.0395%" height="15" fill="rgb(247,229,0)"/><text x="51.6032%" y="575.50"></text></g><g><title>read_tsc (5 samples, 0.02%)</title><rect x="51.3680%" y="549" width="0.0247%" height="15" fill="rgb(237,194,15)"/><text x="51.6180%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (391 samples, 1.93%)</title><rect x="49.6000%" y="613" width="1.9311%" height="15" fill="rgb(219,203,20)"/><text x="49.8500%" y="623.50">e..</text></g><g><title>syscall_exit_to_user_mode (28 samples, 0.14%)</title><rect x="51.3927%" y="597" width="0.1383%" height="15" fill="rgb(234,128,8)"/><text x="51.6427%" y="607.50"></text></g><g><title>exit_to_user_mode_prepare (4 samples, 0.02%)</title><rect x="51.5113%" y="581" width="0.0198%" height="15" fill="rgb(248,202,8)"/><text x="51.7613%" y="591.50"></text></g><g><title>switch_fpu_return (4 samples, 0.02%)</title><rect x="51.5113%" y="565" width="0.0198%" height="15" fill="rgb(206,104,37)"/><text x="51.7613%" y="575.50"></text></g><g><title>copy_kernel_to_fpregs (3 samples, 0.01%)</title><rect x="51.5162%" y="549" width="0.0148%" height="15" fill="rgb(223,8,27)"/><text x="51.7662%" y="559.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (437 samples, 2.16%)</title><rect x="49.4073%" y="645" width="2.1582%" height="15" fill="rgb(216,217,28)"/><text x="49.6573%" y="655.50">p..</text></g><g><title>syscall (413 samples, 2.04%)</title><rect x="49.5259%" y="629" width="2.0397%" height="15" fill="rgb(249,199,1)"/><text x="49.7759%" y="639.50">s..</text></g><g><title>syscall_return_via_sysret (7 samples, 0.03%)</title><rect x="51.5310%" y="613" width="0.0346%" height="15" fill="rgb(240,85,17)"/><text x="51.7810%" y="623.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (21 samples, 0.10%)</title><rect x="51.5656%" y="645" width="0.1037%" height="15" fill="rgb(206,108,45)"/><text x="51.8156%" y="655.50"></text></g><g><title>syscall (20 samples, 0.10%)</title><rect x="51.5705%" y="629" width="0.0988%" height="15" fill="rgb(245,210,41)"/><text x="51.8205%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (20 samples, 0.10%)</title><rect x="51.5705%" y="613" width="0.0988%" height="15" fill="rgb(206,13,37)"/><text x="51.8205%" y="623.50"></text></g><g><title>do_syscall_64 (20 samples, 0.10%)</title><rect x="51.5705%" y="597" width="0.0988%" height="15" fill="rgb(250,61,18)"/><text x="51.8205%" y="607.50"></text></g><g><title>__x64_sys_futex (20 samples, 0.10%)</title><rect x="51.5705%" y="581" width="0.0988%" height="15" fill="rgb(235,172,48)"/><text x="51.8205%" y="591.50"></text></g><g><title>do_futex (20 samples, 0.10%)</title><rect x="51.5705%" y="565" width="0.0988%" height="15" fill="rgb(249,201,17)"/><text x="51.8205%" y="575.50"></text></g><g><title>futex_wait (20 samples, 0.10%)</title><rect x="51.5705%" y="549" width="0.0988%" height="15" fill="rgb(219,208,6)"/><text x="51.8205%" y="559.50"></text></g><g><title>futex_wait_queue_me (20 samples, 0.10%)</title><rect x="51.5705%" y="533" width="0.0988%" height="15" fill="rgb(248,31,23)"/><text x="51.8205%" y="543.50"></text></g><g><title>schedule (20 samples, 0.10%)</title><rect x="51.5705%" y="517" width="0.0988%" height="15" fill="rgb(245,15,42)"/><text x="51.8205%" y="527.50"></text></g><g><title>__schedule (20 samples, 0.10%)</title><rect x="51.5705%" y="501" width="0.0988%" height="15" fill="rgb(222,217,39)"/><text x="51.8205%" y="511.50"></text></g><g><title>finish_task_switch (20 samples, 0.10%)</title><rect x="51.5705%" y="485" width="0.0988%" height="15" fill="rgb(210,219,27)"/><text x="51.8205%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (20 samples, 0.10%)</title><rect x="51.5705%" y="469" width="0.0988%" height="15" fill="rgb(252,166,36)"/><text x="51.8205%" y="479.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (20 samples, 0.10%)</title><rect x="51.5705%" y="453" width="0.0988%" height="15" fill="rgb(245,132,34)"/><text x="51.8205%" y="463.50"></text></g><g><title>native_write_msr (20 samples, 0.10%)</title><rect x="51.5705%" y="437" width="0.0988%" height="15" fill="rgb(236,54,3)"/><text x="51.8205%" y="447.50"></text></g><g><title>std::time::Instant::now (4 samples, 0.02%)</title><rect x="51.6693%" y="645" width="0.0198%" height="15" fill="rgb(241,173,43)"/><text x="51.9193%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (4 samples, 0.02%)</title><rect x="51.6693%" y="629" width="0.0198%" height="15" fill="rgb(215,190,9)"/><text x="51.9193%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::now (4 samples, 0.02%)</title><rect x="51.6693%" y="613" width="0.0198%" height="15" fill="rgb(242,101,16)"/><text x="51.9193%" y="623.50"></text></g><g><title>__GI___clock_gettime (4 samples, 0.02%)</title><rect x="51.6693%" y="597" width="0.0198%" height="15" fill="rgb(223,190,21)"/><text x="51.9193%" y="607.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.01%)</title><rect x="51.6742%" y="581" width="0.0148%" height="15" fill="rgb(215,228,25)"/><text x="51.9242%" y="591.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (18 samples, 0.09%)</title><rect x="51.7681%" y="549" width="0.0889%" height="15" fill="rgb(225,36,22)"/><text x="52.0181%" y="559.50"></text></g><g><title>syscall (17 samples, 0.08%)</title><rect x="51.7730%" y="533" width="0.0840%" height="15" fill="rgb(251,106,46)"/><text x="52.0230%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (16 samples, 0.08%)</title><rect x="51.7780%" y="517" width="0.0790%" height="15" fill="rgb(208,90,1)"/><text x="52.0280%" y="527.50"></text></g><g><title>do_syscall_64 (16 samples, 0.08%)</title><rect x="51.7780%" y="501" width="0.0790%" height="15" fill="rgb(243,10,4)"/><text x="52.0280%" y="511.50"></text></g><g><title>__x64_sys_futex (15 samples, 0.07%)</title><rect x="51.7829%" y="485" width="0.0741%" height="15" fill="rgb(212,137,27)"/><text x="52.0329%" y="495.50"></text></g><g><title>do_futex (15 samples, 0.07%)</title><rect x="51.7829%" y="469" width="0.0741%" height="15" fill="rgb(231,220,49)"/><text x="52.0329%" y="479.50"></text></g><g><title>futex_wait (15 samples, 0.07%)</title><rect x="51.7829%" y="453" width="0.0741%" height="15" fill="rgb(237,96,20)"/><text x="52.0329%" y="463.50"></text></g><g><title>futex_wait_queue_me (15 samples, 0.07%)</title><rect x="51.7829%" y="437" width="0.0741%" height="15" fill="rgb(239,229,30)"/><text x="52.0329%" y="447.50"></text></g><g><title>schedule (15 samples, 0.07%)</title><rect x="51.7829%" y="421" width="0.0741%" height="15" fill="rgb(219,65,33)"/><text x="52.0329%" y="431.50"></text></g><g><title>__schedule (15 samples, 0.07%)</title><rect x="51.7829%" y="405" width="0.0741%" height="15" fill="rgb(243,134,7)"/><text x="52.0329%" y="415.50"></text></g><g><title>finish_task_switch (15 samples, 0.07%)</title><rect x="51.7829%" y="389" width="0.0741%" height="15" fill="rgb(216,177,54)"/><text x="52.0329%" y="399.50"></text></g><g><title>__perf_event_task_sched_in (15 samples, 0.07%)</title><rect x="51.7829%" y="373" width="0.0741%" height="15" fill="rgb(211,160,20)"/><text x="52.0329%" y="383.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (15 samples, 0.07%)</title><rect x="51.7829%" y="357" width="0.0741%" height="15" fill="rgb(239,85,39)"/><text x="52.0329%" y="367.50"></text></g><g><title>native_write_msr (15 samples, 0.07%)</title><rect x="51.7829%" y="341" width="0.0741%" height="15" fill="rgb(232,125,22)"/><text x="52.0329%" y="351.50"></text></g><g><title>finish_task_switch (5 samples, 0.02%)</title><rect x="51.9261%" y="421" width="0.0247%" height="15" fill="rgb(244,57,34)"/><text x="52.1761%" y="431.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="51.9261%" y="405" width="0.0247%" height="15" fill="rgb(214,203,32)"/><text x="52.1761%" y="415.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.02%)</title><rect x="51.9261%" y="389" width="0.0247%" height="15" fill="rgb(207,58,43)"/><text x="52.1761%" y="399.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="51.9261%" y="373" width="0.0247%" height="15" fill="rgb(215,193,15)"/><text x="52.1761%" y="383.50"></text></g><g><title>pick_next_task_fair (6 samples, 0.03%)</title><rect x="51.9508%" y="421" width="0.0296%" height="15" fill="rgb(232,15,44)"/><text x="52.2008%" y="431.50"></text></g><g><title>update_curr (6 samples, 0.03%)</title><rect x="51.9508%" y="405" width="0.0296%" height="15" fill="rgb(212,3,48)"/><text x="52.2008%" y="415.50"></text></g><g><title>__x64_sys_sched_yield (19 samples, 0.09%)</title><rect x="51.9014%" y="469" width="0.0938%" height="15" fill="rgb(218,128,7)"/><text x="52.1514%" y="479.50"></text></g><g><title>schedule (17 samples, 0.08%)</title><rect x="51.9113%" y="453" width="0.0840%" height="15" fill="rgb(226,216,39)"/><text x="52.1613%" y="463.50"></text></g><g><title>__schedule (16 samples, 0.08%)</title><rect x="51.9162%" y="437" width="0.0790%" height="15" fill="rgb(243,47,51)"/><text x="52.1662%" y="447.50"></text></g><g><title>update_rq_clock (3 samples, 0.01%)</title><rect x="51.9804%" y="421" width="0.0148%" height="15" fill="rgb(241,183,40)"/><text x="52.2304%" y="431.50"></text></g><g><title>do_syscall_64 (20 samples, 0.10%)</title><rect x="51.9014%" y="485" width="0.0988%" height="15" fill="rgb(231,217,32)"/><text x="52.1514%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 0.15%)</title><rect x="51.9014%" y="501" width="0.1482%" height="15" fill="rgb(229,61,38)"/><text x="52.1514%" y="511.50"></text></g><g><title>syscall_exit_to_user_mode (10 samples, 0.05%)</title><rect x="52.0002%" y="485" width="0.0494%" height="15" fill="rgb(225,210,5)"/><text x="52.2502%" y="495.50"></text></g><g><title>exit_to_user_mode_prepare (3 samples, 0.01%)</title><rect x="52.0348%" y="469" width="0.0148%" height="15" fill="rgb(231,79,45)"/><text x="52.2848%" y="479.50"></text></g><g><title>__GI___sched_yield (38 samples, 0.19%)</title><rect x="51.8866%" y="517" width="0.1877%" height="15" fill="rgb(224,100,7)"/><text x="52.1366%" y="527.50"></text></g><g><title>syscall_return_via_sysret (5 samples, 0.02%)</title><rect x="52.0496%" y="501" width="0.0247%" height="15" fill="rgb(241,198,18)"/><text x="52.2996%" y="511.50"></text></g><g><title>dequeue_task_fair (7 samples, 0.03%)</title><rect x="52.1484%" y="357" width="0.0346%" height="15" fill="rgb(252,97,53)"/><text x="52.3984%" y="367.50"></text></g><g><title>dequeue_entity (6 samples, 0.03%)</title><rect x="52.1533%" y="341" width="0.0296%" height="15" fill="rgb(220,88,7)"/><text x="52.4033%" y="351.50"></text></g><g><title>__perf_event_task_sched_in (53 samples, 0.26%)</title><rect x="52.1879%" y="341" width="0.2618%" height="15" fill="rgb(213,176,14)"/><text x="52.4379%" y="351.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (53 samples, 0.26%)</title><rect x="52.1879%" y="325" width="0.2618%" height="15" fill="rgb(246,73,7)"/><text x="52.4379%" y="335.50"></text></g><g><title>native_write_msr (53 samples, 0.26%)</title><rect x="52.1879%" y="309" width="0.2618%" height="15" fill="rgb(245,64,36)"/><text x="52.4379%" y="319.50"></text></g><g><title>finish_task_switch (57 samples, 0.28%)</title><rect x="52.1829%" y="357" width="0.2815%" height="15" fill="rgb(245,80,10)"/><text x="52.4329%" y="367.50"></text></g><g><title>asm_sysvec_irq_work (3 samples, 0.01%)</title><rect x="52.4496%" y="341" width="0.0148%" height="15" fill="rgb(232,107,50)"/><text x="52.6996%" y="351.50"></text></g><g><title>psi_task_change (4 samples, 0.02%)</title><rect x="52.4694%" y="357" width="0.0198%" height="15" fill="rgb(253,3,0)"/><text x="52.7194%" y="367.50"></text></g><g><title>psi_group_change (3 samples, 0.01%)</title><rect x="52.4743%" y="341" width="0.0148%" height="15" fill="rgb(212,99,53)"/><text x="52.7243%" y="351.50"></text></g><g><title>futex_wait_queue_me (79 samples, 0.39%)</title><rect x="52.1138%" y="405" width="0.3902%" height="15" fill="rgb(249,111,54)"/><text x="52.3638%" y="415.50"></text></g><g><title>schedule (77 samples, 0.38%)</title><rect x="52.1237%" y="389" width="0.3803%" height="15" fill="rgb(249,55,30)"/><text x="52.3737%" y="399.50"></text></g><g><title>__schedule (75 samples, 0.37%)</title><rect x="52.1335%" y="373" width="0.3704%" height="15" fill="rgb(237,47,42)"/><text x="52.3835%" y="383.50"></text></g><g><title>put_prev_task_fair (3 samples, 0.01%)</title><rect x="52.4891%" y="357" width="0.0148%" height="15" fill="rgb(211,20,18)"/><text x="52.7391%" y="367.50"></text></g><g><title>do_syscall_64 (84 samples, 0.41%)</title><rect x="52.1039%" y="469" width="0.4149%" height="15" fill="rgb(231,203,46)"/><text x="52.3539%" y="479.50"></text></g><g><title>__x64_sys_futex (83 samples, 0.41%)</title><rect x="52.1089%" y="453" width="0.4099%" height="15" fill="rgb(237,142,3)"/><text x="52.3589%" y="463.50"></text></g><g><title>do_futex (83 samples, 0.41%)</title><rect x="52.1089%" y="437" width="0.4099%" height="15" fill="rgb(241,107,1)"/><text x="52.3589%" y="447.50"></text></g><g><title>futex_wait (82 samples, 0.40%)</title><rect x="52.1138%" y="421" width="0.4050%" height="15" fill="rgb(229,83,13)"/><text x="52.3638%" y="431.50"></text></g><g><title>futex_wait_setup (3 samples, 0.01%)</title><rect x="52.5040%" y="405" width="0.0148%" height="15" fill="rgb(241,91,40)"/><text x="52.7540%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (91 samples, 0.45%)</title><rect x="52.1039%" y="485" width="0.4494%" height="15" fill="rgb(225,3,45)"/><text x="52.3539%" y="495.50"></text></g><g><title>syscall_exit_to_user_mode (7 samples, 0.03%)</title><rect x="52.5188%" y="469" width="0.0346%" height="15" fill="rgb(244,223,14)"/><text x="52.7688%" y="479.50"></text></g><g><title>exit_to_user_mode_prepare (3 samples, 0.01%)</title><rect x="52.5385%" y="453" width="0.0148%" height="15" fill="rgb(224,124,37)"/><text x="52.7885%" y="463.50"></text></g><g><title>switch_fpu_return (3 samples, 0.01%)</title><rect x="52.5385%" y="437" width="0.0148%" height="15" fill="rgb(251,171,30)"/><text x="52.7885%" y="447.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (98 samples, 0.48%)</title><rect x="52.0743%" y="517" width="0.4840%" height="15" fill="rgb(236,46,54)"/><text x="52.3243%" y="527.50"></text></g><g><title>syscall (94 samples, 0.46%)</title><rect x="52.0940%" y="501" width="0.4642%" height="15" fill="rgb(245,213,5)"/><text x="52.3440%" y="511.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (140 samples, 0.69%)</title><rect x="51.8718%" y="549" width="0.6914%" height="15" fill="rgb(230,144,27)"/><text x="52.1218%" y="559.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (138 samples, 0.68%)</title><rect x="51.8817%" y="533" width="0.6815%" height="15" fill="rgb(220,86,6)"/><text x="52.1317%" y="543.50"></text></g><g><title>select_task_rq_fair (4 samples, 0.02%)</title><rect x="52.6175%" y="389" width="0.0198%" height="15" fill="rgb(240,20,13)"/><text x="52.8675%" y="399.50"></text></g><g><title>enqueue_task_fair (7 samples, 0.03%)</title><rect x="52.6373%" y="373" width="0.0346%" height="15" fill="rgb(217,89,34)"/><text x="52.8873%" y="383.50"></text></g><g><title>enqueue_entity (7 samples, 0.03%)</title><rect x="52.6373%" y="357" width="0.0346%" height="15" fill="rgb(229,13,5)"/><text x="52.8873%" y="367.50"></text></g><g><title>update_load_avg (4 samples, 0.02%)</title><rect x="52.6521%" y="341" width="0.0198%" height="15" fill="rgb(244,67,35)"/><text x="52.9021%" y="351.50"></text></g><g><title>ttwu_do_activate (10 samples, 0.05%)</title><rect x="52.6373%" y="389" width="0.0494%" height="15" fill="rgb(221,40,2)"/><text x="52.8873%" y="399.50"></text></g><g><title>psi_task_change (3 samples, 0.01%)</title><rect x="52.6719%" y="373" width="0.0148%" height="15" fill="rgb(237,157,21)"/><text x="52.9219%" y="383.50"></text></g><g><title>psi_group_change (3 samples, 0.01%)</title><rect x="52.6719%" y="357" width="0.0148%" height="15" fill="rgb(222,94,11)"/><text x="52.9219%" y="367.50"></text></g><g><title>do_syscall_64 (23 samples, 0.11%)</title><rect x="52.5780%" y="485" width="0.1136%" height="15" fill="rgb(249,113,6)"/><text x="52.8280%" y="495.50"></text></g><g><title>__x64_sys_futex (23 samples, 0.11%)</title><rect x="52.5780%" y="469" width="0.1136%" height="15" fill="rgb(238,137,36)"/><text x="52.8280%" y="479.50"></text></g><g><title>do_futex (22 samples, 0.11%)</title><rect x="52.5830%" y="453" width="0.1087%" height="15" fill="rgb(210,102,26)"/><text x="52.8330%" y="463.50"></text></g><g><title>futex_wake (22 samples, 0.11%)</title><rect x="52.5830%" y="437" width="0.1087%" height="15" fill="rgb(218,30,30)"/><text x="52.8330%" y="447.50"></text></g><g><title>wake_up_q (16 samples, 0.08%)</title><rect x="52.6126%" y="421" width="0.0790%" height="15" fill="rgb(214,67,26)"/><text x="52.8626%" y="431.50"></text></g><g><title>try_to_wake_up (16 samples, 0.08%)</title><rect x="52.6126%" y="405" width="0.0790%" height="15" fill="rgb(251,9,53)"/><text x="52.8626%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (24 samples, 0.12%)</title><rect x="52.5780%" y="501" width="0.1185%" height="15" fill="rgb(228,204,25)"/><text x="52.8280%" y="511.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (27 samples, 0.13%)</title><rect x="52.5731%" y="533" width="0.1333%" height="15" fill="rgb(207,153,8)"/><text x="52.8231%" y="543.50"></text></g><g><title>syscall (26 samples, 0.13%)</title><rect x="52.5780%" y="517" width="0.1284%" height="15" fill="rgb(242,9,16)"/><text x="52.8280%" y="527.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (4 samples, 0.02%)</title><rect x="52.7114%" y="501" width="0.0198%" height="15" fill="rgb(217,211,10)"/><text x="52.9614%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="52.7311%" y="485" width="0.0148%" height="15" fill="rgb(219,228,52)"/><text x="52.9811%" y="495.50"></text></g><g><title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="53.4818%" y="325" width="0.0198%" height="15" fill="rgb(231,92,29)"/><text x="53.7318%" y="335.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.01%)</title><rect x="53.4868%" y="309" width="0.0148%" height="15" fill="rgb(232,8,23)"/><text x="53.7368%" y="319.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.01%)</title><rect x="53.4868%" y="293" width="0.0148%" height="15" fill="rgb(216,211,34)"/><text x="53.7368%" y="303.50"></text></g><g><title>__pagevec_lru_add_fn (3 samples, 0.01%)</title><rect x="53.5016%" y="293" width="0.0148%" height="15" fill="rgb(236,151,0)"/><text x="53.7516%" y="303.50"></text></g><g><title>exc_page_fault (9 samples, 0.04%)</title><rect x="53.4769%" y="373" width="0.0444%" height="15" fill="rgb(209,168,3)"/><text x="53.7269%" y="383.50"></text></g><g><title>do_user_addr_fault (9 samples, 0.04%)</title><rect x="53.4769%" y="357" width="0.0444%" height="15" fill="rgb(208,129,28)"/><text x="53.7269%" y="367.50"></text></g><g><title>handle_mm_fault (9 samples, 0.04%)</title><rect x="53.4769%" y="341" width="0.0444%" height="15" fill="rgb(229,78,22)"/><text x="53.7269%" y="351.50"></text></g><g><title>lru_cache_add (4 samples, 0.02%)</title><rect x="53.5016%" y="325" width="0.0198%" height="15" fill="rgb(228,187,13)"/><text x="53.7516%" y="335.50"></text></g><g><title>pagevec_lru_move_fn (4 samples, 0.02%)</title><rect x="53.5016%" y="309" width="0.0198%" height="15" fill="rgb(240,119,24)"/><text x="53.7516%" y="319.50"></text></g><g><title>asm_exc_page_fault (10 samples, 0.05%)</title><rect x="53.4769%" y="389" width="0.0494%" height="15" fill="rgb(209,194,42)"/><text x="53.7269%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (9 samples, 0.04%)</title><rect x="53.5263%" y="389" width="0.0444%" height="15" fill="rgb(247,200,46)"/><text x="53.7763%" y="399.50"></text></g><g><title>&lt;ate::anti_replay::AntiReplayPlugin as ate::sink::EventSink&gt;::feed (67 samples, 0.33%)</title><rect x="53.2448%" y="453" width="0.3309%" height="15" fill="rgb(218,76,16)"/><text x="53.4948%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (66 samples, 0.33%)</title><rect x="53.2497%" y="437" width="0.3260%" height="15" fill="rgb(225,21,48)"/><text x="53.4997%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (59 samples, 0.29%)</title><rect x="53.2843%" y="421" width="0.2914%" height="15" fill="rgb(239,223,50)"/><text x="53.5343%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (37 samples, 0.18%)</title><rect x="53.3929%" y="405" width="0.1827%" height="15" fill="rgb(244,45,21)"/><text x="53.6429%" y="415.50"></text></g><g><title>&lt;ate::redo::RedoLog as ate::redo::LogWritable&gt;::write (5 samples, 0.02%)</title><rect x="53.5757%" y="453" width="0.0247%" height="15" fill="rgb(232,33,43)"/><text x="53.8257%" y="463.50"></text></g><g><title>&lt;ate::time::TimestampEnforcer as ate::sink::EventSink&gt;::feed (7 samples, 0.03%)</title><rect x="53.6004%" y="453" width="0.0346%" height="15" fill="rgb(209,8,3)"/><text x="53.8504%" y="463.50"></text></g><g><title>&lt;ate::signature::SignaturePlugin as ate::sink::EventSink&gt;::feed (3 samples, 0.01%)</title><rect x="53.6794%" y="437" width="0.0148%" height="15" fill="rgb(214,25,53)"/><text x="53.9294%" y="447.50"></text></g><g><title>ate::tree::TreeAuthorityPlugin::compute_auth (20 samples, 0.10%)</title><rect x="53.6942%" y="437" width="0.0988%" height="15" fill="rgb(254,186,54)"/><text x="53.9442%" y="447.50"></text></g><g><title>tlb_finish_mmu (3 samples, 0.01%)</title><rect x="54.2177%" y="277" width="0.0148%" height="15" fill="rgb(208,174,49)"/><text x="54.4677%" y="287.50"></text></g><g><title>release_pages (3 samples, 0.01%)</title><rect x="54.2177%" y="261" width="0.0148%" height="15" fill="rgb(233,191,51)"/><text x="54.4677%" y="271.50"></text></g><g><title>__GI_munmap (6 samples, 0.03%)</title><rect x="54.2177%" y="389" width="0.0296%" height="15" fill="rgb(222,134,10)"/><text x="54.4677%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="54.2177%" y="373" width="0.0296%" height="15" fill="rgb(230,226,20)"/><text x="54.4677%" y="383.50"></text></g><g><title>do_syscall_64 (6 samples, 0.03%)</title><rect x="54.2177%" y="357" width="0.0296%" height="15" fill="rgb(251,111,25)"/><text x="54.4677%" y="367.50"></text></g><g><title>__x64_sys_munmap (6 samples, 0.03%)</title><rect x="54.2177%" y="341" width="0.0296%" height="15" fill="rgb(224,40,46)"/><text x="54.4677%" y="351.50"></text></g><g><title>__vm_munmap (6 samples, 0.03%)</title><rect x="54.2177%" y="325" width="0.0296%" height="15" fill="rgb(236,108,47)"/><text x="54.4677%" y="335.50"></text></g><g><title>__do_munmap (6 samples, 0.03%)</title><rect x="54.2177%" y="309" width="0.0296%" height="15" fill="rgb(234,93,0)"/><text x="54.4677%" y="319.50"></text></g><g><title>unmap_region (6 samples, 0.03%)</title><rect x="54.2177%" y="293" width="0.0296%" height="15" fill="rgb(224,213,32)"/><text x="54.4677%" y="303.50"></text></g><g><title>unmap_vmas (3 samples, 0.01%)</title><rect x="54.2325%" y="277" width="0.0148%" height="15" fill="rgb(251,11,48)"/><text x="54.4825%" y="287.50"></text></g><g><title>unmap_page_range (3 samples, 0.01%)</title><rect x="54.2325%" y="261" width="0.0148%" height="15" fill="rgb(236,173,5)"/><text x="54.4825%" y="271.50"></text></g><g><title>__irqentry_text_end (3 samples, 0.01%)</title><rect x="54.2473%" y="389" width="0.0148%" height="15" fill="rgb(230,95,12)"/><text x="54.4973%" y="399.50"></text></g><g><title>alloc_pages_vma (14 samples, 0.07%)</title><rect x="54.3264%" y="325" width="0.0691%" height="15" fill="rgb(232,209,1)"/><text x="54.5764%" y="335.50"></text></g><g><title>__alloc_pages_nodemask (14 samples, 0.07%)</title><rect x="54.3264%" y="309" width="0.0691%" height="15" fill="rgb(232,6,1)"/><text x="54.5764%" y="319.50"></text></g><g><title>get_page_from_freelist (14 samples, 0.07%)</title><rect x="54.3264%" y="293" width="0.0691%" height="15" fill="rgb(210,224,50)"/><text x="54.5764%" y="303.50"></text></g><g><title>prep_new_page (11 samples, 0.05%)</title><rect x="54.3412%" y="277" width="0.0543%" height="15" fill="rgb(228,127,35)"/><text x="54.5912%" y="287.50"></text></g><g><title>kernel_init_free_pages (10 samples, 0.05%)</title><rect x="54.3461%" y="261" width="0.0494%" height="15" fill="rgb(245,102,45)"/><text x="54.5961%" y="271.50"></text></g><g><title>clear_page_erms (10 samples, 0.05%)</title><rect x="54.3461%" y="245" width="0.0494%" height="15" fill="rgb(214,1,49)"/><text x="54.5961%" y="255.50"></text></g><g><title>cgroup_throttle_swaprate (3 samples, 0.01%)</title><rect x="54.3955%" y="325" width="0.0148%" height="15" fill="rgb(226,163,40)"/><text x="54.6455%" y="335.50"></text></g><g><title>lru_cache_add (6 samples, 0.03%)</title><rect x="54.4103%" y="325" width="0.0296%" height="15" fill="rgb(239,212,28)"/><text x="54.6603%" y="335.50"></text></g><g><title>pagevec_lru_move_fn (6 samples, 0.03%)</title><rect x="54.4103%" y="309" width="0.0296%" height="15" fill="rgb(220,20,13)"/><text x="54.6603%" y="319.50"></text></g><g><title>__pagevec_lru_add_fn (5 samples, 0.02%)</title><rect x="54.4153%" y="293" width="0.0247%" height="15" fill="rgb(210,164,35)"/><text x="54.6653%" y="303.50"></text></g><g><title>handle_mm_fault (30 samples, 0.15%)</title><rect x="54.3066%" y="341" width="0.1482%" height="15" fill="rgb(248,109,41)"/><text x="54.5566%" y="351.50"></text></g><g><title>do_user_addr_fault (33 samples, 0.16%)</title><rect x="54.2967%" y="357" width="0.1630%" height="15" fill="rgb(238,23,50)"/><text x="54.5467%" y="367.50"></text></g><g><title>exc_page_fault (34 samples, 0.17%)</title><rect x="54.2967%" y="373" width="0.1679%" height="15" fill="rgb(211,48,49)"/><text x="54.5467%" y="383.50"></text></g><g><title>asm_exc_page_fault (55 samples, 0.27%)</title><rect x="54.2720%" y="389" width="0.2716%" height="15" fill="rgb(223,36,21)"/><text x="54.5220%" y="399.50"></text></g><g><title>irqentry_exit_to_user_mode (16 samples, 0.08%)</title><rect x="54.4646%" y="373" width="0.0790%" height="15" fill="rgb(207,123,46)"/><text x="54.7146%" y="383.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::sink::EventSink&gt;::feed (201 samples, 0.99%)</title><rect x="53.6349%" y="453" width="0.9927%" height="15" fill="rgb(240,218,32)"/><text x="53.8849%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (169 samples, 0.83%)</title><rect x="53.7930%" y="437" width="0.8347%" height="15" fill="rgb(252,5,43)"/><text x="54.0430%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (163 samples, 0.81%)</title><rect x="53.8226%" y="421" width="0.8050%" height="15" fill="rgb(252,84,19)"/><text x="54.0726%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (107 samples, 0.53%)</title><rect x="54.0992%" y="405" width="0.5284%" height="15" fill="rgb(243,152,39)"/><text x="54.3492%" y="415.50"></text></g><g><title>error_entry (17 samples, 0.08%)</title><rect x="54.5437%" y="389" width="0.0840%" height="15" fill="rgb(234,160,15)"/><text x="54.7937%" y="399.50"></text></g><g><title>sync_regs (9 samples, 0.04%)</title><rect x="54.5832%" y="373" width="0.0444%" height="15" fill="rgb(237,34,20)"/><text x="54.8332%" y="383.50"></text></g><g><title>handle_mm_fault (3 samples, 0.01%)</title><rect x="55.7487%" y="325" width="0.0148%" height="15" fill="rgb(229,97,13)"/><text x="55.9987%" y="335.50"></text></g><g><title>exc_page_fault (4 samples, 0.02%)</title><rect x="55.7487%" y="357" width="0.0198%" height="15" fill="rgb(234,71,50)"/><text x="55.9987%" y="367.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.02%)</title><rect x="55.7487%" y="341" width="0.0198%" height="15" fill="rgb(253,155,4)"/><text x="55.9987%" y="351.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.03%)</title><rect x="55.7487%" y="373" width="0.0296%" height="15" fill="rgb(222,185,37)"/><text x="55.9987%" y="383.50"></text></g><g><title>__irqentry_text_end (8 samples, 0.04%)</title><rect x="55.8228%" y="357" width="0.0395%" height="15" fill="rgb(251,177,13)"/><text x="56.0728%" y="367.50"></text></g><g><title>__list_del_entry_valid (7 samples, 0.03%)</title><rect x="55.9512%" y="245" width="0.0346%" height="15" fill="rgb(250,179,40)"/><text x="56.2012%" y="255.50"></text></g><g><title>alloc_pages_vma (20 samples, 0.10%)</title><rect x="55.9068%" y="293" width="0.0988%" height="15" fill="rgb(242,44,2)"/><text x="56.1568%" y="303.50"></text></g><g><title>__alloc_pages_nodemask (19 samples, 0.09%)</title><rect x="55.9117%" y="277" width="0.0938%" height="15" fill="rgb(216,177,13)"/><text x="56.1617%" y="287.50"></text></g><g><title>get_page_from_freelist (16 samples, 0.08%)</title><rect x="55.9265%" y="261" width="0.0790%" height="15" fill="rgb(216,106,43)"/><text x="56.1765%" y="271.50"></text></g><g><title>prep_new_page (4 samples, 0.02%)</title><rect x="55.9858%" y="245" width="0.0198%" height="15" fill="rgb(216,183,2)"/><text x="56.2358%" y="255.50"></text></g><g><title>kernel_init_free_pages (4 samples, 0.02%)</title><rect x="55.9858%" y="229" width="0.0198%" height="15" fill="rgb(249,75,3)"/><text x="56.2358%" y="239.50"></text></g><g><title>clear_page_erms (4 samples, 0.02%)</title><rect x="55.9858%" y="213" width="0.0198%" height="15" fill="rgb(219,67,39)"/><text x="56.2358%" y="223.50"></text></g><g><title>lru_cache_add (6 samples, 0.03%)</title><rect x="56.0154%" y="293" width="0.0296%" height="15" fill="rgb(253,228,2)"/><text x="56.2654%" y="303.50"></text></g><g><title>pagevec_lru_move_fn (5 samples, 0.02%)</title><rect x="56.0203%" y="277" width="0.0247%" height="15" fill="rgb(235,138,27)"/><text x="56.2703%" y="287.50"></text></g><g><title>__pagevec_lru_add_fn (5 samples, 0.02%)</title><rect x="56.0203%" y="261" width="0.0247%" height="15" fill="rgb(236,97,51)"/><text x="56.2703%" y="271.50"></text></g><g><title>mem_cgroup_charge (5 samples, 0.02%)</title><rect x="56.0450%" y="293" width="0.0247%" height="15" fill="rgb(240,80,30)"/><text x="56.2950%" y="303.50"></text></g><g><title>exc_page_fault (46 samples, 0.23%)</title><rect x="55.8623%" y="341" width="0.2272%" height="15" fill="rgb(230,178,19)"/><text x="56.1123%" y="351.50"></text></g><g><title>do_user_addr_fault (46 samples, 0.23%)</title><rect x="55.8623%" y="325" width="0.2272%" height="15" fill="rgb(210,190,27)"/><text x="56.1123%" y="335.50"></text></g><g><title>handle_mm_fault (43 samples, 0.21%)</title><rect x="55.8771%" y="309" width="0.2124%" height="15" fill="rgb(222,107,31)"/><text x="56.1271%" y="319.50"></text></g><g><title>page_add_new_anon_rmap (4 samples, 0.02%)</title><rect x="56.0697%" y="293" width="0.0198%" height="15" fill="rgb(216,127,34)"/><text x="56.3197%" y="303.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.01%)</title><rect x="56.0747%" y="277" width="0.0148%" height="15" fill="rgb(234,116,52)"/><text x="56.3247%" y="287.50"></text></g><g><title>__mod_node_page_state (3 samples, 0.01%)</title><rect x="56.0747%" y="261" width="0.0148%" height="15" fill="rgb(222,124,15)"/><text x="56.3247%" y="271.50"></text></g><g><title>asm_exc_page_fault (55 samples, 0.27%)</title><rect x="55.8623%" y="357" width="0.2716%" height="15" fill="rgb(231,179,28)"/><text x="56.1123%" y="367.50"></text></g><g><title>irqentry_exit_to_user_mode (8 samples, 0.04%)</title><rect x="56.0944%" y="341" width="0.0395%" height="15" fill="rgb(226,93,45)"/><text x="56.3444%" y="351.50"></text></g><g><title>error_entry (7 samples, 0.03%)</title><rect x="56.1389%" y="357" width="0.0346%" height="15" fill="rgb(215,8,51)"/><text x="56.3889%" y="367.50"></text></g><g><title>sync_regs (7 samples, 0.03%)</title><rect x="56.1389%" y="341" width="0.0346%" height="15" fill="rgb(223,106,5)"/><text x="56.3889%" y="351.50"></text></g><g><title>change_protection (4 samples, 0.02%)</title><rect x="56.2179%" y="245" width="0.0198%" height="15" fill="rgb(250,191,5)"/><text x="56.4679%" y="255.50"></text></g><g><title>__perf_event_header__init_id (3 samples, 0.01%)</title><rect x="56.3068%" y="181" width="0.0148%" height="15" fill="rgb(242,132,44)"/><text x="56.5568%" y="191.50"></text></g><g><title>perf_output_copy (4 samples, 0.02%)</title><rect x="56.3315%" y="181" width="0.0198%" height="15" fill="rgb(251,152,29)"/><text x="56.5815%" y="191.50"></text></g><g><title>perf_iterate_sb (23 samples, 0.11%)</title><rect x="56.2475%" y="229" width="0.1136%" height="15" fill="rgb(218,179,5)"/><text x="56.4975%" y="239.50"></text></g><g><title>perf_iterate_ctx (19 samples, 0.09%)</title><rect x="56.2673%" y="213" width="0.0938%" height="15" fill="rgb(227,67,19)"/><text x="56.5173%" y="223.50"></text></g><g><title>perf_event_mmap_output (13 samples, 0.06%)</title><rect x="56.2969%" y="197" width="0.0642%" height="15" fill="rgb(233,119,31)"/><text x="56.5469%" y="207.50"></text></g><g><title>perf_event_mmap (26 samples, 0.13%)</title><rect x="56.2377%" y="245" width="0.1284%" height="15" fill="rgb(241,120,22)"/><text x="56.4877%" y="255.50"></text></g><g><title>__vma_adjust (5 samples, 0.02%)</title><rect x="56.3661%" y="229" width="0.0247%" height="15" fill="rgb(224,102,30)"/><text x="56.6161%" y="239.50"></text></g><g><title>mprotect_fixup (38 samples, 0.19%)</title><rect x="56.2130%" y="261" width="0.1877%" height="15" fill="rgb(210,164,37)"/><text x="56.4630%" y="271.50"></text></g><g><title>vma_merge (7 samples, 0.03%)</title><rect x="56.3661%" y="245" width="0.0346%" height="15" fill="rgb(226,191,16)"/><text x="56.6161%" y="255.50"></text></g><g><title>__x64_sys_mprotect (45 samples, 0.22%)</title><rect x="56.1883%" y="293" width="0.2222%" height="15" fill="rgb(214,40,45)"/><text x="56.4383%" y="303.50"></text></g><g><title>do_mprotect_pkey (44 samples, 0.22%)</title><rect x="56.1932%" y="277" width="0.2173%" height="15" fill="rgb(244,29,26)"/><text x="56.4432%" y="287.50"></text></g><g><title>do_syscall_64 (46 samples, 0.23%)</title><rect x="56.1883%" y="309" width="0.2272%" height="15" fill="rgb(216,16,5)"/><text x="56.4383%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (62 samples, 0.31%)</title><rect x="56.1833%" y="325" width="0.3062%" height="15" fill="rgb(249,76,35)"/><text x="56.4333%" y="335.50"></text></g><g><title>syscall_exit_to_user_mode (15 samples, 0.07%)</title><rect x="56.4154%" y="309" width="0.0741%" height="15" fill="rgb(207,11,44)"/><text x="56.6654%" y="319.50"></text></g><g><title>_int_malloc (175 samples, 0.86%)</title><rect x="55.6549%" y="389" width="0.8643%" height="15" fill="rgb(228,190,49)"/><text x="55.9049%" y="399.50"></text></g><g><title>sysmalloc (150 samples, 0.74%)</title><rect x="55.7783%" y="373" width="0.7408%" height="15" fill="rgb(214,173,12)"/><text x="56.0283%" y="383.50"></text></g><g><title>grow_heap (70 samples, 0.35%)</title><rect x="56.1734%" y="357" width="0.3457%" height="15" fill="rgb(218,26,35)"/><text x="56.4234%" y="367.50"></text></g><g><title>__GI___mprotect (69 samples, 0.34%)</title><rect x="56.1784%" y="341" width="0.3408%" height="15" fill="rgb(220,200,19)"/><text x="56.4284%" y="351.50"></text></g><g><title>syscall_return_via_sysret (5 samples, 0.02%)</title><rect x="56.4945%" y="325" width="0.0247%" height="15" fill="rgb(239,95,49)"/><text x="56.7445%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (232 samples, 1.15%)</title><rect x="55.3882%" y="421" width="1.1458%" height="15" fill="rgb(235,85,53)"/><text x="55.6382%" y="431.50"></text></g><g><title>__GI___libc_malloc (198 samples, 0.98%)</title><rect x="55.5561%" y="405" width="0.9779%" height="15" fill="rgb(233,133,31)"/><text x="55.8061%" y="415.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (5 samples, 0.02%)</title><rect x="56.8698%" y="389" width="0.0247%" height="15" fill="rgb(218,25,20)"/><text x="57.1198%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.16%)</title><rect x="56.7710%" y="405" width="0.1580%" height="15" fill="rgb(252,210,38)"/><text x="57.0210%" y="415.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_slice (7 samples, 0.03%)</title><rect x="56.8945%" y="389" width="0.0346%" height="15" fill="rgb(242,134,21)"/><text x="57.1445%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (19 samples, 0.09%)</title><rect x="56.9735%" y="389" width="0.0938%" height="15" fill="rgb(213,28,48)"/><text x="57.2235%" y="399.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.05%)</title><rect x="57.1414%" y="357" width="0.0494%" height="15" fill="rgb(250,196,2)"/><text x="57.3914%" y="367.50"></text></g><g><title>tokio::runtime::task::raw::try_read_output (4 samples, 0.02%)</title><rect x="57.1711%" y="341" width="0.0198%" height="15" fill="rgb(227,5,17)"/><text x="57.4211%" y="351.50"></text></g><g><title>__memmove_avx_unaligned_erms (38 samples, 0.19%)</title><rect x="57.2007%" y="357" width="0.1877%" height="15" fill="rgb(221,226,24)"/><text x="57.4507%" y="367.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.02%)</title><rect x="57.3933%" y="341" width="0.0198%" height="15" fill="rgb(211,5,48)"/><text x="57.6433%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.02%)</title><rect x="57.4131%" y="341" width="0.0247%" height="15" fill="rgb(219,150,6)"/><text x="57.6631%" y="351.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (9 samples, 0.04%)</title><rect x="57.4822%" y="325" width="0.0444%" height="15" fill="rgb(251,46,16)"/><text x="57.7322%" y="335.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (4 samples, 0.02%)</title><rect x="57.5069%" y="309" width="0.0198%" height="15" fill="rgb(220,204,40)"/><text x="57.7569%" y="319.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.01%)</title><rect x="57.5464%" y="309" width="0.0148%" height="15" fill="rgb(211,85,2)"/><text x="57.7964%" y="319.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.01%)</title><rect x="57.5464%" y="293" width="0.0148%" height="15" fill="rgb(229,17,7)"/><text x="57.7964%" y="303.50"></text></g><g><title>std::sys::unix::time::inner::now (3 samples, 0.01%)</title><rect x="57.5464%" y="277" width="0.0148%" height="15" fill="rgb(239,72,28)"/><text x="57.7964%" y="287.50"></text></g><g><title>__GI___clock_gettime (3 samples, 0.01%)</title><rect x="57.5464%" y="261" width="0.0148%" height="15" fill="rgb(230,47,54)"/><text x="57.7964%" y="271.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.02%)</title><rect x="57.5711%" y="293" width="0.0247%" height="15" fill="rgb(214,50,8)"/><text x="57.8211%" y="303.50"></text></g><g><title>mark_wake_futex (5 samples, 0.02%)</title><rect x="57.6600%" y="213" width="0.0247%" height="15" fill="rgb(216,198,43)"/><text x="57.9100%" y="223.50"></text></g><g><title>select_task_rq_fair (9 samples, 0.04%)</title><rect x="57.7440%" y="181" width="0.0444%" height="15" fill="rgb(234,20,35)"/><text x="57.9940%" y="191.50"></text></g><g><title>available_idle_cpu (4 samples, 0.02%)</title><rect x="57.7687%" y="165" width="0.0198%" height="15" fill="rgb(254,45,19)"/><text x="58.0187%" y="175.50"></text></g><g><title>reweight_entity (5 samples, 0.02%)</title><rect x="57.8971%" y="133" width="0.0247%" height="15" fill="rgb(219,14,44)"/><text x="58.1471%" y="143.50"></text></g><g><title>enqueue_task_fair (33 samples, 0.16%)</title><rect x="57.8082%" y="165" width="0.1630%" height="15" fill="rgb(217,220,26)"/><text x="58.0582%" y="175.50"></text></g><g><title>enqueue_entity (22 samples, 0.11%)</title><rect x="57.8625%" y="149" width="0.1087%" height="15" fill="rgb(213,158,28)"/><text x="58.1125%" y="159.50"></text></g><g><title>update_load_avg (7 samples, 0.03%)</title><rect x="57.9366%" y="133" width="0.0346%" height="15" fill="rgb(252,51,52)"/><text x="58.1866%" y="143.50"></text></g><g><title>__update_load_avg_cfs_rq (3 samples, 0.01%)</title><rect x="57.9563%" y="117" width="0.0148%" height="15" fill="rgb(246,89,16)"/><text x="58.2063%" y="127.50"></text></g><g><title>ttwu_do_activate (77 samples, 0.38%)</title><rect x="57.7884%" y="181" width="0.3803%" height="15" fill="rgb(216,158,49)"/><text x="58.0384%" y="191.50"></text></g><g><title>psi_task_change (40 samples, 0.20%)</title><rect x="57.9712%" y="165" width="0.1976%" height="15" fill="rgb(236,107,19)"/><text x="58.2212%" y="175.50"></text></g><g><title>psi_group_change (34 samples, 0.17%)</title><rect x="58.0008%" y="149" width="0.1679%" height="15" fill="rgb(228,185,30)"/><text x="58.2508%" y="159.50"></text></g><g><title>record_times (5 samples, 0.02%)</title><rect x="58.1440%" y="133" width="0.0247%" height="15" fill="rgb(246,134,8)"/><text x="58.3940%" y="143.50"></text></g><g><title>ttwu_do_wakeup (9 samples, 0.04%)</title><rect x="58.1687%" y="181" width="0.0444%" height="15" fill="rgb(214,143,50)"/><text x="58.4187%" y="191.50"></text></g><g><title>check_preempt_curr (8 samples, 0.04%)</title><rect x="58.1736%" y="165" width="0.0395%" height="15" fill="rgb(228,75,8)"/><text x="58.4236%" y="175.50"></text></g><g><title>resched_curr (6 samples, 0.03%)</title><rect x="58.1835%" y="149" width="0.0296%" height="15" fill="rgb(207,175,4)"/><text x="58.4335%" y="159.50"></text></g><g><title>__x64_sys_futex (131 samples, 0.65%)</title><rect x="57.6008%" y="261" width="0.6470%" height="15" fill="rgb(205,108,24)"/><text x="57.8508%" y="271.50"></text></g><g><title>do_futex (130 samples, 0.64%)</title><rect x="57.6057%" y="245" width="0.6420%" height="15" fill="rgb(244,120,49)"/><text x="57.8557%" y="255.50"></text></g><g><title>futex_wake (128 samples, 0.63%)</title><rect x="57.6156%" y="229" width="0.6322%" height="15" fill="rgb(223,47,38)"/><text x="57.8656%" y="239.50"></text></g><g><title>wake_up_q (112 samples, 0.55%)</title><rect x="57.6946%" y="213" width="0.5531%" height="15" fill="rgb(229,179,11)"/><text x="57.9446%" y="223.50"></text></g><g><title>try_to_wake_up (109 samples, 0.54%)</title><rect x="57.7094%" y="197" width="0.5383%" height="15" fill="rgb(231,122,1)"/><text x="57.9594%" y="207.50"></text></g><g><title>update_rq_clock (6 samples, 0.03%)</title><rect x="58.2181%" y="181" width="0.0296%" height="15" fill="rgb(245,119,9)"/><text x="58.4681%" y="191.50"></text></g><g><title>sched_clock_cpu (4 samples, 0.02%)</title><rect x="58.2280%" y="165" width="0.0198%" height="15" fill="rgb(241,163,25)"/><text x="58.4780%" y="175.50"></text></g><g><title>sched_clock (4 samples, 0.02%)</title><rect x="58.2280%" y="149" width="0.0198%" height="15" fill="rgb(217,214,3)"/><text x="58.4780%" y="159.50"></text></g><g><title>native_sched_clock (4 samples, 0.02%)</title><rect x="58.2280%" y="133" width="0.0198%" height="15" fill="rgb(240,86,28)"/><text x="58.4780%" y="143.50"></text></g><g><title>do_syscall_64 (134 samples, 0.66%)</title><rect x="57.6008%" y="277" width="0.6618%" height="15" fill="rgb(215,47,9)"/><text x="57.8508%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (171 samples, 0.84%)</title><rect x="57.5958%" y="293" width="0.8445%" height="15" fill="rgb(252,25,45)"/><text x="57.8458%" y="303.50"></text></g><g><title>syscall_exit_to_user_mode (36 samples, 0.18%)</title><rect x="58.2625%" y="277" width="0.1778%" height="15" fill="rgb(251,164,9)"/><text x="58.5125%" y="287.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (221 samples, 1.09%)</title><rect x="57.3933%" y="357" width="1.0915%" height="15" fill="rgb(233,194,0)"/><text x="57.6433%" y="367.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn (212 samples, 1.05%)</title><rect x="57.4378%" y="341" width="1.0470%" height="15" fill="rgb(249,111,24)"/><text x="57.6878%" y="351.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (194 samples, 0.96%)</title><rect x="57.5267%" y="325" width="0.9581%" height="15" fill="rgb(250,223,3)"/><text x="57.7767%" y="335.50"></text></g><g><title>syscall (187 samples, 0.92%)</title><rect x="57.5612%" y="309" width="0.9235%" height="15" fill="rgb(236,178,37)"/><text x="57.8112%" y="319.50"></text></g><g><title>syscall_return_via_sysret (9 samples, 0.04%)</title><rect x="58.4403%" y="293" width="0.0444%" height="15" fill="rgb(241,158,50)"/><text x="58.6903%" y="303.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_write::AsyncWrite&gt;::poll_write (289 samples, 1.43%)</title><rect x="57.0772%" y="373" width="1.4273%" height="15" fill="rgb(213,121,41)"/><text x="57.3272%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (3 samples, 0.01%)</title><rect x="58.4897%" y="357" width="0.0148%" height="15" fill="rgb(240,92,3)"/><text x="58.7397%" y="367.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (321 samples, 1.59%)</title><rect x="56.9291%" y="405" width="1.5853%" height="15" fill="rgb(205,123,3)"/><text x="57.1791%" y="415.50"></text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (291 samples, 1.44%)</title><rect x="57.0772%" y="389" width="1.4372%" height="15" fill="rgb(205,97,47)"/><text x="57.3272%" y="399.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="58.5144%" y="405" width="0.0148%" height="15" fill="rgb(247,152,14)"/><text x="58.7644%" y="415.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="58.5441%" y="389" width="0.0198%" height="15" fill="rgb(248,195,53)"/><text x="58.7941%" y="399.50"></text></g><g><title>unlink_chunk (3 samples, 0.01%)</title><rect x="58.5490%" y="373" width="0.0148%" height="15" fill="rgb(226,201,16)"/><text x="58.7990%" y="383.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.06%)</title><rect x="58.5292%" y="405" width="0.0593%" height="15" fill="rgb(205,98,0)"/><text x="58.7792%" y="415.50"></text></g><g><title>tcache_get (4 samples, 0.02%)</title><rect x="58.5687%" y="389" width="0.0198%" height="15" fill="rgb(214,191,48)"/><text x="58.8187%" y="399.50"></text></g><g><title>_int_free (12 samples, 0.06%)</title><rect x="58.6181%" y="405" width="0.0593%" height="15" fill="rgb(237,112,39)"/><text x="58.8681%" y="415.50"></text></g><g><title>tcache_put (5 samples, 0.02%)</title><rect x="58.6527%" y="389" width="0.0247%" height="15" fill="rgb(247,203,27)"/><text x="58.9027%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (436 samples, 2.15%)</title><rect x="56.5340%" y="421" width="2.1533%" height="15" fill="rgb(235,124,28)"/><text x="56.7840%" y="431.50">&lt;..</text></g><g><title>__GI___libc_free (5 samples, 0.02%)</title><rect x="58.6873%" y="421" width="0.0247%" height="15" fill="rgb(208,207,46)"/><text x="58.9373%" y="431.50"></text></g><g><title>exc_page_fault (5 samples, 0.02%)</title><rect x="58.9046%" y="357" width="0.0247%" height="15" fill="rgb(234,176,4)"/><text x="59.1546%" y="367.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.02%)</title><rect x="58.9046%" y="341" width="0.0247%" height="15" fill="rgb(230,133,28)"/><text x="59.1546%" y="351.50"></text></g><g><title>handle_mm_fault (5 samples, 0.02%)</title><rect x="58.9046%" y="325" width="0.0247%" height="15" fill="rgb(211,137,40)"/><text x="59.1546%" y="335.50"></text></g><g><title>asm_exc_page_fault (8 samples, 0.04%)</title><rect x="58.8996%" y="373" width="0.0395%" height="15" fill="rgb(254,35,13)"/><text x="59.1496%" y="383.50"></text></g><g><title>mprotect_fixup (3 samples, 0.01%)</title><rect x="58.9540%" y="277" width="0.0148%" height="15" fill="rgb(225,49,51)"/><text x="59.2040%" y="287.50"></text></g><g><title>perf_event_mmap (3 samples, 0.01%)</title><rect x="58.9540%" y="261" width="0.0148%" height="15" fill="rgb(251,10,15)"/><text x="59.2040%" y="271.50"></text></g><g><title>perf_iterate_sb (3 samples, 0.01%)</title><rect x="58.9540%" y="245" width="0.0148%" height="15" fill="rgb(228,207,15)"/><text x="59.2040%" y="255.50"></text></g><g><title>perf_iterate_ctx (3 samples, 0.01%)</title><rect x="58.9540%" y="229" width="0.0148%" height="15" fill="rgb(241,99,19)"/><text x="59.2040%" y="239.50"></text></g><g><title>do_syscall_64 (6 samples, 0.03%)</title><rect x="58.9441%" y="325" width="0.0296%" height="15" fill="rgb(207,104,49)"/><text x="59.1941%" y="335.50"></text></g><g><title>__x64_sys_mprotect (6 samples, 0.03%)</title><rect x="58.9441%" y="309" width="0.0296%" height="15" fill="rgb(234,99,18)"/><text x="59.1941%" y="319.50"></text></g><g><title>do_mprotect_pkey (6 samples, 0.03%)</title><rect x="58.9441%" y="293" width="0.0296%" height="15" fill="rgb(213,191,49)"/><text x="59.1941%" y="303.50"></text></g><g><title>_int_malloc (29 samples, 0.14%)</title><rect x="58.8354%" y="405" width="0.1432%" height="15" fill="rgb(210,226,19)"/><text x="59.0854%" y="415.50"></text></g><g><title>sysmalloc (17 samples, 0.08%)</title><rect x="58.8947%" y="389" width="0.0840%" height="15" fill="rgb(229,97,18)"/><text x="59.1447%" y="399.50"></text></g><g><title>grow_heap (7 samples, 0.03%)</title><rect x="58.9441%" y="373" width="0.0346%" height="15" fill="rgb(211,167,15)"/><text x="59.1941%" y="383.50"></text></g><g><title>__GI___mprotect (7 samples, 0.03%)</title><rect x="58.9441%" y="357" width="0.0346%" height="15" fill="rgb(210,169,34)"/><text x="59.1941%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="58.9441%" y="341" width="0.0346%" height="15" fill="rgb(241,121,31)"/><text x="59.1941%" y="351.50"></text></g><g><title>checked_request2size (3 samples, 0.01%)</title><rect x="58.9836%" y="405" width="0.0148%" height="15" fill="rgb(232,40,11)"/><text x="59.2336%" y="415.50"></text></g><g><title>__GI___libc_malloc (61 samples, 0.30%)</title><rect x="58.7120%" y="421" width="0.3013%" height="15" fill="rgb(205,86,26)"/><text x="58.9620%" y="431.50"></text></g><g><title>tcache_get (3 samples, 0.01%)</title><rect x="58.9984%" y="405" width="0.0148%" height="15" fill="rgb(231,126,28)"/><text x="59.2484%" y="415.50"></text></g><g><title>__rust_dealloc (4 samples, 0.02%)</title><rect x="59.0330%" y="421" width="0.0198%" height="15" fill="rgb(219,221,18)"/><text x="59.2830%" y="431.50"></text></g><g><title>_int_free (7 samples, 0.03%)</title><rect x="59.0527%" y="421" width="0.0346%" height="15" fill="rgb(211,40,0)"/><text x="59.3027%" y="431.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (3 samples, 0.01%)</title><rect x="59.1910%" y="405" width="0.0148%" height="15" fill="rgb(239,85,43)"/><text x="59.4410%" y="415.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.01%)</title><rect x="59.4232%" y="341" width="0.0148%" height="15" fill="rgb(231,55,21)"/><text x="59.6732%" y="351.50"></text></g><g><title>exc_page_fault (3 samples, 0.01%)</title><rect x="59.4232%" y="325" width="0.0148%" height="15" fill="rgb(225,184,43)"/><text x="59.6732%" y="335.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.01%)</title><rect x="59.4232%" y="309" width="0.0148%" height="15" fill="rgb(251,158,41)"/><text x="59.6732%" y="319.50"></text></g><g><title>handle_mm_fault (3 samples, 0.01%)</title><rect x="59.4232%" y="293" width="0.0148%" height="15" fill="rgb(234,159,37)"/><text x="59.6732%" y="303.50"></text></g><g><title>exc_page_fault (3 samples, 0.01%)</title><rect x="59.4577%" y="309" width="0.0148%" height="15" fill="rgb(216,204,22)"/><text x="59.7077%" y="319.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.01%)</title><rect x="59.4577%" y="293" width="0.0148%" height="15" fill="rgb(214,17,3)"/><text x="59.7077%" y="303.50"></text></g><g><title>handle_mm_fault (3 samples, 0.01%)</title><rect x="59.4577%" y="277" width="0.0148%" height="15" fill="rgb(212,111,17)"/><text x="59.7077%" y="287.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.02%)</title><rect x="59.4577%" y="325" width="0.0198%" height="15" fill="rgb(221,157,24)"/><text x="59.7077%" y="335.50"></text></g><g><title>do_syscall_64 (6 samples, 0.03%)</title><rect x="59.4874%" y="277" width="0.0296%" height="15" fill="rgb(252,16,13)"/><text x="59.7374%" y="287.50"></text></g><g><title>__x64_sys_mprotect (6 samples, 0.03%)</title><rect x="59.4874%" y="261" width="0.0296%" height="15" fill="rgb(221,62,2)"/><text x="59.7374%" y="271.50"></text></g><g><title>do_mprotect_pkey (5 samples, 0.02%)</title><rect x="59.4923%" y="245" width="0.0247%" height="15" fill="rgb(247,87,22)"/><text x="59.7423%" y="255.50"></text></g><g><title>mprotect_fixup (4 samples, 0.02%)</title><rect x="59.4972%" y="229" width="0.0198%" height="15" fill="rgb(215,73,9)"/><text x="59.7472%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="59.4874%" y="293" width="0.0346%" height="15" fill="rgb(207,175,33)"/><text x="59.7374%" y="303.50"></text></g><g><title>sysmalloc (19 samples, 0.09%)</title><rect x="59.4478%" y="341" width="0.0938%" height="15" fill="rgb(243,129,54)"/><text x="59.6978%" y="351.50"></text></g><g><title>grow_heap (13 samples, 0.06%)</title><rect x="59.4775%" y="325" width="0.0642%" height="15" fill="rgb(227,119,45)"/><text x="59.7275%" y="335.50"></text></g><g><title>__GI___mprotect (12 samples, 0.06%)</title><rect x="59.4824%" y="309" width="0.0593%" height="15" fill="rgb(205,109,36)"/><text x="59.7324%" y="319.50"></text></g><g><title>syscall_return_via_sysret (3 samples, 0.01%)</title><rect x="59.5269%" y="293" width="0.0148%" height="15" fill="rgb(205,6,39)"/><text x="59.7769%" y="303.50"></text></g><g><title>_int_malloc (38 samples, 0.19%)</title><rect x="59.3589%" y="357" width="0.1877%" height="15" fill="rgb(221,32,16)"/><text x="59.6089%" y="367.50"></text></g><g><title>__GI___libc_malloc (63 samples, 0.31%)</title><rect x="59.2503%" y="373" width="0.3111%" height="15" fill="rgb(228,144,50)"/><text x="59.5003%" y="383.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (73 samples, 0.36%)</title><rect x="59.6009%" y="357" width="0.3605%" height="15" fill="rgb(229,201,53)"/><text x="59.8509%" y="367.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::MetaAuthorization&gt;::serialize (4 samples, 0.02%)</title><rect x="59.9615%" y="357" width="0.0198%" height="15" fill="rgb(249,153,27)"/><text x="60.2115%" y="367.50"></text></g><g><title>ate::spec::SerializationFormat::serialize (162 samples, 0.80%)</title><rect x="59.2058%" y="405" width="0.8001%" height="15" fill="rgb(227,106,25)"/><text x="59.4558%" y="415.50"></text></g><g><title>bincode::internal::serialize (156 samples, 0.77%)</title><rect x="59.2355%" y="389" width="0.7704%" height="15" fill="rgb(230,65,29)"/><text x="59.4855%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (90 samples, 0.44%)</title><rect x="59.5614%" y="373" width="0.4445%" height="15" fill="rgb(221,57,46)"/><text x="59.8114%" y="383.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::ReadOption&gt;::serialize (5 samples, 0.02%)</title><rect x="59.9812%" y="357" width="0.0247%" height="15" fill="rgb(229,161,17)"/><text x="60.2312%" y="367.50"></text></g><g><title>ate::event::EventData::as_header_raw (237 samples, 1.17%)</title><rect x="59.0873%" y="421" width="1.1705%" height="15" fill="rgb(222,213,11)"/><text x="59.3373%" y="431.50"></text></g><g><title>blake3::hash (51 samples, 0.25%)</title><rect x="60.0059%" y="405" width="0.2519%" height="15" fill="rgb(235,35,13)"/><text x="60.2559%" y="415.50"></text></g><g><title>blake3::ChunkState::update (28 samples, 0.14%)</title><rect x="60.1195%" y="389" width="0.1383%" height="15" fill="rgb(233,158,34)"/><text x="60.3695%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.03%)</title><rect x="60.2282%" y="373" width="0.0296%" height="15" fill="rgb(215,151,48)"/><text x="60.4782%" y="383.50"></text></g><g><title>bytes::bytes::shared_clone (27 samples, 0.13%)</title><rect x="60.2578%" y="421" width="0.1333%" height="15" fill="rgb(229,84,14)"/><text x="60.5078%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="61.4925%" y="405" width="0.0198%" height="15" fill="rgb(229,68,14)"/><text x="61.7425%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (13 samples, 0.06%)</title><rect x="61.5122%" y="405" width="0.0642%" height="15" fill="rgb(243,106,26)"/><text x="61.7622%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (73 samples, 0.36%)</title><rect x="61.7987%" y="389" width="0.3605%" height="15" fill="rgb(206,45,38)"/><text x="62.0487%" y="399.50"></text></g><g><title>tlb_finish_mmu (4 samples, 0.02%)</title><rect x="62.3123%" y="261" width="0.0198%" height="15" fill="rgb(226,6,15)"/><text x="62.5623%" y="271.50"></text></g><g><title>release_pages (4 samples, 0.02%)</title><rect x="62.3123%" y="245" width="0.0198%" height="15" fill="rgb(232,22,54)"/><text x="62.5623%" y="255.50"></text></g><g><title>free_unref_page_list (3 samples, 0.01%)</title><rect x="62.3173%" y="229" width="0.0148%" height="15" fill="rgb(229,222,32)"/><text x="62.5673%" y="239.50"></text></g><g><title>free_pcppages_bulk (3 samples, 0.01%)</title><rect x="62.3173%" y="213" width="0.0148%" height="15" fill="rgb(228,62,29)"/><text x="62.5673%" y="223.50"></text></g><g><title>free_pages_and_swap_cache (4 samples, 0.02%)</title><rect x="62.3617%" y="213" width="0.0198%" height="15" fill="rgb(251,103,34)"/><text x="62.6117%" y="223.50"></text></g><g><title>__GI_munmap (19 samples, 0.09%)</title><rect x="62.3123%" y="373" width="0.0938%" height="15" fill="rgb(233,12,30)"/><text x="62.5623%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (19 samples, 0.09%)</title><rect x="62.3123%" y="357" width="0.0938%" height="15" fill="rgb(238,52,0)"/><text x="62.5623%" y="367.50"></text></g><g><title>do_syscall_64 (19 samples, 0.09%)</title><rect x="62.3123%" y="341" width="0.0938%" height="15" fill="rgb(223,98,5)"/><text x="62.5623%" y="351.50"></text></g><g><title>__x64_sys_munmap (19 samples, 0.09%)</title><rect x="62.3123%" y="325" width="0.0938%" height="15" fill="rgb(228,75,37)"/><text x="62.5623%" y="335.50"></text></g><g><title>__vm_munmap (19 samples, 0.09%)</title><rect x="62.3123%" y="309" width="0.0938%" height="15" fill="rgb(205,115,49)"/><text x="62.5623%" y="319.50"></text></g><g><title>__do_munmap (19 samples, 0.09%)</title><rect x="62.3123%" y="293" width="0.0938%" height="15" fill="rgb(250,154,43)"/><text x="62.5623%" y="303.50"></text></g><g><title>unmap_region (19 samples, 0.09%)</title><rect x="62.3123%" y="277" width="0.0938%" height="15" fill="rgb(226,43,29)"/><text x="62.5623%" y="287.50"></text></g><g><title>unmap_vmas (15 samples, 0.07%)</title><rect x="62.3321%" y="261" width="0.0741%" height="15" fill="rgb(249,228,39)"/><text x="62.5821%" y="271.50"></text></g><g><title>unmap_page_range (15 samples, 0.07%)</title><rect x="62.3321%" y="245" width="0.0741%" height="15" fill="rgb(216,79,43)"/><text x="62.5821%" y="255.50"></text></g><g><title>tlb_flush_mmu (9 samples, 0.04%)</title><rect x="62.3617%" y="229" width="0.0444%" height="15" fill="rgb(228,95,12)"/><text x="62.6117%" y="239.50"></text></g><g><title>release_pages (5 samples, 0.02%)</title><rect x="62.3815%" y="213" width="0.0247%" height="15" fill="rgb(249,221,15)"/><text x="62.6315%" y="223.50"></text></g><g><title>free_unref_page_list (3 samples, 0.01%)</title><rect x="62.3913%" y="197" width="0.0148%" height="15" fill="rgb(233,34,13)"/><text x="62.6413%" y="207.50"></text></g><g><title>__irqentry_text_end (15 samples, 0.07%)</title><rect x="62.5543%" y="357" width="0.0741%" height="15" fill="rgb(214,103,39)"/><text x="62.8043%" y="367.50"></text></g><g><title>__pte_alloc (3 samples, 0.01%)</title><rect x="62.7420%" y="293" width="0.0148%" height="15" fill="rgb(251,126,39)"/><text x="62.9920%" y="303.50"></text></g><g><title>pte_alloc_one (3 samples, 0.01%)</title><rect x="62.7420%" y="277" width="0.0148%" height="15" fill="rgb(214,216,36)"/><text x="62.9920%" y="287.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.01%)</title><rect x="62.7420%" y="261" width="0.0148%" height="15" fill="rgb(220,221,8)"/><text x="62.9920%" y="271.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (3 samples, 0.01%)</title><rect x="62.7420%" y="245" width="0.0148%" height="15" fill="rgb(240,216,3)"/><text x="62.9920%" y="255.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.02%)</title><rect x="62.7568%" y="293" width="0.0198%" height="15" fill="rgb(232,218,17)"/><text x="63.0068%" y="303.50"></text></g><g><title>get_page_from_freelist (11 samples, 0.05%)</title><rect x="62.7815%" y="245" width="0.0543%" height="15" fill="rgb(229,163,45)"/><text x="63.0315%" y="255.50"></text></g><g><title>prep_new_page (8 samples, 0.04%)</title><rect x="62.7963%" y="229" width="0.0395%" height="15" fill="rgb(231,110,42)"/><text x="63.0463%" y="239.50"></text></g><g><title>kernel_init_free_pages (8 samples, 0.04%)</title><rect x="62.7963%" y="213" width="0.0395%" height="15" fill="rgb(208,170,48)"/><text x="63.0463%" y="223.50"></text></g><g><title>clear_page_erms (8 samples, 0.04%)</title><rect x="62.7963%" y="197" width="0.0395%" height="15" fill="rgb(239,116,25)"/><text x="63.0463%" y="207.50"></text></g><g><title>isolate_lru_pages (7 samples, 0.03%)</title><rect x="62.8753%" y="165" width="0.0346%" height="15" fill="rgb(219,200,50)"/><text x="63.1253%" y="175.50"></text></g><g><title>__list_del_entry_valid (5 samples, 0.02%)</title><rect x="62.8852%" y="149" width="0.0247%" height="15" fill="rgb(245,200,0)"/><text x="63.1352%" y="159.50"></text></g><g><title>__delete_from_page_cache (3 samples, 0.01%)</title><rect x="62.9247%" y="133" width="0.0148%" height="15" fill="rgb(245,119,33)"/><text x="63.1747%" y="143.50"></text></g><g><title>__remove_mapping (6 samples, 0.03%)</title><rect x="62.9247%" y="149" width="0.0296%" height="15" fill="rgb(231,125,12)"/><text x="63.1747%" y="159.50"></text></g><g><title>page_referenced (5 samples, 0.02%)</title><rect x="62.9593%" y="149" width="0.0247%" height="15" fill="rgb(216,96,41)"/><text x="63.2093%" y="159.50"></text></g><g><title>rmap_walk_file (5 samples, 0.02%)</title><rect x="62.9593%" y="133" width="0.0247%" height="15" fill="rgb(248,43,45)"/><text x="63.2093%" y="143.50"></text></g><g><title>page_referenced_one (5 samples, 0.02%)</title><rect x="62.9593%" y="117" width="0.0247%" height="15" fill="rgb(217,222,7)"/><text x="63.2093%" y="127.50"></text></g><g><title>page_vma_mapped_walk (4 samples, 0.02%)</title><rect x="62.9642%" y="101" width="0.0198%" height="15" fill="rgb(233,28,6)"/><text x="63.2142%" y="111.50"></text></g><g><title>shrink_lruvec (30 samples, 0.15%)</title><rect x="62.8457%" y="197" width="0.1482%" height="15" fill="rgb(231,218,15)"/><text x="63.0957%" y="207.50"></text></g><g><title>shrink_inactive_list (24 samples, 0.12%)</title><rect x="62.8753%" y="181" width="0.1185%" height="15" fill="rgb(226,171,48)"/><text x="63.1253%" y="191.50"></text></g><g><title>shrink_page_list (16 samples, 0.08%)</title><rect x="62.9149%" y="165" width="0.0790%" height="15" fill="rgb(235,201,9)"/><text x="63.1649%" y="175.50"></text></g><g><title>cpumask_next (4 samples, 0.02%)</title><rect x="63.0284%" y="149" width="0.0198%" height="15" fill="rgb(217,80,15)"/><text x="63.2784%" y="159.50"></text></g><g><title>count_shadow_nodes (7 samples, 0.03%)</title><rect x="63.0186%" y="165" width="0.0346%" height="15" fill="rgb(219,152,8)"/><text x="63.2686%" y="175.50"></text></g><g><title>__i915_gem_object_put_pages (5 samples, 0.02%)</title><rect x="63.0680%" y="133" width="0.0247%" height="15" fill="rgb(243,107,38)"/><text x="63.3180%" y="143.50"></text></g><g><title>shmem_put_pages (4 samples, 0.02%)</title><rect x="63.0729%" y="117" width="0.0198%" height="15" fill="rgb(231,17,5)"/><text x="63.3229%" y="127.50"></text></g><g><title>i915_gem_shrinker_scan (7 samples, 0.03%)</title><rect x="63.0630%" y="165" width="0.0346%" height="15" fill="rgb(209,25,54)"/><text x="63.3130%" y="175.50"></text></g><g><title>i915_gem_shrink (7 samples, 0.03%)</title><rect x="63.0630%" y="149" width="0.0346%" height="15" fill="rgb(219,0,2)"/><text x="63.3130%" y="159.50"></text></g><g><title>__pagevec_release (5 samples, 0.02%)</title><rect x="63.1075%" y="69" width="0.0247%" height="15" fill="rgb(246,9,5)"/><text x="63.3575%" y="79.50"></text></g><g><title>release_pages (5 samples, 0.02%)</title><rect x="63.1075%" y="53" width="0.0247%" height="15" fill="rgb(226,159,4)"/><text x="63.3575%" y="63.50"></text></g><g><title>free_unref_page_list (3 samples, 0.01%)</title><rect x="63.1173%" y="37" width="0.0148%" height="15" fill="rgb(219,175,34)"/><text x="63.3673%" y="47.50"></text></g><g><title>__invalidate_mapping_pages (7 samples, 0.03%)</title><rect x="63.1075%" y="85" width="0.0346%" height="15" fill="rgb(236,10,46)"/><text x="63.3575%" y="95.50"></text></g><g><title>do_shrink_slab (27 samples, 0.13%)</title><rect x="63.0136%" y="181" width="0.1333%" height="15" fill="rgb(240,211,16)"/><text x="63.2636%" y="191.50"></text></g><g><title>super_cache_scan (9 samples, 0.04%)</title><rect x="63.1025%" y="165" width="0.0444%" height="15" fill="rgb(205,3,43)"/><text x="63.3525%" y="175.50"></text></g><g><title>prune_icache_sb (9 samples, 0.04%)</title><rect x="63.1025%" y="149" width="0.0444%" height="15" fill="rgb(245,7,22)"/><text x="63.3525%" y="159.50"></text></g><g><title>list_lru_walk_one (8 samples, 0.04%)</title><rect x="63.1075%" y="133" width="0.0395%" height="15" fill="rgb(239,132,32)"/><text x="63.3575%" y="143.50"></text></g><g><title>__list_lru_walk_one (8 samples, 0.04%)</title><rect x="63.1075%" y="117" width="0.0395%" height="15" fill="rgb(228,202,34)"/><text x="63.3575%" y="127.50"></text></g><g><title>inode_lru_isolate (8 samples, 0.04%)</title><rect x="63.1075%" y="101" width="0.0395%" height="15" fill="rgb(254,200,22)"/><text x="63.3575%" y="111.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (78 samples, 0.39%)</title><rect x="62.7815%" y="261" width="0.3852%" height="15" fill="rgb(219,10,39)"/><text x="63.0315%" y="271.50"></text></g><g><title>try_to_free_pages (67 samples, 0.33%)</title><rect x="62.8358%" y="245" width="0.3309%" height="15" fill="rgb(226,210,39)"/><text x="63.0858%" y="255.50"></text></g><g><title>do_try_to_free_pages (67 samples, 0.33%)</title><rect x="62.8358%" y="229" width="0.3309%" height="15" fill="rgb(208,219,16)"/><text x="63.0858%" y="239.50"></text></g><g><title>shrink_node (67 samples, 0.33%)</title><rect x="62.8358%" y="213" width="0.3309%" height="15" fill="rgb(216,158,51)"/><text x="63.0858%" y="223.50"></text></g><g><title>shrink_slab (35 samples, 0.17%)</title><rect x="62.9939%" y="197" width="0.1729%" height="15" fill="rgb(233,14,44)"/><text x="63.2439%" y="207.50"></text></g><g><title>__list_del_entry_valid (3 samples, 0.01%)</title><rect x="63.1914%" y="245" width="0.0148%" height="15" fill="rgb(237,97,39)"/><text x="63.4414%" y="255.50"></text></g><g><title>alloc_pages_vma (114 samples, 0.56%)</title><rect x="62.7766%" y="293" width="0.5630%" height="15" fill="rgb(218,198,43)"/><text x="63.0266%" y="303.50"></text></g><g><title>__alloc_pages_nodemask (114 samples, 0.56%)</title><rect x="62.7766%" y="277" width="0.5630%" height="15" fill="rgb(231,104,20)"/><text x="63.0266%" y="287.50"></text></g><g><title>get_page_from_freelist (34 samples, 0.17%)</title><rect x="63.1717%" y="261" width="0.1679%" height="15" fill="rgb(254,36,13)"/><text x="63.4217%" y="271.50"></text></g><g><title>prep_new_page (25 samples, 0.12%)</title><rect x="63.2161%" y="245" width="0.1235%" height="15" fill="rgb(248,14,50)"/><text x="63.4661%" y="255.50"></text></g><g><title>kernel_init_free_pages (24 samples, 0.12%)</title><rect x="63.2211%" y="229" width="0.1185%" height="15" fill="rgb(217,107,29)"/><text x="63.4711%" y="239.50"></text></g><g><title>clear_page_erms (23 samples, 0.11%)</title><rect x="63.2260%" y="213" width="0.1136%" height="15" fill="rgb(251,169,33)"/><text x="63.4760%" y="223.50"></text></g><g><title>cgroup_throttle_swaprate (3 samples, 0.01%)</title><rect x="63.3396%" y="293" width="0.0148%" height="15" fill="rgb(217,108,32)"/><text x="63.5896%" y="303.50"></text></g><g><title>__pagevec_lru_add_fn (11 samples, 0.05%)</title><rect x="63.3544%" y="261" width="0.0543%" height="15" fill="rgb(219,66,42)"/><text x="63.6044%" y="271.50"></text></g><g><title>lru_cache_add (13 samples, 0.06%)</title><rect x="63.3544%" y="293" width="0.0642%" height="15" fill="rgb(206,180,7)"/><text x="63.6044%" y="303.50"></text></g><g><title>pagevec_lru_move_fn (13 samples, 0.06%)</title><rect x="63.3544%" y="277" width="0.0642%" height="15" fill="rgb(208,226,31)"/><text x="63.6044%" y="287.50"></text></g><g><title>mem_cgroup_charge (7 samples, 0.03%)</title><rect x="63.4235%" y="293" width="0.0346%" height="15" fill="rgb(218,26,49)"/><text x="63.6735%" y="303.50"></text></g><g><title>try_charge (3 samples, 0.01%)</title><rect x="63.4433%" y="277" width="0.0148%" height="15" fill="rgb(233,197,48)"/><text x="63.6933%" y="287.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.01%)</title><rect x="63.4680%" y="277" width="0.0148%" height="15" fill="rgb(252,181,51)"/><text x="63.7180%" y="287.50"></text></g><g><title>handle_mm_fault (165 samples, 0.81%)</title><rect x="62.6778%" y="309" width="0.8149%" height="15" fill="rgb(253,90,19)"/><text x="62.9278%" y="319.50"></text></g><g><title>page_add_new_anon_rmap (6 samples, 0.03%)</title><rect x="63.4631%" y="293" width="0.0296%" height="15" fill="rgb(215,171,30)"/><text x="63.7131%" y="303.50"></text></g><g><title>exc_page_fault (177 samples, 0.87%)</title><rect x="62.6383%" y="341" width="0.8742%" height="15" fill="rgb(214,222,9)"/><text x="62.8883%" y="351.50"></text></g><g><title>do_user_addr_fault (177 samples, 0.87%)</title><rect x="62.6383%" y="325" width="0.8742%" height="15" fill="rgb(223,3,22)"/><text x="62.8883%" y="335.50"></text></g><g><title>up_read (4 samples, 0.02%)</title><rect x="63.4927%" y="309" width="0.0198%" height="15" fill="rgb(225,196,46)"/><text x="63.7427%" y="319.50"></text></g><g><title>asm_exc_page_fault (223 samples, 1.10%)</title><rect x="62.6284%" y="357" width="1.1013%" height="15" fill="rgb(209,110,37)"/><text x="62.8784%" y="367.50"></text></g><g><title>irqentry_exit_to_user_mode (44 samples, 0.22%)</title><rect x="63.5124%" y="341" width="0.2173%" height="15" fill="rgb(249,89,12)"/><text x="63.7624%" y="351.50"></text></g><g><title>error_entry (28 samples, 0.14%)</title><rect x="63.7298%" y="357" width="0.1383%" height="15" fill="rgb(226,27,33)"/><text x="63.9798%" y="367.50"></text></g><g><title>sync_regs (15 samples, 0.07%)</title><rect x="63.7940%" y="341" width="0.0741%" height="15" fill="rgb(213,82,22)"/><text x="64.0440%" y="351.50"></text></g><g><title>__memmove_avx_unaligned_erms (296 samples, 1.46%)</title><rect x="62.4111%" y="373" width="1.4619%" height="15" fill="rgb(248,140,0)"/><text x="62.6611%" y="383.50"></text></g><g><title>__memset_avx2_erms (3 samples, 0.01%)</title><rect x="63.8730%" y="373" width="0.0148%" height="15" fill="rgb(228,106,3)"/><text x="64.1230%" y="383.50"></text></g><g><title>alloc_pages_vma (5 samples, 0.02%)</title><rect x="63.9125%" y="309" width="0.0247%" height="15" fill="rgb(209,23,37)"/><text x="64.1625%" y="319.50"></text></g><g><title>__alloc_pages_nodemask (5 samples, 0.02%)</title><rect x="63.9125%" y="293" width="0.0247%" height="15" fill="rgb(241,93,50)"/><text x="64.1625%" y="303.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.02%)</title><rect x="63.9125%" y="277" width="0.0247%" height="15" fill="rgb(253,46,43)"/><text x="64.1625%" y="287.50"></text></g><g><title>prep_new_page (3 samples, 0.01%)</title><rect x="63.9224%" y="261" width="0.0148%" height="15" fill="rgb(226,206,43)"/><text x="64.1724%" y="271.50"></text></g><g><title>exc_page_fault (13 samples, 0.06%)</title><rect x="63.8878%" y="357" width="0.0642%" height="15" fill="rgb(217,54,7)"/><text x="64.1378%" y="367.50"></text></g><g><title>do_user_addr_fault (12 samples, 0.06%)</title><rect x="63.8927%" y="341" width="0.0593%" height="15" fill="rgb(223,5,52)"/><text x="64.1427%" y="351.50"></text></g><g><title>handle_mm_fault (12 samples, 0.06%)</title><rect x="63.8927%" y="325" width="0.0593%" height="15" fill="rgb(206,52,46)"/><text x="64.1427%" y="335.50"></text></g><g><title>asm_exc_page_fault (16 samples, 0.08%)</title><rect x="63.8878%" y="373" width="0.0790%" height="15" fill="rgb(253,136,11)"/><text x="64.1378%" y="383.50"></text></g><g><title>irqentry_exit_to_user_mode (3 samples, 0.01%)</title><rect x="63.9520%" y="357" width="0.0148%" height="15" fill="rgb(208,106,33)"/><text x="64.2020%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (24 samples, 0.12%)</title><rect x="63.9668%" y="373" width="0.1185%" height="15" fill="rgb(206,54,4)"/><text x="64.2168%" y="383.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,918 samples, 9.47%)</title><rect x="54.6276%" y="453" width="9.4725%" height="15" fill="rgb(213,3,15)"/><text x="54.8776%" y="463.50">&lt;core::future:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,901 samples, 9.39%)</title><rect x="54.7116%" y="437" width="9.3886%" height="15" fill="rgb(252,211,39)"/><text x="54.9616%" y="447.50">&lt;core::future..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (749 samples, 3.70%)</title><rect x="60.4010%" y="421" width="3.6991%" height="15" fill="rgb(223,6,36)"/><text x="60.6510%" y="431.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (511 samples, 2.52%)</title><rect x="61.5765%" y="405" width="2.5237%" height="15" fill="rgb(252,169,45)"/><text x="61.8265%" y="415.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (393 samples, 1.94%)</title><rect x="62.1592%" y="389" width="1.9409%" height="15" fill="rgb(212,48,26)"/><text x="62.4092%" y="399.50">h..</text></g><g><title>error_entry (3 samples, 0.01%)</title><rect x="64.0853%" y="373" width="0.0148%" height="15" fill="rgb(251,102,48)"/><text x="64.3353%" y="383.50"></text></g><g><title>__GI___libc_free (6 samples, 0.03%)</title><rect x="64.1002%" y="453" width="0.0296%" height="15" fill="rgb(243,208,16)"/><text x="64.3502%" y="463.50"></text></g><g><title>_int_free (50 samples, 0.25%)</title><rect x="64.1545%" y="453" width="0.2469%" height="15" fill="rgb(219,96,24)"/><text x="64.4045%" y="463.50"></text></g><g><title>malloc_consolidate (11 samples, 0.05%)</title><rect x="64.3471%" y="437" width="0.0543%" height="15" fill="rgb(219,33,29)"/><text x="64.5971%" y="447.50"></text></g><g><title>unlink_chunk (9 samples, 0.04%)</title><rect x="64.3570%" y="421" width="0.0444%" height="15" fill="rgb(223,176,5)"/><text x="64.6070%" y="431.50"></text></g><g><title>alloc_pages_vma (6 samples, 0.03%)</title><rect x="64.4706%" y="309" width="0.0296%" height="15" fill="rgb(228,140,14)"/><text x="64.7206%" y="319.50"></text></g><g><title>__alloc_pages_nodemask (5 samples, 0.02%)</title><rect x="64.4755%" y="293" width="0.0247%" height="15" fill="rgb(217,179,31)"/><text x="64.7255%" y="303.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.02%)</title><rect x="64.4755%" y="277" width="0.0247%" height="15" fill="rgb(230,9,30)"/><text x="64.7255%" y="287.50"></text></g><g><title>prep_new_page (4 samples, 0.02%)</title><rect x="64.4804%" y="261" width="0.0198%" height="15" fill="rgb(230,136,20)"/><text x="64.7304%" y="271.50"></text></g><g><title>kernel_init_free_pages (4 samples, 0.02%)</title><rect x="64.4804%" y="245" width="0.0198%" height="15" fill="rgb(215,210,22)"/><text x="64.7304%" y="255.50"></text></g><g><title>clear_page_erms (4 samples, 0.02%)</title><rect x="64.4804%" y="229" width="0.0198%" height="15" fill="rgb(218,43,5)"/><text x="64.7304%" y="239.50"></text></g><g><title>mem_cgroup_charge (4 samples, 0.02%)</title><rect x="64.5101%" y="309" width="0.0198%" height="15" fill="rgb(216,11,5)"/><text x="64.7601%" y="319.50"></text></g><g><title>handle_mm_fault (16 samples, 0.08%)</title><rect x="64.4557%" y="325" width="0.0790%" height="15" fill="rgb(209,82,29)"/><text x="64.7057%" y="335.50"></text></g><g><title>exc_page_fault (17 samples, 0.08%)</title><rect x="64.4557%" y="357" width="0.0840%" height="15" fill="rgb(244,115,12)"/><text x="64.7057%" y="367.50"></text></g><g><title>do_user_addr_fault (17 samples, 0.08%)</title><rect x="64.4557%" y="341" width="0.0840%" height="15" fill="rgb(222,82,18)"/><text x="64.7057%" y="351.50"></text></g><g><title>asm_exc_page_fault (21 samples, 0.10%)</title><rect x="64.4557%" y="373" width="0.1037%" height="15" fill="rgb(249,227,8)"/><text x="64.7057%" y="383.50"></text></g><g><title>irqentry_exit_to_user_mode (4 samples, 0.02%)</title><rect x="64.5397%" y="357" width="0.0198%" height="15" fill="rgb(253,141,45)"/><text x="64.7897%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (34 samples, 0.17%)</title><rect x="64.4113%" y="389" width="0.1679%" height="15" fill="rgb(234,184,4)"/><text x="64.6613%" y="399.50"></text></g><g><title>error_entry (4 samples, 0.02%)</title><rect x="64.5595%" y="373" width="0.0198%" height="15" fill="rgb(218,194,23)"/><text x="64.8095%" y="383.50"></text></g><g><title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="64.6039%" y="293" width="0.0198%" height="15" fill="rgb(235,66,41)"/><text x="64.8539%" y="303.50"></text></g><g><title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="64.6039%" y="277" width="0.0198%" height="15" fill="rgb(245,217,1)"/><text x="64.8539%" y="287.50"></text></g><g><title>get_page_from_freelist (4 samples, 0.02%)</title><rect x="64.6039%" y="261" width="0.0198%" height="15" fill="rgb(229,91,1)"/><text x="64.8539%" y="271.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.02%)</title><rect x="64.6039%" y="357" width="0.0247%" height="15" fill="rgb(207,101,30)"/><text x="64.8539%" y="367.50"></text></g><g><title>exc_page_fault (5 samples, 0.02%)</title><rect x="64.6039%" y="341" width="0.0247%" height="15" fill="rgb(223,82,49)"/><text x="64.8539%" y="351.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.02%)</title><rect x="64.6039%" y="325" width="0.0247%" height="15" fill="rgb(218,167,17)"/><text x="64.8539%" y="335.50"></text></g><g><title>handle_mm_fault (5 samples, 0.02%)</title><rect x="64.6039%" y="309" width="0.0247%" height="15" fill="rgb(208,103,14)"/><text x="64.8539%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (50 samples, 0.25%)</title><rect x="64.4014%" y="453" width="0.2469%" height="15" fill="rgb(238,20,8)"/><text x="64.6514%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (49 samples, 0.24%)</title><rect x="64.4064%" y="437" width="0.2420%" height="15" fill="rgb(218,80,54)"/><text x="64.6564%" y="447.50"></text></g><g><title>__GI___libc_realloc (49 samples, 0.24%)</title><rect x="64.4064%" y="421" width="0.2420%" height="15" fill="rgb(240,144,17)"/><text x="64.6564%" y="431.50"></text></g><g><title>_int_realloc (49 samples, 0.24%)</title><rect x="64.4064%" y="405" width="0.2420%" height="15" fill="rgb(245,27,50)"/><text x="64.6564%" y="415.50"></text></g><g><title>_int_malloc (14 samples, 0.07%)</title><rect x="64.5792%" y="389" width="0.0691%" height="15" fill="rgb(251,51,7)"/><text x="64.8292%" y="399.50"></text></g><g><title>sysmalloc (11 samples, 0.05%)</title><rect x="64.5940%" y="373" width="0.0543%" height="15" fill="rgb(245,217,29)"/><text x="64.8440%" y="383.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="64.8064%" y="421" width="0.0148%" height="15" fill="rgb(221,176,29)"/><text x="65.0564%" y="431.50"></text></g><g><title>_int_free (16 samples, 0.08%)</title><rect x="64.8262%" y="421" width="0.0790%" height="15" fill="rgb(212,180,24)"/><text x="65.0762%" y="431.50"></text></g><g><title>malloc_consolidate (229 samples, 1.13%)</title><rect x="65.2015%" y="389" width="1.1310%" height="15" fill="rgb(254,24,2)"/><text x="65.4515%" y="399.50"></text></g><g><title>unlink_chunk (129 samples, 0.64%)</title><rect x="65.6954%" y="373" width="0.6371%" height="15" fill="rgb(230,100,2)"/><text x="65.9454%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::next_kv_unchecked_dealloc (339 samples, 1.67%)</title><rect x="64.9052%" y="421" width="1.6742%" height="15" fill="rgb(219,142,25)"/><text x="65.1552%" y="431.50"></text></g><g><title>_int_free (306 samples, 1.51%)</title><rect x="65.0682%" y="405" width="1.5113%" height="15" fill="rgb(240,73,43)"/><text x="65.3182%" y="415.50"></text></g><g><title>unlink_chunk (50 samples, 0.25%)</title><rect x="66.3325%" y="389" width="0.2469%" height="15" fill="rgb(214,114,15)"/><text x="66.5825%" y="399.50"></text></g><g><title>__GI___libc_free (15 samples, 0.07%)</title><rect x="66.7325%" y="405" width="0.0741%" height="15" fill="rgb(207,130,4)"/><text x="66.9825%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (456 samples, 2.25%)</title><rect x="64.6484%" y="437" width="2.2521%" height="15" fill="rgb(221,25,40)"/><text x="64.8984%" y="447.50">&lt;..</text></g><g><title>bytes::bytes::shared_drop (65 samples, 0.32%)</title><rect x="66.5794%" y="421" width="0.3210%" height="15" fill="rgb(241,184,7)"/><text x="66.8294%" y="431.50"></text></g><g><title>_int_free (19 samples, 0.09%)</title><rect x="66.8066%" y="405" width="0.0938%" height="15" fill="rgb(235,159,4)"/><text x="67.0566%" y="415.50"></text></g><g><title>__GI_munmap (5 samples, 0.02%)</title><rect x="66.9004%" y="437" width="0.0247%" height="15" fill="rgb(214,87,48)"/><text x="67.1504%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="66.9004%" y="421" width="0.0247%" height="15" fill="rgb(246,198,24)"/><text x="67.1504%" y="431.50"></text></g><g><title>do_syscall_64 (5 samples, 0.02%)</title><rect x="66.9004%" y="405" width="0.0247%" height="15" fill="rgb(209,66,40)"/><text x="67.1504%" y="415.50"></text></g><g><title>__x64_sys_munmap (5 samples, 0.02%)</title><rect x="66.9004%" y="389" width="0.0247%" height="15" fill="rgb(233,147,39)"/><text x="67.1504%" y="399.50"></text></g><g><title>__vm_munmap (5 samples, 0.02%)</title><rect x="66.9004%" y="373" width="0.0247%" height="15" fill="rgb(231,145,52)"/><text x="67.1504%" y="383.50"></text></g><g><title>__do_munmap (5 samples, 0.02%)</title><rect x="66.9004%" y="357" width="0.0247%" height="15" fill="rgb(206,20,26)"/><text x="67.1504%" y="367.50"></text></g><g><title>unmap_region (5 samples, 0.02%)</title><rect x="66.9004%" y="341" width="0.0247%" height="15" fill="rgb(238,220,4)"/><text x="67.1504%" y="351.50"></text></g><g><title>unmap_vmas (4 samples, 0.02%)</title><rect x="66.9054%" y="325" width="0.0198%" height="15" fill="rgb(252,195,42)"/><text x="67.1554%" y="335.50"></text></g><g><title>unmap_page_range (4 samples, 0.02%)</title><rect x="66.9054%" y="309" width="0.0198%" height="15" fill="rgb(209,10,6)"/><text x="67.1554%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.04%)</title><rect x="66.9251%" y="421" width="0.0395%" height="15" fill="rgb(229,3,52)"/><text x="67.1751%" y="431.50"></text></g><g><title>__GI_munmap (10 samples, 0.05%)</title><rect x="66.9646%" y="421" width="0.0494%" height="15" fill="rgb(253,49,37)"/><text x="67.2146%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 0.05%)</title><rect x="66.9646%" y="405" width="0.0494%" height="15" fill="rgb(240,103,49)"/><text x="67.2146%" y="415.50"></text></g><g><title>do_syscall_64 (10 samples, 0.05%)</title><rect x="66.9646%" y="389" width="0.0494%" height="15" fill="rgb(250,182,30)"/><text x="67.2146%" y="399.50"></text></g><g><title>__x64_sys_munmap (10 samples, 0.05%)</title><rect x="66.9646%" y="373" width="0.0494%" height="15" fill="rgb(248,8,30)"/><text x="67.2146%" y="383.50"></text></g><g><title>__vm_munmap (10 samples, 0.05%)</title><rect x="66.9646%" y="357" width="0.0494%" height="15" fill="rgb(237,120,30)"/><text x="67.2146%" y="367.50"></text></g><g><title>__do_munmap (10 samples, 0.05%)</title><rect x="66.9646%" y="341" width="0.0494%" height="15" fill="rgb(221,146,34)"/><text x="67.2146%" y="351.50"></text></g><g><title>unmap_region (10 samples, 0.05%)</title><rect x="66.9646%" y="325" width="0.0494%" height="15" fill="rgb(242,55,13)"/><text x="67.2146%" y="335.50"></text></g><g><title>unmap_vmas (9 samples, 0.04%)</title><rect x="66.9696%" y="309" width="0.0444%" height="15" fill="rgb(242,112,31)"/><text x="67.2196%" y="319.50"></text></g><g><title>unmap_page_range (9 samples, 0.04%)</title><rect x="66.9696%" y="293" width="0.0444%" height="15" fill="rgb(249,192,27)"/><text x="67.2196%" y="303.50"></text></g><g><title>tlb_flush_mmu (5 samples, 0.02%)</title><rect x="66.9893%" y="277" width="0.0247%" height="15" fill="rgb(208,204,44)"/><text x="67.2393%" y="287.50"></text></g><g><title>release_pages (4 samples, 0.02%)</title><rect x="66.9943%" y="261" width="0.0198%" height="15" fill="rgb(208,93,54)"/><text x="67.2443%" y="271.50"></text></g><g><title>__GI___libc_free (94 samples, 0.46%)</title><rect x="67.0980%" y="389" width="0.4642%" height="15" fill="rgb(242,1,31)"/><text x="67.3480%" y="399.50"></text></g><g><title>malloc_consolidate (172 samples, 0.85%)</title><rect x="68.1450%" y="373" width="0.8495%" height="15" fill="rgb(241,83,25)"/><text x="68.3950%" y="383.50"></text></g><g><title>unlink_chunk (54 samples, 0.27%)</title><rect x="68.7278%" y="357" width="0.2667%" height="15" fill="rgb(205,169,50)"/><text x="68.9778%" y="367.50"></text></g><g><title>_int_free (313 samples, 1.55%)</title><rect x="67.5622%" y="389" width="1.5458%" height="15" fill="rgb(239,186,37)"/><text x="67.8122%" y="399.50"></text></g><g><title>unlink_chunk (23 samples, 0.11%)</title><rect x="68.9945%" y="373" width="0.1136%" height="15" fill="rgb(205,221,10)"/><text x="69.2445%" y="383.50"></text></g><g><title>__GI___libc_free (120 samples, 0.59%)</title><rect x="69.5328%" y="373" width="0.5927%" height="15" fill="rgb(218,196,15)"/><text x="69.7828%" y="383.50"></text></g><g><title>malloc_consolidate (234 samples, 1.16%)</title><rect x="71.0194%" y="357" width="1.1557%" height="15" fill="rgb(218,196,35)"/><text x="71.2694%" y="367.50"></text></g><g><title>unlink_chunk (116 samples, 0.57%)</title><rect x="71.6021%" y="341" width="0.5729%" height="15" fill="rgb(233,63,24)"/><text x="71.8521%" y="351.50"></text></g><g><title>_int_free (572 samples, 2.82%)</title><rect x="70.1304%" y="373" width="2.8250%" height="15" fill="rgb(225,8,4)"/><text x="70.3804%" y="383.50">_i..</text></g><g><title>unlink_chunk (158 samples, 0.78%)</title><rect x="72.1750%" y="357" width="0.7803%" height="15" fill="rgb(234,105,35)"/><text x="72.4250%" y="367.50"></text></g><g><title>bytes::bytes::shared_drop (779 samples, 3.85%)</title><rect x="69.1130%" y="389" width="3.8473%" height="15" fill="rgb(236,21,32)"/><text x="69.3630%" y="399.50">byte..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,261 samples, 6.23%)</title><rect x="67.0140%" y="405" width="6.2278%" height="15" fill="rgb(228,109,6)"/><text x="67.2640%" y="415.50">&lt;hashbro..</text></g><g><title>core::ptr::drop_in_place (57 samples, 0.28%)</title><rect x="72.9603%" y="389" width="0.2815%" height="15" fill="rgb(229,215,31)"/><text x="73.2103%" y="399.50"></text></g><g><title>page_remove_rmap (5 samples, 0.02%)</title><rect x="73.2813%" y="261" width="0.0247%" height="15" fill="rgb(221,52,54)"/><text x="73.5313%" y="271.50"></text></g><g><title>__list_del_entry_valid (3 samples, 0.01%)</title><rect x="73.3159%" y="229" width="0.0148%" height="15" fill="rgb(252,129,43)"/><text x="73.5659%" y="239.50"></text></g><g><title>__free_one_page (4 samples, 0.02%)</title><rect x="73.3554%" y="197" width="0.0198%" height="15" fill="rgb(248,183,27)"/><text x="73.6054%" y="207.50"></text></g><g><title>free_pcppages_bulk (6 samples, 0.03%)</title><rect x="73.3505%" y="213" width="0.0296%" height="15" fill="rgb(250,0,22)"/><text x="73.6005%" y="223.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1,769 samples, 8.74%)</title><rect x="64.6484%" y="453" width="8.7367%" height="15" fill="rgb(213,166,10)"/><text x="64.8984%" y="463.50">alloc::sync:..</text></g><g><title>core::ptr::drop_in_place (1,308 samples, 6.46%)</title><rect x="66.9251%" y="437" width="6.4599%" height="15" fill="rgb(207,163,36)"/><text x="67.1751%" y="447.50">core::pt..</text></g><g><title>core::ptr::drop_in_place (1,290 samples, 6.37%)</title><rect x="67.0140%" y="421" width="6.3710%" height="15" fill="rgb(208,122,22)"/><text x="67.2640%" y="431.50">core::pt..</text></g><g><title>__GI_munmap (29 samples, 0.14%)</title><rect x="73.2418%" y="405" width="0.1432%" height="15" fill="rgb(207,104,49)"/><text x="73.4918%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (29 samples, 0.14%)</title><rect x="73.2418%" y="389" width="0.1432%" height="15" fill="rgb(248,211,50)"/><text x="73.4918%" y="399.50"></text></g><g><title>do_syscall_64 (29 samples, 0.14%)</title><rect x="73.2418%" y="373" width="0.1432%" height="15" fill="rgb(217,13,45)"/><text x="73.4918%" y="383.50"></text></g><g><title>__x64_sys_munmap (29 samples, 0.14%)</title><rect x="73.2418%" y="357" width="0.1432%" height="15" fill="rgb(211,216,49)"/><text x="73.4918%" y="367.50"></text></g><g><title>__vm_munmap (29 samples, 0.14%)</title><rect x="73.2418%" y="341" width="0.1432%" height="15" fill="rgb(221,58,53)"/><text x="73.4918%" y="351.50"></text></g><g><title>__do_munmap (29 samples, 0.14%)</title><rect x="73.2418%" y="325" width="0.1432%" height="15" fill="rgb(220,112,41)"/><text x="73.4918%" y="335.50"></text></g><g><title>unmap_region (29 samples, 0.14%)</title><rect x="73.2418%" y="309" width="0.1432%" height="15" fill="rgb(236,38,28)"/><text x="73.4918%" y="319.50"></text></g><g><title>unmap_vmas (28 samples, 0.14%)</title><rect x="73.2467%" y="293" width="0.1383%" height="15" fill="rgb(227,195,22)"/><text x="73.4967%" y="303.50"></text></g><g><title>unmap_page_range (28 samples, 0.14%)</title><rect x="73.2467%" y="277" width="0.1383%" height="15" fill="rgb(214,55,33)"/><text x="73.4967%" y="287.50"></text></g><g><title>tlb_flush_mmu (16 samples, 0.08%)</title><rect x="73.3060%" y="261" width="0.0790%" height="15" fill="rgb(248,80,13)"/><text x="73.5560%" y="271.50"></text></g><g><title>release_pages (15 samples, 0.07%)</title><rect x="73.3109%" y="245" width="0.0741%" height="15" fill="rgb(238,52,6)"/><text x="73.5609%" y="255.50"></text></g><g><title>free_unref_page_list (8 samples, 0.04%)</title><rect x="73.3455%" y="229" width="0.0395%" height="15" fill="rgb(224,198,47)"/><text x="73.5955%" y="239.50"></text></g><g><title>__list_del_entry_valid (4 samples, 0.02%)</title><rect x="73.4147%" y="341" width="0.0198%" height="15" fill="rgb(233,171,20)"/><text x="73.6647%" y="351.50"></text></g><g><title>alloc_pages_vma (12 samples, 0.06%)</title><rect x="73.3998%" y="389" width="0.0593%" height="15" fill="rgb(241,30,25)"/><text x="73.6498%" y="399.50"></text></g><g><title>__alloc_pages_nodemask (11 samples, 0.05%)</title><rect x="73.4048%" y="373" width="0.0543%" height="15" fill="rgb(207,171,38)"/><text x="73.6548%" y="383.50"></text></g><g><title>get_page_from_freelist (10 samples, 0.05%)</title><rect x="73.4097%" y="357" width="0.0494%" height="15" fill="rgb(234,70,1)"/><text x="73.6597%" y="367.50"></text></g><g><title>prep_new_page (4 samples, 0.02%)</title><rect x="73.4394%" y="341" width="0.0198%" height="15" fill="rgb(232,178,18)"/><text x="73.6894%" y="351.50"></text></g><g><title>kernel_init_free_pages (4 samples, 0.02%)</title><rect x="73.4394%" y="325" width="0.0198%" height="15" fill="rgb(241,78,40)"/><text x="73.6894%" y="335.50"></text></g><g><title>clear_page_erms (4 samples, 0.02%)</title><rect x="73.4394%" y="309" width="0.0198%" height="15" fill="rgb(222,35,25)"/><text x="73.6894%" y="319.50"></text></g><g><title>exc_page_fault (21 samples, 0.10%)</title><rect x="73.3850%" y="437" width="0.1037%" height="15" fill="rgb(207,92,16)"/><text x="73.6350%" y="447.50"></text></g><g><title>do_user_addr_fault (21 samples, 0.10%)</title><rect x="73.3850%" y="421" width="0.1037%" height="15" fill="rgb(216,59,51)"/><text x="73.6350%" y="431.50"></text></g><g><title>handle_mm_fault (20 samples, 0.10%)</title><rect x="73.3900%" y="405" width="0.0988%" height="15" fill="rgb(213,80,28)"/><text x="73.6400%" y="415.50"></text></g><g><title>mem_cgroup_charge (3 samples, 0.01%)</title><rect x="73.4739%" y="389" width="0.0148%" height="15" fill="rgb(220,93,7)"/><text x="73.7239%" y="399.50"></text></g><g><title>asm_exc_page_fault (24 samples, 0.12%)</title><rect x="73.3850%" y="453" width="0.1185%" height="15" fill="rgb(225,24,44)"/><text x="73.6350%" y="463.50"></text></g><g><title>irqentry_exit_to_user_mode (3 samples, 0.01%)</title><rect x="73.4887%" y="437" width="0.0148%" height="15" fill="rgb(243,74,40)"/><text x="73.7387%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.04%)</title><rect x="74.0073%" y="421" width="0.0395%" height="15" fill="rgb(228,39,7)"/><text x="74.2573%" y="431.50"></text></g><g><title>&lt;ate::anti_replay::AntiReplayPlugin as ate::validator::EventValidator&gt;::validate (110 samples, 0.54%)</title><rect x="73.5233%" y="437" width="0.5433%" height="15" fill="rgb(227,79,8)"/><text x="73.7733%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4 samples, 0.02%)</title><rect x="74.0468%" y="421" width="0.0198%" height="15" fill="rgb(236,58,11)"/><text x="74.2968%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (5 samples, 0.02%)</title><rect x="74.1555%" y="389" width="0.0247%" height="15" fill="rgb(249,63,35)"/><text x="74.4055%" y="399.50"></text></g><g><title>std::time::SystemTime::duration_since (8 samples, 0.04%)</title><rect x="74.1555%" y="405" width="0.0395%" height="15" fill="rgb(252,114,16)"/><text x="74.4055%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (3 samples, 0.01%)</title><rect x="74.1802%" y="389" width="0.0148%" height="15" fill="rgb(254,151,24)"/><text x="74.4302%" y="399.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (3 samples, 0.01%)</title><rect x="74.1802%" y="373" width="0.0148%" height="15" fill="rgb(253,54,39)"/><text x="74.4302%" y="383.50"></text></g><g><title>ate::accessor::ChainProtectedSync::validate_event (159 samples, 0.79%)</title><rect x="73.5036%" y="453" width="0.7853%" height="15" fill="rgb(243,25,45)"/><text x="73.7536%" y="463.50"></text></g><g><title>&lt;ate::time::TimestampEnforcer as ate::validator::EventValidator&gt;::validate (45 samples, 0.22%)</title><rect x="74.0666%" y="437" width="0.2222%" height="15" fill="rgb(234,134,9)"/><text x="74.3166%" y="447.50"></text></g><g><title>ate::time::TimestampEnforcer::current_timestamp (40 samples, 0.20%)</title><rect x="74.0913%" y="421" width="0.1976%" height="15" fill="rgb(227,166,31)"/><text x="74.3413%" y="431.50"></text></g><g><title>std::time::SystemTime::now (19 samples, 0.09%)</title><rect x="74.1950%" y="405" width="0.0938%" height="15" fill="rgb(245,143,41)"/><text x="74.4450%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (19 samples, 0.09%)</title><rect x="74.1950%" y="389" width="0.0938%" height="15" fill="rgb(238,181,32)"/><text x="74.4450%" y="399.50"></text></g><g><title>std::sys::unix::time::inner::now (19 samples, 0.09%)</title><rect x="74.1950%" y="373" width="0.0938%" height="15" fill="rgb(224,113,18)"/><text x="74.4450%" y="383.50"></text></g><g><title>__GI___clock_gettime (19 samples, 0.09%)</title><rect x="74.1950%" y="357" width="0.0938%" height="15" fill="rgb(240,229,28)"/><text x="74.4450%" y="367.50"></text></g><g><title>__vdso_clock_gettime (18 samples, 0.09%)</title><rect x="74.1999%" y="341" width="0.0889%" height="15" fill="rgb(250,185,3)"/><text x="74.4499%" y="351.50"></text></g><g><title>[[vdso]] (11 samples, 0.05%)</title><rect x="74.2345%" y="325" width="0.0543%" height="15" fill="rgb(212,59,25)"/><text x="74.4845%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (16 samples, 0.08%)</title><rect x="74.8024%" y="421" width="0.0790%" height="15" fill="rgb(221,87,20)"/><text x="75.0524%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (117 samples, 0.58%)</title><rect x="74.3086%" y="437" width="0.5778%" height="15" fill="rgb(213,74,28)"/><text x="74.5586%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.01%)</title><rect x="75.4297%" y="421" width="0.0148%" height="15" fill="rgb(224,132,34)"/><text x="75.6797%" y="431.50"></text></g><g><title>alloc_pages_vma (5 samples, 0.02%)</title><rect x="75.7606%" y="325" width="0.0247%" height="15" fill="rgb(222,101,24)"/><text x="76.0106%" y="335.50"></text></g><g><title>__alloc_pages_nodemask (5 samples, 0.02%)</title><rect x="75.7606%" y="309" width="0.0247%" height="15" fill="rgb(254,142,4)"/><text x="76.0106%" y="319.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.02%)</title><rect x="75.7606%" y="293" width="0.0247%" height="15" fill="rgb(230,229,49)"/><text x="76.0106%" y="303.50"></text></g><g><title>prep_new_page (4 samples, 0.02%)</title><rect x="75.7655%" y="277" width="0.0198%" height="15" fill="rgb(238,70,47)"/><text x="76.0155%" y="287.50"></text></g><g><title>kernel_init_free_pages (4 samples, 0.02%)</title><rect x="75.7655%" y="261" width="0.0198%" height="15" fill="rgb(231,160,17)"/><text x="76.0155%" y="271.50"></text></g><g><title>clear_page_erms (4 samples, 0.02%)</title><rect x="75.7655%" y="245" width="0.0198%" height="15" fill="rgb(218,68,53)"/><text x="76.0155%" y="255.50"></text></g><g><title>handle_mm_fault (11 samples, 0.05%)</title><rect x="75.7507%" y="341" width="0.0543%" height="15" fill="rgb(236,111,10)"/><text x="76.0007%" y="351.50"></text></g><g><title>exc_page_fault (13 samples, 0.06%)</title><rect x="75.7458%" y="373" width="0.0642%" height="15" fill="rgb(224,34,41)"/><text x="75.9958%" y="383.50"></text></g><g><title>do_user_addr_fault (13 samples, 0.06%)</title><rect x="75.7458%" y="357" width="0.0642%" height="15" fill="rgb(241,118,19)"/><text x="75.9958%" y="367.50"></text></g><g><title>asm_exc_page_fault (15 samples, 0.07%)</title><rect x="75.7458%" y="389" width="0.0741%" height="15" fill="rgb(238,129,25)"/><text x="75.9958%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (9 samples, 0.04%)</title><rect x="75.8198%" y="389" width="0.0444%" height="15" fill="rgb(238,22,31)"/><text x="76.0698%" y="399.50"></text></g><g><title>ate::chain::ChainOfTrust::add_history (321 samples, 1.59%)</title><rect x="74.2888%" y="453" width="1.5853%" height="15" fill="rgb(222,174,48)"/><text x="74.5388%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (200 samples, 0.99%)</title><rect x="74.8864%" y="437" width="0.9878%" height="15" fill="rgb(206,152,40)"/><text x="75.1364%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (87 samples, 0.43%)</title><rect x="75.4445%" y="421" width="0.4297%" height="15" fill="rgb(218,99,54)"/><text x="75.6945%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (44 samples, 0.22%)</title><rect x="75.6569%" y="405" width="0.2173%" height="15" fill="rgb(220,174,26)"/><text x="75.9069%" y="415.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.01%)</title><rect x="76.4471%" y="309" width="0.0148%" height="15" fill="rgb(245,116,9)"/><text x="76.6971%" y="319.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.01%)</title><rect x="76.4471%" y="293" width="0.0148%" height="15" fill="rgb(209,72,35)"/><text x="76.6971%" y="303.50"></text></g><g><title>exc_page_fault (8 samples, 0.04%)</title><rect x="76.4372%" y="357" width="0.0395%" height="15" fill="rgb(226,126,21)"/><text x="76.6872%" y="367.50"></text></g><g><title>do_user_addr_fault (8 samples, 0.04%)</title><rect x="76.4372%" y="341" width="0.0395%" height="15" fill="rgb(227,192,1)"/><text x="76.6872%" y="351.50"></text></g><g><title>handle_mm_fault (7 samples, 0.03%)</title><rect x="76.4421%" y="325" width="0.0346%" height="15" fill="rgb(237,180,29)"/><text x="76.6921%" y="335.50"></text></g><g><title>lru_cache_add (3 samples, 0.01%)</title><rect x="76.4619%" y="309" width="0.0148%" height="15" fill="rgb(230,197,35)"/><text x="76.7119%" y="319.50"></text></g><g><title>pagevec_lru_move_fn (3 samples, 0.01%)</title><rect x="76.4619%" y="293" width="0.0148%" height="15" fill="rgb(246,193,31)"/><text x="76.7119%" y="303.50"></text></g><g><title>asm_exc_page_fault (10 samples, 0.05%)</title><rect x="76.4372%" y="373" width="0.0494%" height="15" fill="rgb(241,36,4)"/><text x="76.6872%" y="383.50"></text></g><g><title>perf_event_mmap (5 samples, 0.02%)</title><rect x="76.4915%" y="261" width="0.0247%" height="15" fill="rgb(241,130,17)"/><text x="76.7415%" y="271.50"></text></g><g><title>perf_iterate_sb (4 samples, 0.02%)</title><rect x="76.4964%" y="245" width="0.0198%" height="15" fill="rgb(206,137,32)"/><text x="76.7464%" y="255.50"></text></g><g><title>perf_iterate_ctx (4 samples, 0.02%)</title><rect x="76.4964%" y="229" width="0.0198%" height="15" fill="rgb(237,228,51)"/><text x="76.7464%" y="239.50"></text></g><g><title>perf_event_mmap_output (3 samples, 0.01%)</title><rect x="76.5014%" y="213" width="0.0148%" height="15" fill="rgb(243,6,42)"/><text x="76.7514%" y="223.50"></text></g><g><title>do_syscall_64 (8 samples, 0.04%)</title><rect x="76.4866%" y="325" width="0.0395%" height="15" fill="rgb(251,74,28)"/><text x="76.7366%" y="335.50"></text></g><g><title>__x64_sys_mprotect (8 samples, 0.04%)</title><rect x="76.4866%" y="309" width="0.0395%" height="15" fill="rgb(218,20,49)"/><text x="76.7366%" y="319.50"></text></g><g><title>do_mprotect_pkey (8 samples, 0.04%)</title><rect x="76.4866%" y="293" width="0.0395%" height="15" fill="rgb(238,28,14)"/><text x="76.7366%" y="303.50"></text></g><g><title>mprotect_fixup (7 samples, 0.03%)</title><rect x="76.4915%" y="277" width="0.0346%" height="15" fill="rgb(229,40,46)"/><text x="76.7415%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.06%)</title><rect x="76.4866%" y="341" width="0.0593%" height="15" fill="rgb(244,195,20)"/><text x="76.7366%" y="351.50"></text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.02%)</title><rect x="76.5261%" y="325" width="0.0198%" height="15" fill="rgb(253,56,35)"/><text x="76.7761%" y="335.50"></text></g><g><title>_int_malloc (52 samples, 0.26%)</title><rect x="76.3038%" y="405" width="0.2568%" height="15" fill="rgb(210,149,44)"/><text x="76.5538%" y="415.50"></text></g><g><title>sysmalloc (28 samples, 0.14%)</title><rect x="76.4224%" y="389" width="0.1383%" height="15" fill="rgb(240,135,12)"/><text x="76.6724%" y="399.50"></text></g><g><title>grow_heap (15 samples, 0.07%)</title><rect x="76.4866%" y="373" width="0.0741%" height="15" fill="rgb(251,24,50)"/><text x="76.7366%" y="383.50"></text></g><g><title>__GI___mprotect (15 samples, 0.07%)</title><rect x="76.4866%" y="357" width="0.0741%" height="15" fill="rgb(243,200,47)"/><text x="76.7366%" y="367.50"></text></g><g><title>error_entry (3 samples, 0.01%)</title><rect x="76.5458%" y="341" width="0.0148%" height="15" fill="rgb(224,166,26)"/><text x="76.7958%" y="351.50"></text></g><g><title>__GI___libc_malloc (59 samples, 0.29%)</title><rect x="76.2742%" y="421" width="0.2914%" height="15" fill="rgb(233,0,47)"/><text x="76.5242%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (129 samples, 0.64%)</title><rect x="75.9334%" y="437" width="0.6371%" height="15" fill="rgb(253,80,5)"/><text x="76.1834%" y="447.50"></text></g><g><title>__GI___libc_malloc (107 samples, 0.53%)</title><rect x="76.6644%" y="389" width="0.5284%" height="15" fill="rgb(214,133,25)"/><text x="76.9144%" y="399.50"></text></g><g><title>_int_malloc (84 samples, 0.41%)</title><rect x="76.7780%" y="373" width="0.4149%" height="15" fill="rgb(209,27,14)"/><text x="77.0280%" y="383.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (39 samples, 0.19%)</title><rect x="77.2422%" y="373" width="0.1926%" height="15" fill="rgb(219,102,51)"/><text x="77.4922%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.03%)</title><rect x="77.4052%" y="357" width="0.0296%" height="15" fill="rgb(237,18,16)"/><text x="77.6552%" y="367.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::MetaAuthorization&gt;::serialize (4 samples, 0.02%)</title><rect x="77.4348%" y="373" width="0.0198%" height="15" fill="rgb(241,85,17)"/><text x="77.6848%" y="383.50"></text></g><g><title>ate::spec::SerializationFormat::serialize (171 samples, 0.84%)</title><rect x="76.6150%" y="421" width="0.8445%" height="15" fill="rgb(236,90,42)"/><text x="76.8650%" y="431.50"></text></g><g><title>bincode::internal::serialize (166 samples, 0.82%)</title><rect x="76.6397%" y="405" width="0.8198%" height="15" fill="rgb(249,57,21)"/><text x="76.8897%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (53 samples, 0.26%)</title><rect x="77.1977%" y="389" width="0.2618%" height="15" fill="rgb(243,12,36)"/><text x="77.4477%" y="399.50"></text></g><g><title>ate::event::EventData::as_header (366 samples, 1.81%)</title><rect x="75.8742%" y="453" width="1.8076%" height="15" fill="rgb(253,128,47)"/><text x="76.1242%" y="463.50">a..</text></g><g><title>ate::event::EventData::as_header_raw (225 samples, 1.11%)</title><rect x="76.5705%" y="437" width="1.1112%" height="15" fill="rgb(207,33,20)"/><text x="76.8205%" y="447.50"></text></g><g><title>blake3::hash (45 samples, 0.22%)</title><rect x="77.4595%" y="421" width="0.2222%" height="15" fill="rgb(233,215,35)"/><text x="77.7095%" y="431.50"></text></g><g><title>blake3::ChunkState::update (20 samples, 0.10%)</title><rect x="77.5830%" y="405" width="0.0988%" height="15" fill="rgb(249,188,52)"/><text x="77.8330%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.03%)</title><rect x="77.6521%" y="389" width="0.0296%" height="15" fill="rgb(225,12,32)"/><text x="77.9021%" y="399.50"></text></g><g><title>exc_page_fault (8 samples, 0.04%)</title><rect x="81.4747%" y="325" width="0.0395%" height="15" fill="rgb(247,98,14)"/><text x="81.7247%" y="335.50"></text></g><g><title>do_user_addr_fault (8 samples, 0.04%)</title><rect x="81.4747%" y="309" width="0.0395%" height="15" fill="rgb(247,219,48)"/><text x="81.7247%" y="319.50"></text></g><g><title>handle_mm_fault (7 samples, 0.03%)</title><rect x="81.4797%" y="293" width="0.0346%" height="15" fill="rgb(253,60,48)"/><text x="81.7297%" y="303.50"></text></g><g><title>asm_exc_page_fault (9 samples, 0.04%)</title><rect x="81.4747%" y="341" width="0.0444%" height="15" fill="rgb(245,15,52)"/><text x="81.7247%" y="351.50"></text></g><g><title>mprotect_fixup (3 samples, 0.01%)</title><rect x="81.5192%" y="245" width="0.0148%" height="15" fill="rgb(220,133,28)"/><text x="81.7692%" y="255.50"></text></g><g><title>do_syscall_64 (4 samples, 0.02%)</title><rect x="81.5192%" y="293" width="0.0198%" height="15" fill="rgb(217,180,4)"/><text x="81.7692%" y="303.50"></text></g><g><title>__x64_sys_mprotect (4 samples, 0.02%)</title><rect x="81.5192%" y="277" width="0.0198%" height="15" fill="rgb(251,24,1)"/><text x="81.7692%" y="287.50"></text></g><g><title>do_mprotect_pkey (4 samples, 0.02%)</title><rect x="81.5192%" y="261" width="0.0198%" height="15" fill="rgb(212,185,49)"/><text x="81.7692%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="81.5192%" y="309" width="0.0247%" height="15" fill="rgb(215,175,22)"/><text x="81.7692%" y="319.50"></text></g><g><title>__GI___libc_malloc (26 samples, 0.13%)</title><rect x="81.4204%" y="389" width="0.1284%" height="15" fill="rgb(250,205,14)"/><text x="81.6704%" y="399.50"></text></g><g><title>_int_malloc (21 samples, 0.10%)</title><rect x="81.4451%" y="373" width="0.1037%" height="15" fill="rgb(225,211,22)"/><text x="81.6951%" y="383.50"></text></g><g><title>sysmalloc (16 samples, 0.08%)</title><rect x="81.4698%" y="357" width="0.0790%" height="15" fill="rgb(251,179,42)"/><text x="81.7198%" y="367.50"></text></g><g><title>grow_heap (6 samples, 0.03%)</title><rect x="81.5192%" y="341" width="0.0296%" height="15" fill="rgb(208,216,51)"/><text x="81.7692%" y="351.50"></text></g><g><title>__GI___mprotect (6 samples, 0.03%)</title><rect x="81.5192%" y="325" width="0.0296%" height="15" fill="rgb(235,36,11)"/><text x="81.7692%" y="335.50"></text></g><g><title>__memmove_avx_unaligned_erms (51 samples, 0.25%)</title><rect x="81.5488%" y="389" width="0.2519%" height="15" fill="rgb(213,189,28)"/><text x="81.7988%" y="399.50"></text></g><g><title>ate::index::BinaryTreeIndexer::feed (835 samples, 4.12%)</title><rect x="77.6817%" y="453" width="4.1239%" height="15" fill="rgb(227,203,42)"/><text x="77.9317%" y="463.50">ate:..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (770 samples, 3.80%)</title><rect x="78.0028%" y="437" width="3.8028%" height="15" fill="rgb(244,72,36)"/><text x="78.2528%" y="447.50">allo..</text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (115 samples, 0.57%)</title><rect x="81.2377%" y="421" width="0.5680%" height="15" fill="rgb(213,53,17)"/><text x="81.4877%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (112 samples, 0.55%)</title><rect x="81.2525%" y="405" width="0.5531%" height="15" fill="rgb(207,167,3)"/><text x="81.5025%" y="415.50"></text></g><g><title>_int_malloc (7 samples, 0.03%)</title><rect x="81.8649%" y="405" width="0.0346%" height="15" fill="rgb(216,98,30)"/><text x="82.1149%" y="415.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.05%)</title><rect x="81.8550%" y="421" width="0.0494%" height="15" fill="rgb(236,123,15)"/><text x="82.1050%" y="431.50"></text></g><g><title>bytes::bytes::promotable_even_clone (21 samples, 0.10%)</title><rect x="81.8056%" y="453" width="0.1037%" height="15" fill="rgb(248,81,50)"/><text x="82.0556%" y="463.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (21 samples, 0.10%)</title><rect x="81.8056%" y="437" width="0.1037%" height="15" fill="rgb(214,120,4)"/><text x="82.0556%" y="447.50"></text></g><g><title>bytes::bytes::shared_drop (17 samples, 0.08%)</title><rect x="81.9093%" y="453" width="0.0840%" height="15" fill="rgb(208,179,34)"/><text x="82.1593%" y="463.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="82.0575%" y="437" width="0.0148%" height="15" fill="rgb(227,140,7)"/><text x="82.3075%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.03%)</title><rect x="82.6106%" y="405" width="0.0296%" height="15" fill="rgb(214,22,6)"/><text x="82.8606%" y="415.50"></text></g><g><title>futex_wait_queue_me (3 samples, 0.01%)</title><rect x="82.6600%" y="325" width="0.0148%" height="15" fill="rgb(207,137,27)"/><text x="82.9100%" y="335.50"></text></g><g><title>schedule (3 samples, 0.01%)</title><rect x="82.6600%" y="309" width="0.0148%" height="15" fill="rgb(210,8,46)"/><text x="82.9100%" y="319.50"></text></g><g><title>__schedule (3 samples, 0.01%)</title><rect x="82.6600%" y="293" width="0.0148%" height="15" fill="rgb(240,16,54)"/><text x="82.9100%" y="303.50"></text></g><g><title>__get_user_nocheck_4 (4 samples, 0.02%)</title><rect x="82.7094%" y="309" width="0.0198%" height="15" fill="rgb(211,209,29)"/><text x="82.9594%" y="319.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.01%)</title><rect x="82.7292%" y="309" width="0.0148%" height="15" fill="rgb(226,228,24)"/><text x="82.9792%" y="319.50"></text></g><g><title>do_syscall_64 (22 samples, 0.11%)</title><rect x="82.6403%" y="389" width="0.1087%" height="15" fill="rgb(222,84,9)"/><text x="82.8903%" y="399.50"></text></g><g><title>__x64_sys_futex (22 samples, 0.11%)</title><rect x="82.6403%" y="373" width="0.1087%" height="15" fill="rgb(234,203,30)"/><text x="82.8903%" y="383.50"></text></g><g><title>do_futex (20 samples, 0.10%)</title><rect x="82.6501%" y="357" width="0.0988%" height="15" fill="rgb(238,109,14)"/><text x="82.9001%" y="367.50"></text></g><g><title>futex_wait (19 samples, 0.09%)</title><rect x="82.6551%" y="341" width="0.0938%" height="15" fill="rgb(233,206,34)"/><text x="82.9051%" y="351.50"></text></g><g><title>futex_wait_setup (15 samples, 0.07%)</title><rect x="82.6748%" y="325" width="0.0741%" height="15" fill="rgb(220,167,47)"/><text x="82.9248%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (45 samples, 0.22%)</title><rect x="82.6403%" y="405" width="0.2222%" height="15" fill="rgb(238,105,10)"/><text x="82.8903%" y="415.50"></text></g><g><title>syscall_exit_to_user_mode (23 samples, 0.11%)</title><rect x="82.7489%" y="389" width="0.1136%" height="15" fill="rgb(213,227,17)"/><text x="82.9989%" y="399.50"></text></g><g><title>__lll_lock_wait_private (71 samples, 0.35%)</title><rect x="82.5563%" y="421" width="0.3507%" height="15" fill="rgb(217,132,38)"/><text x="82.8063%" y="431.50"></text></g><g><title>syscall_return_via_sysret (9 samples, 0.04%)</title><rect x="82.8625%" y="405" width="0.0444%" height="15" fill="rgb(242,146,4)"/><text x="83.1125%" y="415.50"></text></g><g><title>entry_SYSCALL_64 (21 samples, 0.10%)</title><rect x="82.9070%" y="421" width="0.1037%" height="15" fill="rgb(212,61,9)"/><text x="83.1570%" y="431.50"></text></g><g><title>_raw_spin_lock (9 samples, 0.04%)</title><rect x="83.0650%" y="341" width="0.0444%" height="15" fill="rgb(247,126,22)"/><text x="83.3150%" y="351.50"></text></g><g><title>native_queued_spin_lock_slowpath (4 samples, 0.02%)</title><rect x="83.0897%" y="325" width="0.0198%" height="15" fill="rgb(220,196,2)"/><text x="83.3397%" y="335.50"></text></g><g><title>__x64_sys_futex (20 samples, 0.10%)</title><rect x="83.0156%" y="389" width="0.0988%" height="15" fill="rgb(208,46,4)"/><text x="83.2656%" y="399.50"></text></g><g><title>do_futex (18 samples, 0.09%)</title><rect x="83.0255%" y="373" width="0.0889%" height="15" fill="rgb(252,104,46)"/><text x="83.2755%" y="383.50"></text></g><g><title>futex_wake (17 samples, 0.08%)</title><rect x="83.0304%" y="357" width="0.0840%" height="15" fill="rgb(237,152,48)"/><text x="83.2804%" y="367.50"></text></g><g><title>do_syscall_64 (22 samples, 0.11%)</title><rect x="83.0107%" y="405" width="0.1087%" height="15" fill="rgb(221,59,37)"/><text x="83.2607%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (73 samples, 0.36%)</title><rect x="83.0107%" y="421" width="0.3605%" height="15" fill="rgb(209,202,51)"/><text x="83.2607%" y="431.50"></text></g><g><title>syscall_exit_to_user_mode (51 samples, 0.25%)</title><rect x="83.1193%" y="405" width="0.2519%" height="15" fill="rgb(228,81,30)"/><text x="83.3693%" y="415.50"></text></g><g><title>syscall_return_via_sysret (14 samples, 0.07%)</title><rect x="83.3712%" y="421" width="0.0691%" height="15" fill="rgb(227,42,39)"/><text x="83.6212%" y="431.50"></text></g><g><title>_int_free (278 samples, 1.37%)</title><rect x="82.0723%" y="437" width="1.3730%" height="15" fill="rgb(221,26,2)"/><text x="82.3223%" y="447.50"></text></g><g><title>bytes::bytes::promotable_even_drop (13 samples, 0.06%)</title><rect x="83.4453%" y="437" width="0.0642%" height="15" fill="rgb(254,61,31)"/><text x="83.6953%" y="447.50"></text></g><g><title>core::ptr::drop_in_place (340 samples, 1.68%)</title><rect x="81.9933%" y="453" width="1.6792%" height="15" fill="rgb(222,173,38)"/><text x="82.2433%" y="463.50"></text></g><g><title>core::ptr::drop_in_place (33 samples, 0.16%)</title><rect x="83.5095%" y="437" width="0.1630%" height="15" fill="rgb(218,50,12)"/><text x="83.7595%" y="447.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (6,304 samples, 31.13%)</title><rect x="52.5632%" y="549" width="31.1339%" height="15" fill="rgb(223,88,40)"/><text x="52.8132%" y="559.50">tokio::runtime::thread_pool::worker::Context::run_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,275 samples, 30.99%)</title><rect x="52.7064%" y="533" width="30.9907%" height="15" fill="rgb(237,54,19)"/><text x="52.9564%" y="543.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6,275 samples, 30.99%)</title><rect x="52.7064%" y="517" width="30.9907%" height="15" fill="rgb(251,129,25)"/><text x="52.9564%" y="527.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::poll_future (6,270 samples, 30.97%)</title><rect x="52.7311%" y="501" width="30.9660%" height="15" fill="rgb(238,97,19)"/><text x="52.9811%" y="511.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (6,267 samples, 30.95%)</title><rect x="52.7460%" y="485" width="30.9512%" height="15" fill="rgb(240,169,18)"/><text x="52.9960%" y="495.50">std::panic::catch_unwind</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,267 samples, 30.95%)</title><rect x="52.7460%" y="469" width="30.9512%" height="15" fill="rgb(230,187,49)"/><text x="52.9960%" y="479.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as cor..</text></g><g><title>std::panicking::try (6,472 samples, 31.96%)</title><rect x="51.7384%" y="629" width="31.9637%" height="15" fill="rgb(209,44,26)"/><text x="51.9884%" y="639.50">std::panicking::try</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6,472 samples, 31.96%)</title><rect x="51.7384%" y="613" width="31.9637%" height="15" fill="rgb(244,0,6)"/><text x="51.9884%" y="623.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_m..</text></g><g><title>tokio::runtime::thread_pool::worker::run (6,472 samples, 31.96%)</title><rect x="51.7384%" y="597" width="31.9637%" height="15" fill="rgb(248,18,21)"/><text x="51.9884%" y="607.50">tokio::runtime::thread_pool::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (6,472 samples, 31.96%)</title><rect x="51.7384%" y="581" width="31.9637%" height="15" fill="rgb(245,180,19)"/><text x="51.9884%" y="591.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (6,472 samples, 31.96%)</title><rect x="51.7384%" y="565" width="31.9637%" height="15" fill="rgb(252,118,36)"/><text x="51.9884%" y="575.50">tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>__pthread_enable_asynccancel (6 samples, 0.03%)</title><rect x="83.7811%" y="501" width="0.0296%" height="15" fill="rgb(210,224,19)"/><text x="84.0311%" y="511.50"></text></g><g><title>_raw_spin_lock_irqsave (3 samples, 0.01%)</title><rect x="83.8107%" y="501" width="0.0148%" height="15" fill="rgb(218,30,24)"/><text x="84.0607%" y="511.50"></text></g><g><title>crc32c_pcl_intel_update (60 samples, 0.30%)</title><rect x="83.8256%" y="501" width="0.2963%" height="15" fill="rgb(219,75,50)"/><text x="84.0756%" y="511.50"></text></g><g><title>__x64_sys_write (3 samples, 0.01%)</title><rect x="84.1367%" y="469" width="0.0148%" height="15" fill="rgb(234,72,50)"/><text x="84.3867%" y="479.50"></text></g><g><title>__fget_light (17 samples, 0.08%)</title><rect x="84.1614%" y="437" width="0.0840%" height="15" fill="rgb(219,100,48)"/><text x="84.4114%" y="447.50"></text></g><g><title>__fget_files (14 samples, 0.07%)</title><rect x="84.1762%" y="421" width="0.0691%" height="15" fill="rgb(253,5,41)"/><text x="84.4262%" y="431.50"></text></g><g><title>__fdget_pos (21 samples, 0.10%)</title><rect x="84.1614%" y="453" width="0.1037%" height="15" fill="rgb(247,181,11)"/><text x="84.4114%" y="463.50"></text></g><g><title>mutex_lock (4 samples, 0.02%)</title><rect x="84.2454%" y="437" width="0.0198%" height="15" fill="rgb(222,223,25)"/><text x="84.4954%" y="447.50"></text></g><g><title>mutex_unlock (3 samples, 0.01%)</title><rect x="84.2799%" y="453" width="0.0148%" height="15" fill="rgb(214,198,28)"/><text x="84.5299%" y="463.50"></text></g><g><title>down_write (4 samples, 0.02%)</title><rect x="84.4232%" y="405" width="0.0198%" height="15" fill="rgb(230,46,43)"/><text x="84.6732%" y="415.50"></text></g><g><title>ext4_generic_write_checks (5 samples, 0.02%)</title><rect x="84.4429%" y="405" width="0.0247%" height="15" fill="rgb(233,65,53)"/><text x="84.6929%" y="415.50"></text></g><g><title>generic_write_checks (5 samples, 0.02%)</title><rect x="84.4429%" y="389" width="0.0247%" height="15" fill="rgb(221,121,27)"/><text x="84.6929%" y="399.50"></text></g><g><title>generic_write_check_limits (3 samples, 0.01%)</title><rect x="84.4528%" y="373" width="0.0148%" height="15" fill="rgb(247,70,47)"/><text x="84.7028%" y="383.50"></text></g><g><title>ext4_mark_iloc_dirty (3 samples, 0.01%)</title><rect x="84.5121%" y="325" width="0.0148%" height="15" fill="rgb(228,85,35)"/><text x="84.7621%" y="335.50"></text></g><g><title>file_update_time (13 samples, 0.06%)</title><rect x="84.4725%" y="405" width="0.0642%" height="15" fill="rgb(209,50,18)"/><text x="84.7225%" y="415.50"></text></g><g><title>generic_update_time (8 samples, 0.04%)</title><rect x="84.4972%" y="389" width="0.0395%" height="15" fill="rgb(250,19,35)"/><text x="84.7472%" y="399.50"></text></g><g><title>__mark_inode_dirty (8 samples, 0.04%)</title><rect x="84.4972%" y="373" width="0.0395%" height="15" fill="rgb(253,107,29)"/><text x="84.7472%" y="383.50"></text></g><g><title>ext4_dirty_inode (8 samples, 0.04%)</title><rect x="84.4972%" y="357" width="0.0395%" height="15" fill="rgb(252,179,29)"/><text x="84.7472%" y="367.50"></text></g><g><title>__ext4_mark_inode_dirty (5 samples, 0.02%)</title><rect x="84.5121%" y="341" width="0.0247%" height="15" fill="rgb(238,194,6)"/><text x="84.7621%" y="351.50"></text></g><g><title>__radix_tree_lookup (9 samples, 0.04%)</title><rect x="84.6503%" y="373" width="0.0444%" height="15" fill="rgb(238,164,29)"/><text x="84.9003%" y="383.50"></text></g><g><title>balance_dirty_pages_ratelimited (28 samples, 0.14%)</title><rect x="84.5664%" y="389" width="0.1383%" height="15" fill="rgb(224,25,9)"/><text x="84.8164%" y="399.50"></text></g><g><title>ext4_journal_check_start (4 samples, 0.02%)</title><rect x="84.8034%" y="357" width="0.0198%" height="15" fill="rgb(244,153,23)"/><text x="85.0534%" y="367.50"></text></g><g><title>memset_erms (6 samples, 0.03%)</title><rect x="84.8923%" y="325" width="0.0296%" height="15" fill="rgb(212,203,14)"/><text x="85.1423%" y="335.50"></text></g><g><title>kmem_cache_alloc (23 samples, 0.11%)</title><rect x="84.8429%" y="341" width="0.1136%" height="15" fill="rgb(220,164,20)"/><text x="85.0929%" y="351.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (7 samples, 0.03%)</title><rect x="84.9220%" y="325" width="0.0346%" height="15" fill="rgb(222,203,48)"/><text x="85.1720%" y="335.50"></text></g><g><title>should_failslab (3 samples, 0.01%)</title><rect x="84.9417%" y="309" width="0.0148%" height="15" fill="rgb(215,159,22)"/><text x="85.1917%" y="319.50"></text></g><g><title>__ext4_journal_start_sb (48 samples, 0.24%)</title><rect x="84.7936%" y="373" width="0.2371%" height="15" fill="rgb(216,183,47)"/><text x="85.0436%" y="383.50"></text></g><g><title>jbd2__journal_start (42 samples, 0.21%)</title><rect x="84.8232%" y="357" width="0.2074%" height="15" fill="rgb(229,195,25)"/><text x="85.0732%" y="367.50"></text></g><g><title>start_this_handle (15 samples, 0.07%)</title><rect x="84.9565%" y="341" width="0.0741%" height="15" fill="rgb(224,132,51)"/><text x="85.2065%" y="351.50"></text></g><g><title>_raw_read_lock (7 samples, 0.03%)</title><rect x="84.9960%" y="325" width="0.0346%" height="15" fill="rgb(240,63,7)"/><text x="85.2460%" y="335.50"></text></g><g><title>__alloc_pages_nodemask (6 samples, 0.03%)</title><rect x="85.2282%" y="245" width="0.0296%" height="15" fill="rgb(249,182,41)"/><text x="85.4782%" y="255.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.02%)</title><rect x="85.2331%" y="229" width="0.0247%" height="15" fill="rgb(243,47,26)"/><text x="85.4831%" y="239.50"></text></g><g><title>__slab_alloc (10 samples, 0.05%)</title><rect x="85.2183%" y="293" width="0.0494%" height="15" fill="rgb(233,48,2)"/><text x="85.4683%" y="303.50"></text></g><g><title>___slab_alloc (10 samples, 0.05%)</title><rect x="85.2183%" y="277" width="0.0494%" height="15" fill="rgb(244,165,34)"/><text x="85.4683%" y="287.50"></text></g><g><title>allocate_slab (9 samples, 0.04%)</title><rect x="85.2232%" y="261" width="0.0444%" height="15" fill="rgb(207,89,7)"/><text x="85.4732%" y="271.50"></text></g><g><title>memcg_alloc_page_obj_cgroups (4 samples, 0.02%)</title><rect x="85.3121%" y="277" width="0.0198%" height="15" fill="rgb(244,117,36)"/><text x="85.5621%" y="287.50"></text></g><g><title>__kmalloc_node (4 samples, 0.02%)</title><rect x="85.3121%" y="261" width="0.0198%" height="15" fill="rgb(226,144,34)"/><text x="85.5621%" y="271.50"></text></g><g><title>memcg_slab_post_alloc_hook (15 samples, 0.07%)</title><rect x="85.2677%" y="293" width="0.0741%" height="15" fill="rgb(213,23,19)"/><text x="85.5177%" y="303.50"></text></g><g><title>memset_erms (3 samples, 0.01%)</title><rect x="85.3418%" y="293" width="0.0148%" height="15" fill="rgb(217,75,12)"/><text x="85.5918%" y="303.50"></text></g><g><title>get_obj_cgroup_from_current (12 samples, 0.06%)</title><rect x="85.3615%" y="277" width="0.0593%" height="15" fill="rgb(224,159,17)"/><text x="85.6115%" y="287.50"></text></g><g><title>obj_cgroup_charge (3 samples, 0.01%)</title><rect x="85.4208%" y="277" width="0.0148%" height="15" fill="rgb(217,118,1)"/><text x="85.6708%" y="287.50"></text></g><g><title>alloc_buffer_head (54 samples, 0.27%)</title><rect x="85.1738%" y="325" width="0.2667%" height="15" fill="rgb(232,180,48)"/><text x="85.4238%" y="335.50"></text></g><g><title>kmem_cache_alloc (53 samples, 0.26%)</title><rect x="85.1788%" y="309" width="0.2618%" height="15" fill="rgb(230,27,33)"/><text x="85.4288%" y="319.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (17 samples, 0.08%)</title><rect x="85.3566%" y="293" width="0.0840%" height="15" fill="rgb(205,31,21)"/><text x="85.6066%" y="303.50"></text></g><g><title>create_empty_buffers (68 samples, 0.34%)</title><rect x="85.1245%" y="357" width="0.3358%" height="15" fill="rgb(253,59,4)"/><text x="85.3745%" y="367.50"></text></g><g><title>alloc_page_buffers (60 samples, 0.30%)</title><rect x="85.1640%" y="341" width="0.2963%" height="15" fill="rgb(224,201,9)"/><text x="85.4140%" y="351.50"></text></g><g><title>get_mem_cgroup_from_page (4 samples, 0.02%)</title><rect x="85.4405%" y="325" width="0.0198%" height="15" fill="rgb(229,206,30)"/><text x="85.6905%" y="335.50"></text></g><g><title>down_read (3 samples, 0.01%)</title><rect x="85.5492%" y="341" width="0.0148%" height="15" fill="rgb(212,67,47)"/><text x="85.7992%" y="351.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.02%)</title><rect x="85.5739%" y="309" width="0.0198%" height="15" fill="rgb(211,96,50)"/><text x="85.8239%" y="319.50"></text></g><g><title>__dquot_alloc_space (9 samples, 0.04%)</title><rect x="85.5689%" y="325" width="0.0444%" height="15" fill="rgb(252,114,18)"/><text x="85.8189%" y="335.50"></text></g><g><title>ext4_get_reserved_space (4 samples, 0.02%)</title><rect x="85.5936%" y="309" width="0.0198%" height="15" fill="rgb(223,58,37)"/><text x="85.8436%" y="319.50"></text></g><g><title>ext4_da_reserve_space (14 samples, 0.07%)</title><rect x="85.5640%" y="341" width="0.0691%" height="15" fill="rgb(237,70,4)"/><text x="85.8140%" y="351.50"></text></g><g><title>__es_insert_extent (10 samples, 0.05%)</title><rect x="85.6480%" y="325" width="0.0494%" height="15" fill="rgb(244,85,46)"/><text x="85.8980%" y="335.50"></text></g><g><title>ext4_es_can_be_merged.isra.0 (3 samples, 0.01%)</title><rect x="85.6825%" y="309" width="0.0148%" height="15" fill="rgb(223,39,52)"/><text x="85.9325%" y="319.50"></text></g><g><title>__es_remove_extent (4 samples, 0.02%)</title><rect x="85.6974%" y="325" width="0.0198%" height="15" fill="rgb(218,200,14)"/><text x="85.9474%" y="335.50"></text></g><g><title>ext4_es_insert_delayed_block (18 samples, 0.09%)</title><rect x="85.6331%" y="341" width="0.0889%" height="15" fill="rgb(208,171,16)"/><text x="85.8831%" y="351.50"></text></g><g><title>ext4_es_lookup_extent (16 samples, 0.08%)</title><rect x="85.7220%" y="341" width="0.0790%" height="15" fill="rgb(234,200,18)"/><text x="85.9720%" y="351.50"></text></g><g><title>ext4_da_get_block_prep (71 samples, 0.35%)</title><rect x="85.4603%" y="357" width="0.3507%" height="15" fill="rgb(228,45,11)"/><text x="85.7103%" y="367.50"></text></g><g><title>ext4_block_write_begin (164 samples, 0.81%)</title><rect x="85.0306%" y="373" width="0.8100%" height="15" fill="rgb(237,182,11)"/><text x="85.2806%" y="383.50"></text></g><g><title>memset_erms (6 samples, 0.03%)</title><rect x="85.8109%" y="357" width="0.0296%" height="15" fill="rgb(241,175,49)"/><text x="86.0609%" y="367.50"></text></g><g><title>ext4_nonda_switch (7 samples, 0.03%)</title><rect x="85.8406%" y="373" width="0.0346%" height="15" fill="rgb(247,38,35)"/><text x="86.0906%" y="383.50"></text></g><g><title>__next_zones_zonelist (5 samples, 0.02%)</title><rect x="85.9640%" y="325" width="0.0247%" height="15" fill="rgb(228,39,49)"/><text x="86.2140%" y="335.50"></text></g><g><title>__list_del_entry_valid (14 samples, 0.07%)</title><rect x="86.1023%" y="309" width="0.0691%" height="15" fill="rgb(226,101,26)"/><text x="86.3523%" y="319.50"></text></g><g><title>node_dirty_ok (3 samples, 0.01%)</title><rect x="86.1814%" y="309" width="0.0148%" height="15" fill="rgb(206,141,19)"/><text x="86.4314%" y="319.50"></text></g><g><title>__alloc_pages_nodemask (95 samples, 0.47%)</title><rect x="85.9097%" y="341" width="0.4692%" height="15" fill="rgb(211,200,13)"/><text x="86.1597%" y="351.50"></text></g><g><title>get_page_from_freelist (77 samples, 0.38%)</title><rect x="85.9986%" y="325" width="0.3803%" height="15" fill="rgb(241,121,6)"/><text x="86.2486%" y="335.50"></text></g><g><title>prep_new_page (37 samples, 0.18%)</title><rect x="86.1962%" y="309" width="0.1827%" height="15" fill="rgb(234,221,29)"/><text x="86.4462%" y="319.50"></text></g><g><title>kernel_init_free_pages (35 samples, 0.17%)</title><rect x="86.2060%" y="293" width="0.1729%" height="15" fill="rgb(229,136,5)"/><text x="86.4560%" y="303.50"></text></g><g><title>clear_page_erms (34 samples, 0.17%)</title><rect x="86.2110%" y="277" width="0.1679%" height="15" fill="rgb(238,36,11)"/><text x="86.4610%" y="287.50"></text></g><g><title>__mod_lruvec_state (4 samples, 0.02%)</title><rect x="86.5221%" y="309" width="0.0198%" height="15" fill="rgb(251,55,41)"/><text x="86.7721%" y="319.50"></text></g><g><title>__mod_node_page_state (4 samples, 0.02%)</title><rect x="86.5221%" y="293" width="0.0198%" height="15" fill="rgb(242,34,40)"/><text x="86.7721%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (5 samples, 0.02%)</title><rect x="86.5419%" y="309" width="0.0247%" height="15" fill="rgb(215,42,17)"/><text x="86.7919%" y="319.50"></text></g><g><title>__mod_memcg_state.part.0 (3 samples, 0.01%)</title><rect x="86.5518%" y="293" width="0.0148%" height="15" fill="rgb(207,44,46)"/><text x="86.8018%" y="303.50"></text></g><g><title>_raw_spin_lock_irq (5 samples, 0.02%)</title><rect x="86.5666%" y="309" width="0.0247%" height="15" fill="rgb(211,206,28)"/><text x="86.8166%" y="319.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (7 samples, 0.03%)</title><rect x="86.6061%" y="293" width="0.0346%" height="15" fill="rgb(237,167,16)"/><text x="86.8561%" y="303.50"></text></g><g><title>__count_memcg_events.part.0 (5 samples, 0.02%)</title><rect x="86.6160%" y="277" width="0.0247%" height="15" fill="rgb(233,66,6)"/><text x="86.8660%" y="287.50"></text></g><g><title>mem_cgroup_charge (20 samples, 0.10%)</title><rect x="86.5913%" y="309" width="0.0988%" height="15" fill="rgb(246,123,29)"/><text x="86.8413%" y="319.50"></text></g><g><title>try_charge (9 samples, 0.04%)</title><rect x="86.6456%" y="293" width="0.0444%" height="15" fill="rgb(209,62,40)"/><text x="86.8956%" y="303.50"></text></g><g><title>page_counter_try_charge (5 samples, 0.02%)</title><rect x="86.6653%" y="277" width="0.0247%" height="15" fill="rgb(218,4,25)"/><text x="86.9153%" y="287.50"></text></g><g><title>xa_get_order (5 samples, 0.02%)</title><rect x="86.6900%" y="309" width="0.0247%" height="15" fill="rgb(253,91,49)"/><text x="86.9400%" y="319.50"></text></g><g><title>xas_load (4 samples, 0.02%)</title><rect x="86.6950%" y="293" width="0.0198%" height="15" fill="rgb(228,155,29)"/><text x="86.9450%" y="303.50"></text></g><g><title>xas_find_conflict (8 samples, 0.04%)</title><rect x="86.7147%" y="309" width="0.0395%" height="15" fill="rgb(243,57,37)"/><text x="86.9647%" y="319.50"></text></g><g><title>workingset_update_node (4 samples, 0.02%)</title><rect x="86.7987%" y="293" width="0.0198%" height="15" fill="rgb(244,167,17)"/><text x="87.0487%" y="303.50"></text></g><g><title>__add_to_page_cache_locked (90 samples, 0.44%)</title><rect x="86.3987%" y="325" width="0.4445%" height="15" fill="rgb(207,181,38)"/><text x="86.6487%" y="335.50"></text></g><g><title>xas_store (17 samples, 0.08%)</title><rect x="86.7592%" y="309" width="0.0840%" height="15" fill="rgb(211,8,23)"/><text x="87.0092%" y="319.50"></text></g><g><title>xas_create (5 samples, 0.02%)</title><rect x="86.8185%" y="293" width="0.0247%" height="15" fill="rgb(235,11,44)"/><text x="87.0685%" y="303.50"></text></g><g><title>xas_alloc (3 samples, 0.01%)</title><rect x="86.8283%" y="277" width="0.0148%" height="15" fill="rgb(248,18,52)"/><text x="87.0783%" y="287.50"></text></g><g><title>__mod_memcg_lruvec_state (5 samples, 0.02%)</title><rect x="86.9123%" y="277" width="0.0247%" height="15" fill="rgb(208,4,7)"/><text x="87.1623%" y="287.50"></text></g><g><title>add_to_page_cache_lru (114 samples, 0.56%)</title><rect x="86.3838%" y="341" width="0.5630%" height="15" fill="rgb(240,17,39)"/><text x="86.6338%" y="351.50"></text></g><g><title>lru_cache_add (21 samples, 0.10%)</title><rect x="86.8431%" y="325" width="0.1037%" height="15" fill="rgb(207,170,3)"/><text x="87.0931%" y="335.50"></text></g><g><title>pagevec_lru_move_fn (21 samples, 0.10%)</title><rect x="86.8431%" y="309" width="0.1037%" height="15" fill="rgb(236,100,52)"/><text x="87.0931%" y="319.50"></text></g><g><title>__pagevec_lru_add_fn (18 samples, 0.09%)</title><rect x="86.8580%" y="293" width="0.0889%" height="15" fill="rgb(246,78,51)"/><text x="87.1080%" y="303.50"></text></g><g><title>alloc_pages_current (7 samples, 0.03%)</title><rect x="86.9469%" y="341" width="0.0346%" height="15" fill="rgb(211,17,15)"/><text x="87.1969%" y="351.50"></text></g><g><title>pagecache_get_page (254 samples, 1.25%)</title><rect x="85.8801%" y="357" width="1.2544%" height="15" fill="rgb(209,59,46)"/><text x="86.1301%" y="367.50"></text></g><g><title>find_get_entry (31 samples, 0.15%)</title><rect x="86.9814%" y="341" width="0.1531%" height="15" fill="rgb(210,92,25)"/><text x="87.2314%" y="351.50"></text></g><g><title>xas_load (21 samples, 0.10%)</title><rect x="87.0308%" y="325" width="0.1037%" height="15" fill="rgb(238,174,52)"/><text x="87.2808%" y="335.50"></text></g><g><title>xas_start (3 samples, 0.01%)</title><rect x="87.1197%" y="309" width="0.0148%" height="15" fill="rgb(230,73,7)"/><text x="87.3697%" y="319.50"></text></g><g><title>grab_cache_page_write_begin (256 samples, 1.26%)</title><rect x="85.8751%" y="373" width="1.2643%" height="15" fill="rgb(243,124,40)"/><text x="86.1251%" y="383.50"></text></g><g><title>ext4_da_write_begin (496 samples, 2.45%)</title><rect x="84.7047%" y="389" width="2.4496%" height="15" fill="rgb(244,170,11)"/><text x="84.9547%" y="399.50">ex..</text></g><g><title>unlock_page (3 samples, 0.01%)</title><rect x="87.1395%" y="373" width="0.0148%" height="15" fill="rgb(207,114,54)"/><text x="87.3895%" y="383.50"></text></g><g><title>kmem_cache_free (10 samples, 0.05%)</title><rect x="87.2037%" y="341" width="0.0494%" height="15" fill="rgb(205,42,20)"/><text x="87.4537%" y="351.50"></text></g><g><title>slab_free_freelist_hook (3 samples, 0.01%)</title><rect x="87.2382%" y="325" width="0.0148%" height="15" fill="rgb(230,30,28)"/><text x="87.4882%" y="335.50"></text></g><g><title>__ext4_journal_stop (27 samples, 0.13%)</title><rect x="87.1889%" y="373" width="0.1333%" height="15" fill="rgb(205,73,54)"/><text x="87.4389%" y="383.50"></text></g><g><title>jbd2_journal_stop (25 samples, 0.12%)</title><rect x="87.1987%" y="357" width="0.1235%" height="15" fill="rgb(254,227,23)"/><text x="87.4487%" y="367.50"></text></g><g><title>stop_this_handle (14 samples, 0.07%)</title><rect x="87.2531%" y="341" width="0.0691%" height="15" fill="rgb(228,202,34)"/><text x="87.5031%" y="351.50"></text></g><g><title>__wake_up_common_lock (7 samples, 0.03%)</title><rect x="87.2876%" y="325" width="0.0346%" height="15" fill="rgb(222,225,37)"/><text x="87.5376%" y="335.50"></text></g><g><title>_raw_spin_lock_irqsave (5 samples, 0.02%)</title><rect x="87.2975%" y="309" width="0.0247%" height="15" fill="rgb(221,14,54)"/><text x="87.5475%" y="319.50"></text></g><g><title>xas_load (3 samples, 0.01%)</title><rect x="87.4605%" y="293" width="0.0148%" height="15" fill="rgb(254,102,2)"/><text x="87.7105%" y="303.50"></text></g><g><title>__xa_set_mark (9 samples, 0.04%)</title><rect x="87.4605%" y="309" width="0.0444%" height="15" fill="rgb(232,104,17)"/><text x="87.7105%" y="319.50"></text></g><g><title>xas_set_mark (6 samples, 0.03%)</title><rect x="87.4753%" y="293" width="0.0296%" height="15" fill="rgb(250,220,14)"/><text x="87.7253%" y="303.50"></text></g><g><title>__mod_lruvec_state (4 samples, 0.02%)</title><rect x="87.5346%" y="293" width="0.0198%" height="15" fill="rgb(241,158,9)"/><text x="87.7846%" y="303.50"></text></g><g><title>__mod_node_page_state (4 samples, 0.02%)</title><rect x="87.5346%" y="277" width="0.0198%" height="15" fill="rgb(246,9,43)"/><text x="87.7846%" y="287.50"></text></g><g><title>__set_page_dirty (26 samples, 0.13%)</title><rect x="87.4506%" y="325" width="0.1284%" height="15" fill="rgb(206,73,33)"/><text x="87.7006%" y="335.50"></text></g><g><title>account_page_dirtied (13 samples, 0.06%)</title><rect x="87.5148%" y="309" width="0.0642%" height="15" fill="rgb(222,79,8)"/><text x="87.7648%" y="319.50"></text></g><g><title>percpu_counter_add_batch (4 samples, 0.02%)</title><rect x="87.5593%" y="293" width="0.0198%" height="15" fill="rgb(234,8,54)"/><text x="87.8093%" y="303.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (54 samples, 0.27%)</title><rect x="87.3370%" y="357" width="0.2667%" height="15" fill="rgb(209,134,38)"/><text x="87.5870%" y="367.50"></text></g><g><title>mark_buffer_dirty (41 samples, 0.20%)</title><rect x="87.4012%" y="341" width="0.2025%" height="15" fill="rgb(230,127,29)"/><text x="87.6512%" y="351.50"></text></g><g><title>__ext4_journal_stop (3 samples, 0.01%)</title><rect x="87.6284%" y="341" width="0.0148%" height="15" fill="rgb(242,44,41)"/><text x="87.8784%" y="351.50"></text></g><g><title>__ext4_journal_start_sb (4 samples, 0.02%)</title><rect x="87.6630%" y="325" width="0.0198%" height="15" fill="rgb(222,56,43)"/><text x="87.9130%" y="335.50"></text></g><g><title>__brelse (3 samples, 0.01%)</title><rect x="87.9198%" y="293" width="0.0148%" height="15" fill="rgb(238,39,47)"/><text x="88.1698%" y="303.50"></text></g><g><title>__ext4_handle_dirty_metadata (7 samples, 0.03%)</title><rect x="87.9346%" y="293" width="0.0346%" height="15" fill="rgb(226,79,43)"/><text x="88.1846%" y="303.50"></text></g><g><title>jbd2_journal_dirty_metadata (3 samples, 0.01%)</title><rect x="87.9544%" y="277" width="0.0148%" height="15" fill="rgb(242,105,53)"/><text x="88.2044%" y="287.50"></text></g><g><title>_raw_spin_lock (5 samples, 0.02%)</title><rect x="87.9692%" y="293" width="0.0247%" height="15" fill="rgb(251,132,46)"/><text x="88.2192%" y="303.50"></text></g><g><title>ext4_fc_track_inode (3 samples, 0.01%)</title><rect x="87.9939%" y="293" width="0.0148%" height="15" fill="rgb(231,77,14)"/><text x="88.2439%" y="303.50"></text></g><g><title>ext4_inode_csum_set (20 samples, 0.10%)</title><rect x="88.0087%" y="293" width="0.0988%" height="15" fill="rgb(240,135,9)"/><text x="88.2587%" y="303.50"></text></g><g><title>ext4_inode_csum (19 samples, 0.09%)</title><rect x="88.0136%" y="277" width="0.0938%" height="15" fill="rgb(248,109,14)"/><text x="88.2636%" y="287.50"></text></g><g><title>crypto_shash_update (5 samples, 0.02%)</title><rect x="88.0828%" y="261" width="0.0247%" height="15" fill="rgb(227,146,52)"/><text x="88.3328%" y="271.50"></text></g><g><title>ext4_mark_iloc_dirty (85 samples, 0.42%)</title><rect x="87.7025%" y="309" width="0.4198%" height="15" fill="rgb(232,54,3)"/><text x="87.9525%" y="319.50"></text></g><g><title>map_id_up (3 samples, 0.01%)</title><rect x="88.1075%" y="293" width="0.0148%" height="15" fill="rgb(229,201,43)"/><text x="88.3575%" y="303.50"></text></g><g><title>__ext4_journal_get_write_access (11 samples, 0.05%)</title><rect x="88.1322%" y="293" width="0.0543%" height="15" fill="rgb(252,161,33)"/><text x="88.3822%" y="303.50"></text></g><g><title>jbd2_journal_get_write_access (5 samples, 0.02%)</title><rect x="88.1618%" y="277" width="0.0247%" height="15" fill="rgb(226,146,40)"/><text x="88.4118%" y="287.50"></text></g><g><title>jbd2_write_access_granted.part.0 (4 samples, 0.02%)</title><rect x="88.1667%" y="261" width="0.0198%" height="15" fill="rgb(219,47,25)"/><text x="88.4167%" y="271.50"></text></g><g><title>__getblk_gfp (11 samples, 0.05%)</title><rect x="88.2507%" y="261" width="0.0543%" height="15" fill="rgb(250,135,13)"/><text x="88.5007%" y="271.50"></text></g><g><title>__find_get_block (9 samples, 0.04%)</title><rect x="88.2606%" y="245" width="0.0444%" height="15" fill="rgb(219,229,18)"/><text x="88.5106%" y="255.50"></text></g><g><title>ext4_get_group_desc (6 samples, 0.03%)</title><rect x="88.3050%" y="261" width="0.0296%" height="15" fill="rgb(217,152,27)"/><text x="88.5550%" y="271.50"></text></g><g><title>__mark_inode_dirty (150 samples, 0.74%)</title><rect x="87.6037%" y="357" width="0.7408%" height="15" fill="rgb(225,71,47)"/><text x="87.8537%" y="367.50"></text></g><g><title>ext4_dirty_inode (142 samples, 0.70%)</title><rect x="87.6432%" y="341" width="0.7013%" height="15" fill="rgb(220,139,14)"/><text x="87.8932%" y="351.50"></text></g><g><title>__ext4_mark_inode_dirty (134 samples, 0.66%)</title><rect x="87.6827%" y="325" width="0.6618%" height="15" fill="rgb(247,54,32)"/><text x="87.9327%" y="335.50"></text></g><g><title>ext4_reserve_inode_write (45 samples, 0.22%)</title><rect x="88.1223%" y="309" width="0.2222%" height="15" fill="rgb(252,131,39)"/><text x="88.3723%" y="319.50"></text></g><g><title>ext4_get_inode_loc (32 samples, 0.16%)</title><rect x="88.1865%" y="293" width="0.1580%" height="15" fill="rgb(210,108,39)"/><text x="88.4365%" y="303.50"></text></g><g><title>__ext4_get_inode_loc (32 samples, 0.16%)</title><rect x="88.1865%" y="277" width="0.1580%" height="15" fill="rgb(205,23,29)"/><text x="88.4365%" y="287.50"></text></g><g><title>ext4_da_write_end (243 samples, 1.20%)</title><rect x="87.1543%" y="389" width="1.2001%" height="15" fill="rgb(246,139,46)"/><text x="87.4043%" y="399.50"></text></g><g><title>generic_write_end (209 samples, 1.03%)</title><rect x="87.3222%" y="373" width="1.0322%" height="15" fill="rgb(250,81,26)"/><text x="87.5722%" y="383.50"></text></g><g><title>iov_iter_copy_from_user_atomic (75 samples, 0.37%)</title><rect x="88.3643%" y="389" width="0.3704%" height="15" fill="rgb(214,104,7)"/><text x="88.6143%" y="399.50"></text></g><g><title>copy_user_enhanced_fast_string (71 samples, 0.35%)</title><rect x="88.3840%" y="373" width="0.3507%" height="15" fill="rgb(233,189,8)"/><text x="88.6340%" y="383.50"></text></g><g><title>generic_perform_write (868 samples, 4.29%)</title><rect x="84.5367%" y="405" width="4.2868%" height="15" fill="rgb(228,141,17)"/><text x="84.7867%" y="415.50">gener..</text></g><g><title>iov_iter_fault_in_readable (18 samples, 0.09%)</title><rect x="88.7347%" y="389" width="0.0889%" height="15" fill="rgb(247,157,1)"/><text x="88.9847%" y="399.50"></text></g><g><title>__get_user_nocheck_1 (16 samples, 0.08%)</title><rect x="88.7446%" y="373" width="0.0790%" height="15" fill="rgb(249,225,5)"/><text x="88.9946%" y="383.50"></text></g><g><title>ext4_buffered_write_iter (896 samples, 4.43%)</title><rect x="84.4034%" y="421" width="4.4251%" height="15" fill="rgb(242,55,13)"/><text x="84.6534%" y="431.50">ext4_..</text></g><g><title>new_sync_write (906 samples, 4.47%)</title><rect x="84.3738%" y="437" width="4.4745%" height="15" fill="rgb(230,49,50)"/><text x="84.6238%" y="447.50">new_s..</text></g><g><title>ext4_file_write_iter (4 samples, 0.02%)</title><rect x="88.8285%" y="421" width="0.0198%" height="15" fill="rgb(241,111,38)"/><text x="89.0785%" y="431.50"></text></g><g><title>ksys_write (956 samples, 4.72%)</title><rect x="84.1515%" y="469" width="4.7215%" height="15" fill="rgb(252,155,4)"/><text x="84.4015%" y="479.50">ksys_w..</text></g><g><title>vfs_write (927 samples, 4.58%)</title><rect x="84.2947%" y="453" width="4.5782%" height="15" fill="rgb(212,69,32)"/><text x="84.5447%" y="463.50">vfs_w..</text></g><g><title>security_file_permission (4 samples, 0.02%)</title><rect x="88.8532%" y="437" width="0.0198%" height="15" fill="rgb(243,107,47)"/><text x="89.1032%" y="447.50"></text></g><g><title>apparmor_file_permission (4 samples, 0.02%)</title><rect x="88.8532%" y="421" width="0.0198%" height="15" fill="rgb(247,130,12)"/><text x="89.1032%" y="431.50"></text></g><g><title>do_syscall_64 (960 samples, 4.74%)</title><rect x="84.1367%" y="485" width="4.7412%" height="15" fill="rgb(233,74,16)"/><text x="84.3867%" y="495.50">do_sys..</text></g><g><title>entry_SYSCALL_64_after_hwframe (983 samples, 4.85%)</title><rect x="84.1318%" y="501" width="4.8548%" height="15" fill="rgb(208,58,18)"/><text x="84.3818%" y="511.50">entry_..</text></g><g><title>syscall_exit_to_user_mode (22 samples, 0.11%)</title><rect x="88.8779%" y="485" width="0.1087%" height="15" fill="rgb(242,225,1)"/><text x="89.1279%" y="495.50"></text></g><g><title>syscall_return_via_sysret (17 samples, 0.08%)</title><rect x="88.9915%" y="501" width="0.0840%" height="15" fill="rgb(249,39,40)"/><text x="89.2415%" y="511.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1,089 samples, 5.38%)</title><rect x="83.7021%" y="629" width="5.3783%" height="15" fill="rgb(207,72,44)"/><text x="83.9521%" y="639.50">tokio::..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1,087 samples, 5.37%)</title><rect x="83.7120%" y="613" width="5.3684%" height="15" fill="rgb(215,193,12)"/><text x="83.9620%" y="623.50">&lt;tokio:..</text></g><g><title>std::io::Write::write_all (1,082 samples, 5.34%)</title><rect x="83.7367%" y="597" width="5.3437%" height="15" fill="rgb(248,41,39)"/><text x="83.9867%" y="607.50">std::io..</text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,078 samples, 5.32%)</title><rect x="83.7564%" y="581" width="5.3240%" height="15" fill="rgb(253,85,4)"/><text x="84.0064%" y="591.50">&lt;&amp;std::..</text></g><g><title>std::sys::unix::fs::File::write (1,076 samples, 5.31%)</title><rect x="83.7663%" y="565" width="5.3141%" height="15" fill="rgb(243,70,31)"/><text x="84.0163%" y="575.50">std::sy..</text></g><g><title>std::sys::unix::fd::FileDesc::write (1,076 samples, 5.31%)</title><rect x="83.7663%" y="549" width="5.3141%" height="15" fill="rgb(253,195,26)"/><text x="84.0163%" y="559.50">std::sy..</text></g><g><title>__libc_write (1,076 samples, 5.31%)</title><rect x="83.7663%" y="533" width="5.3141%" height="15" fill="rgb(243,42,11)"/><text x="84.0163%" y="543.50">__libc_..</text></g><g><title>__libc_write (1,076 samples, 5.31%)</title><rect x="83.7663%" y="517" width="5.3141%" height="15" fill="rgb(239,66,17)"/><text x="84.0163%" y="527.50">__libc_..</text></g><g><title>enqueue_task_fair (8 samples, 0.04%)</title><rect x="89.1495%" y="421" width="0.0395%" height="15" fill="rgb(217,132,21)"/><text x="89.3995%" y="431.50"></text></g><g><title>enqueue_entity (4 samples, 0.02%)</title><rect x="89.1693%" y="405" width="0.0198%" height="15" fill="rgb(252,202,21)"/><text x="89.4193%" y="415.50"></text></g><g><title>ttwu_do_activate (14 samples, 0.07%)</title><rect x="89.1495%" y="437" width="0.0691%" height="15" fill="rgb(233,98,36)"/><text x="89.3995%" y="447.50"></text></g><g><title>psi_task_change (6 samples, 0.03%)</title><rect x="89.1891%" y="421" width="0.0296%" height="15" fill="rgb(216,153,54)"/><text x="89.4391%" y="431.50"></text></g><g><title>psi_group_change (5 samples, 0.02%)</title><rect x="89.1940%" y="405" width="0.0247%" height="15" fill="rgb(250,99,7)"/><text x="89.4440%" y="415.50"></text></g><g><title>do_syscall_64 (22 samples, 0.11%)</title><rect x="89.1199%" y="533" width="0.1087%" height="15" fill="rgb(207,56,50)"/><text x="89.3699%" y="543.50"></text></g><g><title>__x64_sys_futex (22 samples, 0.11%)</title><rect x="89.1199%" y="517" width="0.1087%" height="15" fill="rgb(244,61,34)"/><text x="89.3699%" y="527.50"></text></g><g><title>do_futex (22 samples, 0.11%)</title><rect x="89.1199%" y="501" width="0.1087%" height="15" fill="rgb(241,50,38)"/><text x="89.3699%" y="511.50"></text></g><g><title>futex_wake (22 samples, 0.11%)</title><rect x="89.1199%" y="485" width="0.1087%" height="15" fill="rgb(212,166,30)"/><text x="89.3699%" y="495.50"></text></g><g><title>wake_up_q (17 samples, 0.08%)</title><rect x="89.1446%" y="469" width="0.0840%" height="15" fill="rgb(249,127,32)"/><text x="89.3946%" y="479.50"></text></g><g><title>try_to_wake_up (17 samples, 0.08%)</title><rect x="89.1446%" y="453" width="0.0840%" height="15" fill="rgb(209,103,0)"/><text x="89.3946%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (24 samples, 0.12%)</title><rect x="89.1199%" y="549" width="0.1185%" height="15" fill="rgb(238,209,51)"/><text x="89.3699%" y="559.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8,076 samples, 39.89%)</title><rect x="49.3580%" y="725" width="39.8854%" height="15" fill="rgb(237,56,23)"/><text x="49.6080%" y="735.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::ca..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8,076 samples, 39.89%)</title><rect x="49.3580%" y="709" width="39.8854%" height="15" fill="rgb(215,153,46)"/><text x="49.6080%" y="719.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::ca..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (8,076 samples, 39.89%)</title><rect x="49.3580%" y="693" width="39.8854%" height="15" fill="rgb(224,49,31)"/><text x="49.6080%" y="703.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8,075 samples, 39.88%)</title><rect x="49.3629%" y="677" width="39.8805%" height="15" fill="rgb(250,18,42)"/><text x="49.6129%" y="687.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (8,075 samples, 39.88%)</title><rect x="49.3629%" y="661" width="39.8805%" height="15" fill="rgb(215,176,39)"/><text x="49.6129%" y="671.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7,604 samples, 37.55%)</title><rect x="51.6891%" y="645" width="37.5543%" height="15" fill="rgb(223,77,29)"/><text x="51.9391%" y="655.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (33 samples, 0.16%)</title><rect x="89.0804%" y="629" width="0.1630%" height="15" fill="rgb(234,94,52)"/><text x="89.3304%" y="639.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (27 samples, 0.13%)</title><rect x="89.1100%" y="613" width="0.1333%" height="15" fill="rgb(220,154,50)"/><text x="89.3600%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (27 samples, 0.13%)</title><rect x="89.1100%" y="597" width="0.1333%" height="15" fill="rgb(212,11,10)"/><text x="89.3600%" y="607.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (26 samples, 0.13%)</title><rect x="89.1150%" y="581" width="0.1284%" height="15" fill="rgb(205,166,19)"/><text x="89.3650%" y="591.50"></text></g><g><title>syscall (25 samples, 0.12%)</title><rect x="89.1199%" y="565" width="0.1235%" height="15" fill="rgb(244,198,16)"/><text x="89.3699%" y="575.50"></text></g><g><title>down_write_killable (5 samples, 0.02%)</title><rect x="89.2483%" y="597" width="0.0247%" height="15" fill="rgb(219,69,12)"/><text x="89.4983%" y="607.50"></text></g><g><title>rwsem_down_write_slowpath (5 samples, 0.02%)</title><rect x="89.2483%" y="581" width="0.0247%" height="15" fill="rgb(245,30,7)"/><text x="89.4983%" y="591.50"></text></g><g><title>schedule (5 samples, 0.02%)</title><rect x="89.2483%" y="565" width="0.0247%" height="15" fill="rgb(218,221,48)"/><text x="89.4983%" y="575.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="89.2483%" y="549" width="0.0247%" height="15" fill="rgb(216,66,15)"/><text x="89.4983%" y="559.50"></text></g><g><title>finish_task_switch (5 samples, 0.02%)</title><rect x="89.2483%" y="533" width="0.0247%" height="15" fill="rgb(226,122,50)"/><text x="89.4983%" y="543.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="89.2483%" y="517" width="0.0247%" height="15" fill="rgb(239,156,16)"/><text x="89.4983%" y="527.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.02%)</title><rect x="89.2483%" y="501" width="0.0247%" height="15" fill="rgb(224,27,38)"/><text x="89.4983%" y="511.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="89.2483%" y="485" width="0.0247%" height="15" fill="rgb(224,39,27)"/><text x="89.4983%" y="495.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.03%)</title><rect x="89.2434%" y="725" width="0.0346%" height="15" fill="rgb(215,92,29)"/><text x="89.4934%" y="735.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (7 samples, 0.03%)</title><rect x="89.2434%" y="709" width="0.0346%" height="15" fill="rgb(207,159,16)"/><text x="89.4934%" y="719.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (7 samples, 0.03%)</title><rect x="89.2434%" y="693" width="0.0346%" height="15" fill="rgb(238,163,47)"/><text x="89.4934%" y="703.50"></text></g><g><title>__GI_munmap (7 samples, 0.03%)</title><rect x="89.2434%" y="677" width="0.0346%" height="15" fill="rgb(219,91,49)"/><text x="89.4934%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="89.2434%" y="661" width="0.0346%" height="15" fill="rgb(227,167,31)"/><text x="89.4934%" y="671.50"></text></g><g><title>do_syscall_64 (7 samples, 0.03%)</title><rect x="89.2434%" y="645" width="0.0346%" height="15" fill="rgb(234,80,54)"/><text x="89.4934%" y="655.50"></text></g><g><title>__x64_sys_munmap (7 samples, 0.03%)</title><rect x="89.2434%" y="629" width="0.0346%" height="15" fill="rgb(212,114,2)"/><text x="89.4934%" y="639.50"></text></g><g><title>__vm_munmap (7 samples, 0.03%)</title><rect x="89.2434%" y="613" width="0.0346%" height="15" fill="rgb(234,50,24)"/><text x="89.4934%" y="623.50"></text></g><g><title>__GI___clone (8,144 samples, 40.22%)</title><rect x="49.0616%" y="773" width="40.2213%" height="15" fill="rgb(221,68,8)"/><text x="49.3116%" y="783.50">__GI___clone</text></g><g><title>start_thread (8,139 samples, 40.20%)</title><rect x="49.0863%" y="757" width="40.1966%" height="15" fill="rgb(254,180,31)"/><text x="49.3363%" y="767.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (8,084 samples, 39.92%)</title><rect x="49.3580%" y="741" width="39.9249%" height="15" fill="rgb(247,130,50)"/><text x="49.6080%" y="751.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="89.2928%" y="773" width="0.0148%" height="15" fill="rgb(211,109,4)"/><text x="89.5428%" y="783.50"></text></g><g><title>asm_exc_page_fault (87 samples, 0.43%)</title><rect x="89.3175%" y="773" width="0.4297%" height="15" fill="rgb(238,50,21)"/><text x="89.5675%" y="783.50"></text></g><g><title>common_interrupt (4 samples, 0.02%)</title><rect x="99.6345%" y="741" width="0.0198%" height="15" fill="rgb(225,57,45)"/><text x="99.8845%" y="751.50"></text></g><g><title>handle_fasteoi_irq (3 samples, 0.01%)</title><rect x="99.6395%" y="725" width="0.0148%" height="15" fill="rgb(209,196,50)"/><text x="99.8895%" y="735.50"></text></g><g><title>handle_irq_event (3 samples, 0.01%)</title><rect x="99.6395%" y="709" width="0.0148%" height="15" fill="rgb(242,140,13)"/><text x="99.8895%" y="719.50"></text></g><g><title>__handle_irq_event_percpu (3 samples, 0.01%)</title><rect x="99.6395%" y="693" width="0.0148%" height="15" fill="rgb(217,111,7)"/><text x="99.8895%" y="703.50"></text></g><g><title>i2c_dw_isr (3 samples, 0.01%)</title><rect x="99.6395%" y="677" width="0.0148%" height="15" fill="rgb(253,193,51)"/><text x="99.8895%" y="687.50"></text></g><g><title>regmap_read (3 samples, 0.01%)</title><rect x="99.6395%" y="661" width="0.0148%" height="15" fill="rgb(252,70,29)"/><text x="99.8895%" y="671.50"></text></g><g><title>_regmap_read (3 samples, 0.01%)</title><rect x="99.6395%" y="645" width="0.0148%" height="15" fill="rgb(232,127,12)"/><text x="99.8895%" y="655.50"></text></g><g><title>dw_reg_read (3 samples, 0.01%)</title><rect x="99.6395%" y="629" width="0.0148%" height="15" fill="rgb(211,180,21)"/><text x="99.8895%" y="639.50"></text></g><g><title>asm_common_interrupt (5 samples, 0.02%)</title><rect x="99.6345%" y="757" width="0.0247%" height="15" fill="rgb(229,72,13)"/><text x="99.8845%" y="767.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="99.6592%" y="725" width="0.0198%" height="15" fill="rgb(240,211,49)"/><text x="99.9092%" y="735.50"></text></g><g><title>hrtimer_interrupt (3 samples, 0.01%)</title><rect x="99.6642%" y="709" width="0.0148%" height="15" fill="rgb(219,149,40)"/><text x="99.9142%" y="719.50"></text></g><g><title>__hrtimer_run_queues (3 samples, 0.01%)</title><rect x="99.6642%" y="693" width="0.0148%" height="15" fill="rgb(210,127,46)"/><text x="99.9142%" y="703.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="99.6592%" y="757" width="0.0247%" height="15" fill="rgb(220,106,7)"/><text x="99.9092%" y="767.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="99.6592%" y="741" width="0.0247%" height="15" fill="rgb(249,31,22)"/><text x="99.9092%" y="751.50"></text></g><g><title>blake3_compress_in_place_sse41 (2,012 samples, 9.94%)</title><rect x="89.7521%" y="773" width="9.9368%" height="15" fill="rgb(253,1,49)"/><text x="90.0021%" y="783.50">blake3_compres..</text></g><g><title>futex_wait_queue_me (3 samples, 0.01%)</title><rect x="99.7136%" y="693" width="0.0148%" height="15" fill="rgb(227,144,33)"/><text x="99.9636%" y="703.50"></text></g><g><title>futex_wait (4 samples, 0.02%)</title><rect x="99.7136%" y="709" width="0.0198%" height="15" fill="rgb(249,163,44)"/><text x="99.9636%" y="719.50"></text></g><g><title>do_futex (8 samples, 0.04%)</title><rect x="99.7037%" y="725" width="0.0395%" height="15" fill="rgb(234,15,39)"/><text x="99.9537%" y="735.50"></text></g><g><title>__x64_sys_futex (9 samples, 0.04%)</title><rect x="99.7037%" y="741" width="0.0444%" height="15" fill="rgb(207,66,16)"/><text x="99.9537%" y="751.50"></text></g><g><title>balance_dirty_pages_ratelimited (4 samples, 0.02%)</title><rect x="99.7679%" y="661" width="0.0198%" height="15" fill="rgb(233,112,24)"/><text x="100.0179%" y="671.50"></text></g><g><title>ext4_block_write_begin (6 samples, 0.03%)</title><rect x="99.7926%" y="645" width="0.0296%" height="15" fill="rgb(230,90,22)"/><text x="100.0426%" y="655.50"></text></g><g><title>ext4_da_get_block_prep (3 samples, 0.01%)</title><rect x="99.8074%" y="629" width="0.0148%" height="15" fill="rgb(229,61,13)"/><text x="100.0574%" y="639.50"></text></g><g><title>ext4_da_write_begin (8 samples, 0.04%)</title><rect x="99.7876%" y="661" width="0.0395%" height="15" fill="rgb(225,57,24)"/><text x="100.0376%" y="671.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (3 samples, 0.01%)</title><rect x="99.8321%" y="629" width="0.0148%" height="15" fill="rgb(208,169,48)"/><text x="100.0821%" y="639.50"></text></g><g><title>mark_buffer_dirty (3 samples, 0.01%)</title><rect x="99.8321%" y="613" width="0.0148%" height="15" fill="rgb(244,218,51)"/><text x="100.0821%" y="623.50"></text></g><g><title>__set_page_dirty (3 samples, 0.01%)</title><rect x="99.8321%" y="597" width="0.0148%" height="15" fill="rgb(214,148,10)"/><text x="100.0821%" y="607.50"></text></g><g><title>ext4_mark_iloc_dirty (3 samples, 0.01%)</title><rect x="99.8469%" y="581" width="0.0148%" height="15" fill="rgb(225,174,27)"/><text x="100.0969%" y="591.50"></text></g><g><title>generic_perform_write (22 samples, 0.11%)</title><rect x="99.7679%" y="677" width="0.1087%" height="15" fill="rgb(230,96,26)"/><text x="100.0179%" y="687.50"></text></g><g><title>ext4_da_write_end (10 samples, 0.05%)</title><rect x="99.8271%" y="661" width="0.0494%" height="15" fill="rgb(232,10,30)"/><text x="100.0771%" y="671.50"></text></g><g><title>generic_write_end (9 samples, 0.04%)</title><rect x="99.8321%" y="645" width="0.0444%" height="15" fill="rgb(222,8,50)"/><text x="100.0821%" y="655.50"></text></g><g><title>__mark_inode_dirty (6 samples, 0.03%)</title><rect x="99.8469%" y="629" width="0.0296%" height="15" fill="rgb(213,81,27)"/><text x="100.0969%" y="639.50"></text></g><g><title>ext4_dirty_inode (6 samples, 0.03%)</title><rect x="99.8469%" y="613" width="0.0296%" height="15" fill="rgb(245,50,10)"/><text x="100.0969%" y="623.50"></text></g><g><title>__ext4_mark_inode_dirty (6 samples, 0.03%)</title><rect x="99.8469%" y="597" width="0.0296%" height="15" fill="rgb(216,100,18)"/><text x="100.0969%" y="607.50"></text></g><g><title>ext4_reserve_inode_write (3 samples, 0.01%)</title><rect x="99.8617%" y="581" width="0.0148%" height="15" fill="rgb(236,147,54)"/><text x="100.1117%" y="591.50"></text></g><g><title>ext4_buffered_write_iter (24 samples, 0.12%)</title><rect x="99.7629%" y="693" width="0.1185%" height="15" fill="rgb(205,143,26)"/><text x="100.0129%" y="703.50"></text></g><g><title>new_sync_write (25 samples, 0.12%)</title><rect x="99.7629%" y="709" width="0.1235%" height="15" fill="rgb(236,26,9)"/><text x="100.0129%" y="719.50"></text></g><g><title>do_syscall_64 (38 samples, 0.19%)</title><rect x="99.7037%" y="757" width="0.1877%" height="15" fill="rgb(221,165,53)"/><text x="99.9537%" y="767.50"></text></g><g><title>ksys_write (27 samples, 0.13%)</title><rect x="99.7580%" y="741" width="0.1333%" height="15" fill="rgb(214,110,17)"/><text x="100.0080%" y="751.50"></text></g><g><title>vfs_write (26 samples, 0.13%)</title><rect x="99.7629%" y="725" width="0.1284%" height="15" fill="rgb(237,197,12)"/><text x="100.0129%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (40 samples, 0.20%)</title><rect x="99.6987%" y="773" width="0.1976%" height="15" fill="rgb(205,84,17)"/><text x="99.9487%" y="783.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (15 samples, 0.07%)</title><rect x="99.8963%" y="773" width="0.0741%" height="15" fill="rgb(237,18,45)"/><text x="100.1463%" y="783.50"></text></g><g><title>all (20,248 samples, 100%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(221,87,14)"/><text x="0.2500%" y="815.50"></text></g><g><title>tokio-runtime-w (11,087 samples, 54.76%)</title><rect x="45.2440%" y="789" width="54.7560%" height="15" fill="rgb(238,186,15)"/><text x="45.4940%" y="799.50">tokio-runtime-w</text></g></svg></svg>