<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="726" onload="init(evt)" viewBox="0 0 1200 726" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="726" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="709.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="709.00"> </text><svg id="frames" x="10" width="1180"><g><title>perf_5.10 (5 samples, 0.02%)</title><rect x="0.0000%" y="661" width="0.0249%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="0.0000%" y="645" width="0.0249%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="655.50"></text></g><g><title>do_syscall_64 (5 samples, 0.02%)</title><rect x="0.0000%" y="629" width="0.0249%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="639.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.02%)</title><rect x="0.0000%" y="613" width="0.0249%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="623.50"></text></g><g><title>do_execveat_common (5 samples, 0.02%)</title><rect x="0.0000%" y="597" width="0.0249%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="607.50"></text></g><g><title>bprm_execve (5 samples, 0.02%)</title><rect x="0.0000%" y="581" width="0.0249%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="591.50"></text></g><g><title>load_elf_binary (5 samples, 0.02%)</title><rect x="0.0000%" y="565" width="0.0249%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="575.50"></text></g><g><title>begin_new_exec (5 samples, 0.02%)</title><rect x="0.0000%" y="549" width="0.0249%" height="15" fill="rgb(228,23,34)"/><text x="0.2500%" y="559.50"></text></g><g><title>perf_event_exec (5 samples, 0.02%)</title><rect x="0.0000%" y="533" width="0.0249%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="543.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.02%)</title><rect x="0.0000%" y="517" width="0.0249%" height="15" fill="rgb(220,122,19)"/><text x="0.2500%" y="527.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="0.0000%" y="501" width="0.0249%" height="15" fill="rgb(250,228,42)"/><text x="0.2500%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.03%)</title><rect x="0.1543%" y="629" width="0.0348%" height="15" fill="rgb(240,193,28)"/><text x="0.4043%" y="639.50"></text></g><g><title>__rdl_alloc (3 samples, 0.01%)</title><rect x="0.1892%" y="629" width="0.0149%" height="15" fill="rgb(216,20,37)"/><text x="0.4392%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.01%)</title><rect x="0.1892%" y="613" width="0.0149%" height="15" fill="rgb(206,188,39)"/><text x="0.4392%" y="623.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="0.2041%" y="629" width="0.0149%" height="15" fill="rgb(217,207,13)"/><text x="0.4541%" y="639.50"></text></g><g><title>_int_malloc (3 samples, 0.01%)</title><rect x="0.2190%" y="629" width="0.0149%" height="15" fill="rgb(231,73,38)"/><text x="0.4690%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.10%)</title><rect x="0.2340%" y="629" width="0.1045%" height="15" fill="rgb(225,20,46)"/><text x="0.4840%" y="639.50"></text></g><g><title>ate::event::EventData::as_header_raw (4 samples, 0.02%)</title><rect x="0.3534%" y="629" width="0.0199%" height="15" fill="rgb(210,31,41)"/><text x="0.6034%" y="639.50"></text></g><g><title>ate::multi::ChainMultiUser::metadata_lint_event (6 samples, 0.03%)</title><rect x="0.3833%" y="629" width="0.0299%" height="15" fill="rgb(221,200,47)"/><text x="0.6333%" y="639.50"></text></g><g><title>ate::tree::TreeAuthorityPlugin::compute_auth (4 samples, 0.02%)</title><rect x="0.4231%" y="629" width="0.0199%" height="15" fill="rgb(226,26,5)"/><text x="0.6731%" y="639.50"></text></g><g><title>blake3::ChunkState::update (9 samples, 0.04%)</title><rect x="0.4431%" y="629" width="0.0448%" height="15" fill="rgb(249,33,26)"/><text x="0.6931%" y="639.50"></text></g><g><title>[[heap]] (79 samples, 0.39%)</title><rect x="0.1245%" y="645" width="0.3933%" height="15" fill="rgb(235,183,28)"/><text x="0.3745%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (21 samples, 0.10%)</title><rect x="0.5177%" y="629" width="0.1045%" height="15" fill="rgb(221,5,38)"/><text x="0.7677%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.10%)</title><rect x="0.6223%" y="629" width="0.1045%" height="15" fill="rgb(247,18,42)"/><text x="0.8723%" y="639.50"></text></g><g><title>&lt;ate::dio::dao::Dao&lt;D&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="0.7268%" y="629" width="0.0199%" height="15" fill="rgb(241,131,45)"/><text x="0.9768%" y="639.50"></text></g><g><title>_int_free (18 samples, 0.09%)</title><rect x="0.7616%" y="629" width="0.0896%" height="15" fill="rgb(249,31,29)"/><text x="1.0116%" y="639.50"></text></g><g><title>_int_malloc (5 samples, 0.02%)</title><rect x="0.8513%" y="629" width="0.0249%" height="15" fill="rgb(225,111,53)"/><text x="1.1013%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (44 samples, 0.22%)</title><rect x="0.8761%" y="629" width="0.2190%" height="15" fill="rgb(238,160,17)"/><text x="1.1261%" y="639.50"></text></g><g><title>ate::dio::dao::Row&lt;D&gt;::as_row_data (5 samples, 0.02%)</title><rect x="1.1051%" y="629" width="0.0249%" height="15" fill="rgb(214,148,48)"/><text x="1.3551%" y="639.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (3 samples, 0.01%)</title><rect x="1.1300%" y="629" width="0.0149%" height="15" fill="rgb(232,36,49)"/><text x="1.3800%" y="639.50"></text></g><g><title>ate::multi::ChainMultiUser::data_as_underlay (4 samples, 0.02%)</title><rect x="1.1499%" y="629" width="0.0199%" height="15" fill="rgb(209,103,24)"/><text x="1.3999%" y="639.50"></text></g><g><title>blake3::ChunkState::update (5 samples, 0.02%)</title><rect x="1.1798%" y="629" width="0.0249%" height="15" fill="rgb(229,88,8)"/><text x="1.4298%" y="639.50"></text></g><g><title>blake3::hash (5 samples, 0.02%)</title><rect x="1.2047%" y="629" width="0.0249%" height="15" fill="rgb(213,181,19)"/><text x="1.4547%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (28 samples, 0.14%)</title><rect x="1.2296%" y="629" width="0.1394%" height="15" fill="rgb(254,191,54)"/><text x="1.4796%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (46 samples, 0.23%)</title><rect x="1.3740%" y="629" width="0.2290%" height="15" fill="rgb(241,83,37)"/><text x="1.6240%" y="639.50"></text></g><g><title>[[stack]] (225 samples, 1.12%)</title><rect x="0.5177%" y="645" width="1.1201%" height="15" fill="rgb(233,36,39)"/><text x="0.7677%" y="655.50"></text></g><g><title>stress::_::&lt;impl serde::ser::Serialize for stress::MyTestObject&gt;::serialize (7 samples, 0.03%)</title><rect x="1.6029%" y="629" width="0.0348%" height="15" fill="rgb(226,3,54)"/><text x="1.8529%" y="639.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.05%)</title><rect x="1.6378%" y="645" width="0.0548%" height="15" fill="rgb(245,192,40)"/><text x="1.8878%" y="655.50"></text></g><g><title>_int_free (11 samples, 0.05%)</title><rect x="1.6378%" y="629" width="0.0548%" height="15" fill="rgb(238,167,29)"/><text x="1.8878%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.11%)</title><rect x="1.7274%" y="549" width="0.1095%" height="15" fill="rgb(232,182,51)"/><text x="1.9774%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.11%)</title><rect x="1.7274%" y="533" width="0.1095%" height="15" fill="rgb(231,60,39)"/><text x="1.9774%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.11%)</title><rect x="1.7274%" y="517" width="0.1095%" height="15" fill="rgb(208,69,12)"/><text x="1.9774%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.11%)</title><rect x="1.7274%" y="501" width="0.1095%" height="15" fill="rgb(235,93,37)"/><text x="1.9774%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.11%)</title><rect x="1.7274%" y="485" width="0.1095%" height="15" fill="rgb(213,116,39)"/><text x="1.9774%" y="495.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.11%)</title><rect x="1.7274%" y="469" width="0.1095%" height="15" fill="rgb(222,207,29)"/><text x="1.9774%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (45 samples, 0.22%)</title><rect x="1.6975%" y="629" width="0.2240%" height="15" fill="rgb(206,96,30)"/><text x="1.9475%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (39 samples, 0.19%)</title><rect x="1.7274%" y="613" width="0.1941%" height="15" fill="rgb(218,138,4)"/><text x="1.9774%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (39 samples, 0.19%)</title><rect x="1.7274%" y="597" width="0.1941%" height="15" fill="rgb(250,191,14)"/><text x="1.9774%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (39 samples, 0.19%)</title><rect x="1.7274%" y="581" width="0.1941%" height="15" fill="rgb(239,60,40)"/><text x="1.9774%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (39 samples, 0.19%)</title><rect x="1.7274%" y="565" width="0.1941%" height="15" fill="rgb(206,27,48)"/><text x="1.9774%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (17 samples, 0.08%)</title><rect x="1.8369%" y="549" width="0.0846%" height="15" fill="rgb(225,35,8)"/><text x="2.0869%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.08%)</title><rect x="1.8369%" y="533" width="0.0846%" height="15" fill="rgb(250,213,24)"/><text x="2.0869%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="1.9215%" y="629" width="0.0149%" height="15" fill="rgb(247,123,22)"/><text x="2.1715%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="2.0560%" y="533" width="0.0249%" height="15" fill="rgb(231,138,38)"/><text x="2.3060%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="2.0560%" y="517" width="0.0249%" height="15" fill="rgb(231,145,46)"/><text x="2.3060%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="2.0560%" y="501" width="0.0249%" height="15" fill="rgb(251,118,11)"/><text x="2.3060%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="2.0560%" y="485" width="0.0249%" height="15" fill="rgb(217,147,25)"/><text x="2.3060%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="2.0560%" y="469" width="0.0249%" height="15" fill="rgb(247,81,37)"/><text x="2.3060%" y="479.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="2.0560%" y="453" width="0.0249%" height="15" fill="rgb(209,12,38)"/><text x="2.3060%" y="463.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.02%)</title><rect x="2.0560%" y="437" width="0.0249%" height="15" fill="rgb(227,1,9)"/><text x="2.3060%" y="447.50"></text></g><g><title>tcache_get (4 samples, 0.02%)</title><rect x="2.0609%" y="421" width="0.0199%" height="15" fill="rgb(248,47,43)"/><text x="2.3109%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.05%)</title><rect x="2.0510%" y="613" width="0.0498%" height="15" fill="rgb(221,10,30)"/><text x="2.3010%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.04%)</title><rect x="2.0560%" y="597" width="0.0448%" height="15" fill="rgb(210,229,1)"/><text x="2.3060%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.04%)</title><rect x="2.0560%" y="581" width="0.0448%" height="15" fill="rgb(222,148,37)"/><text x="2.3060%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.04%)</title><rect x="2.0560%" y="565" width="0.0448%" height="15" fill="rgb(234,67,33)"/><text x="2.3060%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.04%)</title><rect x="2.0560%" y="549" width="0.0448%" height="15" fill="rgb(247,98,35)"/><text x="2.3060%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.02%)</title><rect x="2.0808%" y="533" width="0.0199%" height="15" fill="rgb(247,138,52)"/><text x="2.3308%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="2.0808%" y="517" width="0.0199%" height="15" fill="rgb(213,79,30)"/><text x="2.3308%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="2.0808%" y="501" width="0.0199%" height="15" fill="rgb(246,177,23)"/><text x="2.3308%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.03%)</title><rect x="3.7336%" y="565" width="0.0299%" height="15" fill="rgb(230,62,27)"/><text x="3.9836%" y="575.50"></text></g><g><title>_int_malloc (1,879 samples, 9.35%)</title><rect x="5.0627%" y="405" width="9.3538%" height="15" fill="rgb(216,154,8)"/><text x="5.3127%" y="415.50">_int_malloc</text></g><g><title>tcache_put (28 samples, 0.14%)</title><rect x="14.2772%" y="389" width="0.1394%" height="15" fill="rgb(244,35,45)"/><text x="14.5272%" y="399.50"></text></g><g><title>checked_request2size (18 samples, 0.09%)</title><rect x="14.4215%" y="405" width="0.0896%" height="15" fill="rgb(251,115,12)"/><text x="14.6715%" y="415.50"></text></g><g><title>__GI___libc_malloc (2,190 samples, 10.90%)</title><rect x="3.8331%" y="421" width="10.9020%" height="15" fill="rgb(240,54,50)"/><text x="4.0831%" y="431.50">__GI___libc_mall..</text></g><g><title>tcache_get (45 samples, 0.22%)</title><rect x="14.5112%" y="405" width="0.2240%" height="15" fill="rgb(233,84,52)"/><text x="14.7612%" y="415.50"></text></g><g><title>__rdl_alloc (32 samples, 0.16%)</title><rect x="14.7352%" y="421" width="0.1593%" height="15" fill="rgb(207,117,47)"/><text x="14.9852%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (32 samples, 0.16%)</title><rect x="14.7352%" y="405" width="0.1593%" height="15" fill="rgb(249,43,39)"/><text x="14.9852%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,254 samples, 11.22%)</title><rect x="3.7734%" y="517" width="11.2206%" height="15" fill="rgb(209,38,44)"/><text x="4.0234%" y="527.50">alloc::vec::Vec&lt;T..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,254 samples, 11.22%)</title><rect x="3.7734%" y="501" width="11.2206%" height="15" fill="rgb(236,212,23)"/><text x="4.0234%" y="511.50">alloc::raw_vec::R..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,254 samples, 11.22%)</title><rect x="3.7734%" y="485" width="11.2206%" height="15" fill="rgb(242,79,21)"/><text x="4.0234%" y="495.50">alloc::raw_vec::R..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,242 samples, 11.16%)</title><rect x="3.8331%" y="469" width="11.1609%" height="15" fill="rgb(211,96,35)"/><text x="4.0831%" y="479.50">&lt;alloc::alloc::G..</text></g><g><title>alloc::alloc::Global::alloc_impl (2,242 samples, 11.16%)</title><rect x="3.8331%" y="453" width="11.1609%" height="15" fill="rgb(253,215,40)"/><text x="4.0831%" y="463.50">alloc::alloc::Gl..</text></g><g><title>alloc::alloc::alloc (2,242 samples, 11.16%)</title><rect x="3.8331%" y="437" width="11.1609%" height="15" fill="rgb(211,81,21)"/><text x="4.0831%" y="447.50">alloc::alloc::al..</text></g><g><title>__rust_alloc (20 samples, 0.10%)</title><rect x="14.8945%" y="421" width="0.0996%" height="15" fill="rgb(208,190,38)"/><text x="15.1445%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,341 samples, 11.65%)</title><rect x="3.6340%" y="597" width="11.6537%" height="15" fill="rgb(235,213,38)"/><text x="3.8840%" y="607.50">&lt;alloc::string::S..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,321 samples, 11.55%)</title><rect x="3.7336%" y="581" width="11.5542%" height="15" fill="rgb(237,122,38)"/><text x="3.9836%" y="591.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,315 samples, 11.52%)</title><rect x="3.7634%" y="565" width="11.5243%" height="15" fill="rgb(244,218,35)"/><text x="4.0134%" y="575.50">alloc::slice::&lt;im..</text></g><g><title>alloc::slice::hack::to_vec (2,315 samples, 11.52%)</title><rect x="3.7634%" y="549" width="11.5243%" height="15" fill="rgb(240,68,47)"/><text x="4.0134%" y="559.50">alloc::slice::hac..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,315 samples, 11.52%)</title><rect x="3.7634%" y="533" width="11.5243%" height="15" fill="rgb(210,16,53)"/><text x="4.0134%" y="543.50">&lt;T as alloc::slic..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (59 samples, 0.29%)</title><rect x="14.9940%" y="517" width="0.2937%" height="15" fill="rgb(235,124,12)"/><text x="15.2440%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (59 samples, 0.29%)</title><rect x="14.9940%" y="501" width="0.2937%" height="15" fill="rgb(224,169,11)"/><text x="15.2440%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (43 samples, 0.21%)</title><rect x="15.0737%" y="485" width="0.2141%" height="15" fill="rgb(250,166,2)"/><text x="15.3237%" y="495.50"></text></g><g><title>malloc_consolidate (428 samples, 2.13%)</title><rect x="15.6959%" y="565" width="2.1306%" height="15" fill="rgb(242,216,29)"/><text x="15.9459%" y="575.50">m..</text></g><g><title>__GI___libc_malloc (512 samples, 2.55%)</title><rect x="15.2877%" y="597" width="2.5488%" height="15" fill="rgb(230,116,27)"/><text x="15.5377%" y="607.50">__..</text></g><g><title>_int_malloc (489 samples, 2.43%)</title><rect x="15.4022%" y="581" width="2.4343%" height="15" fill="rgb(228,99,48)"/><text x="15.6522%" y="591.50">_i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,165 samples, 15.76%)</title><rect x="2.1008%" y="613" width="15.7557%" height="15" fill="rgb(253,11,6)"/><text x="2.3508%" y="623.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>__memmove_avx_unaligned_erms (42 samples, 0.21%)</title><rect x="17.8813%" y="597" width="0.2091%" height="15" fill="rgb(247,143,39)"/><text x="18.1313%" y="607.50"></text></g><g><title>_int_malloc (45 samples, 0.22%)</title><rect x="18.1701%" y="565" width="0.2240%" height="15" fill="rgb(236,97,10)"/><text x="18.4201%" y="575.50"></text></g><g><title>__GI___libc_malloc (56 samples, 0.28%)</title><rect x="18.1352%" y="581" width="0.2788%" height="15" fill="rgb(233,208,19)"/><text x="18.3852%" y="591.50"></text></g><g><title>tcache_get (3 samples, 0.01%)</title><rect x="18.3990%" y="565" width="0.0149%" height="15" fill="rgb(216,164,2)"/><text x="18.6490%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.02%)</title><rect x="18.4140%" y="581" width="0.0249%" height="15" fill="rgb(220,129,5)"/><text x="18.6640%" y="591.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.01%)</title><rect x="18.4488%" y="549" width="0.0149%" height="15" fill="rgb(242,17,10)"/><text x="18.6988%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.03%)</title><rect x="18.4389%" y="581" width="0.0299%" height="15" fill="rgb(242,107,0)"/><text x="18.6889%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="18.4438%" y="565" width="0.0249%" height="15" fill="rgb(251,28,31)"/><text x="18.6938%" y="575.50"></text></g><g><title>perf_event_mmap (3 samples, 0.01%)</title><rect x="18.6131%" y="373" width="0.0149%" height="15" fill="rgb(233,223,10)"/><text x="18.8631%" y="383.50"></text></g><g><title>do_syscall_64 (4 samples, 0.02%)</title><rect x="18.6131%" y="421" width="0.0199%" height="15" fill="rgb(215,21,27)"/><text x="18.8631%" y="431.50"></text></g><g><title>__do_sys_brk (4 samples, 0.02%)</title><rect x="18.6131%" y="405" width="0.0199%" height="15" fill="rgb(232,23,21)"/><text x="18.8631%" y="415.50"></text></g><g><title>do_brk_flags (4 samples, 0.02%)</title><rect x="18.6131%" y="389" width="0.0199%" height="15" fill="rgb(244,5,23)"/><text x="18.8631%" y="399.50"></text></g><g><title>_int_malloc (5 samples, 0.02%)</title><rect x="18.6131%" y="533" width="0.0249%" height="15" fill="rgb(226,81,46)"/><text x="18.8631%" y="543.50"></text></g><g><title>sysmalloc (5 samples, 0.02%)</title><rect x="18.6131%" y="517" width="0.0249%" height="15" fill="rgb(247,70,30)"/><text x="18.8631%" y="527.50"></text></g><g><title>__GI___default_morecore (5 samples, 0.02%)</title><rect x="18.6131%" y="501" width="0.0249%" height="15" fill="rgb(212,68,19)"/><text x="18.8631%" y="511.50"></text></g><g><title>__GI___sbrk (5 samples, 0.02%)</title><rect x="18.6131%" y="485" width="0.0249%" height="15" fill="rgb(240,187,13)"/><text x="18.8631%" y="495.50"></text></g><g><title>__GI___sbrk (5 samples, 0.02%)</title><rect x="18.6131%" y="469" width="0.0249%" height="15" fill="rgb(223,113,26)"/><text x="18.8631%" y="479.50"></text></g><g><title>__brk (5 samples, 0.02%)</title><rect x="18.6131%" y="453" width="0.0249%" height="15" fill="rgb(206,192,2)"/><text x="18.8631%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="18.6131%" y="437" width="0.0249%" height="15" fill="rgb(241,108,4)"/><text x="18.8631%" y="447.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="18.6131%" y="549" width="0.0299%" height="15" fill="rgb(247,173,49)"/><text x="18.8631%" y="559.50"></text></g><g><title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="18.6629%" y="485" width="0.0199%" height="15" fill="rgb(224,114,35)"/><text x="18.9129%" y="495.50"></text></g><g><title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="18.6629%" y="469" width="0.0199%" height="15" fill="rgb(245,159,27)"/><text x="18.9129%" y="479.50"></text></g><g><title>get_page_from_freelist (4 samples, 0.02%)</title><rect x="18.6629%" y="453" width="0.0199%" height="15" fill="rgb(245,172,44)"/><text x="18.9129%" y="463.50"></text></g><g><title>prep_new_page (3 samples, 0.01%)</title><rect x="18.6679%" y="437" width="0.0149%" height="15" fill="rgb(236,23,11)"/><text x="18.9179%" y="447.50"></text></g><g><title>kernel_init_free_pages (3 samples, 0.01%)</title><rect x="18.6679%" y="421" width="0.0149%" height="15" fill="rgb(205,117,38)"/><text x="18.9179%" y="431.50"></text></g><g><title>clear_page_erms (3 samples, 0.01%)</title><rect x="18.6679%" y="405" width="0.0149%" height="15" fill="rgb(237,72,25)"/><text x="18.9179%" y="415.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.03%)</title><rect x="18.6529%" y="549" width="0.0348%" height="15" fill="rgb(244,70,9)"/><text x="18.9029%" y="559.50"></text></g><g><title>exc_page_fault (7 samples, 0.03%)</title><rect x="18.6529%" y="533" width="0.0348%" height="15" fill="rgb(217,125,39)"/><text x="18.9029%" y="543.50"></text></g><g><title>do_user_addr_fault (7 samples, 0.03%)</title><rect x="18.6529%" y="517" width="0.0348%" height="15" fill="rgb(235,36,10)"/><text x="18.9029%" y="527.50"></text></g><g><title>handle_mm_fault (6 samples, 0.03%)</title><rect x="18.6579%" y="501" width="0.0299%" height="15" fill="rgb(251,123,47)"/><text x="18.9079%" y="511.50"></text></g><g><title>ate::dio::DioState::dirty (121 samples, 0.60%)</title><rect x="18.0904%" y="597" width="0.6023%" height="15" fill="rgb(221,13,13)"/><text x="18.3404%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (45 samples, 0.22%)</title><rect x="18.4687%" y="581" width="0.2240%" height="15" fill="rgb(238,131,9)"/><text x="18.7187%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (41 samples, 0.20%)</title><rect x="18.4886%" y="565" width="0.2041%" height="15" fill="rgb(211,50,8)"/><text x="18.7386%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (18 samples, 0.09%)</title><rect x="19.0014%" y="533" width="0.0896%" height="15" fill="rgb(245,182,24)"/><text x="19.2514%" y="543.50"></text></g><g><title>ate::crypto::Hash::from_bytes (54 samples, 0.27%)</title><rect x="18.8272%" y="581" width="0.2688%" height="15" fill="rgb(242,14,37)"/><text x="19.0772%" y="591.50"></text></g><g><title>blake3::hash (53 samples, 0.26%)</title><rect x="18.8321%" y="565" width="0.2638%" height="15" fill="rgb(246,228,12)"/><text x="19.0821%" y="575.50"></text></g><g><title>blake3::ChunkState::update (39 samples, 0.19%)</title><rect x="18.9018%" y="549" width="0.1941%" height="15" fill="rgb(213,55,15)"/><text x="19.1518%" y="559.50"></text></g><g><title>__list_del_entry_valid (5 samples, 0.02%)</title><rect x="21.2216%" y="421" width="0.0249%" height="15" fill="rgb(209,9,3)"/><text x="21.4716%" y="431.50"></text></g><g><title>alloc_pages_vma (11 samples, 0.05%)</title><rect x="21.2166%" y="469" width="0.0548%" height="15" fill="rgb(230,59,30)"/><text x="21.4666%" y="479.50"></text></g><g><title>__alloc_pages_nodemask (10 samples, 0.05%)</title><rect x="21.2216%" y="453" width="0.0498%" height="15" fill="rgb(209,121,21)"/><text x="21.4716%" y="463.50"></text></g><g><title>get_page_from_freelist (10 samples, 0.05%)</title><rect x="21.2216%" y="437" width="0.0498%" height="15" fill="rgb(220,109,13)"/><text x="21.4716%" y="447.50"></text></g><g><title>prep_new_page (5 samples, 0.02%)</title><rect x="21.2465%" y="421" width="0.0249%" height="15" fill="rgb(232,18,1)"/><text x="21.4965%" y="431.50"></text></g><g><title>kernel_init_free_pages (5 samples, 0.02%)</title><rect x="21.2465%" y="405" width="0.0249%" height="15" fill="rgb(215,41,42)"/><text x="21.4965%" y="415.50"></text></g><g><title>clear_page_erms (5 samples, 0.02%)</title><rect x="21.2465%" y="389" width="0.0249%" height="15" fill="rgb(224,123,36)"/><text x="21.4965%" y="399.50"></text></g><g><title>__pagevec_lru_add_fn (6 samples, 0.03%)</title><rect x="21.2913%" y="437" width="0.0299%" height="15" fill="rgb(240,125,3)"/><text x="21.5413%" y="447.50"></text></g><g><title>lru_cache_add (12 samples, 0.06%)</title><rect x="21.2764%" y="469" width="0.0597%" height="15" fill="rgb(205,98,50)"/><text x="21.5264%" y="479.50"></text></g><g><title>pagevec_lru_move_fn (11 samples, 0.05%)</title><rect x="21.2814%" y="453" width="0.0548%" height="15" fill="rgb(205,185,37)"/><text x="21.5314%" y="463.50"></text></g><g><title>release_pages (3 samples, 0.01%)</title><rect x="21.3212%" y="437" width="0.0149%" height="15" fill="rgb(238,207,15)"/><text x="21.5712%" y="447.50"></text></g><g><title>mem_cgroup_charge (4 samples, 0.02%)</title><rect x="21.3361%" y="469" width="0.0199%" height="15" fill="rgb(213,199,42)"/><text x="21.5861%" y="479.50"></text></g><g><title>exc_page_fault (40 samples, 0.20%)</title><rect x="21.1619%" y="517" width="0.1991%" height="15" fill="rgb(235,201,11)"/><text x="21.4119%" y="527.50"></text></g><g><title>do_user_addr_fault (40 samples, 0.20%)</title><rect x="21.1619%" y="501" width="0.1991%" height="15" fill="rgb(207,46,11)"/><text x="21.4119%" y="511.50"></text></g><g><title>handle_mm_fault (39 samples, 0.19%)</title><rect x="21.1669%" y="485" width="0.1941%" height="15" fill="rgb(241,35,35)"/><text x="21.4169%" y="495.50"></text></g><g><title>asm_exc_page_fault (45 samples, 0.22%)</title><rect x="21.1569%" y="533" width="0.2240%" height="15" fill="rgb(243,32,47)"/><text x="21.4069%" y="543.50"></text></g><g><title>irqentry_exit_to_user_mode (4 samples, 0.02%)</title><rect x="21.3610%" y="517" width="0.0199%" height="15" fill="rgb(247,202,23)"/><text x="21.6110%" y="527.50"></text></g><g><title>error_entry (4 samples, 0.02%)</title><rect x="21.3859%" y="533" width="0.0199%" height="15" fill="rgb(219,102,11)"/><text x="21.6359%" y="543.50"></text></g><g><title>__GI___libc_malloc (464 samples, 2.31%)</title><rect x="19.1109%" y="565" width="2.3098%" height="15" fill="rgb(243,110,44)"/><text x="19.3609%" y="575.50">_..</text></g><g><title>_int_malloc (428 samples, 2.13%)</title><rect x="19.2901%" y="549" width="2.1306%" height="15" fill="rgb(222,74,54)"/><text x="19.5401%" y="559.50">_..</text></g><g><title>unlink_chunk (3 samples, 0.01%)</title><rect x="21.4058%" y="533" width="0.0149%" height="15" fill="rgb(216,99,12)"/><text x="21.6558%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (74 samples, 0.37%)</title><rect x="22.2521%" y="549" width="0.3684%" height="15" fill="rgb(226,22,26)"/><text x="22.5021%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (41 samples, 0.20%)</title><rect x="22.6205%" y="549" width="0.2041%" height="15" fill="rgb(217,163,10)"/><text x="22.8705%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (283 samples, 1.41%)</title><rect x="21.4207%" y="565" width="1.4088%" height="15" fill="rgb(213,25,53)"/><text x="21.6707%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="23.1531%" y="549" width="0.0199%" height="15" fill="rgb(252,105,26)"/><text x="23.4031%" y="559.50"></text></g><g><title>ate::dio::dao::Row&lt;D&gt;::as_row_data (912 samples, 4.54%)</title><rect x="18.6928%" y="597" width="4.5400%" height="15" fill="rgb(220,39,43)"/><text x="18.9428%" y="607.50">ate::..</text></g><g><title>bincode::internal::serialize (831 samples, 4.14%)</title><rect x="19.0960%" y="581" width="4.1368%" height="15" fill="rgb(229,68,48)"/><text x="19.3460%" y="591.50">binco..</text></g><g><title>stress::_::&lt;impl serde::ser::Serialize for stress::MyTestObject&gt;::serialize (81 samples, 0.40%)</title><rect x="22.8295%" y="565" width="0.4032%" height="15" fill="rgb(252,8,32)"/><text x="23.0795%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.06%)</title><rect x="23.1730%" y="549" width="0.0597%" height="15" fill="rgb(223,20,43)"/><text x="23.4230%" y="559.50"></text></g><g><title>&lt;ate::dio::dao::Dao&lt;D&gt; as core::ops::drop::Drop&gt;::drop (1,087 samples, 5.41%)</title><rect x="17.8564%" y="613" width="5.4112%" height="15" fill="rgb(229,81,49)"/><text x="18.1064%" y="623.50">&lt;ate::d..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (7 samples, 0.03%)</title><rect x="23.2328%" y="597" width="0.0348%" height="15" fill="rgb(236,28,36)"/><text x="23.4828%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (17 samples, 0.08%)</title><rect x="23.2776%" y="613" width="0.0846%" height="15" fill="rgb(249,185,26)"/><text x="23.5276%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (46 samples, 0.23%)</title><rect x="23.5115%" y="597" width="0.2290%" height="15" fill="rgb(249,174,33)"/><text x="23.7615%" y="607.50"></text></g><g><title>ate::dio::DioState::lock (11 samples, 0.05%)</title><rect x="23.7405%" y="597" width="0.0548%" height="15" fill="rgb(233,201,37)"/><text x="23.9905%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (3 samples, 0.01%)</title><rect x="23.7804%" y="581" width="0.0149%" height="15" fill="rgb(221,78,26)"/><text x="24.0304%" y="591.50"></text></g><g><title>ate::dio::Dio::store (91 samples, 0.45%)</title><rect x="23.3672%" y="613" width="0.4530%" height="15" fill="rgb(250,127,30)"/><text x="23.6172%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.02%)</title><rect x="23.7953%" y="597" width="0.0249%" height="15" fill="rgb(230,49,44)"/><text x="24.0453%" y="607.50"></text></g><g><title>__irqentry_text_end (4 samples, 0.02%)</title><rect x="24.8307%" y="517" width="0.0199%" height="15" fill="rgb(229,67,23)"/><text x="25.0807%" y="527.50"></text></g><g><title>__next_zones_zonelist (4 samples, 0.02%)</title><rect x="24.9253%" y="421" width="0.0199%" height="15" fill="rgb(249,83,47)"/><text x="25.1753%" y="431.50"></text></g><g><title>__list_del_entry_valid (3 samples, 0.01%)</title><rect x="24.9552%" y="405" width="0.0149%" height="15" fill="rgb(215,43,3)"/><text x="25.2052%" y="415.50"></text></g><g><title>alloc_pages_vma (26 samples, 0.13%)</title><rect x="24.9054%" y="453" width="0.1294%" height="15" fill="rgb(238,154,13)"/><text x="25.1554%" y="463.50"></text></g><g><title>__alloc_pages_nodemask (24 samples, 0.12%)</title><rect x="24.9154%" y="437" width="0.1195%" height="15" fill="rgb(219,56,2)"/><text x="25.1654%" y="447.50"></text></g><g><title>get_page_from_freelist (18 samples, 0.09%)</title><rect x="24.9452%" y="421" width="0.0896%" height="15" fill="rgb(233,0,4)"/><text x="25.1952%" y="431.50"></text></g><g><title>prep_new_page (13 samples, 0.06%)</title><rect x="24.9701%" y="405" width="0.0647%" height="15" fill="rgb(235,30,7)"/><text x="25.2201%" y="415.50"></text></g><g><title>kernel_init_free_pages (13 samples, 0.06%)</title><rect x="24.9701%" y="389" width="0.0647%" height="15" fill="rgb(250,79,13)"/><text x="25.2201%" y="399.50"></text></g><g><title>clear_page_erms (12 samples, 0.06%)</title><rect x="24.9751%" y="373" width="0.0597%" height="15" fill="rgb(211,146,34)"/><text x="25.2251%" y="383.50"></text></g><g><title>__pagevec_lru_add_fn (12 samples, 0.06%)</title><rect x="25.0448%" y="421" width="0.0597%" height="15" fill="rgb(228,22,38)"/><text x="25.2948%" y="431.50"></text></g><g><title>page_mapping (3 samples, 0.01%)</title><rect x="25.0896%" y="405" width="0.0149%" height="15" fill="rgb(235,168,5)"/><text x="25.3396%" y="415.50"></text></g><g><title>lru_cache_add (17 samples, 0.08%)</title><rect x="25.0348%" y="453" width="0.0846%" height="15" fill="rgb(221,155,16)"/><text x="25.2848%" y="463.50"></text></g><g><title>pagevec_lru_move_fn (17 samples, 0.08%)</title><rect x="25.0348%" y="437" width="0.0846%" height="15" fill="rgb(215,215,53)"/><text x="25.2848%" y="447.50"></text></g><g><title>release_pages (3 samples, 0.01%)</title><rect x="25.1045%" y="421" width="0.0149%" height="15" fill="rgb(223,4,10)"/><text x="25.3545%" y="431.50"></text></g><g><title>handle_mm_fault (54 samples, 0.27%)</title><rect x="24.8656%" y="469" width="0.2688%" height="15" fill="rgb(234,103,6)"/><text x="25.1156%" y="479.50"></text></g><g><title>exc_page_fault (58 samples, 0.29%)</title><rect x="24.8507%" y="501" width="0.2887%" height="15" fill="rgb(227,97,0)"/><text x="25.1007%" y="511.50"></text></g><g><title>do_user_addr_fault (58 samples, 0.29%)</title><rect x="24.8507%" y="485" width="0.2887%" height="15" fill="rgb(234,150,53)"/><text x="25.1007%" y="495.50"></text></g><g><title>asm_exc_page_fault (73 samples, 0.36%)</title><rect x="24.8507%" y="517" width="0.3634%" height="15" fill="rgb(228,201,54)"/><text x="25.1007%" y="527.50"></text></g><g><title>irqentry_exit_to_user_mode (15 samples, 0.07%)</title><rect x="25.1394%" y="501" width="0.0747%" height="15" fill="rgb(222,22,37)"/><text x="25.3894%" y="511.50"></text></g><g><title>error_entry (11 samples, 0.05%)</title><rect x="25.2190%" y="517" width="0.0548%" height="15" fill="rgb(237,53,32)"/><text x="25.4690%" y="527.50"></text></g><g><title>sync_regs (7 samples, 0.03%)</title><rect x="25.2389%" y="501" width="0.0348%" height="15" fill="rgb(233,25,53)"/><text x="25.4889%" y="511.50"></text></g><g><title>__do_sys_brk (3 samples, 0.01%)</title><rect x="25.2738%" y="405" width="0.0149%" height="15" fill="rgb(210,40,34)"/><text x="25.5238%" y="415.50"></text></g><g><title>do_syscall_64 (4 samples, 0.02%)</title><rect x="25.2738%" y="421" width="0.0199%" height="15" fill="rgb(241,220,44)"/><text x="25.5238%" y="431.50"></text></g><g><title>__GI___libc_malloc (127 samples, 0.63%)</title><rect x="24.6665%" y="549" width="0.6322%" height="15" fill="rgb(235,28,35)"/><text x="24.9165%" y="559.50"></text></g><g><title>_int_malloc (109 samples, 0.54%)</title><rect x="24.7561%" y="533" width="0.5426%" height="15" fill="rgb(210,56,17)"/><text x="25.0061%" y="543.50"></text></g><g><title>sysmalloc (5 samples, 0.02%)</title><rect x="25.2738%" y="517" width="0.0249%" height="15" fill="rgb(224,130,29)"/><text x="25.5238%" y="527.50"></text></g><g><title>__GI___default_morecore (5 samples, 0.02%)</title><rect x="25.2738%" y="501" width="0.0249%" height="15" fill="rgb(235,212,8)"/><text x="25.5238%" y="511.50"></text></g><g><title>__GI___sbrk (5 samples, 0.02%)</title><rect x="25.2738%" y="485" width="0.0249%" height="15" fill="rgb(223,33,50)"/><text x="25.5238%" y="495.50"></text></g><g><title>__GI___sbrk (5 samples, 0.02%)</title><rect x="25.2738%" y="469" width="0.0249%" height="15" fill="rgb(219,149,13)"/><text x="25.5238%" y="479.50"></text></g><g><title>__brk (5 samples, 0.02%)</title><rect x="25.2738%" y="453" width="0.0249%" height="15" fill="rgb(250,156,29)"/><text x="25.5238%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="25.2738%" y="437" width="0.0249%" height="15" fill="rgb(216,193,19)"/><text x="25.5238%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (176 samples, 0.88%)</title><rect x="24.4275%" y="565" width="0.8761%" height="15" fill="rgb(216,135,14)"/><text x="24.6775%" y="575.50"></text></g><g><title>__irqentry_text_end (3 samples, 0.01%)</title><rect x="25.3136%" y="565" width="0.0149%" height="15" fill="rgb(241,47,5)"/><text x="25.5636%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="25.3286%" y="565" width="0.0149%" height="15" fill="rgb(233,42,35)"/><text x="25.5786%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.04%)</title><rect x="25.7716%" y="533" width="0.0398%" height="15" fill="rgb(231,13,6)"/><text x="26.0216%" y="543.50"></text></g><g><title>__get_user_nocheck_4 (5 samples, 0.02%)</title><rect x="25.8811%" y="437" width="0.0249%" height="15" fill="rgb(207,181,40)"/><text x="26.1311%" y="447.50"></text></g><g><title>__x64_sys_futex (19 samples, 0.09%)</title><rect x="25.8164%" y="501" width="0.0946%" height="15" fill="rgb(254,173,49)"/><text x="26.0664%" y="511.50"></text></g><g><title>do_futex (19 samples, 0.09%)</title><rect x="25.8164%" y="485" width="0.0946%" height="15" fill="rgb(221,1,38)"/><text x="26.0664%" y="495.50"></text></g><g><title>futex_wait (18 samples, 0.09%)</title><rect x="25.8214%" y="469" width="0.0896%" height="15" fill="rgb(206,124,46)"/><text x="26.0714%" y="479.50"></text></g><g><title>futex_wait_setup (15 samples, 0.07%)</title><rect x="25.8363%" y="453" width="0.0747%" height="15" fill="rgb(249,21,11)"/><text x="26.0863%" y="463.50"></text></g><g><title>do_syscall_64 (20 samples, 0.10%)</title><rect x="25.8164%" y="517" width="0.0996%" height="15" fill="rgb(222,201,40)"/><text x="26.0664%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34 samples, 0.17%)</title><rect x="25.8114%" y="533" width="0.1693%" height="15" fill="rgb(235,61,29)"/><text x="26.0614%" y="543.50"></text></g><g><title>syscall_exit_to_user_mode (13 samples, 0.06%)</title><rect x="25.9160%" y="517" width="0.0647%" height="15" fill="rgb(219,207,3)"/><text x="26.1660%" y="527.50"></text></g><g><title>__lll_lock_wait_private (67 samples, 0.33%)</title><rect x="25.7119%" y="549" width="0.3335%" height="15" fill="rgb(222,56,46)"/><text x="25.9619%" y="559.50"></text></g><g><title>syscall_return_via_sysret (13 samples, 0.06%)</title><rect x="25.9807%" y="533" width="0.0647%" height="15" fill="rgb(239,76,54)"/><text x="26.2307%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (14 samples, 0.07%)</title><rect x="26.0454%" y="549" width="0.0697%" height="15" fill="rgb(231,124,27)"/><text x="26.2954%" y="559.50"></text></g><g><title>_raw_spin_lock (7 samples, 0.03%)</title><rect x="26.1848%" y="469" width="0.0348%" height="15" fill="rgb(249,195,6)"/><text x="26.4348%" y="479.50"></text></g><g><title>native_queued_spin_lock_slowpath (4 samples, 0.02%)</title><rect x="26.1997%" y="453" width="0.0199%" height="15" fill="rgb(237,174,47)"/><text x="26.4497%" y="463.50"></text></g><g><title>hash_futex (3 samples, 0.01%)</title><rect x="26.2196%" y="469" width="0.0149%" height="15" fill="rgb(206,201,31)"/><text x="26.4696%" y="479.50"></text></g><g><title>__x64_sys_futex (27 samples, 0.13%)</title><rect x="26.1250%" y="517" width="0.1344%" height="15" fill="rgb(231,57,52)"/><text x="26.3750%" y="527.50"></text></g><g><title>do_futex (25 samples, 0.12%)</title><rect x="26.1350%" y="501" width="0.1245%" height="15" fill="rgb(248,177,22)"/><text x="26.3850%" y="511.50"></text></g><g><title>futex_wake (25 samples, 0.12%)</title><rect x="26.1350%" y="485" width="0.1245%" height="15" fill="rgb(215,211,37)"/><text x="26.3850%" y="495.50"></text></g><g><title>wake_up_q (3 samples, 0.01%)</title><rect x="26.2445%" y="469" width="0.0149%" height="15" fill="rgb(241,128,51)"/><text x="26.4945%" y="479.50"></text></g><g><title>do_syscall_64 (28 samples, 0.14%)</title><rect x="26.1250%" y="533" width="0.1394%" height="15" fill="rgb(227,165,31)"/><text x="26.3750%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (61 samples, 0.30%)</title><rect x="26.1151%" y="549" width="0.3037%" height="15" fill="rgb(228,167,24)"/><text x="26.3651%" y="559.50"></text></g><g><title>syscall_exit_to_user_mode (31 samples, 0.15%)</title><rect x="26.2644%" y="533" width="0.1543%" height="15" fill="rgb(228,143,12)"/><text x="26.5144%" y="543.50"></text></g><g><title>malloc_consolidate (15 samples, 0.07%)</title><rect x="26.4188%" y="549" width="0.0747%" height="15" fill="rgb(249,149,8)"/><text x="26.6688%" y="559.50"></text></g><g><title>unlink_chunk (10 samples, 0.05%)</title><rect x="26.4436%" y="533" width="0.0498%" height="15" fill="rgb(243,35,44)"/><text x="26.6936%" y="543.50"></text></g><g><title>syscall_return_via_sysret (15 samples, 0.07%)</title><rect x="26.4934%" y="549" width="0.0747%" height="15" fill="rgb(246,89,9)"/><text x="26.7434%" y="559.50"></text></g><g><title>_int_free (244 samples, 1.21%)</title><rect x="25.3584%" y="565" width="1.2147%" height="15" fill="rgb(233,213,13)"/><text x="25.6084%" y="575.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="26.5880%" y="533" width="0.0199%" height="15" fill="rgb(233,141,41)"/><text x="26.8380%" y="543.50"></text></g><g><title>alloc_pages_vma (10 samples, 0.05%)</title><rect x="26.6776%" y="421" width="0.0498%" height="15" fill="rgb(239,167,4)"/><text x="26.9276%" y="431.50"></text></g><g><title>__alloc_pages_nodemask (10 samples, 0.05%)</title><rect x="26.6776%" y="405" width="0.0498%" height="15" fill="rgb(209,217,16)"/><text x="26.9276%" y="415.50"></text></g><g><title>get_page_from_freelist (10 samples, 0.05%)</title><rect x="26.6776%" y="389" width="0.0498%" height="15" fill="rgb(219,88,35)"/><text x="26.9276%" y="399.50"></text></g><g><title>prep_new_page (5 samples, 0.02%)</title><rect x="26.7025%" y="373" width="0.0249%" height="15" fill="rgb(220,193,23)"/><text x="26.9525%" y="383.50"></text></g><g><title>kernel_init_free_pages (5 samples, 0.02%)</title><rect x="26.7025%" y="357" width="0.0249%" height="15" fill="rgb(230,90,52)"/><text x="26.9525%" y="367.50"></text></g><g><title>clear_page_erms (5 samples, 0.02%)</title><rect x="26.7025%" y="341" width="0.0249%" height="15" fill="rgb(252,106,19)"/><text x="26.9525%" y="351.50"></text></g><g><title>exc_page_fault (17 samples, 0.08%)</title><rect x="26.6577%" y="469" width="0.0846%" height="15" fill="rgb(206,74,20)"/><text x="26.9077%" y="479.50"></text></g><g><title>do_user_addr_fault (17 samples, 0.08%)</title><rect x="26.6577%" y="453" width="0.0846%" height="15" fill="rgb(230,138,44)"/><text x="26.9077%" y="463.50"></text></g><g><title>handle_mm_fault (15 samples, 0.07%)</title><rect x="26.6677%" y="437" width="0.0747%" height="15" fill="rgb(235,182,43)"/><text x="26.9177%" y="447.50"></text></g><g><title>asm_exc_page_fault (27 samples, 0.13%)</title><rect x="26.6527%" y="485" width="0.1344%" height="15" fill="rgb(242,16,51)"/><text x="26.9027%" y="495.50"></text></g><g><title>irqentry_exit_to_user_mode (9 samples, 0.04%)</title><rect x="26.7423%" y="469" width="0.0448%" height="15" fill="rgb(248,9,4)"/><text x="26.9923%" y="479.50"></text></g><g><title>__memmove_avx_unaligned_erms (41 samples, 0.20%)</title><rect x="26.6129%" y="501" width="0.2041%" height="15" fill="rgb(210,31,22)"/><text x="26.8629%" y="511.50"></text></g><g><title>error_entry (6 samples, 0.03%)</title><rect x="26.7871%" y="485" width="0.0299%" height="15" fill="rgb(239,54,39)"/><text x="27.0371%" y="495.50"></text></g><g><title>sync_regs (3 samples, 0.01%)</title><rect x="26.8021%" y="469" width="0.0149%" height="15" fill="rgb(230,99,41)"/><text x="27.0521%" y="479.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="26.8170%" y="501" width="0.0149%" height="15" fill="rgb(253,106,12)"/><text x="27.0670%" y="511.50"></text></g><g><title>exc_page_fault (6 samples, 0.03%)</title><rect x="26.8319%" y="469" width="0.0299%" height="15" fill="rgb(213,46,41)"/><text x="27.0819%" y="479.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.03%)</title><rect x="26.8319%" y="453" width="0.0299%" height="15" fill="rgb(215,133,35)"/><text x="27.0819%" y="463.50"></text></g><g><title>handle_mm_fault (6 samples, 0.03%)</title><rect x="26.8319%" y="437" width="0.0299%" height="15" fill="rgb(213,28,5)"/><text x="27.0819%" y="447.50"></text></g><g><title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="26.8419%" y="421" width="0.0199%" height="15" fill="rgb(215,77,49)"/><text x="27.0919%" y="431.50"></text></g><g><title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="26.8419%" y="405" width="0.0199%" height="15" fill="rgb(248,100,22)"/><text x="27.0919%" y="415.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.01%)</title><rect x="26.8469%" y="389" width="0.0149%" height="15" fill="rgb(208,67,9)"/><text x="27.0969%" y="399.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.03%)</title><rect x="26.8319%" y="485" width="0.0348%" height="15" fill="rgb(219,133,21)"/><text x="27.0819%" y="495.50"></text></g><g><title>__GI___default_morecore (3 samples, 0.01%)</title><rect x="26.8767%" y="469" width="0.0149%" height="15" fill="rgb(246,46,29)"/><text x="27.1267%" y="479.50"></text></g><g><title>__GI___sbrk (3 samples, 0.01%)</title><rect x="26.8767%" y="453" width="0.0149%" height="15" fill="rgb(246,185,52)"/><text x="27.1267%" y="463.50"></text></g><g><title>__GI___sbrk (3 samples, 0.01%)</title><rect x="26.8767%" y="437" width="0.0149%" height="15" fill="rgb(252,136,11)"/><text x="27.1267%" y="447.50"></text></g><g><title>__brk (3 samples, 0.01%)</title><rect x="26.8767%" y="421" width="0.0149%" height="15" fill="rgb(219,138,53)"/><text x="27.1267%" y="431.50"></text></g><g><title>_int_malloc (15 samples, 0.07%)</title><rect x="26.8319%" y="501" width="0.0747%" height="15" fill="rgb(211,51,23)"/><text x="27.0819%" y="511.50"></text></g><g><title>sysmalloc (7 samples, 0.03%)</title><rect x="26.8718%" y="485" width="0.0348%" height="15" fill="rgb(247,221,28)"/><text x="27.1218%" y="495.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.01%)</title><rect x="26.8917%" y="469" width="0.0149%" height="15" fill="rgb(251,222,45)"/><text x="27.1417%" y="479.50"></text></g><g><title>exc_page_fault (3 samples, 0.01%)</title><rect x="26.8917%" y="453" width="0.0149%" height="15" fill="rgb(217,162,53)"/><text x="27.1417%" y="463.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.01%)</title><rect x="26.8917%" y="437" width="0.0149%" height="15" fill="rgb(229,93,14)"/><text x="27.1417%" y="447.50"></text></g><g><title>handle_mm_fault (3 samples, 0.01%)</title><rect x="26.8917%" y="421" width="0.0149%" height="15" fill="rgb(209,67,49)"/><text x="27.1417%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (70 samples, 0.35%)</title><rect x="26.5731%" y="565" width="0.3485%" height="15" fill="rgb(213,87,29)"/><text x="26.8231%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (68 samples, 0.34%)</title><rect x="26.5830%" y="549" width="0.3385%" height="15" fill="rgb(205,151,52)"/><text x="26.8330%" y="559.50"></text></g><g><title>__GI___libc_realloc (63 samples, 0.31%)</title><rect x="26.6079%" y="533" width="0.3136%" height="15" fill="rgb(253,215,39)"/><text x="26.8579%" y="543.50"></text></g><g><title>_int_realloc (62 samples, 0.31%)</title><rect x="26.6129%" y="517" width="0.3086%" height="15" fill="rgb(221,220,41)"/><text x="26.8629%" y="527.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.01%)</title><rect x="26.9066%" y="501" width="0.0149%" height="15" fill="rgb(218,133,21)"/><text x="27.1566%" y="511.50"></text></g><g><title>exc_page_fault (3 samples, 0.01%)</title><rect x="26.9066%" y="485" width="0.0149%" height="15" fill="rgb(221,193,43)"/><text x="27.1566%" y="495.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.01%)</title><rect x="26.9066%" y="469" width="0.0149%" height="15" fill="rgb(240,128,52)"/><text x="27.1566%" y="479.50"></text></g><g><title>handle_mm_fault (3 samples, 0.01%)</title><rect x="26.9066%" y="453" width="0.0149%" height="15" fill="rgb(253,114,12)"/><text x="27.1566%" y="463.50"></text></g><g><title>kernel_init_free_pages (5 samples, 0.02%)</title><rect x="26.9813%" y="437" width="0.0249%" height="15" fill="rgb(215,223,47)"/><text x="27.2313%" y="447.50"></text></g><g><title>clear_page_erms (5 samples, 0.02%)</title><rect x="26.9813%" y="421" width="0.0249%" height="15" fill="rgb(248,225,23)"/><text x="27.2313%" y="431.50"></text></g><g><title>alloc_pages_vma (9 samples, 0.04%)</title><rect x="26.9663%" y="501" width="0.0448%" height="15" fill="rgb(250,108,0)"/><text x="27.2163%" y="511.50"></text></g><g><title>__alloc_pages_nodemask (9 samples, 0.04%)</title><rect x="26.9663%" y="485" width="0.0448%" height="15" fill="rgb(228,208,7)"/><text x="27.2163%" y="495.50"></text></g><g><title>get_page_from_freelist (9 samples, 0.04%)</title><rect x="26.9663%" y="469" width="0.0448%" height="15" fill="rgb(244,45,10)"/><text x="27.2163%" y="479.50"></text></g><g><title>prep_new_page (6 samples, 0.03%)</title><rect x="26.9813%" y="453" width="0.0299%" height="15" fill="rgb(207,125,25)"/><text x="27.2313%" y="463.50"></text></g><g><title>lru_cache_add (5 samples, 0.02%)</title><rect x="27.0161%" y="501" width="0.0249%" height="15" fill="rgb(210,195,18)"/><text x="27.2661%" y="511.50"></text></g><g><title>pagevec_lru_move_fn (4 samples, 0.02%)</title><rect x="27.0211%" y="485" width="0.0199%" height="15" fill="rgb(249,80,12)"/><text x="27.2711%" y="495.50"></text></g><g><title>__pagevec_lru_add_fn (4 samples, 0.02%)</title><rect x="27.0211%" y="469" width="0.0199%" height="15" fill="rgb(221,65,9)"/><text x="27.2711%" y="479.50"></text></g><g><title>mem_cgroup_charge (3 samples, 0.01%)</title><rect x="27.0410%" y="501" width="0.0149%" height="15" fill="rgb(235,49,36)"/><text x="27.2910%" y="511.50"></text></g><g><title>exc_page_fault (30 samples, 0.15%)</title><rect x="26.9215%" y="549" width="0.1493%" height="15" fill="rgb(225,32,20)"/><text x="27.1715%" y="559.50"></text></g><g><title>do_user_addr_fault (30 samples, 0.15%)</title><rect x="26.9215%" y="533" width="0.1493%" height="15" fill="rgb(215,141,46)"/><text x="27.1715%" y="543.50"></text></g><g><title>handle_mm_fault (27 samples, 0.13%)</title><rect x="26.9365%" y="517" width="0.1344%" height="15" fill="rgb(250,160,47)"/><text x="27.1865%" y="527.50"></text></g><g><title>asm_exc_page_fault (38 samples, 0.19%)</title><rect x="26.9215%" y="565" width="0.1892%" height="15" fill="rgb(216,222,40)"/><text x="27.1715%" y="575.50"></text></g><g><title>irqentry_exit_to_user_mode (8 samples, 0.04%)</title><rect x="27.0709%" y="549" width="0.0398%" height="15" fill="rgb(234,217,39)"/><text x="27.3209%" y="559.50"></text></g><g><title>alloc_pages_vma (5 samples, 0.02%)</title><rect x="27.3497%" y="421" width="0.0249%" height="15" fill="rgb(207,178,40)"/><text x="27.5997%" y="431.50"></text></g><g><title>__alloc_pages_nodemask (5 samples, 0.02%)</title><rect x="27.3497%" y="405" width="0.0249%" height="15" fill="rgb(221,136,13)"/><text x="27.5997%" y="415.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.02%)</title><rect x="27.3497%" y="389" width="0.0249%" height="15" fill="rgb(249,199,10)"/><text x="27.5997%" y="399.50"></text></g><g><title>prep_new_page (3 samples, 0.01%)</title><rect x="27.3596%" y="373" width="0.0149%" height="15" fill="rgb(249,222,13)"/><text x="27.6096%" y="383.50"></text></g><g><title>kernel_init_free_pages (3 samples, 0.01%)</title><rect x="27.3596%" y="357" width="0.0149%" height="15" fill="rgb(244,185,38)"/><text x="27.6096%" y="367.50"></text></g><g><title>clear_page_erms (3 samples, 0.01%)</title><rect x="27.3596%" y="341" width="0.0149%" height="15" fill="rgb(236,202,9)"/><text x="27.6096%" y="351.50"></text></g><g><title>exc_page_fault (8 samples, 0.04%)</title><rect x="27.3447%" y="469" width="0.0398%" height="15" fill="rgb(250,229,37)"/><text x="27.5947%" y="479.50"></text></g><g><title>do_user_addr_fault (8 samples, 0.04%)</title><rect x="27.3447%" y="453" width="0.0398%" height="15" fill="rgb(206,174,23)"/><text x="27.5947%" y="463.50"></text></g><g><title>handle_mm_fault (8 samples, 0.04%)</title><rect x="27.3447%" y="437" width="0.0398%" height="15" fill="rgb(211,33,43)"/><text x="27.5947%" y="447.50"></text></g><g><title>asm_exc_page_fault (13 samples, 0.06%)</title><rect x="27.3397%" y="485" width="0.0647%" height="15" fill="rgb(245,58,50)"/><text x="27.5897%" y="495.50"></text></g><g><title>irqentry_exit_to_user_mode (4 samples, 0.02%)</title><rect x="27.3845%" y="469" width="0.0199%" height="15" fill="rgb(244,68,36)"/><text x="27.6345%" y="479.50"></text></g><g><title>_int_malloc (24 samples, 0.12%)</title><rect x="27.2949%" y="501" width="0.1195%" height="15" fill="rgb(232,229,15)"/><text x="27.5449%" y="511.50"></text></g><g><title>__GI___libc_malloc (43 samples, 0.21%)</title><rect x="27.2103%" y="517" width="0.2141%" height="15" fill="rgb(254,30,23)"/><text x="27.4603%" y="527.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (55 samples, 0.27%)</title><rect x="27.4791%" y="501" width="0.2738%" height="15" fill="rgb(235,160,14)"/><text x="27.7291%" y="511.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::MetaAuthorization&gt;::serialize (5 samples, 0.02%)</title><rect x="27.7529%" y="501" width="0.0249%" height="15" fill="rgb(212,155,44)"/><text x="28.0029%" y="511.50"></text></g><g><title>ate::conf::SerializationFormat::serialize (124 samples, 0.62%)</title><rect x="27.1754%" y="549" width="0.6173%" height="15" fill="rgb(226,2,50)"/><text x="27.4254%" y="559.50"></text></g><g><title>bincode::serialize (119 samples, 0.59%)</title><rect x="27.2003%" y="533" width="0.5924%" height="15" fill="rgb(234,177,6)"/><text x="27.4503%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (72 samples, 0.36%)</title><rect x="27.4343%" y="517" width="0.3584%" height="15" fill="rgb(217,24,9)"/><text x="27.6843%" y="527.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::ReadOption&gt;::serialize (3 samples, 0.01%)</title><rect x="27.7778%" y="501" width="0.0149%" height="15" fill="rgb(220,13,46)"/><text x="28.0278%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (16 samples, 0.08%)</title><rect x="27.8027%" y="533" width="0.0796%" height="15" fill="rgb(239,221,27)"/><text x="28.0527%" y="543.50"></text></g><g><title>blake3::Hasher::finalize (8 samples, 0.04%)</title><rect x="27.8823%" y="533" width="0.0398%" height="15" fill="rgb(222,198,25)"/><text x="28.1323%" y="543.50"></text></g><g><title>blake3::Hasher::final_output (6 samples, 0.03%)</title><rect x="27.8923%" y="517" width="0.0299%" height="15" fill="rgb(211,99,13)"/><text x="28.1423%" y="527.50"></text></g><g><title>blake3::ChunkState::update (9 samples, 0.04%)</title><rect x="27.9371%" y="517" width="0.0448%" height="15" fill="rgb(232,111,31)"/><text x="28.1871%" y="527.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (41 samples, 0.20%)</title><rect x="27.7927%" y="549" width="0.2041%" height="15" fill="rgb(245,82,37)"/><text x="28.0427%" y="559.50"></text></g><g><title>blake3::Hasher::update (13 samples, 0.06%)</title><rect x="27.9321%" y="533" width="0.0647%" height="15" fill="rgb(227,149,46)"/><text x="28.1821%" y="543.50"></text></g><g><title>blake3::Hasher::merge_cv_stack (3 samples, 0.01%)</title><rect x="27.9819%" y="517" width="0.0149%" height="15" fill="rgb(218,36,50)"/><text x="28.2319%" y="527.50"></text></g><g><title>ate::event::EventData::as_header_raw (230 samples, 1.14%)</title><rect x="27.1107%" y="565" width="1.1450%" height="15" fill="rgb(226,80,48)"/><text x="27.3607%" y="575.50"></text></g><g><title>blake3::hash (52 samples, 0.26%)</title><rect x="27.9968%" y="549" width="0.2589%" height="15" fill="rgb(238,224,15)"/><text x="28.2468%" y="559.50"></text></g><g><title>blake3::ChunkState::update (29 samples, 0.14%)</title><rect x="28.1113%" y="533" width="0.1444%" height="15" fill="rgb(241,136,10)"/><text x="28.3613%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.03%)</title><rect x="28.2258%" y="517" width="0.0299%" height="15" fill="rgb(208,32,45)"/><text x="28.4758%" y="527.50"></text></g><g><title>ate::multi::ChainMultiUser::data_as_underlay (50 samples, 0.25%)</title><rect x="28.2557%" y="565" width="0.2489%" height="15" fill="rgb(207,135,9)"/><text x="28.5057%" y="575.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::transform::EventDataTransformer&gt;::data_as_underlay (12 samples, 0.06%)</title><rect x="28.4448%" y="549" width="0.0597%" height="15" fill="rgb(206,86,44)"/><text x="28.6948%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.03%)</title><rect x="28.7037%" y="533" width="0.0299%" height="15" fill="rgb(245,177,15)"/><text x="28.9537%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.03%)</title><rect x="28.7037%" y="517" width="0.0299%" height="15" fill="rgb(206,64,50)"/><text x="28.9537%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (6 samples, 0.03%)</title><rect x="28.8580%" y="501" width="0.0299%" height="15" fill="rgb(234,36,40)"/><text x="29.1080%" y="511.50"></text></g><g><title>std::time::SystemTime::duration_since (9 samples, 0.04%)</title><rect x="28.8481%" y="517" width="0.0448%" height="15" fill="rgb(213,64,8)"/><text x="29.0981%" y="527.50"></text></g><g><title>&lt;ate::time::TimestampEnforcer as ate::lint::EventMetadataLinter&gt;::metadata_lint_event (60 samples, 0.30%)</title><rect x="28.6788%" y="549" width="0.2987%" height="15" fill="rgb(210,75,36)"/><text x="28.9288%" y="559.50"></text></g><g><title>ate::time::TimestampEnforcer::current_timestamp (49 samples, 0.24%)</title><rect x="28.7336%" y="533" width="0.2439%" height="15" fill="rgb(229,88,21)"/><text x="28.9836%" y="543.50"></text></g><g><title>std::time::SystemTime::now (17 samples, 0.08%)</title><rect x="28.8929%" y="517" width="0.0846%" height="15" fill="rgb(252,204,47)"/><text x="29.1429%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (17 samples, 0.08%)</title><rect x="28.8929%" y="501" width="0.0846%" height="15" fill="rgb(208,77,27)"/><text x="29.1429%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::now (17 samples, 0.08%)</title><rect x="28.8929%" y="485" width="0.0846%" height="15" fill="rgb(221,76,26)"/><text x="29.1429%" y="495.50"></text></g><g><title>__GI___clock_gettime (16 samples, 0.08%)</title><rect x="28.8978%" y="469" width="0.0796%" height="15" fill="rgb(225,139,18)"/><text x="29.1478%" y="479.50"></text></g><g><title>__vdso_clock_gettime (14 samples, 0.07%)</title><rect x="28.9078%" y="453" width="0.0697%" height="15" fill="rgb(230,137,11)"/><text x="29.1578%" y="463.50"></text></g><g><title>[[vdso]] (9 samples, 0.04%)</title><rect x="28.9327%" y="437" width="0.0448%" height="15" fill="rgb(212,28,1)"/><text x="29.1827%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.04%)</title><rect x="29.0771%" y="533" width="0.0448%" height="15" fill="rgb(248,164,17)"/><text x="29.3271%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="29.0970%" y="517" width="0.0249%" height="15" fill="rgb(222,171,42)"/><text x="29.3470%" y="527.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="29.1069%" y="501" width="0.0149%" height="15" fill="rgb(243,84,45)"/><text x="29.3569%" y="511.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::lint::EventMetadataLinter&gt;::metadata_lint_event (136 samples, 0.68%)</title><rect x="28.9775%" y="549" width="0.6770%" height="15" fill="rgb(252,49,23)"/><text x="29.2275%" y="559.50"></text></g><g><title>ate::tree::TreeAuthorityPlugin::compute_auth (107 samples, 0.53%)</title><rect x="29.1219%" y="533" width="0.5327%" height="15" fill="rgb(215,19,7)"/><text x="29.3719%" y="543.50"></text></g><g><title>_int_free (9 samples, 0.04%)</title><rect x="29.6695%" y="549" width="0.0448%" height="15" fill="rgb(238,81,41)"/><text x="29.9195%" y="559.50"></text></g><g><title>__irqentry_text_end (3 samples, 0.01%)</title><rect x="29.9781%" y="485" width="0.0149%" height="15" fill="rgb(210,199,37)"/><text x="30.2281%" y="495.50"></text></g><g><title>exc_page_fault (6 samples, 0.03%)</title><rect x="29.9930%" y="469" width="0.0299%" height="15" fill="rgb(244,192,49)"/><text x="30.2430%" y="479.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.03%)</title><rect x="29.9930%" y="453" width="0.0299%" height="15" fill="rgb(226,211,11)"/><text x="30.2430%" y="463.50"></text></g><g><title>handle_mm_fault (6 samples, 0.03%)</title><rect x="29.9930%" y="437" width="0.0299%" height="15" fill="rgb(236,162,54)"/><text x="30.2430%" y="447.50"></text></g><g><title>asm_exc_page_fault (11 samples, 0.05%)</title><rect x="29.9930%" y="485" width="0.0548%" height="15" fill="rgb(220,229,9)"/><text x="30.2430%" y="495.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.02%)</title><rect x="30.0229%" y="469" width="0.0249%" height="15" fill="rgb(250,87,22)"/><text x="30.2729%" y="479.50"></text></g><g><title>sysmalloc (5 samples, 0.02%)</title><rect x="30.0528%" y="485" width="0.0249%" height="15" fill="rgb(239,43,17)"/><text x="30.3028%" y="495.50"></text></g><g><title>__GI___default_morecore (4 samples, 0.02%)</title><rect x="30.0577%" y="469" width="0.0199%" height="15" fill="rgb(231,177,25)"/><text x="30.3077%" y="479.50"></text></g><g><title>__GI___sbrk (4 samples, 0.02%)</title><rect x="30.0577%" y="453" width="0.0199%" height="15" fill="rgb(219,179,1)"/><text x="30.3077%" y="463.50"></text></g><g><title>__GI___sbrk (4 samples, 0.02%)</title><rect x="30.0577%" y="437" width="0.0199%" height="15" fill="rgb(238,219,53)"/><text x="30.3077%" y="447.50"></text></g><g><title>__brk (4 samples, 0.02%)</title><rect x="30.0577%" y="421" width="0.0199%" height="15" fill="rgb(232,167,36)"/><text x="30.3077%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="30.0577%" y="405" width="0.0199%" height="15" fill="rgb(244,19,51)"/><text x="30.3077%" y="415.50"></text></g><g><title>do_syscall_64 (4 samples, 0.02%)</title><rect x="30.0577%" y="389" width="0.0199%" height="15" fill="rgb(224,6,22)"/><text x="30.3077%" y="399.50"></text></g><g><title>__do_sys_brk (4 samples, 0.02%)</title><rect x="30.0577%" y="373" width="0.0199%" height="15" fill="rgb(224,145,5)"/><text x="30.3077%" y="383.50"></text></g><g><title>find_vma (3 samples, 0.01%)</title><rect x="30.0627%" y="357" width="0.0149%" height="15" fill="rgb(234,130,49)"/><text x="30.3127%" y="367.50"></text></g><g><title>_int_malloc (59 samples, 0.29%)</title><rect x="29.7889%" y="501" width="0.2937%" height="15" fill="rgb(254,6,2)"/><text x="30.0389%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (75 samples, 0.37%)</title><rect x="29.7143%" y="549" width="0.3734%" height="15" fill="rgb(208,96,46)"/><text x="29.9643%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (72 samples, 0.36%)</title><rect x="29.7292%" y="533" width="0.3584%" height="15" fill="rgb(239,3,39)"/><text x="29.9792%" y="543.50"></text></g><g><title>__GI___libc_malloc (69 samples, 0.34%)</title><rect x="29.7441%" y="517" width="0.3435%" height="15" fill="rgb(233,210,1)"/><text x="29.9941%" y="527.50"></text></g><g><title>ate::multi::ChainMultiUser::metadata_lint_event (319 samples, 1.59%)</title><rect x="28.5046%" y="565" width="1.5880%" height="15" fill="rgb(244,137,37)"/><text x="28.7546%" y="575.50"></text></g><g><title>ate::multi::ChainMultiUser::metadata_lint_many (21 samples, 0.10%)</title><rect x="30.0926%" y="565" width="0.1045%" height="15" fill="rgb(240,136,2)"/><text x="30.3426%" y="575.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::lint::EventMetadataLinter&gt;::metadata_lint_many (20 samples, 0.10%)</title><rect x="30.0976%" y="549" width="0.0996%" height="15" fill="rgb(239,18,37)"/><text x="30.3476%" y="559.50"></text></g><g><title>&lt;ate::signature::SignaturePlugin as ate::lint::EventMetadataLinter&gt;::metadata_lint_many (20 samples, 0.10%)</title><rect x="30.0976%" y="533" width="0.0996%" height="15" fill="rgb(218,185,22)"/><text x="30.3476%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.10%)</title><rect x="30.0976%" y="517" width="0.0996%" height="15" fill="rgb(225,218,4)"/><text x="30.3476%" y="527.50"></text></g><g><title>_int_malloc (27 samples, 0.13%)</title><rect x="30.3714%" y="517" width="0.1344%" height="15" fill="rgb(230,182,32)"/><text x="30.6214%" y="527.50"></text></g><g><title>unlink_chunk (4 samples, 0.02%)</title><rect x="30.4859%" y="501" width="0.0199%" height="15" fill="rgb(242,56,43)"/><text x="30.7359%" y="511.50"></text></g><g><title>__GI___libc_malloc (58 samples, 0.29%)</title><rect x="30.2220%" y="533" width="0.2887%" height="15" fill="rgb(233,99,24)"/><text x="30.4720%" y="543.50"></text></g><g><title>bytes::bytes::promotable_even_clone (64 samples, 0.32%)</title><rect x="30.1971%" y="565" width="0.3186%" height="15" fill="rgb(234,209,42)"/><text x="30.4471%" y="575.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (63 samples, 0.31%)</title><rect x="30.2021%" y="549" width="0.3136%" height="15" fill="rgb(227,7,12)"/><text x="30.4521%" y="559.50"></text></g><g><title>_int_free (21 samples, 0.10%)</title><rect x="30.5257%" y="549" width="0.1045%" height="15" fill="rgb(245,203,43)"/><text x="30.7757%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (40 samples, 0.20%)</title><rect x="30.5157%" y="565" width="0.1991%" height="15" fill="rgb(238,205,33)"/><text x="30.7657%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (17 samples, 0.08%)</title><rect x="30.6302%" y="549" width="0.0846%" height="15" fill="rgb(231,56,7)"/><text x="30.8802%" y="559.50"></text></g><g><title>error_entry (8 samples, 0.04%)</title><rect x="30.7149%" y="565" width="0.0398%" height="15" fill="rgb(244,186,29)"/><text x="30.9649%" y="575.50"></text></g><g><title>sync_regs (7 samples, 0.03%)</title><rect x="30.7198%" y="549" width="0.0348%" height="15" fill="rgb(234,111,31)"/><text x="30.9698%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="30.7646%" y="501" width="0.0149%" height="15" fill="rgb(241,149,10)"/><text x="31.0146%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="30.7646%" y="485" width="0.0149%" height="15" fill="rgb(249,206,44)"/><text x="31.0146%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="30.7646%" y="469" width="0.0149%" height="15" fill="rgb(251,153,30)"/><text x="31.0146%" y="479.50"></text></g><g><title>__perf_event_task_sched_in (15 samples, 0.07%)</title><rect x="30.8094%" y="293" width="0.0747%" height="15" fill="rgb(239,152,38)"/><text x="31.0594%" y="303.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (15 samples, 0.07%)</title><rect x="30.8094%" y="277" width="0.0747%" height="15" fill="rgb(249,139,47)"/><text x="31.0594%" y="287.50"></text></g><g><title>native_write_msr (15 samples, 0.07%)</title><rect x="30.8094%" y="261" width="0.0747%" height="15" fill="rgb(244,64,35)"/><text x="31.0594%" y="271.50"></text></g><g><title>finish_task_switch (16 samples, 0.08%)</title><rect x="30.8094%" y="309" width="0.0796%" height="15" fill="rgb(216,46,15)"/><text x="31.0594%" y="319.50"></text></g><g><title>do_syscall_64 (22 samples, 0.11%)</title><rect x="30.7895%" y="421" width="0.1095%" height="15" fill="rgb(250,74,19)"/><text x="31.0395%" y="431.50"></text></g><g><title>__x64_sys_futex (22 samples, 0.11%)</title><rect x="30.7895%" y="405" width="0.1095%" height="15" fill="rgb(249,42,33)"/><text x="31.0395%" y="415.50"></text></g><g><title>do_futex (22 samples, 0.11%)</title><rect x="30.7895%" y="389" width="0.1095%" height="15" fill="rgb(242,149,17)"/><text x="31.0395%" y="399.50"></text></g><g><title>futex_wait (22 samples, 0.11%)</title><rect x="30.7895%" y="373" width="0.1095%" height="15" fill="rgb(244,29,21)"/><text x="31.0395%" y="383.50"></text></g><g><title>futex_wait_queue_me (21 samples, 0.10%)</title><rect x="30.7945%" y="357" width="0.1045%" height="15" fill="rgb(220,130,37)"/><text x="31.0445%" y="367.50"></text></g><g><title>schedule (21 samples, 0.10%)</title><rect x="30.7945%" y="341" width="0.1045%" height="15" fill="rgb(211,67,2)"/><text x="31.0445%" y="351.50"></text></g><g><title>__schedule (21 samples, 0.10%)</title><rect x="30.7945%" y="325" width="0.1045%" height="15" fill="rgb(235,68,52)"/><text x="31.0445%" y="335.50"></text></g><g><title>tokio::runtime::thread_pool::worker::block_in_place (30 samples, 0.15%)</title><rect x="30.7547%" y="565" width="0.1493%" height="15" fill="rgb(246,142,3)"/><text x="31.0047%" y="575.50"></text></g><g><title>tokio::runtime::enter::exit (30 samples, 0.15%)</title><rect x="30.7547%" y="549" width="0.1493%" height="15" fill="rgb(241,25,7)"/><text x="31.0047%" y="559.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (28 samples, 0.14%)</title><rect x="30.7646%" y="533" width="0.1394%" height="15" fill="rgb(242,119,39)"/><text x="31.0146%" y="543.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (28 samples, 0.14%)</title><rect x="30.7646%" y="517" width="0.1394%" height="15" fill="rgb(241,98,45)"/><text x="31.0146%" y="527.50"></text></g><g><title>std::thread::park (25 samples, 0.12%)</title><rect x="30.7796%" y="501" width="0.1245%" height="15" fill="rgb(254,28,30)"/><text x="31.0296%" y="511.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (25 samples, 0.12%)</title><rect x="30.7796%" y="485" width="0.1245%" height="15" fill="rgb(241,142,54)"/><text x="31.0296%" y="495.50"></text></g><g><title>std::sys::unix::futex::futex_wait (23 samples, 0.11%)</title><rect x="30.7895%" y="469" width="0.1145%" height="15" fill="rgb(222,85,15)"/><text x="31.0395%" y="479.50"></text></g><g><title>syscall (23 samples, 0.11%)</title><rect x="30.7895%" y="453" width="0.1145%" height="15" fill="rgb(210,85,47)"/><text x="31.0395%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (23 samples, 0.11%)</title><rect x="30.7895%" y="437" width="0.1145%" height="15" fill="rgb(224,206,25)"/><text x="31.0395%" y="447.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (5 samples, 0.02%)</title><rect x="30.9040%" y="517" width="0.0249%" height="15" fill="rgb(243,201,19)"/><text x="31.1540%" y="527.50"></text></g><g><title>syscall (4 samples, 0.02%)</title><rect x="30.9090%" y="501" width="0.0199%" height="15" fill="rgb(236,59,4)"/><text x="31.1590%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="30.9090%" y="485" width="0.0199%" height="15" fill="rgb(254,179,45)"/><text x="31.1590%" y="495.50"></text></g><g><title>do_syscall_64 (4 samples, 0.02%)</title><rect x="30.9090%" y="469" width="0.0199%" height="15" fill="rgb(226,14,10)"/><text x="31.1590%" y="479.50"></text></g><g><title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="30.9090%" y="453" width="0.0199%" height="15" fill="rgb(244,27,41)"/><text x="31.1590%" y="463.50"></text></g><g><title>do_futex (4 samples, 0.02%)</title><rect x="30.9090%" y="437" width="0.0199%" height="15" fill="rgb(235,35,32)"/><text x="31.1590%" y="447.50"></text></g><g><title>futex_wake (4 samples, 0.02%)</title><rect x="30.9090%" y="421" width="0.0199%" height="15" fill="rgb(218,68,31)"/><text x="31.1590%" y="431.50"></text></g><g><title>wake_up_q (3 samples, 0.01%)</title><rect x="30.9140%" y="405" width="0.0149%" height="15" fill="rgb(207,120,37)"/><text x="31.1640%" y="415.50"></text></g><g><title>try_to_wake_up (3 samples, 0.01%)</title><rect x="30.9140%" y="389" width="0.0149%" height="15" fill="rgb(227,98,0)"/><text x="31.1640%" y="399.50"></text></g><g><title>ttwu_do_activate (3 samples, 0.01%)</title><rect x="30.9140%" y="373" width="0.0149%" height="15" fill="rgb(207,7,3)"/><text x="31.1640%" y="383.50"></text></g><g><title>psi_task_change (3 samples, 0.01%)</title><rect x="30.9140%" y="357" width="0.0149%" height="15" fill="rgb(206,98,19)"/><text x="31.1640%" y="367.50"></text></g><g><title>psi_group_change (3 samples, 0.01%)</title><rect x="30.9140%" y="341" width="0.0149%" height="15" fill="rgb(217,5,26)"/><text x="31.1640%" y="351.50"></text></g><g><title>&lt;ate::dio::Dio as core::ops::drop::Drop&gt;::drop (1,429 samples, 7.11%)</title><rect x="23.8202%" y="597" width="7.1137%" height="15" fill="rgb(235,190,38)"/><text x="24.0702%" y="607.50">&lt;ate::dio:..</text></g><g><title>ate::dio::Dio::commit (1,428 samples, 7.11%)</title><rect x="23.8252%" y="581" width="7.1087%" height="15" fill="rgb(247,86,24)"/><text x="24.0752%" y="591.50">ate::dio::..</text></g><g><title>tokio::task::spawn::spawn (6 samples, 0.03%)</title><rect x="30.9040%" y="565" width="0.0299%" height="15" fill="rgb(205,101,16)"/><text x="31.1540%" y="575.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (6 samples, 0.03%)</title><rect x="30.9040%" y="549" width="0.0299%" height="15" fill="rgb(246,168,33)"/><text x="31.1540%" y="559.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (6 samples, 0.03%)</title><rect x="30.9040%" y="533" width="0.0299%" height="15" fill="rgb(231,114,1)"/><text x="31.1540%" y="543.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="30.9339%" y="597" width="0.0199%" height="15" fill="rgb(207,184,53)"/><text x="31.1839%" y="607.50"></text></g><g><title>_int_free (19 samples, 0.09%)</title><rect x="30.9538%" y="597" width="0.0946%" height="15" fill="rgb(224,95,51)"/><text x="31.2038%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.33%)</title><rect x="31.2475%" y="581" width="0.3286%" height="15" fill="rgb(212,188,45)"/><text x="31.4975%" y="591.50"></text></g><g><title>bytes::bytes::promotable_even_drop (21 samples, 0.10%)</title><rect x="31.4715%" y="565" width="0.1045%" height="15" fill="rgb(223,154,38)"/><text x="31.7215%" y="575.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.02%)</title><rect x="31.5512%" y="549" width="0.0249%" height="15" fill="rgb(251,22,52)"/><text x="31.8012%" y="559.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.02%)</title><rect x="31.5512%" y="533" width="0.0249%" height="15" fill="rgb(229,209,22)"/><text x="31.8012%" y="543.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.02%)</title><rect x="31.5512%" y="517" width="0.0249%" height="15" fill="rgb(234,138,34)"/><text x="31.8012%" y="527.50"></text></g><g><title>schedule (5 samples, 0.02%)</title><rect x="31.5512%" y="501" width="0.0249%" height="15" fill="rgb(212,95,11)"/><text x="31.8012%" y="511.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="31.5512%" y="485" width="0.0249%" height="15" fill="rgb(240,179,47)"/><text x="31.8012%" y="495.50"></text></g><g><title>finish_task_switch (5 samples, 0.02%)</title><rect x="31.5512%" y="469" width="0.0249%" height="15" fill="rgb(240,163,11)"/><text x="31.8012%" y="479.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="31.5512%" y="453" width="0.0249%" height="15" fill="rgb(236,37,12)"/><text x="31.8012%" y="463.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.02%)</title><rect x="31.5512%" y="437" width="0.0249%" height="15" fill="rgb(232,164,16)"/><text x="31.8012%" y="447.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="31.5512%" y="421" width="0.0249%" height="15" fill="rgb(244,205,15)"/><text x="31.8012%" y="431.50"></text></g><g><title>__GI___libc_free (95 samples, 0.47%)</title><rect x="31.5761%" y="581" width="0.4729%" height="15" fill="rgb(223,117,47)"/><text x="31.8261%" y="591.50"></text></g><g><title>__rdl_dealloc (19 samples, 0.09%)</title><rect x="32.0490%" y="581" width="0.0946%" height="15" fill="rgb(244,107,35)"/><text x="32.2990%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (19 samples, 0.09%)</title><rect x="32.0490%" y="565" width="0.0946%" height="15" fill="rgb(205,140,8)"/><text x="32.2990%" y="575.50"></text></g><g><title>__rust_dealloc (20 samples, 0.10%)</title><rect x="32.1436%" y="581" width="0.0996%" height="15" fill="rgb(228,84,46)"/><text x="32.3936%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="35.2648%" y="549" width="0.0348%" height="15" fill="rgb(254,188,9)"/><text x="35.5148%" y="559.50"></text></g><g><title>syscall_exit_to_user_mode (5 samples, 0.02%)</title><rect x="35.2748%" y="533" width="0.0249%" height="15" fill="rgb(206,112,54)"/><text x="35.5248%" y="543.50"></text></g><g><title>__lll_lock_wait_private (13 samples, 0.06%)</title><rect x="35.2499%" y="565" width="0.0647%" height="15" fill="rgb(216,84,49)"/><text x="35.4999%" y="575.50"></text></g><g><title>syscall_return_via_sysret (3 samples, 0.01%)</title><rect x="35.2997%" y="549" width="0.0149%" height="15" fill="rgb(214,194,35)"/><text x="35.5497%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.01%)</title><rect x="35.3246%" y="565" width="0.0149%" height="15" fill="rgb(249,28,3)"/><text x="35.5746%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="35.3395%" y="565" width="0.0348%" height="15" fill="rgb(222,56,52)"/><text x="35.5895%" y="575.50"></text></g><g><title>syscall_exit_to_user_mode (5 samples, 0.02%)</title><rect x="35.3495%" y="549" width="0.0249%" height="15" fill="rgb(245,217,50)"/><text x="35.5995%" y="559.50"></text></g><g><title>free_perturb (15 samples, 0.07%)</title><rect x="35.3744%" y="565" width="0.0747%" height="15" fill="rgb(213,201,24)"/><text x="35.6244%" y="575.50"></text></g><g><title>syscall_return_via_sysret (3 samples, 0.01%)</title><rect x="35.4490%" y="565" width="0.0149%" height="15" fill="rgb(248,116,28)"/><text x="35.6990%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,732 samples, 33.51%)</title><rect x="1.9713%" y="629" width="33.5125%" height="15" fill="rgb(219,72,43)"/><text x="2.2213%" y="639.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::f..</text></g><g><title>core::ptr::drop_in_place (2,343 samples, 11.66%)</title><rect x="23.8202%" y="613" width="11.6637%" height="15" fill="rgb(209,138,14)"/><text x="24.0702%" y="623.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place (891 samples, 4.44%)</title><rect x="31.0484%" y="597" width="4.4355%" height="15" fill="rgb(222,18,33)"/><text x="31.2984%" y="607.50">core:..</text></g><g><title>_int_free (651 samples, 3.24%)</title><rect x="32.2431%" y="581" width="3.2407%" height="15" fill="rgb(213,199,7)"/><text x="32.4931%" y="591.50">_in..</text></g><g><title>tcache_put (4 samples, 0.02%)</title><rect x="35.4640%" y="565" width="0.0199%" height="15" fill="rgb(250,110,10)"/><text x="35.7140%" y="575.50"></text></g><g><title>__GI___libc_free (15 samples, 0.07%)</title><rect x="35.4888%" y="629" width="0.0747%" height="15" fill="rgb(248,123,6)"/><text x="35.7388%" y="639.50"></text></g><g><title>__libc_start_main (5 samples, 0.02%)</title><rect x="35.5685%" y="629" width="0.0249%" height="15" fill="rgb(206,91,31)"/><text x="35.8185%" y="639.50"></text></g><g><title>main (5 samples, 0.02%)</title><rect x="35.5685%" y="613" width="0.0249%" height="15" fill="rgb(211,154,13)"/><text x="35.8185%" y="623.50"></text></g><g><title>std::rt::lang_start_internal (5 samples, 0.02%)</title><rect x="35.5685%" y="597" width="0.0249%" height="15" fill="rgb(225,148,7)"/><text x="35.8185%" y="607.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.02%)</title><rect x="35.5685%" y="581" width="0.0249%" height="15" fill="rgb(220,160,43)"/><text x="35.8185%" y="591.50"></text></g><g><title>std::panicking::try (5 samples, 0.02%)</title><rect x="35.5685%" y="565" width="0.0249%" height="15" fill="rgb(213,52,39)"/><text x="35.8185%" y="575.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.02%)</title><rect x="35.5685%" y="549" width="0.0249%" height="15" fill="rgb(243,137,7)"/><text x="35.8185%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (5 samples, 0.02%)</title><rect x="35.5685%" y="533" width="0.0249%" height="15" fill="rgb(230,79,13)"/><text x="35.8185%" y="543.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (5 samples, 0.02%)</title><rect x="35.5685%" y="517" width="0.0249%" height="15" fill="rgb(247,105,23)"/><text x="35.8185%" y="527.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.02%)</title><rect x="35.5685%" y="501" width="0.0249%" height="15" fill="rgb(223,179,41)"/><text x="35.8185%" y="511.50"></text></g><g><title>stress::main (5 samples, 0.02%)</title><rect x="35.5685%" y="485" width="0.0249%" height="15" fill="rgb(218,9,34)"/><text x="35.8185%" y="495.50"></text></g><g><title>tokio::runtime::builder::Builder::build (5 samples, 0.02%)</title><rect x="35.5685%" y="469" width="0.0249%" height="15" fill="rgb(222,106,8)"/><text x="35.8185%" y="479.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch (5 samples, 0.02%)</title><rect x="35.5685%" y="453" width="0.0249%" height="15" fill="rgb(211,220,0)"/><text x="35.8185%" y="463.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (5 samples, 0.02%)</title><rect x="35.5685%" y="437" width="0.0249%" height="15" fill="rgb(229,52,16)"/><text x="35.8185%" y="447.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn (5 samples, 0.02%)</title><rect x="35.5685%" y="421" width="0.0249%" height="15" fill="rgb(212,155,18)"/><text x="35.8185%" y="431.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (5 samples, 0.02%)</title><rect x="35.5685%" y="405" width="0.0249%" height="15" fill="rgb(242,21,14)"/><text x="35.8185%" y="415.50"></text></g><g><title>syscall (5 samples, 0.02%)</title><rect x="35.5685%" y="389" width="0.0249%" height="15" fill="rgb(222,19,48)"/><text x="35.8185%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="35.5685%" y="373" width="0.0249%" height="15" fill="rgb(232,45,27)"/><text x="35.8185%" y="383.50"></text></g><g><title>do_syscall_64 (5 samples, 0.02%)</title><rect x="35.5685%" y="357" width="0.0249%" height="15" fill="rgb(249,103,42)"/><text x="35.8185%" y="367.50"></text></g><g><title>__x64_sys_futex (5 samples, 0.02%)</title><rect x="35.5685%" y="341" width="0.0249%" height="15" fill="rgb(246,81,33)"/><text x="35.8185%" y="351.50"></text></g><g><title>do_futex (5 samples, 0.02%)</title><rect x="35.5685%" y="325" width="0.0249%" height="15" fill="rgb(252,33,42)"/><text x="35.8185%" y="335.50"></text></g><g><title>futex_wait (5 samples, 0.02%)</title><rect x="35.5685%" y="309" width="0.0249%" height="15" fill="rgb(209,212,41)"/><text x="35.8185%" y="319.50"></text></g><g><title>futex_wait_queue_me (5 samples, 0.02%)</title><rect x="35.5685%" y="293" width="0.0249%" height="15" fill="rgb(207,154,6)"/><text x="35.8185%" y="303.50"></text></g><g><title>schedule (5 samples, 0.02%)</title><rect x="35.5685%" y="277" width="0.0249%" height="15" fill="rgb(223,64,47)"/><text x="35.8185%" y="287.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="35.5685%" y="261" width="0.0249%" height="15" fill="rgb(211,161,38)"/><text x="35.8185%" y="271.50"></text></g><g><title>finish_task_switch (5 samples, 0.02%)</title><rect x="35.5685%" y="245" width="0.0249%" height="15" fill="rgb(219,138,40)"/><text x="35.8185%" y="255.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="35.5685%" y="229" width="0.0249%" height="15" fill="rgb(241,228,46)"/><text x="35.8185%" y="239.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.02%)</title><rect x="35.5685%" y="213" width="0.0249%" height="15" fill="rgb(223,209,38)"/><text x="35.8185%" y="223.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="35.5685%" y="197" width="0.0249%" height="15" fill="rgb(236,164,45)"/><text x="35.8185%" y="207.50"></text></g><g><title>_int_free (46 samples, 0.23%)</title><rect x="35.6083%" y="629" width="0.2290%" height="15" fill="rgb(231,15,5)"/><text x="35.8583%" y="639.50"></text></g><g><title>_int_malloc (12 samples, 0.06%)</title><rect x="35.8373%" y="629" width="0.0597%" height="15" fill="rgb(252,35,15)"/><text x="36.0873%" y="639.50"></text></g><g><title>error_entry (4 samples, 0.02%)</title><rect x="35.8771%" y="613" width="0.0199%" height="15" fill="rgb(248,181,18)"/><text x="36.1271%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (26 samples, 0.13%)</title><rect x="35.8971%" y="629" width="0.1294%" height="15" fill="rgb(233,39,42)"/><text x="36.1471%" y="639.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (4 samples, 0.02%)</title><rect x="36.0414%" y="629" width="0.0199%" height="15" fill="rgb(238,110,33)"/><text x="36.2914%" y="639.50"></text></g><g><title>ate::dio::DioState::dirty (4 samples, 0.02%)</title><rect x="36.0713%" y="629" width="0.0199%" height="15" fill="rgb(233,195,10)"/><text x="36.3213%" y="639.50"></text></g><g><title>blake3::ChunkState::update (8 samples, 0.04%)</title><rect x="36.1260%" y="629" width="0.0398%" height="15" fill="rgb(254,105,3)"/><text x="36.3760%" y="639.50"></text></g><g><title>blake3::Hasher::update (3 samples, 0.01%)</title><rect x="36.1758%" y="629" width="0.0149%" height="15" fill="rgb(221,225,9)"/><text x="36.4258%" y="639.50"></text></g><g><title>blake3_compress_in_place_sse41 (92 samples, 0.46%)</title><rect x="36.1908%" y="629" width="0.4580%" height="15" fill="rgb(224,227,45)"/><text x="36.4408%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="36.6487%" y="629" width="0.0149%" height="15" fill="rgb(229,198,43)"/><text x="36.8987%" y="639.50"></text></g><g><title>[unknown] (7,035 samples, 35.02%)</title><rect x="1.6926%" y="645" width="35.0209%" height="15" fill="rgb(206,209,35)"/><text x="1.9426%" y="655.50">[unknown]</text></g><g><title>schedule_tail (40 samples, 0.20%)</title><rect x="36.7135%" y="613" width="0.1991%" height="15" fill="rgb(245,195,53)"/><text x="36.9635%" y="623.50"></text></g><g><title>finish_task_switch (40 samples, 0.20%)</title><rect x="36.7135%" y="597" width="0.1991%" height="15" fill="rgb(240,92,26)"/><text x="36.9635%" y="607.50"></text></g><g><title>__perf_event_task_sched_in (40 samples, 0.20%)</title><rect x="36.7135%" y="581" width="0.1991%" height="15" fill="rgb(207,40,23)"/><text x="36.9635%" y="591.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (40 samples, 0.20%)</title><rect x="36.7135%" y="565" width="0.1991%" height="15" fill="rgb(223,111,35)"/><text x="36.9635%" y="575.50"></text></g><g><title>native_write_msr (40 samples, 0.20%)</title><rect x="36.7135%" y="549" width="0.1991%" height="15" fill="rgb(229,147,28)"/><text x="36.9635%" y="559.50"></text></g><g><title>ret_from_fork (42 samples, 0.21%)</title><rect x="36.7135%" y="629" width="0.2091%" height="15" fill="rgb(211,29,28)"/><text x="36.9635%" y="639.50"></text></g><g><title>do_mmap (3 samples, 0.01%)</title><rect x="36.9325%" y="453" width="0.0149%" height="15" fill="rgb(228,72,33)"/><text x="37.1825%" y="463.50"></text></g><g><title>__GI___clone (49 samples, 0.24%)</title><rect x="36.7135%" y="645" width="0.2439%" height="15" fill="rgb(205,214,31)"/><text x="36.9635%" y="655.50"></text></g><g><title>start_thread (7 samples, 0.03%)</title><rect x="36.9225%" y="629" width="0.0348%" height="15" fill="rgb(224,111,15)"/><text x="37.1725%" y="639.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (6 samples, 0.03%)</title><rect x="36.9275%" y="613" width="0.0299%" height="15" fill="rgb(253,21,26)"/><text x="37.1775%" y="623.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (5 samples, 0.02%)</title><rect x="36.9325%" y="597" width="0.0249%" height="15" fill="rgb(245,139,43)"/><text x="37.1825%" y="607.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (5 samples, 0.02%)</title><rect x="36.9325%" y="581" width="0.0249%" height="15" fill="rgb(252,170,7)"/><text x="37.1825%" y="591.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (5 samples, 0.02%)</title><rect x="36.9325%" y="565" width="0.0249%" height="15" fill="rgb(231,118,14)"/><text x="37.1825%" y="575.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (5 samples, 0.02%)</title><rect x="36.9325%" y="549" width="0.0249%" height="15" fill="rgb(238,83,0)"/><text x="37.1825%" y="559.50"></text></g><g><title>__GI___mmap64 (5 samples, 0.02%)</title><rect x="36.9325%" y="533" width="0.0249%" height="15" fill="rgb(221,39,39)"/><text x="37.1825%" y="543.50"></text></g><g><title>__GI___mmap64 (5 samples, 0.02%)</title><rect x="36.9325%" y="517" width="0.0249%" height="15" fill="rgb(222,119,46)"/><text x="37.1825%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="36.9325%" y="501" width="0.0249%" height="15" fill="rgb(222,165,49)"/><text x="37.1825%" y="511.50"></text></g><g><title>do_syscall_64 (5 samples, 0.02%)</title><rect x="36.9325%" y="485" width="0.0249%" height="15" fill="rgb(219,113,52)"/><text x="37.1825%" y="495.50"></text></g><g><title>vm_mmap_pgoff (5 samples, 0.02%)</title><rect x="36.9325%" y="469" width="0.0249%" height="15" fill="rgb(214,7,15)"/><text x="37.1825%" y="479.50"></text></g><g><title>asm_exc_page_fault (51 samples, 0.25%)</title><rect x="36.9773%" y="645" width="0.2539%" height="15" fill="rgb(235,32,4)"/><text x="37.2273%" y="655.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.02%)</title><rect x="46.4008%" y="613" width="0.0249%" height="15" fill="rgb(238,90,54)"/><text x="46.6508%" y="623.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.02%)</title><rect x="46.4008%" y="597" width="0.0249%" height="15" fill="rgb(213,208,19)"/><text x="46.6508%" y="607.50"></text></g><g><title>schedule (5 samples, 0.02%)</title><rect x="46.4008%" y="581" width="0.0249%" height="15" fill="rgb(233,156,4)"/><text x="46.6508%" y="591.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="46.4008%" y="565" width="0.0249%" height="15" fill="rgb(207,194,5)"/><text x="46.6508%" y="575.50"></text></g><g><title>finish_task_switch (5 samples, 0.02%)</title><rect x="46.4008%" y="549" width="0.0249%" height="15" fill="rgb(206,111,30)"/><text x="46.6508%" y="559.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="46.4008%" y="533" width="0.0249%" height="15" fill="rgb(243,70,54)"/><text x="46.6508%" y="543.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.02%)</title><rect x="46.4008%" y="517" width="0.0249%" height="15" fill="rgb(242,28,8)"/><text x="46.6508%" y="527.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="46.4008%" y="501" width="0.0249%" height="15" fill="rgb(219,106,18)"/><text x="46.6508%" y="511.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="46.4257%" y="597" width="0.0199%" height="15" fill="rgb(244,222,10)"/><text x="46.6757%" y="607.50"></text></g><g><title>hrtimer_interrupt (4 samples, 0.02%)</title><rect x="46.4257%" y="581" width="0.0199%" height="15" fill="rgb(236,179,52)"/><text x="46.6757%" y="591.50"></text></g><g><title>__hrtimer_run_queues (4 samples, 0.02%)</title><rect x="46.4257%" y="565" width="0.0199%" height="15" fill="rgb(213,23,39)"/><text x="46.6757%" y="575.50"></text></g><g><title>tick_sched_timer (3 samples, 0.01%)</title><rect x="46.4307%" y="549" width="0.0149%" height="15" fill="rgb(238,48,10)"/><text x="46.6807%" y="559.50"></text></g><g><title>tick_sched_handle (3 samples, 0.01%)</title><rect x="46.4307%" y="533" width="0.0149%" height="15" fill="rgb(251,196,23)"/><text x="46.6807%" y="543.50"></text></g><g><title>update_process_times (3 samples, 0.01%)</title><rect x="46.4307%" y="517" width="0.0149%" height="15" fill="rgb(250,152,24)"/><text x="46.6807%" y="527.50"></text></g><g><title>blake3_compress_in_place_sse41 (1,850 samples, 9.21%)</title><rect x="37.2411%" y="645" width="9.2095%" height="15" fill="rgb(209,150,17)"/><text x="37.4911%" y="655.50">blake3_compre..</text></g><g><title>asm_sysvec_apic_timer_interrupt (10 samples, 0.05%)</title><rect x="46.4008%" y="629" width="0.0498%" height="15" fill="rgb(234,202,34)"/><text x="46.6508%" y="639.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="46.4257%" y="613" width="0.0249%" height="15" fill="rgb(253,148,53)"/><text x="46.6757%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="46.4506%" y="645" width="0.0149%" height="15" fill="rgb(218,129,16)"/><text x="46.7006%" y="655.50"></text></g><g><title>page_remove_rmap (4 samples, 0.02%)</title><rect x="46.5601%" y="501" width="0.0199%" height="15" fill="rgb(216,85,19)"/><text x="46.8101%" y="511.50"></text></g><g><title>__list_del_entry_valid (3 samples, 0.01%)</title><rect x="46.7194%" y="421" width="0.0149%" height="15" fill="rgb(235,228,7)"/><text x="46.9694%" y="431.50"></text></g><g><title>__free_one_page (17 samples, 0.08%)</title><rect x="46.6547%" y="437" width="0.0846%" height="15" fill="rgb(245,175,0)"/><text x="46.9047%" y="447.50"></text></g><g><title>free_pcppages_bulk (24 samples, 0.12%)</title><rect x="46.6348%" y="453" width="0.1195%" height="15" fill="rgb(208,168,36)"/><text x="46.8848%" y="463.50"></text></g><g><title>free_unref_page_list (28 samples, 0.14%)</title><rect x="46.6298%" y="469" width="0.1394%" height="15" fill="rgb(246,171,24)"/><text x="46.8798%" y="479.50"></text></g><g><title>free_unref_page_commit (3 samples, 0.01%)</title><rect x="46.7543%" y="453" width="0.0149%" height="15" fill="rgb(215,142,24)"/><text x="47.0043%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (62 samples, 0.31%)</title><rect x="46.4656%" y="645" width="0.3086%" height="15" fill="rgb(250,187,7)"/><text x="46.7156%" y="655.50"></text></g><g><title>do_syscall_64 (60 samples, 0.30%)</title><rect x="46.4755%" y="629" width="0.2987%" height="15" fill="rgb(228,66,33)"/><text x="46.7255%" y="639.50"></text></g><g><title>__x64_sys_exit_group (59 samples, 0.29%)</title><rect x="46.4805%" y="613" width="0.2937%" height="15" fill="rgb(234,215,21)"/><text x="46.7305%" y="623.50"></text></g><g><title>do_group_exit (59 samples, 0.29%)</title><rect x="46.4805%" y="597" width="0.2937%" height="15" fill="rgb(222,191,20)"/><text x="46.7305%" y="607.50"></text></g><g><title>do_exit (59 samples, 0.29%)</title><rect x="46.4805%" y="581" width="0.2937%" height="15" fill="rgb(245,79,54)"/><text x="46.7305%" y="591.50"></text></g><g><title>mmput (59 samples, 0.29%)</title><rect x="46.4805%" y="565" width="0.2937%" height="15" fill="rgb(240,10,37)"/><text x="46.7305%" y="575.50"></text></g><g><title>exit_mmap (59 samples, 0.29%)</title><rect x="46.4805%" y="549" width="0.2937%" height="15" fill="rgb(214,192,32)"/><text x="46.7305%" y="559.50"></text></g><g><title>unmap_vmas (58 samples, 0.29%)</title><rect x="46.4855%" y="533" width="0.2887%" height="15" fill="rgb(209,36,54)"/><text x="46.7355%" y="543.50"></text></g><g><title>unmap_page_range (58 samples, 0.29%)</title><rect x="46.4855%" y="517" width="0.2887%" height="15" fill="rgb(220,10,11)"/><text x="46.7355%" y="527.50"></text></g><g><title>tlb_flush_mmu (38 samples, 0.19%)</title><rect x="46.5850%" y="501" width="0.1892%" height="15" fill="rgb(221,106,17)"/><text x="46.8350%" y="511.50"></text></g><g><title>release_pages (36 samples, 0.18%)</title><rect x="46.5950%" y="485" width="0.1792%" height="15" fill="rgb(251,142,44)"/><text x="46.8450%" y="495.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (9 samples, 0.04%)</title><rect x="46.7742%" y="645" width="0.0448%" height="15" fill="rgb(238,13,15)"/><text x="47.0242%" y="655.50"></text></g><g><title>stress (9,402 samples, 46.80%)</title><rect x="0.0249%" y="661" width="46.8041%" height="15" fill="rgb(208,107,27)"/><text x="0.2749%" y="671.50">stress</text></g><g><title>&lt;ate::anti_replay::AntiReplayPlugin as ate::sink::EventSink&gt;::feed (3 samples, 0.01%)</title><rect x="47.1376%" y="629" width="0.0149%" height="15" fill="rgb(205,136,37)"/><text x="47.3876%" y="639.50"></text></g><g><title>&lt;ate::time::TimestampEnforcer as ate::validator::EventValidator&gt;::validate (3 samples, 0.01%)</title><rect x="47.1625%" y="629" width="0.0149%" height="15" fill="rgb(250,205,27)"/><text x="47.4125%" y="639.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="47.1924%" y="629" width="0.0199%" height="15" fill="rgb(210,80,43)"/><text x="47.4424%" y="639.50"></text></g><g><title>_int_free (9 samples, 0.04%)</title><rect x="47.2272%" y="629" width="0.0448%" height="15" fill="rgb(247,160,36)"/><text x="47.4772%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="47.2969%" y="629" width="0.0149%" height="15" fill="rgb(234,13,49)"/><text x="47.5469%" y="639.50"></text></g><g><title>ate::event::EventData::as_header_raw (6 samples, 0.03%)</title><rect x="47.3268%" y="629" width="0.0299%" height="15" fill="rgb(234,122,0)"/><text x="47.5768%" y="639.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (12 samples, 0.06%)</title><rect x="47.3666%" y="629" width="0.0597%" height="15" fill="rgb(207,146,38)"/><text x="47.6166%" y="639.50"></text></g><g><title>blake3::ChunkState::update (16 samples, 0.08%)</title><rect x="47.4363%" y="629" width="0.0796%" height="15" fill="rgb(207,177,25)"/><text x="47.6863%" y="639.50"></text></g><g><title>blake3::Hasher::update (11 samples, 0.05%)</title><rect x="47.5358%" y="629" width="0.0548%" height="15" fill="rgb(211,178,42)"/><text x="47.7858%" y="639.50"></text></g><g><title>blake3::hash (5 samples, 0.02%)</title><rect x="47.5906%" y="629" width="0.0249%" height="15" fill="rgb(230,69,54)"/><text x="47.8406%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.03%)</title><rect x="47.6304%" y="629" width="0.0299%" height="15" fill="rgb(214,135,41)"/><text x="47.8804%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (3 samples, 0.01%)</title><rect x="47.6653%" y="629" width="0.0149%" height="15" fill="rgb(237,67,25)"/><text x="47.9153%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.01%)</title><rect x="47.6802%" y="629" width="0.0149%" height="15" fill="rgb(222,189,50)"/><text x="47.9302%" y="639.50"></text></g><g><title>[[heap]] (118 samples, 0.59%)</title><rect x="47.1227%" y="645" width="0.5874%" height="15" fill="rgb(245,148,34)"/><text x="47.3727%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.03%)</title><rect x="47.7200%" y="629" width="0.0299%" height="15" fill="rgb(222,29,6)"/><text x="47.9700%" y="639.50"></text></g><g><title>_int_malloc (5 samples, 0.02%)</title><rect x="47.7748%" y="629" width="0.0249%" height="15" fill="rgb(221,189,43)"/><text x="48.0248%" y="639.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (4 samples, 0.02%)</title><rect x="47.8544%" y="629" width="0.0199%" height="15" fill="rgb(207,36,27)"/><text x="48.1044%" y="639.50"></text></g><g><title>bincode::serialize (4 samples, 0.02%)</title><rect x="47.8744%" y="629" width="0.0199%" height="15" fill="rgb(217,90,24)"/><text x="48.1244%" y="639.50"></text></g><g><title>bytes::bytes::shared_drop (5 samples, 0.02%)</title><rect x="47.8943%" y="629" width="0.0249%" height="15" fill="rgb(224,66,35)"/><text x="48.1443%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.01%)</title><rect x="47.9291%" y="629" width="0.0149%" height="15" fill="rgb(221,13,50)"/><text x="48.1791%" y="639.50"></text></g><g><title>syscall (4 samples, 0.02%)</title><rect x="47.9490%" y="629" width="0.0199%" height="15" fill="rgb(236,68,49)"/><text x="48.1990%" y="639.50"></text></g><g><title>[anon] (63 samples, 0.31%)</title><rect x="47.7101%" y="645" width="0.3136%" height="15" fill="rgb(229,146,28)"/><text x="47.9601%" y="655.50"></text></g><g><title>unlink_chunk (3 samples, 0.01%)</title><rect x="48.0088%" y="629" width="0.0149%" height="15" fill="rgb(225,31,38)"/><text x="48.2588%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="48.0436%" y="629" width="0.0199%" height="15" fill="rgb(250,208,3)"/><text x="48.2936%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="48.0884%" y="629" width="0.0149%" height="15" fill="rgb(246,54,23)"/><text x="48.3384%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="48.1282%" y="629" width="0.0149%" height="15" fill="rgb(243,76,11)"/><text x="48.3782%" y="639.50"></text></g><g><title>_int_free (5 samples, 0.02%)</title><rect x="48.1432%" y="629" width="0.0249%" height="15" fill="rgb(245,21,50)"/><text x="48.3932%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="48.1880%" y="629" width="0.0199%" height="15" fill="rgb(228,9,43)"/><text x="48.4380%" y="639.50"></text></g><g><title>ate::accessor::ChainProtectedSync::validate_event (3 samples, 0.01%)</title><rect x="48.2079%" y="629" width="0.0149%" height="15" fill="rgb(208,100,47)"/><text x="48.4579%" y="639.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (15 samples, 0.07%)</title><rect x="48.2228%" y="629" width="0.0747%" height="15" fill="rgb(232,26,8)"/><text x="48.4728%" y="639.50"></text></g><g><title>blake3::ChunkState::update (11 samples, 0.05%)</title><rect x="48.3373%" y="629" width="0.0548%" height="15" fill="rgb(216,166,38)"/><text x="48.5873%" y="639.50"></text></g><g><title>blake3::Hasher::new (3 samples, 0.01%)</title><rect x="48.4120%" y="629" width="0.0149%" height="15" fill="rgb(251,202,51)"/><text x="48.6620%" y="639.50"></text></g><g><title>blake3::Hasher::update (8 samples, 0.04%)</title><rect x="48.4269%" y="629" width="0.0398%" height="15" fill="rgb(254,216,34)"/><text x="48.6769%" y="639.50"></text></g><g><title>blake3::Hasher::finalize (7 samples, 0.03%)</title><rect x="48.4867%" y="373" width="0.0348%" height="15" fill="rgb(251,32,27)"/><text x="48.7367%" y="383.50"></text></g><g><title>blake3::Hasher::final_output (7 samples, 0.03%)</title><rect x="48.4867%" y="357" width="0.0348%" height="15" fill="rgb(208,127,28)"/><text x="48.7367%" y="367.50"></text></g><g><title>ate::accessor::ChainProtectedSync::validate_event (11 samples, 0.05%)</title><rect x="48.4867%" y="421" width="0.0548%" height="15" fill="rgb(224,137,22)"/><text x="48.7367%" y="431.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::validator::EventValidator&gt;::validate (11 samples, 0.05%)</title><rect x="48.4867%" y="405" width="0.0548%" height="15" fill="rgb(254,70,32)"/><text x="48.7367%" y="415.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (11 samples, 0.05%)</title><rect x="48.4867%" y="389" width="0.0548%" height="15" fill="rgb(229,75,37)"/><text x="48.7367%" y="399.50"></text></g><g><title>blake3::Hasher::update (4 samples, 0.02%)</title><rect x="48.5215%" y="373" width="0.0199%" height="15" fill="rgb(252,64,23)"/><text x="48.7715%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (12 samples, 0.06%)</title><rect x="48.4867%" y="629" width="0.0597%" height="15" fill="rgb(232,162,48)"/><text x="48.7367%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.06%)</title><rect x="48.4867%" y="613" width="0.0597%" height="15" fill="rgb(246,160,12)"/><text x="48.7367%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (12 samples, 0.06%)</title><rect x="48.4867%" y="597" width="0.0597%" height="15" fill="rgb(247,166,0)"/><text x="48.7367%" y="607.50"></text></g><g><title>std::panicking::try (12 samples, 0.06%)</title><rect x="48.4867%" y="581" width="0.0597%" height="15" fill="rgb(249,219,21)"/><text x="48.7367%" y="591.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (12 samples, 0.06%)</title><rect x="48.4867%" y="565" width="0.0597%" height="15" fill="rgb(205,209,3)"/><text x="48.7367%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (12 samples, 0.06%)</title><rect x="48.4867%" y="549" width="0.0597%" height="15" fill="rgb(243,44,1)"/><text x="48.7367%" y="559.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (12 samples, 0.06%)</title><rect x="48.4867%" y="533" width="0.0597%" height="15" fill="rgb(206,159,16)"/><text x="48.7367%" y="543.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (12 samples, 0.06%)</title><rect x="48.4867%" y="517" width="0.0597%" height="15" fill="rgb(244,77,30)"/><text x="48.7367%" y="527.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (12 samples, 0.06%)</title><rect x="48.4867%" y="501" width="0.0597%" height="15" fill="rgb(218,69,12)"/><text x="48.7367%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.06%)</title><rect x="48.4867%" y="485" width="0.0597%" height="15" fill="rgb(212,87,7)"/><text x="48.7367%" y="495.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (12 samples, 0.06%)</title><rect x="48.4867%" y="469" width="0.0597%" height="15" fill="rgb(245,114,25)"/><text x="48.7367%" y="479.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (12 samples, 0.06%)</title><rect x="48.4867%" y="453" width="0.0597%" height="15" fill="rgb(210,61,42)"/><text x="48.7367%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.06%)</title><rect x="48.4867%" y="437" width="0.0597%" height="15" fill="rgb(211,52,33)"/><text x="48.7367%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (5 samples, 0.02%)</title><rect x="48.5564%" y="629" width="0.0249%" height="15" fill="rgb(234,58,33)"/><text x="48.8064%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (5 samples, 0.02%)</title><rect x="48.5812%" y="629" width="0.0249%" height="15" fill="rgb(220,115,36)"/><text x="48.8312%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (6 samples, 0.03%)</title><rect x="48.6061%" y="629" width="0.0299%" height="15" fill="rgb(243,153,54)"/><text x="48.8561%" y="639.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (7 samples, 0.03%)</title><rect x="48.6360%" y="629" width="0.0348%" height="15" fill="rgb(251,47,18)"/><text x="48.8860%" y="639.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="48.8401%" y="309" width="0.0299%" height="15" fill="rgb(242,102,42)"/><text x="49.0901%" y="319.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.04%)</title><rect x="48.8700%" y="309" width="0.0398%" height="15" fill="rgb(234,31,38)"/><text x="49.1200%" y="319.50"></text></g><g><title>ate::chain::ChainOfTrust::add_history (47 samples, 0.23%)</title><rect x="48.6808%" y="373" width="0.2340%" height="15" fill="rgb(221,117,51)"/><text x="48.9308%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (47 samples, 0.23%)</title><rect x="48.6808%" y="357" width="0.2340%" height="15" fill="rgb(212,20,18)"/><text x="48.9308%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (47 samples, 0.23%)</title><rect x="48.6808%" y="341" width="0.2340%" height="15" fill="rgb(245,133,36)"/><text x="48.9308%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (47 samples, 0.23%)</title><rect x="48.6808%" y="325" width="0.2340%" height="15" fill="rgb(212,6,19)"/><text x="48.9308%" y="335.50"></text></g><g><title>__memmove_avx_unaligned_erms (16 samples, 0.08%)</title><rect x="48.9247%" y="325" width="0.0796%" height="15" fill="rgb(218,1,36)"/><text x="49.1747%" y="335.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (66 samples, 0.33%)</title><rect x="48.6808%" y="629" width="0.3286%" height="15" fill="rgb(246,84,54)"/><text x="48.9308%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (66 samples, 0.33%)</title><rect x="48.6808%" y="613" width="0.3286%" height="15" fill="rgb(242,110,6)"/><text x="48.9308%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (66 samples, 0.33%)</title><rect x="48.6808%" y="597" width="0.3286%" height="15" fill="rgb(214,47,5)"/><text x="48.9308%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (66 samples, 0.33%)</title><rect x="48.6808%" y="581" width="0.3286%" height="15" fill="rgb(218,159,25)"/><text x="48.9308%" y="591.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (66 samples, 0.33%)</title><rect x="48.6808%" y="565" width="0.3286%" height="15" fill="rgb(215,211,28)"/><text x="48.9308%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (66 samples, 0.33%)</title><rect x="48.6808%" y="549" width="0.3286%" height="15" fill="rgb(238,59,32)"/><text x="48.9308%" y="559.50"></text></g><g><title>std::panicking::try (66 samples, 0.33%)</title><rect x="48.6808%" y="533" width="0.3286%" height="15" fill="rgb(226,82,3)"/><text x="48.9308%" y="543.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (66 samples, 0.33%)</title><rect x="48.6808%" y="517" width="0.3286%" height="15" fill="rgb(240,164,32)"/><text x="48.9308%" y="527.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (66 samples, 0.33%)</title><rect x="48.6808%" y="501" width="0.3286%" height="15" fill="rgb(232,46,7)"/><text x="48.9308%" y="511.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (66 samples, 0.33%)</title><rect x="48.6808%" y="485" width="0.3286%" height="15" fill="rgb(229,129,53)"/><text x="48.9308%" y="495.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (66 samples, 0.33%)</title><rect x="48.6808%" y="469" width="0.3286%" height="15" fill="rgb(234,188,29)"/><text x="48.9308%" y="479.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (66 samples, 0.33%)</title><rect x="48.6808%" y="453" width="0.3286%" height="15" fill="rgb(246,141,4)"/><text x="48.9308%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (66 samples, 0.33%)</title><rect x="48.6808%" y="437" width="0.3286%" height="15" fill="rgb(229,23,39)"/><text x="48.9308%" y="447.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (66 samples, 0.33%)</title><rect x="48.6808%" y="421" width="0.3286%" height="15" fill="rgb(206,12,3)"/><text x="48.9308%" y="431.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (66 samples, 0.33%)</title><rect x="48.6808%" y="405" width="0.3286%" height="15" fill="rgb(252,226,20)"/><text x="48.9308%" y="415.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (66 samples, 0.33%)</title><rect x="48.6808%" y="389" width="0.3286%" height="15" fill="rgb(216,123,35)"/><text x="48.9308%" y="399.50"></text></g><g><title>ate::event::EventData::as_header (19 samples, 0.09%)</title><rect x="48.9148%" y="373" width="0.0946%" height="15" fill="rgb(212,68,40)"/><text x="49.1648%" y="383.50"></text></g><g><title>ate::event::EventData::as_header_raw (19 samples, 0.09%)</title><rect x="48.9148%" y="357" width="0.0946%" height="15" fill="rgb(254,125,32)"/><text x="49.1648%" y="367.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (19 samples, 0.09%)</title><rect x="48.9148%" y="341" width="0.0946%" height="15" fill="rgb(253,97,22)"/><text x="49.1648%" y="351.50"></text></g><g><title>alloc_pages_vma (18 samples, 0.09%)</title><rect x="49.1189%" y="261" width="0.0896%" height="15" fill="rgb(241,101,14)"/><text x="49.3689%" y="271.50"></text></g><g><title>__alloc_pages_nodemask (18 samples, 0.09%)</title><rect x="49.1189%" y="245" width="0.0896%" height="15" fill="rgb(238,103,29)"/><text x="49.3689%" y="255.50"></text></g><g><title>get_page_from_freelist (15 samples, 0.07%)</title><rect x="49.1338%" y="229" width="0.0747%" height="15" fill="rgb(233,195,47)"/><text x="49.3838%" y="239.50"></text></g><g><title>prep_new_page (6 samples, 0.03%)</title><rect x="49.1786%" y="213" width="0.0299%" height="15" fill="rgb(246,218,30)"/><text x="49.4286%" y="223.50"></text></g><g><title>kernel_init_free_pages (6 samples, 0.03%)</title><rect x="49.1786%" y="197" width="0.0299%" height="15" fill="rgb(219,145,47)"/><text x="49.4286%" y="207.50"></text></g><g><title>clear_page_erms (6 samples, 0.03%)</title><rect x="49.1786%" y="181" width="0.0299%" height="15" fill="rgb(243,12,26)"/><text x="49.4286%" y="191.50"></text></g><g><title>lru_cache_add (3 samples, 0.01%)</title><rect x="49.2135%" y="261" width="0.0149%" height="15" fill="rgb(214,87,16)"/><text x="49.4635%" y="271.50"></text></g><g><title>pagevec_lru_move_fn (3 samples, 0.01%)</title><rect x="49.2135%" y="245" width="0.0149%" height="15" fill="rgb(208,99,42)"/><text x="49.4635%" y="255.50"></text></g><g><title>__pagevec_lru_add_fn (3 samples, 0.01%)</title><rect x="49.2135%" y="229" width="0.0149%" height="15" fill="rgb(253,99,2)"/><text x="49.4635%" y="239.50"></text></g><g><title>handle_mm_fault (33 samples, 0.16%)</title><rect x="49.0840%" y="277" width="0.1643%" height="15" fill="rgb(220,168,23)"/><text x="49.3340%" y="287.50"></text></g><g><title>exc_page_fault (34 samples, 0.17%)</title><rect x="49.0840%" y="309" width="0.1693%" height="15" fill="rgb(242,38,24)"/><text x="49.3340%" y="319.50"></text></g><g><title>do_user_addr_fault (34 samples, 0.17%)</title><rect x="49.0840%" y="293" width="0.1693%" height="15" fill="rgb(225,182,9)"/><text x="49.3340%" y="303.50"></text></g><g><title>asm_exc_page_fault (37 samples, 0.18%)</title><rect x="49.0840%" y="325" width="0.1842%" height="15" fill="rgb(243,178,37)"/><text x="49.3340%" y="335.50"></text></g><g><title>irqentry_exit_to_user_mode (3 samples, 0.01%)</title><rect x="49.2533%" y="309" width="0.0149%" height="15" fill="rgb(232,139,19)"/><text x="49.5033%" y="319.50"></text></g><g><title>change_protection (7 samples, 0.03%)</title><rect x="49.2981%" y="213" width="0.0348%" height="15" fill="rgb(225,201,24)"/><text x="49.5481%" y="223.50"></text></g><g><title>mprotect_fixup (23 samples, 0.11%)</title><rect x="49.2931%" y="229" width="0.1145%" height="15" fill="rgb(221,47,46)"/><text x="49.5431%" y="239.50"></text></g><g><title>perf_event_mmap (15 samples, 0.07%)</title><rect x="49.3329%" y="213" width="0.0747%" height="15" fill="rgb(249,23,13)"/><text x="49.5829%" y="223.50"></text></g><g><title>perf_iterate_sb (14 samples, 0.07%)</title><rect x="49.3379%" y="197" width="0.0697%" height="15" fill="rgb(219,9,5)"/><text x="49.5879%" y="207.50"></text></g><g><title>perf_iterate_ctx (14 samples, 0.07%)</title><rect x="49.3379%" y="181" width="0.0697%" height="15" fill="rgb(254,171,16)"/><text x="49.5879%" y="191.50"></text></g><g><title>perf_event_mmap_output (8 samples, 0.04%)</title><rect x="49.3678%" y="165" width="0.0398%" height="15" fill="rgb(230,171,20)"/><text x="49.6178%" y="175.50"></text></g><g><title>perf_output_copy (5 samples, 0.02%)</title><rect x="49.3827%" y="149" width="0.0249%" height="15" fill="rgb(210,71,41)"/><text x="49.6327%" y="159.50"></text></g><g><title>memcpy_erms (4 samples, 0.02%)</title><rect x="49.3877%" y="133" width="0.0199%" height="15" fill="rgb(206,173,20)"/><text x="49.6377%" y="143.50"></text></g><g><title>do_syscall_64 (26 samples, 0.13%)</title><rect x="49.2832%" y="277" width="0.1294%" height="15" fill="rgb(233,88,34)"/><text x="49.5332%" y="287.50"></text></g><g><title>__x64_sys_mprotect (26 samples, 0.13%)</title><rect x="49.2832%" y="261" width="0.1294%" height="15" fill="rgb(223,209,46)"/><text x="49.5332%" y="271.50"></text></g><g><title>do_mprotect_pkey (26 samples, 0.13%)</title><rect x="49.2832%" y="245" width="0.1294%" height="15" fill="rgb(250,43,18)"/><text x="49.5332%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34 samples, 0.17%)</title><rect x="49.2832%" y="293" width="0.1693%" height="15" fill="rgb(208,13,10)"/><text x="49.5332%" y="303.50"></text></g><g><title>syscall_exit_to_user_mode (8 samples, 0.04%)</title><rect x="49.4126%" y="277" width="0.0398%" height="15" fill="rgb(212,200,36)"/><text x="49.6626%" y="287.50"></text></g><g><title>sysmalloc (85 samples, 0.42%)</title><rect x="49.0641%" y="341" width="0.4231%" height="15" fill="rgb(225,90,30)"/><text x="49.3141%" y="351.50"></text></g><g><title>grow_heap (42 samples, 0.21%)</title><rect x="49.2782%" y="325" width="0.2091%" height="15" fill="rgb(236,182,39)"/><text x="49.5282%" y="335.50"></text></g><g><title>__GI___mprotect (42 samples, 0.21%)</title><rect x="49.2782%" y="309" width="0.2091%" height="15" fill="rgb(212,144,35)"/><text x="49.5282%" y="319.50"></text></g><g><title>syscall_return_via_sysret (5 samples, 0.02%)</title><rect x="49.4624%" y="293" width="0.0249%" height="15" fill="rgb(228,63,44)"/><text x="49.7124%" y="303.50"></text></g><g><title>ate::chain::ChainOfTrust::add_history (95 samples, 0.47%)</title><rect x="49.0243%" y="437" width="0.4729%" height="15" fill="rgb(228,109,6)"/><text x="49.2743%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (95 samples, 0.47%)</title><rect x="49.0243%" y="421" width="0.4729%" height="15" fill="rgb(238,117,24)"/><text x="49.2743%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (95 samples, 0.47%)</title><rect x="49.0243%" y="405" width="0.4729%" height="15" fill="rgb(242,26,26)"/><text x="49.2743%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (95 samples, 0.47%)</title><rect x="49.0243%" y="389" width="0.4729%" height="15" fill="rgb(221,92,48)"/><text x="49.2743%" y="399.50"></text></g><g><title>__GI___libc_malloc (95 samples, 0.47%)</title><rect x="49.0243%" y="373" width="0.4729%" height="15" fill="rgb(209,209,32)"/><text x="49.2743%" y="383.50"></text></g><g><title>_int_malloc (95 samples, 0.47%)</title><rect x="49.0243%" y="357" width="0.4729%" height="15" fill="rgb(221,70,22)"/><text x="49.2743%" y="367.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (107 samples, 0.53%)</title><rect x="49.0094%" y="629" width="0.5327%" height="15" fill="rgb(248,145,5)"/><text x="49.2594%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (106 samples, 0.53%)</title><rect x="49.0143%" y="613" width="0.5277%" height="15" fill="rgb(226,116,26)"/><text x="49.2643%" y="623.50"></text></g><g><title>std::panicking::try (106 samples, 0.53%)</title><rect x="49.0143%" y="597" width="0.5277%" height="15" fill="rgb(244,5,17)"/><text x="49.2643%" y="607.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (106 samples, 0.53%)</title><rect x="49.0143%" y="581" width="0.5277%" height="15" fill="rgb(252,159,33)"/><text x="49.2643%" y="591.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (106 samples, 0.53%)</title><rect x="49.0143%" y="565" width="0.5277%" height="15" fill="rgb(206,71,0)"/><text x="49.2643%" y="575.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (106 samples, 0.53%)</title><rect x="49.0143%" y="549" width="0.5277%" height="15" fill="rgb(233,118,54)"/><text x="49.2643%" y="559.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (106 samples, 0.53%)</title><rect x="49.0143%" y="533" width="0.5277%" height="15" fill="rgb(234,83,48)"/><text x="49.2643%" y="543.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (106 samples, 0.53%)</title><rect x="49.0143%" y="517" width="0.5277%" height="15" fill="rgb(228,3,54)"/><text x="49.2643%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (106 samples, 0.53%)</title><rect x="49.0143%" y="501" width="0.5277%" height="15" fill="rgb(226,155,13)"/><text x="49.2643%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (106 samples, 0.53%)</title><rect x="49.0143%" y="485" width="0.5277%" height="15" fill="rgb(241,28,37)"/><text x="49.2643%" y="495.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (106 samples, 0.53%)</title><rect x="49.0143%" y="469" width="0.5277%" height="15" fill="rgb(233,93,10)"/><text x="49.2643%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (106 samples, 0.53%)</title><rect x="49.0143%" y="453" width="0.5277%" height="15" fill="rgb(225,113,19)"/><text x="49.2643%" y="463.50"></text></g><g><title>ate::event::EventData::as_header (9 samples, 0.04%)</title><rect x="49.4972%" y="437" width="0.0448%" height="15" fill="rgb(241,2,18)"/><text x="49.7472%" y="447.50"></text></g><g><title>ate::event::EventData::as_header_raw (9 samples, 0.04%)</title><rect x="49.4972%" y="421" width="0.0448%" height="15" fill="rgb(228,207,21)"/><text x="49.7472%" y="431.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (9 samples, 0.04%)</title><rect x="49.4972%" y="405" width="0.0448%" height="15" fill="rgb(213,211,35)"/><text x="49.7472%" y="415.50"></text></g><g><title>blake3::Hasher::update (8 samples, 0.04%)</title><rect x="49.5022%" y="389" width="0.0398%" height="15" fill="rgb(209,83,10)"/><text x="49.7522%" y="399.50"></text></g><g><title>blake3::ChunkState::update (4 samples, 0.02%)</title><rect x="49.5221%" y="373" width="0.0199%" height="15" fill="rgb(209,164,1)"/><text x="49.7721%" y="383.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.03%)</title><rect x="49.5569%" y="613" width="0.0348%" height="15" fill="rgb(213,184,43)"/><text x="49.8069%" y="623.50"></text></g><g><title>syscall (8 samples, 0.04%)</title><rect x="49.5569%" y="629" width="0.0398%" height="15" fill="rgb(231,61,34)"/><text x="49.8069%" y="639.50"></text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (3 samples, 0.01%)</title><rect x="49.6018%" y="629" width="0.0149%" height="15" fill="rgb(235,75,3)"/><text x="49.8518%" y="639.50"></text></g><g><title>blake3::Hasher::finalize (14 samples, 0.07%)</title><rect x="49.6217%" y="453" width="0.0697%" height="15" fill="rgb(220,106,47)"/><text x="49.8717%" y="463.50"></text></g><g><title>blake3::Hasher::final_output (14 samples, 0.07%)</title><rect x="49.6217%" y="437" width="0.0697%" height="15" fill="rgb(210,196,33)"/><text x="49.8717%" y="447.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (21 samples, 0.10%)</title><rect x="49.6217%" y="629" width="0.1045%" height="15" fill="rgb(229,154,42)"/><text x="49.8717%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (21 samples, 0.10%)</title><rect x="49.6217%" y="613" width="0.1045%" height="15" fill="rgb(228,114,26)"/><text x="49.8717%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (21 samples, 0.10%)</title><rect x="49.6217%" y="597" width="0.1045%" height="15" fill="rgb(208,144,1)"/><text x="49.8717%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (21 samples, 0.10%)</title><rect x="49.6217%" y="581" width="0.1045%" height="15" fill="rgb(239,112,37)"/><text x="49.8717%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (21 samples, 0.10%)</title><rect x="49.6217%" y="565" width="0.1045%" height="15" fill="rgb(210,96,50)"/><text x="49.8717%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (21 samples, 0.10%)</title><rect x="49.6217%" y="549" width="0.1045%" height="15" fill="rgb(222,178,2)"/><text x="49.8717%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.10%)</title><rect x="49.6217%" y="533" width="0.1045%" height="15" fill="rgb(226,74,18)"/><text x="49.8717%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.10%)</title><rect x="49.6217%" y="517" width="0.1045%" height="15" fill="rgb(225,67,54)"/><text x="49.8717%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.10%)</title><rect x="49.6217%" y="501" width="0.1045%" height="15" fill="rgb(251,92,32)"/><text x="49.8717%" y="511.50"></text></g><g><title>ate::event::EventData::as_header_raw (21 samples, 0.10%)</title><rect x="49.6217%" y="485" width="0.1045%" height="15" fill="rgb(228,149,22)"/><text x="49.8717%" y="495.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (21 samples, 0.10%)</title><rect x="49.6217%" y="469" width="0.1045%" height="15" fill="rgb(243,54,13)"/><text x="49.8717%" y="479.50"></text></g><g><title>blake3::Hasher::update (7 samples, 0.03%)</title><rect x="49.6914%" y="453" width="0.0348%" height="15" fill="rgb(243,180,28)"/><text x="49.9414%" y="463.50"></text></g><g><title>blake3::ChunkState::update (7 samples, 0.03%)</title><rect x="49.6914%" y="437" width="0.0348%" height="15" fill="rgb(208,167,24)"/><text x="49.9414%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.02%)</title><rect x="49.7013%" y="421" width="0.0249%" height="15" fill="rgb(245,73,45)"/><text x="49.9513%" y="431.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.04%)</title><rect x="49.7411%" y="613" width="0.0448%" height="15" fill="rgb(237,203,48)"/><text x="49.9911%" y="623.50"></text></g><g><title>std::io::Write::write_all (9 samples, 0.04%)</title><rect x="49.7411%" y="597" width="0.0448%" height="15" fill="rgb(211,197,16)"/><text x="49.9911%" y="607.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (9 samples, 0.04%)</title><rect x="49.7411%" y="581" width="0.0448%" height="15" fill="rgb(243,99,51)"/><text x="49.9911%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::write (9 samples, 0.04%)</title><rect x="49.7411%" y="565" width="0.0448%" height="15" fill="rgb(215,123,29)"/><text x="49.9911%" y="575.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (9 samples, 0.04%)</title><rect x="49.7411%" y="549" width="0.0448%" height="15" fill="rgb(239,186,37)"/><text x="49.9911%" y="559.50"></text></g><g><title>__libc_write (9 samples, 0.04%)</title><rect x="49.7411%" y="533" width="0.0448%" height="15" fill="rgb(252,136,39)"/><text x="49.9911%" y="543.50"></text></g><g><title>__libc_write (9 samples, 0.04%)</title><rect x="49.7411%" y="517" width="0.0448%" height="15" fill="rgb(223,213,32)"/><text x="49.9911%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 0.04%)</title><rect x="49.7411%" y="501" width="0.0448%" height="15" fill="rgb(233,115,5)"/><text x="49.9911%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (10 samples, 0.05%)</title><rect x="49.7411%" y="629" width="0.0498%" height="15" fill="rgb(207,226,44)"/><text x="49.9911%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (24 samples, 0.12%)</title><rect x="49.8108%" y="389" width="0.1195%" height="15" fill="rgb(208,126,0)"/><text x="50.0608%" y="399.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (30 samples, 0.15%)</title><rect x="49.7909%" y="629" width="0.1493%" height="15" fill="rgb(244,66,21)"/><text x="50.0409%" y="639.50"></text></g><g><title>std::panicking::try (28 samples, 0.14%)</title><rect x="49.8009%" y="613" width="0.1394%" height="15" fill="rgb(222,97,12)"/><text x="50.0509%" y="623.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (28 samples, 0.14%)</title><rect x="49.8009%" y="597" width="0.1394%" height="15" fill="rgb(219,213,19)"/><text x="50.0509%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (28 samples, 0.14%)</title><rect x="49.8009%" y="581" width="0.1394%" height="15" fill="rgb(252,169,30)"/><text x="50.0509%" y="591.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (28 samples, 0.14%)</title><rect x="49.8009%" y="565" width="0.1394%" height="15" fill="rgb(206,32,51)"/><text x="50.0509%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (28 samples, 0.14%)</title><rect x="49.8009%" y="549" width="0.1394%" height="15" fill="rgb(250,172,42)"/><text x="50.0509%" y="559.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (28 samples, 0.14%)</title><rect x="49.8009%" y="533" width="0.1394%" height="15" fill="rgb(209,34,43)"/><text x="50.0509%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (28 samples, 0.14%)</title><rect x="49.8009%" y="517" width="0.1394%" height="15" fill="rgb(223,11,35)"/><text x="50.0509%" y="527.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (28 samples, 0.14%)</title><rect x="49.8009%" y="501" width="0.1394%" height="15" fill="rgb(251,219,26)"/><text x="50.0509%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (28 samples, 0.14%)</title><rect x="49.8009%" y="485" width="0.1394%" height="15" fill="rgb(231,119,3)"/><text x="50.0509%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.14%)</title><rect x="49.8009%" y="469" width="0.1394%" height="15" fill="rgb(216,97,11)"/><text x="50.0509%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.14%)</title><rect x="49.8009%" y="453" width="0.1394%" height="15" fill="rgb(223,59,9)"/><text x="50.0509%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.14%)</title><rect x="49.8009%" y="437" width="0.1394%" height="15" fill="rgb(233,93,31)"/><text x="50.0509%" y="447.50"></text></g><g><title>ate::event::EventData::as_header_raw (28 samples, 0.14%)</title><rect x="49.8009%" y="421" width="0.1394%" height="15" fill="rgb(239,81,33)"/><text x="50.0509%" y="431.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (28 samples, 0.14%)</title><rect x="49.8009%" y="405" width="0.1394%" height="15" fill="rgb(213,120,34)"/><text x="50.0509%" y="415.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (4 samples, 0.02%)</title><rect x="49.9452%" y="629" width="0.0199%" height="15" fill="rgb(243,49,53)"/><text x="50.1952%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.02%)</title><rect x="49.9452%" y="613" width="0.0199%" height="15" fill="rgb(247,216,33)"/><text x="50.1952%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4 samples, 0.02%)</title><rect x="49.9452%" y="597" width="0.0199%" height="15" fill="rgb(226,26,14)"/><text x="50.1952%" y="607.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (4 samples, 0.02%)</title><rect x="49.9452%" y="581" width="0.0199%" height="15" fill="rgb(215,49,53)"/><text x="50.1952%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="49.9452%" y="565" width="0.0199%" height="15" fill="rgb(245,162,40)"/><text x="50.1952%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="49.9452%" y="549" width="0.0199%" height="15" fill="rgb(229,68,17)"/><text x="50.1952%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="49.9452%" y="533" width="0.0199%" height="15" fill="rgb(213,182,10)"/><text x="50.1952%" y="543.50"></text></g><g><title>ate::event::EventData::as_header_raw (4 samples, 0.02%)</title><rect x="49.9452%" y="517" width="0.0199%" height="15" fill="rgb(245,125,30)"/><text x="50.1952%" y="527.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (4 samples, 0.02%)</title><rect x="49.9452%" y="501" width="0.0199%" height="15" fill="rgb(232,202,2)"/><text x="50.1952%" y="511.50"></text></g><g><title>blake3::Hasher::update (4 samples, 0.02%)</title><rect x="49.9452%" y="485" width="0.0199%" height="15" fill="rgb(237,140,51)"/><text x="50.1952%" y="495.50"></text></g><g><title>blake3::Hasher::merge_cv_stack (4 samples, 0.02%)</title><rect x="49.9452%" y="469" width="0.0199%" height="15" fill="rgb(236,157,25)"/><text x="50.1952%" y="479.50"></text></g><g><title>[unknown] (391 samples, 1.95%)</title><rect x="48.0337%" y="645" width="1.9464%" height="15" fill="rgb(219,209,0)"/><text x="48.2837%" y="655.50">[..</text></g><g><title>ret_from_fork (5 samples, 0.02%)</title><rect x="49.9801%" y="629" width="0.0249%" height="15" fill="rgb(240,116,54)"/><text x="50.2301%" y="639.50"></text></g><g><title>schedule_tail (5 samples, 0.02%)</title><rect x="49.9801%" y="613" width="0.0249%" height="15" fill="rgb(216,10,36)"/><text x="50.2301%" y="623.50"></text></g><g><title>finish_task_switch (5 samples, 0.02%)</title><rect x="49.9801%" y="597" width="0.0249%" height="15" fill="rgb(222,72,44)"/><text x="50.2301%" y="607.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="49.9801%" y="581" width="0.0249%" height="15" fill="rgb(232,159,9)"/><text x="50.2301%" y="591.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.02%)</title><rect x="49.9801%" y="565" width="0.0249%" height="15" fill="rgb(210,39,32)"/><text x="50.2301%" y="575.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="49.9801%" y="549" width="0.0249%" height="15" fill="rgb(216,194,45)"/><text x="50.2301%" y="559.50"></text></g><g><title>free_unref_page_list (3 samples, 0.01%)</title><rect x="50.0249%" y="405" width="0.0149%" height="15" fill="rgb(218,18,35)"/><text x="50.2749%" y="415.50"></text></g><g><title>tlb_finish_mmu (9 samples, 0.04%)</title><rect x="50.0050%" y="437" width="0.0448%" height="15" fill="rgb(207,83,51)"/><text x="50.2550%" y="447.50"></text></g><g><title>release_pages (8 samples, 0.04%)</title><rect x="50.0100%" y="421" width="0.0398%" height="15" fill="rgb(225,63,43)"/><text x="50.2600%" y="431.50"></text></g><g><title>page_remove_rmap (3 samples, 0.01%)</title><rect x="50.0747%" y="405" width="0.0149%" height="15" fill="rgb(207,57,36)"/><text x="50.3247%" y="415.50"></text></g><g><title>__free_one_page (4 samples, 0.02%)</title><rect x="50.1095%" y="341" width="0.0199%" height="15" fill="rgb(216,99,33)"/><text x="50.3595%" y="351.50"></text></g><g><title>__GI_munmap (28 samples, 0.14%)</title><rect x="50.0050%" y="549" width="0.1394%" height="15" fill="rgb(225,42,16)"/><text x="50.2550%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (28 samples, 0.14%)</title><rect x="50.0050%" y="533" width="0.1394%" height="15" fill="rgb(220,201,45)"/><text x="50.2550%" y="543.50"></text></g><g><title>do_syscall_64 (28 samples, 0.14%)</title><rect x="50.0050%" y="517" width="0.1394%" height="15" fill="rgb(225,33,4)"/><text x="50.2550%" y="527.50"></text></g><g><title>__x64_sys_munmap (28 samples, 0.14%)</title><rect x="50.0050%" y="501" width="0.1394%" height="15" fill="rgb(224,33,50)"/><text x="50.2550%" y="511.50"></text></g><g><title>__vm_munmap (28 samples, 0.14%)</title><rect x="50.0050%" y="485" width="0.1394%" height="15" fill="rgb(246,198,51)"/><text x="50.2550%" y="495.50"></text></g><g><title>__do_munmap (28 samples, 0.14%)</title><rect x="50.0050%" y="469" width="0.1394%" height="15" fill="rgb(205,22,4)"/><text x="50.2550%" y="479.50"></text></g><g><title>unmap_region (28 samples, 0.14%)</title><rect x="50.0050%" y="453" width="0.1394%" height="15" fill="rgb(206,3,8)"/><text x="50.2550%" y="463.50"></text></g><g><title>unmap_vmas (19 samples, 0.09%)</title><rect x="50.0498%" y="437" width="0.0946%" height="15" fill="rgb(251,23,15)"/><text x="50.2998%" y="447.50"></text></g><g><title>unmap_page_range (19 samples, 0.09%)</title><rect x="50.0498%" y="421" width="0.0946%" height="15" fill="rgb(252,88,28)"/><text x="50.2998%" y="431.50"></text></g><g><title>tlb_flush_mmu (11 samples, 0.05%)</title><rect x="50.0896%" y="405" width="0.0548%" height="15" fill="rgb(212,127,14)"/><text x="50.3396%" y="415.50"></text></g><g><title>release_pages (11 samples, 0.05%)</title><rect x="50.0896%" y="389" width="0.0548%" height="15" fill="rgb(247,145,37)"/><text x="50.3396%" y="399.50"></text></g><g><title>free_unref_page_list (7 samples, 0.03%)</title><rect x="50.1095%" y="373" width="0.0348%" height="15" fill="rgb(209,117,53)"/><text x="50.3595%" y="383.50"></text></g><g><title>free_pcppages_bulk (7 samples, 0.03%)</title><rect x="50.1095%" y="357" width="0.0348%" height="15" fill="rgb(212,90,42)"/><text x="50.3595%" y="367.50"></text></g><g><title>__list_del_entry_valid (3 samples, 0.01%)</title><rect x="50.1294%" y="341" width="0.0149%" height="15" fill="rgb(218,164,37)"/><text x="50.3794%" y="351.50"></text></g><g><title>__malloc_arena_thread_freeres (36 samples, 0.18%)</title><rect x="50.0050%" y="613" width="0.1792%" height="15" fill="rgb(246,65,34)"/><text x="50.2550%" y="623.50"></text></g><g><title>tcache_thread_shutdown (36 samples, 0.18%)</title><rect x="50.0050%" y="597" width="0.1792%" height="15" fill="rgb(231,100,33)"/><text x="50.2550%" y="607.50"></text></g><g><title>_int_free (36 samples, 0.18%)</title><rect x="50.0050%" y="581" width="0.1792%" height="15" fill="rgb(228,126,14)"/><text x="50.2550%" y="591.50"></text></g><g><title>heap_trim (36 samples, 0.18%)</title><rect x="50.0050%" y="565" width="0.1792%" height="15" fill="rgb(215,173,21)"/><text x="50.2550%" y="575.50"></text></g><g><title>shrink_heap (8 samples, 0.04%)</title><rect x="50.1444%" y="549" width="0.0398%" height="15" fill="rgb(210,6,40)"/><text x="50.3944%" y="559.50"></text></g><g><title>__GI_madvise (8 samples, 0.04%)</title><rect x="50.1444%" y="533" width="0.0398%" height="15" fill="rgb(212,48,18)"/><text x="50.3944%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="50.1444%" y="517" width="0.0398%" height="15" fill="rgb(230,214,11)"/><text x="50.3944%" y="527.50"></text></g><g><title>do_syscall_64 (8 samples, 0.04%)</title><rect x="50.1444%" y="501" width="0.0398%" height="15" fill="rgb(254,105,39)"/><text x="50.3944%" y="511.50"></text></g><g><title>__x64_sys_madvise (8 samples, 0.04%)</title><rect x="50.1444%" y="485" width="0.0398%" height="15" fill="rgb(245,158,5)"/><text x="50.3944%" y="495.50"></text></g><g><title>do_madvise.part.0 (8 samples, 0.04%)</title><rect x="50.1444%" y="469" width="0.0398%" height="15" fill="rgb(249,208,11)"/><text x="50.3944%" y="479.50"></text></g><g><title>zap_page_range (8 samples, 0.04%)</title><rect x="50.1444%" y="453" width="0.0398%" height="15" fill="rgb(210,39,28)"/><text x="50.3944%" y="463.50"></text></g><g><title>unmap_page_range (6 samples, 0.03%)</title><rect x="50.1543%" y="437" width="0.0299%" height="15" fill="rgb(211,56,53)"/><text x="50.4043%" y="447.50"></text></g><g><title>tlb_flush_mmu (4 samples, 0.02%)</title><rect x="50.1643%" y="421" width="0.0199%" height="15" fill="rgb(226,201,30)"/><text x="50.4143%" y="431.50"></text></g><g><title>release_pages (3 samples, 0.01%)</title><rect x="50.1693%" y="405" width="0.0149%" height="15" fill="rgb(239,101,34)"/><text x="50.4193%" y="415.50"></text></g><g><title>free_unref_page_list (3 samples, 0.01%)</title><rect x="50.1693%" y="389" width="0.0149%" height="15" fill="rgb(226,209,5)"/><text x="50.4193%" y="399.50"></text></g><g><title>finish_task_switch (6 samples, 0.03%)</title><rect x="50.1892%" y="373" width="0.0299%" height="15" fill="rgb(250,105,47)"/><text x="50.4392%" y="383.50"></text></g><g><title>__perf_event_task_sched_in (6 samples, 0.03%)</title><rect x="50.1892%" y="357" width="0.0299%" height="15" fill="rgb(230,72,3)"/><text x="50.4392%" y="367.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (6 samples, 0.03%)</title><rect x="50.1892%" y="341" width="0.0299%" height="15" fill="rgb(232,218,39)"/><text x="50.4392%" y="351.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="50.1941%" y="325" width="0.0249%" height="15" fill="rgb(248,166,6)"/><text x="50.4441%" y="335.50"></text></g><g><title>handle_mm_fault (7 samples, 0.03%)</title><rect x="50.1892%" y="501" width="0.0348%" height="15" fill="rgb(247,89,20)"/><text x="50.4392%" y="511.50"></text></g><g><title>__do_fault (7 samples, 0.03%)</title><rect x="50.1892%" y="485" width="0.0348%" height="15" fill="rgb(248,130,54)"/><text x="50.4392%" y="495.50"></text></g><g><title>ext4_filemap_fault (7 samples, 0.03%)</title><rect x="50.1892%" y="469" width="0.0348%" height="15" fill="rgb(234,196,4)"/><text x="50.4392%" y="479.50"></text></g><g><title>filemap_fault (7 samples, 0.03%)</title><rect x="50.1892%" y="453" width="0.0348%" height="15" fill="rgb(250,143,31)"/><text x="50.4392%" y="463.50"></text></g><g><title>wait_on_page_bit_common (7 samples, 0.03%)</title><rect x="50.1892%" y="437" width="0.0348%" height="15" fill="rgb(211,110,34)"/><text x="50.4392%" y="447.50"></text></g><g><title>io_schedule (7 samples, 0.03%)</title><rect x="50.1892%" y="421" width="0.0348%" height="15" fill="rgb(215,124,48)"/><text x="50.4392%" y="431.50"></text></g><g><title>schedule (7 samples, 0.03%)</title><rect x="50.1892%" y="405" width="0.0348%" height="15" fill="rgb(216,46,13)"/><text x="50.4392%" y="415.50"></text></g><g><title>__schedule (7 samples, 0.03%)</title><rect x="50.1892%" y="389" width="0.0348%" height="15" fill="rgb(205,184,25)"/><text x="50.4392%" y="399.50"></text></g><g><title>_dl_runtime_resolve_xsavec (13 samples, 0.06%)</title><rect x="50.1842%" y="613" width="0.0647%" height="15" fill="rgb(228,1,10)"/><text x="50.4342%" y="623.50"></text></g><g><title>_dl_fixup (13 samples, 0.06%)</title><rect x="50.1842%" y="597" width="0.0647%" height="15" fill="rgb(213,116,27)"/><text x="50.4342%" y="607.50"></text></g><g><title>_dl_lookup_symbol_x (13 samples, 0.06%)</title><rect x="50.1842%" y="581" width="0.0647%" height="15" fill="rgb(241,95,50)"/><text x="50.4342%" y="591.50"></text></g><g><title>do_lookup_x (13 samples, 0.06%)</title><rect x="50.1842%" y="565" width="0.0647%" height="15" fill="rgb(238,48,32)"/><text x="50.4342%" y="575.50"></text></g><g><title>asm_exc_page_fault (13 samples, 0.06%)</title><rect x="50.1842%" y="549" width="0.0647%" height="15" fill="rgb(235,113,49)"/><text x="50.4342%" y="559.50"></text></g><g><title>exc_page_fault (13 samples, 0.06%)</title><rect x="50.1842%" y="533" width="0.0647%" height="15" fill="rgb(205,127,43)"/><text x="50.4342%" y="543.50"></text></g><g><title>do_user_addr_fault (13 samples, 0.06%)</title><rect x="50.1842%" y="517" width="0.0647%" height="15" fill="rgb(250,162,2)"/><text x="50.4342%" y="527.50"></text></g><g><title>rwsem_down_read_slowpath (5 samples, 0.02%)</title><rect x="50.2240%" y="501" width="0.0249%" height="15" fill="rgb(220,13,41)"/><text x="50.4740%" y="511.50"></text></g><g><title>schedule (5 samples, 0.02%)</title><rect x="50.2240%" y="485" width="0.0249%" height="15" fill="rgb(249,221,25)"/><text x="50.4740%" y="495.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="50.2240%" y="469" width="0.0249%" height="15" fill="rgb(215,208,19)"/><text x="50.4740%" y="479.50"></text></g><g><title>finish_task_switch (5 samples, 0.02%)</title><rect x="50.2240%" y="453" width="0.0249%" height="15" fill="rgb(236,175,2)"/><text x="50.4740%" y="463.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="50.2240%" y="437" width="0.0249%" height="15" fill="rgb(241,52,2)"/><text x="50.4740%" y="447.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.02%)</title><rect x="50.2240%" y="421" width="0.0249%" height="15" fill="rgb(248,140,14)"/><text x="50.4740%" y="431.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="50.2240%" y="405" width="0.0249%" height="15" fill="rgb(253,22,42)"/><text x="50.4740%" y="415.50"></text></g><g><title>entry_SYSCALL_64 (11 samples, 0.05%)</title><rect x="50.4530%" y="501" width="0.0548%" height="15" fill="rgb(234,61,47)"/><text x="50.7030%" y="511.50"></text></g><g><title>_raw_spin_lock_irqsave (3 samples, 0.01%)</title><rect x="50.6322%" y="389" width="0.0149%" height="15" fill="rgb(208,226,15)"/><text x="50.8822%" y="399.50"></text></g><g><title>enqueue_hrtimer (8 samples, 0.04%)</title><rect x="50.6472%" y="389" width="0.0398%" height="15" fill="rgb(217,221,4)"/><text x="50.8972%" y="399.50"></text></g><g><title>timerqueue_add (7 samples, 0.03%)</title><rect x="50.6521%" y="373" width="0.0348%" height="15" fill="rgb(212,174,34)"/><text x="50.9021%" y="383.50"></text></g><g><title>hrtimer_start_range_ns (13 samples, 0.06%)</title><rect x="50.6272%" y="405" width="0.0647%" height="15" fill="rgb(253,83,4)"/><text x="50.8772%" y="415.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.02%)</title><rect x="50.7716%" y="373" width="0.0199%" height="15" fill="rgb(250,195,49)"/><text x="51.0216%" y="383.50"></text></g><g><title>reweight_entity (3 samples, 0.01%)</title><rect x="50.8612%" y="341" width="0.0149%" height="15" fill="rgb(241,192,25)"/><text x="51.1112%" y="351.50"></text></g><g><title>update_cfs_group (5 samples, 0.02%)</title><rect x="50.8761%" y="341" width="0.0249%" height="15" fill="rgb(208,124,10)"/><text x="51.1261%" y="351.50"></text></g><g><title>__calc_delta (4 samples, 0.02%)</title><rect x="50.9209%" y="325" width="0.0199%" height="15" fill="rgb(222,33,0)"/><text x="51.1709%" y="335.50"></text></g><g><title>__cgroup_account_cputime (3 samples, 0.01%)</title><rect x="50.9409%" y="325" width="0.0149%" height="15" fill="rgb(234,209,28)"/><text x="51.1909%" y="335.50"></text></g><g><title>update_curr (12 samples, 0.06%)</title><rect x="50.9010%" y="341" width="0.0597%" height="15" fill="rgb(224,11,23)"/><text x="51.1510%" y="351.50"></text></g><g><title>__update_load_avg_cfs_rq (4 samples, 0.02%)</title><rect x="50.9707%" y="325" width="0.0199%" height="15" fill="rgb(232,99,1)"/><text x="51.2207%" y="335.50"></text></g><g><title>dequeue_task_fair (41 samples, 0.20%)</title><rect x="50.7915%" y="373" width="0.2041%" height="15" fill="rgb(237,95,45)"/><text x="51.0415%" y="383.50"></text></g><g><title>dequeue_entity (31 samples, 0.15%)</title><rect x="50.8413%" y="357" width="0.1543%" height="15" fill="rgb(208,109,11)"/><text x="51.0913%" y="367.50"></text></g><g><title>update_load_avg (7 samples, 0.03%)</title><rect x="50.9608%" y="341" width="0.0348%" height="15" fill="rgb(216,190,48)"/><text x="51.2108%" y="351.50"></text></g><g><title>finish_task_switch (53 samples, 0.26%)</title><rect x="50.9956%" y="373" width="0.2638%" height="15" fill="rgb(251,171,36)"/><text x="51.2456%" y="383.50"></text></g><g><title>__perf_event_task_sched_in (45 samples, 0.22%)</title><rect x="51.0354%" y="357" width="0.2240%" height="15" fill="rgb(230,62,22)"/><text x="51.2854%" y="367.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (44 samples, 0.22%)</title><rect x="51.0404%" y="341" width="0.2190%" height="15" fill="rgb(225,114,35)"/><text x="51.2904%" y="351.50"></text></g><g><title>native_write_msr (44 samples, 0.22%)</title><rect x="51.0404%" y="325" width="0.2190%" height="15" fill="rgb(215,118,42)"/><text x="51.2904%" y="335.50"></text></g><g><title>pick_next_task_fair (6 samples, 0.03%)</title><rect x="51.2595%" y="373" width="0.0299%" height="15" fill="rgb(243,119,21)"/><text x="51.5095%" y="383.50"></text></g><g><title>newidle_balance (4 samples, 0.02%)</title><rect x="51.2694%" y="357" width="0.0199%" height="15" fill="rgb(252,177,53)"/><text x="51.5194%" y="367.50"></text></g><g><title>pick_next_task_idle (4 samples, 0.02%)</title><rect x="51.2893%" y="373" width="0.0199%" height="15" fill="rgb(237,209,29)"/><text x="51.5393%" y="383.50"></text></g><g><title>__update_idle_core (3 samples, 0.01%)</title><rect x="51.2943%" y="357" width="0.0149%" height="15" fill="rgb(212,65,23)"/><text x="51.5443%" y="367.50"></text></g><g><title>psi_task_change (38 samples, 0.19%)</title><rect x="51.3092%" y="373" width="0.1892%" height="15" fill="rgb(230,222,46)"/><text x="51.5592%" y="383.50"></text></g><g><title>psi_group_change (34 samples, 0.17%)</title><rect x="51.3292%" y="357" width="0.1693%" height="15" fill="rgb(215,135,32)"/><text x="51.5792%" y="367.50"></text></g><g><title>record_times (7 samples, 0.03%)</title><rect x="51.4636%" y="341" width="0.0348%" height="15" fill="rgb(246,101,22)"/><text x="51.7136%" y="351.50"></text></g><g><title>sched_clock_cpu (3 samples, 0.01%)</title><rect x="51.4835%" y="325" width="0.0149%" height="15" fill="rgb(206,107,13)"/><text x="51.7335%" y="335.50"></text></g><g><title>sched_clock (3 samples, 0.01%)</title><rect x="51.4835%" y="309" width="0.0149%" height="15" fill="rgb(250,100,44)"/><text x="51.7335%" y="319.50"></text></g><g><title>native_sched_clock (3 samples, 0.01%)</title><rect x="51.4835%" y="293" width="0.0149%" height="15" fill="rgb(231,147,38)"/><text x="51.7335%" y="303.50"></text></g><g><title>put_prev_task_fair (8 samples, 0.04%)</title><rect x="51.5034%" y="373" width="0.0398%" height="15" fill="rgb(229,8,40)"/><text x="51.7534%" y="383.50"></text></g><g><title>put_prev_entity (4 samples, 0.02%)</title><rect x="51.5233%" y="357" width="0.0199%" height="15" fill="rgb(221,135,30)"/><text x="51.7733%" y="367.50"></text></g><g><title>futex_wait_queue_me (199 samples, 0.99%)</title><rect x="50.5824%" y="421" width="0.9906%" height="15" fill="rgb(249,193,18)"/><text x="50.8324%" y="431.50"></text></g><g><title>schedule (177 samples, 0.88%)</title><rect x="50.6920%" y="405" width="0.8811%" height="15" fill="rgb(209,133,39)"/><text x="50.9420%" y="415.50"></text></g><g><title>__schedule (176 samples, 0.88%)</title><rect x="50.6969%" y="389" width="0.8761%" height="15" fill="rgb(232,100,14)"/><text x="50.9469%" y="399.50"></text></g><g><title>update_rq_clock (6 samples, 0.03%)</title><rect x="51.5432%" y="373" width="0.0299%" height="15" fill="rgb(224,185,1)"/><text x="51.7932%" y="383.50"></text></g><g><title>sched_clock_cpu (3 samples, 0.01%)</title><rect x="51.5581%" y="357" width="0.0149%" height="15" fill="rgb(223,139,8)"/><text x="51.8081%" y="367.50"></text></g><g><title>sched_clock (3 samples, 0.01%)</title><rect x="51.5581%" y="341" width="0.0149%" height="15" fill="rgb(232,213,38)"/><text x="51.8081%" y="351.50"></text></g><g><title>native_sched_clock (3 samples, 0.01%)</title><rect x="51.5581%" y="325" width="0.0149%" height="15" fill="rgb(207,94,22)"/><text x="51.8081%" y="335.50"></text></g><g><title>__get_user_nocheck_4 (3 samples, 0.01%)</title><rect x="51.6179%" y="405" width="0.0149%" height="15" fill="rgb(219,183,54)"/><text x="51.8679%" y="415.50"></text></g><g><title>futex_wait_setup (15 samples, 0.07%)</title><rect x="51.5731%" y="421" width="0.0747%" height="15" fill="rgb(216,185,54)"/><text x="51.8231%" y="431.50"></text></g><g><title>hrtimer_active (3 samples, 0.01%)</title><rect x="51.6477%" y="405" width="0.0149%" height="15" fill="rgb(254,217,39)"/><text x="51.8977%" y="415.50"></text></g><g><title>hrtimer_cancel (11 samples, 0.05%)</title><rect x="51.6477%" y="421" width="0.0548%" height="15" fill="rgb(240,178,23)"/><text x="51.8977%" y="431.50"></text></g><g><title>hrtimer_try_to_cancel.part.0 (8 samples, 0.04%)</title><rect x="51.6627%" y="405" width="0.0398%" height="15" fill="rgb(218,11,47)"/><text x="51.9127%" y="415.50"></text></g><g><title>__remove_hrtimer (8 samples, 0.04%)</title><rect x="51.6627%" y="389" width="0.0398%" height="15" fill="rgb(218,51,51)"/><text x="51.9127%" y="399.50"></text></g><g><title>timerqueue_del (7 samples, 0.03%)</title><rect x="51.6677%" y="373" width="0.0348%" height="15" fill="rgb(238,126,27)"/><text x="51.9177%" y="383.50"></text></g><g><title>rb_erase (5 samples, 0.02%)</title><rect x="51.6776%" y="357" width="0.0249%" height="15" fill="rgb(249,202,22)"/><text x="51.9276%" y="367.50"></text></g><g><title>do_futex (240 samples, 1.19%)</title><rect x="50.5227%" y="453" width="1.1947%" height="15" fill="rgb(254,195,49)"/><text x="50.7727%" y="463.50"></text></g><g><title>futex_wait (234 samples, 1.16%)</title><rect x="50.5526%" y="437" width="1.1649%" height="15" fill="rgb(208,123,14)"/><text x="50.8026%" y="447.50"></text></g><g><title>hrtimer_init_sleeper (3 samples, 0.01%)</title><rect x="51.7025%" y="421" width="0.0149%" height="15" fill="rgb(224,200,8)"/><text x="51.9525%" y="431.50"></text></g><g><title>__hrtimer_init (3 samples, 0.01%)</title><rect x="51.7025%" y="405" width="0.0149%" height="15" fill="rgb(217,61,36)"/><text x="51.9525%" y="415.50"></text></g><g><title>get_timespec64 (4 samples, 0.02%)</title><rect x="51.7174%" y="453" width="0.0199%" height="15" fill="rgb(206,35,45)"/><text x="51.9674%" y="463.50"></text></g><g><title>_copy_from_user (4 samples, 0.02%)</title><rect x="51.7174%" y="437" width="0.0199%" height="15" fill="rgb(217,65,33)"/><text x="51.9674%" y="447.50"></text></g><g><title>__x64_sys_futex (253 samples, 1.26%)</title><rect x="50.5177%" y="469" width="1.2595%" height="15" fill="rgb(222,158,48)"/><text x="50.7677%" y="479.50"></text></g><g><title>ktime_get (8 samples, 0.04%)</title><rect x="51.7374%" y="453" width="0.0398%" height="15" fill="rgb(254,2,54)"/><text x="51.9874%" y="463.50"></text></g><g><title>read_tsc (6 samples, 0.03%)</title><rect x="51.7473%" y="437" width="0.0299%" height="15" fill="rgb(250,143,38)"/><text x="51.9973%" y="447.50"></text></g><g><title>do_syscall_64 (256 samples, 1.27%)</title><rect x="50.5078%" y="485" width="1.2744%" height="15" fill="rgb(248,25,0)"/><text x="50.7578%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (298 samples, 1.48%)</title><rect x="50.5078%" y="501" width="1.4835%" height="15" fill="rgb(206,152,27)"/><text x="50.7578%" y="511.50"></text></g><g><title>syscall_exit_to_user_mode (42 samples, 0.21%)</title><rect x="51.7822%" y="485" width="0.2091%" height="15" fill="rgb(240,77,30)"/><text x="52.0322%" y="495.50"></text></g><g><title>exit_to_user_mode_prepare (9 samples, 0.04%)</title><rect x="51.9464%" y="469" width="0.0448%" height="15" fill="rgb(231,5,3)"/><text x="52.1964%" y="479.50"></text></g><g><title>switch_fpu_return (6 samples, 0.03%)</title><rect x="51.9614%" y="453" width="0.0299%" height="15" fill="rgb(207,226,32)"/><text x="52.2114%" y="463.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (344 samples, 1.71%)</title><rect x="50.3136%" y="533" width="1.7125%" height="15" fill="rgb(222,207,47)"/><text x="50.5636%" y="543.50"></text></g><g><title>syscall (323 samples, 1.61%)</title><rect x="50.4182%" y="517" width="1.6079%" height="15" fill="rgb(229,115,45)"/><text x="50.6682%" y="527.50"></text></g><g><title>syscall_return_via_sysret (7 samples, 0.03%)</title><rect x="51.9912%" y="501" width="0.0348%" height="15" fill="rgb(224,191,6)"/><text x="52.2412%" y="511.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.01%)</title><rect x="52.0311%" y="533" width="0.0149%" height="15" fill="rgb(230,227,24)"/><text x="52.2811%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.01%)</title><rect x="52.0311%" y="517" width="0.0149%" height="15" fill="rgb(228,80,19)"/><text x="52.2811%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::now (3 samples, 0.01%)</title><rect x="52.0311%" y="501" width="0.0149%" height="15" fill="rgb(247,229,0)"/><text x="52.2811%" y="511.50"></text></g><g><title>__GI___clock_gettime (3 samples, 0.01%)</title><rect x="52.0311%" y="485" width="0.0149%" height="15" fill="rgb(237,194,15)"/><text x="52.2811%" y="495.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.01%)</title><rect x="52.0311%" y="469" width="0.0149%" height="15" fill="rgb(219,203,20)"/><text x="52.2811%" y="479.50"></text></g><g><title>do_sched_yield (5 samples, 0.02%)</title><rect x="52.1505%" y="341" width="0.0249%" height="15" fill="rgb(234,128,8)"/><text x="52.4005%" y="351.50"></text></g><g><title>yield_task_fair (4 samples, 0.02%)</title><rect x="52.1555%" y="325" width="0.0199%" height="15" fill="rgb(248,202,8)"/><text x="52.4055%" y="335.50"></text></g><g><title>do_syscall_64 (17 samples, 0.08%)</title><rect x="52.1356%" y="373" width="0.0846%" height="15" fill="rgb(206,104,37)"/><text x="52.3856%" y="383.50"></text></g><g><title>__x64_sys_sched_yield (15 samples, 0.07%)</title><rect x="52.1456%" y="357" width="0.0747%" height="15" fill="rgb(223,8,27)"/><text x="52.3956%" y="367.50"></text></g><g><title>schedule (9 samples, 0.04%)</title><rect x="52.1754%" y="341" width="0.0448%" height="15" fill="rgb(216,217,28)"/><text x="52.4254%" y="351.50"></text></g><g><title>__schedule (8 samples, 0.04%)</title><rect x="52.1804%" y="325" width="0.0398%" height="15" fill="rgb(249,199,1)"/><text x="52.4304%" y="335.50"></text></g><g><title>pick_next_task_fair (6 samples, 0.03%)</title><rect x="52.1904%" y="309" width="0.0299%" height="15" fill="rgb(240,85,17)"/><text x="52.4404%" y="319.50"></text></g><g><title>update_curr (5 samples, 0.02%)</title><rect x="52.1953%" y="293" width="0.0249%" height="15" fill="rgb(206,108,45)"/><text x="52.4453%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (27 samples, 0.13%)</title><rect x="52.1306%" y="389" width="0.1344%" height="15" fill="rgb(245,210,41)"/><text x="52.3806%" y="399.50"></text></g><g><title>syscall_exit_to_user_mode (9 samples, 0.04%)</title><rect x="52.2202%" y="373" width="0.0448%" height="15" fill="rgb(206,13,37)"/><text x="52.4702%" y="383.50"></text></g><g><title>__GI___sched_yield (33 samples, 0.16%)</title><rect x="52.1157%" y="405" width="0.1643%" height="15" fill="rgb(250,61,18)"/><text x="52.3657%" y="415.50"></text></g><g><title>syscall_return_via_sysret (3 samples, 0.01%)</title><rect x="52.2650%" y="389" width="0.0149%" height="15" fill="rgb(235,172,48)"/><text x="52.5150%" y="399.50"></text></g><g><title>dequeue_task_fair (13 samples, 0.06%)</title><rect x="52.3845%" y="245" width="0.0647%" height="15" fill="rgb(249,201,17)"/><text x="52.6345%" y="255.50"></text></g><g><title>dequeue_entity (10 samples, 0.05%)</title><rect x="52.3994%" y="229" width="0.0498%" height="15" fill="rgb(219,208,6)"/><text x="52.6494%" y="239.50"></text></g><g><title>__perf_event_task_sched_in (85 samples, 0.42%)</title><rect x="52.4592%" y="229" width="0.4231%" height="15" fill="rgb(248,31,23)"/><text x="52.7092%" y="239.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (83 samples, 0.41%)</title><rect x="52.4691%" y="213" width="0.4132%" height="15" fill="rgb(245,15,42)"/><text x="52.7191%" y="223.50"></text></g><g><title>native_write_msr (83 samples, 0.41%)</title><rect x="52.4691%" y="197" width="0.4132%" height="15" fill="rgb(222,217,39)"/><text x="52.7191%" y="207.50"></text></g><g><title>finish_task_switch (90 samples, 0.45%)</title><rect x="52.4492%" y="245" width="0.4480%" height="15" fill="rgb(210,219,27)"/><text x="52.6992%" y="255.50"></text></g><g><title>pick_next_task_fair (4 samples, 0.02%)</title><rect x="52.8973%" y="245" width="0.0199%" height="15" fill="rgb(252,166,36)"/><text x="53.1473%" y="255.50"></text></g><g><title>newidle_balance (4 samples, 0.02%)</title><rect x="52.8973%" y="229" width="0.0199%" height="15" fill="rgb(245,132,34)"/><text x="53.1473%" y="239.50"></text></g><g><title>psi_task_change (6 samples, 0.03%)</title><rect x="52.9271%" y="245" width="0.0299%" height="15" fill="rgb(236,54,3)"/><text x="53.1771%" y="255.50"></text></g><g><title>psi_group_change (6 samples, 0.03%)</title><rect x="52.9271%" y="229" width="0.0299%" height="15" fill="rgb(241,173,43)"/><text x="53.1771%" y="239.50"></text></g><g><title>futex_wait_queue_me (121 samples, 0.60%)</title><rect x="52.3596%" y="293" width="0.6023%" height="15" fill="rgb(215,190,9)"/><text x="52.6096%" y="303.50"></text></g><g><title>schedule (119 samples, 0.59%)</title><rect x="52.3696%" y="277" width="0.5924%" height="15" fill="rgb(242,101,16)"/><text x="52.6196%" y="287.50"></text></g><g><title>__schedule (119 samples, 0.59%)</title><rect x="52.3696%" y="261" width="0.5924%" height="15" fill="rgb(223,190,21)"/><text x="52.6196%" y="271.50"></text></g><g><title>do_syscall_64 (127 samples, 0.63%)</title><rect x="52.3347%" y="357" width="0.6322%" height="15" fill="rgb(215,228,25)"/><text x="52.5847%" y="367.50"></text></g><g><title>__x64_sys_futex (126 samples, 0.63%)</title><rect x="52.3397%" y="341" width="0.6272%" height="15" fill="rgb(225,36,22)"/><text x="52.5897%" y="351.50"></text></g><g><title>do_futex (123 samples, 0.61%)</title><rect x="52.3546%" y="325" width="0.6123%" height="15" fill="rgb(251,106,46)"/><text x="52.6046%" y="335.50"></text></g><g><title>futex_wait (123 samples, 0.61%)</title><rect x="52.3546%" y="309" width="0.6123%" height="15" fill="rgb(208,90,1)"/><text x="52.6046%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (138 samples, 0.69%)</title><rect x="52.3297%" y="373" width="0.6870%" height="15" fill="rgb(243,10,4)"/><text x="52.5797%" y="383.50"></text></g><g><title>syscall_exit_to_user_mode (10 samples, 0.05%)</title><rect x="52.9669%" y="357" width="0.0498%" height="15" fill="rgb(212,137,27)"/><text x="53.2169%" y="367.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (149 samples, 0.74%)</title><rect x="52.2800%" y="405" width="0.7417%" height="15" fill="rgb(231,220,49)"/><text x="52.5300%" y="415.50"></text></g><g><title>syscall (143 samples, 0.71%)</title><rect x="52.3098%" y="389" width="0.7119%" height="15" fill="rgb(237,96,20)"/><text x="52.5598%" y="399.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (186 samples, 0.93%)</title><rect x="52.1008%" y="437" width="0.9259%" height="15" fill="rgb(239,229,30)"/><text x="52.3508%" y="447.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (184 samples, 0.92%)</title><rect x="52.1107%" y="421" width="0.9160%" height="15" fill="rgb(219,65,33)"/><text x="52.3607%" y="431.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.01%)</title><rect x="53.0765%" y="277" width="0.0149%" height="15" fill="rgb(243,134,7)"/><text x="53.3265%" y="287.50"></text></g><g><title>ttwu_do_activate (6 samples, 0.03%)</title><rect x="53.0914%" y="277" width="0.0299%" height="15" fill="rgb(216,177,54)"/><text x="53.3414%" y="287.50"></text></g><g><title>psi_task_change (5 samples, 0.02%)</title><rect x="53.0964%" y="261" width="0.0249%" height="15" fill="rgb(211,160,20)"/><text x="53.3464%" y="271.50"></text></g><g><title>psi_group_change (4 samples, 0.02%)</title><rect x="53.1014%" y="245" width="0.0199%" height="15" fill="rgb(239,85,39)"/><text x="53.3514%" y="255.50"></text></g><g><title>do_syscall_64 (18 samples, 0.09%)</title><rect x="53.0466%" y="373" width="0.0896%" height="15" fill="rgb(232,125,22)"/><text x="53.2966%" y="383.50"></text></g><g><title>__x64_sys_futex (18 samples, 0.09%)</title><rect x="53.0466%" y="357" width="0.0896%" height="15" fill="rgb(244,57,34)"/><text x="53.2966%" y="367.50"></text></g><g><title>do_futex (16 samples, 0.08%)</title><rect x="53.0566%" y="341" width="0.0796%" height="15" fill="rgb(214,203,32)"/><text x="53.3066%" y="351.50"></text></g><g><title>futex_wake (16 samples, 0.08%)</title><rect x="53.0566%" y="325" width="0.0796%" height="15" fill="rgb(207,58,43)"/><text x="53.3066%" y="335.50"></text></g><g><title>wake_up_q (12 samples, 0.06%)</title><rect x="53.0765%" y="309" width="0.0597%" height="15" fill="rgb(215,193,15)"/><text x="53.3265%" y="319.50"></text></g><g><title>try_to_wake_up (12 samples, 0.06%)</title><rect x="53.0765%" y="293" width="0.0597%" height="15" fill="rgb(232,15,44)"/><text x="53.3265%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (19 samples, 0.09%)</title><rect x="53.0466%" y="389" width="0.0946%" height="15" fill="rgb(212,3,48)"/><text x="53.2966%" y="399.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (22 samples, 0.11%)</title><rect x="53.0366%" y="421" width="0.1095%" height="15" fill="rgb(218,128,7)"/><text x="53.2866%" y="431.50"></text></g><g><title>syscall (21 samples, 0.10%)</title><rect x="53.0416%" y="405" width="0.1045%" height="15" fill="rgb(226,216,39)"/><text x="53.2916%" y="415.50"></text></g><g><title>handle_mm_fault (12 samples, 0.06%)</title><rect x="53.9078%" y="261" width="0.0597%" height="15" fill="rgb(243,47,51)"/><text x="54.1578%" y="271.50"></text></g><g><title>alloc_pages_vma (8 samples, 0.04%)</title><rect x="53.9277%" y="245" width="0.0398%" height="15" fill="rgb(241,183,40)"/><text x="54.1777%" y="255.50"></text></g><g><title>__alloc_pages_nodemask (7 samples, 0.03%)</title><rect x="53.9327%" y="229" width="0.0348%" height="15" fill="rgb(231,217,32)"/><text x="54.1827%" y="239.50"></text></g><g><title>get_page_from_freelist (7 samples, 0.03%)</title><rect x="53.9327%" y="213" width="0.0348%" height="15" fill="rgb(229,61,38)"/><text x="54.1827%" y="223.50"></text></g><g><title>prep_new_page (3 samples, 0.01%)</title><rect x="53.9526%" y="197" width="0.0149%" height="15" fill="rgb(225,210,5)"/><text x="54.2026%" y="207.50"></text></g><g><title>kernel_init_free_pages (3 samples, 0.01%)</title><rect x="53.9526%" y="181" width="0.0149%" height="15" fill="rgb(231,79,45)"/><text x="54.2026%" y="191.50"></text></g><g><title>clear_page_erms (3 samples, 0.01%)</title><rect x="53.9526%" y="165" width="0.0149%" height="15" fill="rgb(224,100,7)"/><text x="54.2026%" y="175.50"></text></g><g><title>exc_page_fault (14 samples, 0.07%)</title><rect x="53.9028%" y="293" width="0.0697%" height="15" fill="rgb(241,198,18)"/><text x="54.1528%" y="303.50"></text></g><g><title>do_user_addr_fault (14 samples, 0.07%)</title><rect x="53.9028%" y="277" width="0.0697%" height="15" fill="rgb(252,97,53)"/><text x="54.1528%" y="287.50"></text></g><g><title>asm_exc_page_fault (17 samples, 0.08%)</title><rect x="53.9028%" y="309" width="0.0846%" height="15" fill="rgb(220,88,7)"/><text x="54.1528%" y="319.50"></text></g><g><title>irqentry_exit_to_user_mode (3 samples, 0.01%)</title><rect x="53.9725%" y="293" width="0.0149%" height="15" fill="rgb(213,176,14)"/><text x="54.2225%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4 samples, 0.02%)</title><rect x="53.9875%" y="309" width="0.0199%" height="15" fill="rgb(246,73,7)"/><text x="54.2375%" y="319.50"></text></g><g><title>&lt;ate::anti_replay::AntiReplayPlugin as ate::sink::EventSink&gt;::feed (57 samples, 0.28%)</title><rect x="53.7286%" y="357" width="0.2838%" height="15" fill="rgb(245,64,36)"/><text x="53.9786%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (50 samples, 0.25%)</title><rect x="53.7634%" y="341" width="0.2489%" height="15" fill="rgb(245,80,10)"/><text x="54.0134%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (34 samples, 0.17%)</title><rect x="53.8431%" y="325" width="0.1693%" height="15" fill="rgb(232,107,50)"/><text x="54.0931%" y="335.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.03%)</title><rect x="54.0223%" y="341" width="0.0348%" height="15" fill="rgb(253,3,0)"/><text x="54.2723%" y="351.50"></text></g><g><title>tcache_get (3 samples, 0.01%)</title><rect x="54.0422%" y="325" width="0.0149%" height="15" fill="rgb(212,99,53)"/><text x="54.2922%" y="335.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.02%)</title><rect x="54.0571%" y="341" width="0.0249%" height="15" fill="rgb(249,111,54)"/><text x="54.3071%" y="351.50"></text></g><g><title>&lt;ate::redo::RedoLog as ate::redo::LogWritable&gt;::write (15 samples, 0.07%)</title><rect x="54.0123%" y="357" width="0.0747%" height="15" fill="rgb(249,55,30)"/><text x="54.2623%" y="367.50"></text></g><g><title>&lt;ate::signature::SignaturePlugin as ate::sink::EventSink&gt;::feed (7 samples, 0.03%)</title><rect x="54.1866%" y="341" width="0.0348%" height="15" fill="rgb(237,47,42)"/><text x="54.4366%" y="351.50"></text></g><g><title>ate::tree::TreeAuthorityPlugin::compute_auth (16 samples, 0.08%)</title><rect x="54.2214%" y="341" width="0.0796%" height="15" fill="rgb(211,20,18)"/><text x="54.4714%" y="351.50"></text></g><g><title>tlb_finish_mmu (3 samples, 0.01%)</title><rect x="54.6744%" y="181" width="0.0149%" height="15" fill="rgb(231,203,46)"/><text x="54.9244%" y="191.50"></text></g><g><title>release_pages (3 samples, 0.01%)</title><rect x="54.6744%" y="165" width="0.0149%" height="15" fill="rgb(237,142,3)"/><text x="54.9244%" y="175.50"></text></g><g><title>__GI_munmap (7 samples, 0.03%)</title><rect x="54.6744%" y="293" width="0.0348%" height="15" fill="rgb(241,107,1)"/><text x="54.9244%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="54.6744%" y="277" width="0.0348%" height="15" fill="rgb(229,83,13)"/><text x="54.9244%" y="287.50"></text></g><g><title>do_syscall_64 (7 samples, 0.03%)</title><rect x="54.6744%" y="261" width="0.0348%" height="15" fill="rgb(241,91,40)"/><text x="54.9244%" y="271.50"></text></g><g><title>__x64_sys_munmap (7 samples, 0.03%)</title><rect x="54.6744%" y="245" width="0.0348%" height="15" fill="rgb(225,3,45)"/><text x="54.9244%" y="255.50"></text></g><g><title>__vm_munmap (7 samples, 0.03%)</title><rect x="54.6744%" y="229" width="0.0348%" height="15" fill="rgb(244,223,14)"/><text x="54.9244%" y="239.50"></text></g><g><title>__do_munmap (7 samples, 0.03%)</title><rect x="54.6744%" y="213" width="0.0348%" height="15" fill="rgb(224,124,37)"/><text x="54.9244%" y="223.50"></text></g><g><title>unmap_region (7 samples, 0.03%)</title><rect x="54.6744%" y="197" width="0.0348%" height="15" fill="rgb(251,171,30)"/><text x="54.9244%" y="207.50"></text></g><g><title>unmap_vmas (4 samples, 0.02%)</title><rect x="54.6894%" y="181" width="0.0199%" height="15" fill="rgb(236,46,54)"/><text x="54.9394%" y="191.50"></text></g><g><title>unmap_page_range (4 samples, 0.02%)</title><rect x="54.6894%" y="165" width="0.0199%" height="15" fill="rgb(245,213,5)"/><text x="54.9394%" y="175.50"></text></g><g><title>__irqentry_text_end (5 samples, 0.02%)</title><rect x="54.7093%" y="293" width="0.0249%" height="15" fill="rgb(230,144,27)"/><text x="54.9593%" y="303.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.02%)</title><rect x="54.7889%" y="181" width="0.0249%" height="15" fill="rgb(220,86,6)"/><text x="55.0389%" y="191.50"></text></g><g><title>prep_new_page (3 samples, 0.01%)</title><rect x="54.7989%" y="165" width="0.0149%" height="15" fill="rgb(240,20,13)"/><text x="55.0489%" y="175.50"></text></g><g><title>kernel_init_free_pages (3 samples, 0.01%)</title><rect x="54.7989%" y="149" width="0.0149%" height="15" fill="rgb(217,89,34)"/><text x="55.0489%" y="159.50"></text></g><g><title>clear_page_erms (3 samples, 0.01%)</title><rect x="54.7989%" y="133" width="0.0149%" height="15" fill="rgb(229,13,5)"/><text x="55.0489%" y="143.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (11 samples, 0.05%)</title><rect x="54.7840%" y="197" width="0.0548%" height="15" fill="rgb(244,67,35)"/><text x="55.0340%" y="207.50"></text></g><g><title>try_to_free_pages (4 samples, 0.02%)</title><rect x="54.8188%" y="181" width="0.0199%" height="15" fill="rgb(221,40,2)"/><text x="55.0688%" y="191.50"></text></g><g><title>do_try_to_free_pages (4 samples, 0.02%)</title><rect x="54.8188%" y="165" width="0.0199%" height="15" fill="rgb(237,157,21)"/><text x="55.0688%" y="175.50"></text></g><g><title>shrink_node (4 samples, 0.02%)</title><rect x="54.8188%" y="149" width="0.0199%" height="15" fill="rgb(222,94,11)"/><text x="55.0688%" y="159.50"></text></g><g><title>shrink_lruvec (3 samples, 0.01%)</title><rect x="54.8238%" y="133" width="0.0149%" height="15" fill="rgb(249,113,6)"/><text x="55.0738%" y="143.50"></text></g><g><title>shrink_inactive_list (3 samples, 0.01%)</title><rect x="54.8238%" y="117" width="0.0149%" height="15" fill="rgb(238,137,36)"/><text x="55.0738%" y="127.50"></text></g><g><title>alloc_pages_vma (23 samples, 0.11%)</title><rect x="54.7740%" y="229" width="0.1145%" height="15" fill="rgb(210,102,26)"/><text x="55.0240%" y="239.50"></text></g><g><title>__alloc_pages_nodemask (23 samples, 0.11%)</title><rect x="54.7740%" y="213" width="0.1145%" height="15" fill="rgb(218,30,30)"/><text x="55.0240%" y="223.50"></text></g><g><title>get_page_from_freelist (9 samples, 0.04%)</title><rect x="54.8437%" y="197" width="0.0448%" height="15" fill="rgb(214,67,26)"/><text x="55.0937%" y="207.50"></text></g><g><title>prep_new_page (6 samples, 0.03%)</title><rect x="54.8586%" y="181" width="0.0299%" height="15" fill="rgb(251,9,53)"/><text x="55.1086%" y="191.50"></text></g><g><title>kernel_init_free_pages (6 samples, 0.03%)</title><rect x="54.8586%" y="165" width="0.0299%" height="15" fill="rgb(228,204,25)"/><text x="55.1086%" y="175.50"></text></g><g><title>clear_page_erms (6 samples, 0.03%)</title><rect x="54.8586%" y="149" width="0.0299%" height="15" fill="rgb(207,153,8)"/><text x="55.1086%" y="159.50"></text></g><g><title>lru_cache_add (6 samples, 0.03%)</title><rect x="54.8984%" y="229" width="0.0299%" height="15" fill="rgb(242,9,16)"/><text x="55.1484%" y="239.50"></text></g><g><title>pagevec_lru_move_fn (4 samples, 0.02%)</title><rect x="54.9084%" y="213" width="0.0199%" height="15" fill="rgb(217,211,10)"/><text x="55.1584%" y="223.50"></text></g><g><title>__pagevec_lru_add_fn (4 samples, 0.02%)</title><rect x="54.9084%" y="197" width="0.0199%" height="15" fill="rgb(219,228,52)"/><text x="55.1584%" y="207.50"></text></g><g><title>mem_cgroup_charge (7 samples, 0.03%)</title><rect x="54.9283%" y="229" width="0.0348%" height="15" fill="rgb(231,92,29)"/><text x="55.1783%" y="239.50"></text></g><g><title>try_charge (3 samples, 0.01%)</title><rect x="54.9482%" y="213" width="0.0149%" height="15" fill="rgb(232,8,23)"/><text x="55.1982%" y="223.50"></text></g><g><title>exc_page_fault (47 samples, 0.23%)</title><rect x="54.7342%" y="277" width="0.2340%" height="15" fill="rgb(216,211,34)"/><text x="54.9842%" y="287.50"></text></g><g><title>do_user_addr_fault (47 samples, 0.23%)</title><rect x="54.7342%" y="261" width="0.2340%" height="15" fill="rgb(236,151,0)"/><text x="54.9842%" y="271.50"></text></g><g><title>handle_mm_fault (46 samples, 0.23%)</title><rect x="54.7391%" y="245" width="0.2290%" height="15" fill="rgb(209,168,3)"/><text x="54.9891%" y="255.50"></text></g><g><title>asm_exc_page_fault (58 samples, 0.29%)</title><rect x="54.7342%" y="293" width="0.2887%" height="15" fill="rgb(208,129,28)"/><text x="54.9842%" y="303.50"></text></g><g><title>irqentry_exit_to_user_mode (11 samples, 0.05%)</title><rect x="54.9681%" y="277" width="0.0548%" height="15" fill="rgb(229,78,22)"/><text x="55.2181%" y="287.50"></text></g><g><title>error_entry (11 samples, 0.05%)</title><rect x="55.0229%" y="293" width="0.0548%" height="15" fill="rgb(228,187,13)"/><text x="55.2729%" y="303.50"></text></g><g><title>sync_regs (6 samples, 0.03%)</title><rect x="55.0478%" y="277" width="0.0299%" height="15" fill="rgb(240,119,24)"/><text x="55.2978%" y="287.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::sink::EventSink&gt;::feed (198 samples, 0.99%)</title><rect x="54.0970%" y="357" width="0.9857%" height="15" fill="rgb(209,194,42)"/><text x="54.3470%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (157 samples, 0.78%)</title><rect x="54.3011%" y="341" width="0.7816%" height="15" fill="rgb(247,200,46)"/><text x="54.5511%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (153 samples, 0.76%)</title><rect x="54.3210%" y="325" width="0.7616%" height="15" fill="rgb(218,76,16)"/><text x="54.5710%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (117 samples, 0.58%)</title><rect x="54.5002%" y="309" width="0.5824%" height="15" fill="rgb(225,21,48)"/><text x="54.7502%" y="319.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.01%)</title><rect x="56.1181%" y="213" width="0.0149%" height="15" fill="rgb(239,223,50)"/><text x="56.3681%" y="223.50"></text></g><g><title>exc_page_fault (6 samples, 0.03%)</title><rect x="56.1131%" y="261" width="0.0299%" height="15" fill="rgb(244,45,21)"/><text x="56.3631%" y="271.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.03%)</title><rect x="56.1131%" y="245" width="0.0299%" height="15" fill="rgb(232,33,43)"/><text x="56.3631%" y="255.50"></text></g><g><title>handle_mm_fault (6 samples, 0.03%)</title><rect x="56.1131%" y="229" width="0.0299%" height="15" fill="rgb(209,8,3)"/><text x="56.3631%" y="239.50"></text></g><g><title>asm_exc_page_fault (8 samples, 0.04%)</title><rect x="56.1131%" y="277" width="0.0398%" height="15" fill="rgb(214,25,53)"/><text x="56.3631%" y="287.50"></text></g><g><title>__irqentry_text_end (3 samples, 0.01%)</title><rect x="56.2027%" y="261" width="0.0149%" height="15" fill="rgb(254,186,54)"/><text x="56.4527%" y="271.50"></text></g><g><title>__count_memcg_events.part.0 (3 samples, 0.01%)</title><rect x="56.2425%" y="197" width="0.0149%" height="15" fill="rgb(208,174,49)"/><text x="56.4925%" y="207.50"></text></g><g><title>__list_del_entry_valid (8 samples, 0.04%)</title><rect x="56.3023%" y="149" width="0.0398%" height="15" fill="rgb(233,191,51)"/><text x="56.5523%" y="159.50"></text></g><g><title>alloc_pages_vma (28 samples, 0.14%)</title><rect x="56.2624%" y="197" width="0.1394%" height="15" fill="rgb(222,134,10)"/><text x="56.5124%" y="207.50"></text></g><g><title>__alloc_pages_nodemask (28 samples, 0.14%)</title><rect x="56.2624%" y="181" width="0.1394%" height="15" fill="rgb(230,226,20)"/><text x="56.5124%" y="191.50"></text></g><g><title>get_page_from_freelist (25 samples, 0.12%)</title><rect x="56.2774%" y="165" width="0.1245%" height="15" fill="rgb(251,111,25)"/><text x="56.5274%" y="175.50"></text></g><g><title>prep_new_page (11 samples, 0.05%)</title><rect x="56.3471%" y="149" width="0.0548%" height="15" fill="rgb(224,40,46)"/><text x="56.5971%" y="159.50"></text></g><g><title>kernel_init_free_pages (10 samples, 0.05%)</title><rect x="56.3521%" y="133" width="0.0498%" height="15" fill="rgb(236,108,47)"/><text x="56.6021%" y="143.50"></text></g><g><title>clear_page_erms (10 samples, 0.05%)</title><rect x="56.3521%" y="117" width="0.0498%" height="15" fill="rgb(234,93,0)"/><text x="56.6021%" y="127.50"></text></g><g><title>__pagevec_lru_add_fn (3 samples, 0.01%)</title><rect x="56.4168%" y="165" width="0.0149%" height="15" fill="rgb(224,213,32)"/><text x="56.6668%" y="175.50"></text></g><g><title>lru_cache_add (7 samples, 0.03%)</title><rect x="56.4018%" y="197" width="0.0348%" height="15" fill="rgb(251,11,48)"/><text x="56.6518%" y="207.50"></text></g><g><title>pagevec_lru_move_fn (5 samples, 0.02%)</title><rect x="56.4118%" y="181" width="0.0249%" height="15" fill="rgb(236,173,5)"/><text x="56.6618%" y="191.50"></text></g><g><title>get_mem_cgroup_from_mm (3 samples, 0.01%)</title><rect x="56.4367%" y="181" width="0.0149%" height="15" fill="rgb(230,95,12)"/><text x="56.6867%" y="191.50"></text></g><g><title>mem_cgroup_charge (7 samples, 0.03%)</title><rect x="56.4367%" y="197" width="0.0348%" height="15" fill="rgb(232,209,1)"/><text x="56.6867%" y="207.50"></text></g><g><title>try_charge (3 samples, 0.01%)</title><rect x="56.4566%" y="181" width="0.0149%" height="15" fill="rgb(232,6,1)"/><text x="56.7066%" y="191.50"></text></g><g><title>do_user_addr_fault (53 samples, 0.26%)</title><rect x="56.2226%" y="229" width="0.2638%" height="15" fill="rgb(210,224,50)"/><text x="56.4726%" y="239.50"></text></g><g><title>handle_mm_fault (52 samples, 0.26%)</title><rect x="56.2276%" y="213" width="0.2589%" height="15" fill="rgb(228,127,35)"/><text x="56.4776%" y="223.50"></text></g><g><title>page_add_new_anon_rmap (3 samples, 0.01%)</title><rect x="56.4715%" y="197" width="0.0149%" height="15" fill="rgb(245,102,45)"/><text x="56.7215%" y="207.50"></text></g><g><title>exc_page_fault (55 samples, 0.27%)</title><rect x="56.2176%" y="245" width="0.2738%" height="15" fill="rgb(214,1,49)"/><text x="56.4676%" y="255.50"></text></g><g><title>asm_exc_page_fault (69 samples, 0.34%)</title><rect x="56.2176%" y="261" width="0.3435%" height="15" fill="rgb(226,163,40)"/><text x="56.4676%" y="271.50"></text></g><g><title>irqentry_exit_to_user_mode (14 samples, 0.07%)</title><rect x="56.4914%" y="245" width="0.0697%" height="15" fill="rgb(239,212,28)"/><text x="56.7414%" y="255.50"></text></g><g><title>error_entry (9 samples, 0.04%)</title><rect x="56.5661%" y="261" width="0.0448%" height="15" fill="rgb(220,20,13)"/><text x="56.8161%" y="271.50"></text></g><g><title>sync_regs (9 samples, 0.04%)</title><rect x="56.5661%" y="245" width="0.0448%" height="15" fill="rgb(210,164,35)"/><text x="56.8161%" y="255.50"></text></g><g><title>down_write_killable (3 samples, 0.01%)</title><rect x="56.6507%" y="165" width="0.0149%" height="15" fill="rgb(248,109,41)"/><text x="56.9007%" y="175.50"></text></g><g><title>change_protection (7 samples, 0.03%)</title><rect x="56.6856%" y="149" width="0.0348%" height="15" fill="rgb(238,23,50)"/><text x="56.9356%" y="159.50"></text></g><g><title>__perf_event__output_id_sample (4 samples, 0.02%)</title><rect x="56.8100%" y="85" width="0.0199%" height="15" fill="rgb(211,48,49)"/><text x="57.0600%" y="95.50"></text></g><g><title>perf_output_copy (4 samples, 0.02%)</title><rect x="56.8100%" y="69" width="0.0199%" height="15" fill="rgb(223,36,21)"/><text x="57.0600%" y="79.50"></text></g><g><title>__perf_event_header__init_id (3 samples, 0.01%)</title><rect x="56.8299%" y="85" width="0.0149%" height="15" fill="rgb(207,123,46)"/><text x="57.0799%" y="95.50"></text></g><g><title>perf_iterate_sb (30 samples, 0.15%)</title><rect x="56.7403%" y="133" width="0.1493%" height="15" fill="rgb(240,218,32)"/><text x="56.9903%" y="143.50"></text></g><g><title>perf_iterate_ctx (26 samples, 0.13%)</title><rect x="56.7603%" y="117" width="0.1294%" height="15" fill="rgb(252,5,43)"/><text x="57.0103%" y="127.50"></text></g><g><title>perf_event_mmap_output (16 samples, 0.08%)</title><rect x="56.8100%" y="101" width="0.0796%" height="15" fill="rgb(252,84,19)"/><text x="57.0600%" y="111.50"></text></g><g><title>perf_output_copy (7 samples, 0.03%)</title><rect x="56.8548%" y="85" width="0.0348%" height="15" fill="rgb(243,152,39)"/><text x="57.1048%" y="95.50"></text></g><g><title>memcpy_erms (5 samples, 0.02%)</title><rect x="56.8648%" y="69" width="0.0249%" height="15" fill="rgb(234,160,15)"/><text x="57.1148%" y="79.50"></text></g><g><title>perf_event_mmap (33 samples, 0.16%)</title><rect x="56.7304%" y="149" width="0.1643%" height="15" fill="rgb(237,34,20)"/><text x="56.9804%" y="159.50"></text></g><g><title>__vma_adjust (8 samples, 0.04%)</title><rect x="56.8947%" y="133" width="0.0398%" height="15" fill="rgb(229,97,13)"/><text x="57.1447%" y="143.50"></text></g><g><title>vma_merge (9 samples, 0.04%)</title><rect x="56.8947%" y="149" width="0.0448%" height="15" fill="rgb(234,71,50)"/><text x="57.1447%" y="159.50"></text></g><g><title>mprotect_fixup (55 samples, 0.27%)</title><rect x="56.6756%" y="165" width="0.2738%" height="15" fill="rgb(253,155,4)"/><text x="56.9256%" y="175.50"></text></g><g><title>__x64_sys_mprotect (65 samples, 0.32%)</title><rect x="56.6358%" y="197" width="0.3236%" height="15" fill="rgb(222,185,37)"/><text x="56.8858%" y="207.50"></text></g><g><title>do_mprotect_pkey (63 samples, 0.31%)</title><rect x="56.6458%" y="181" width="0.3136%" height="15" fill="rgb(251,177,13)"/><text x="56.8958%" y="191.50"></text></g><g><title>do_syscall_64 (67 samples, 0.33%)</title><rect x="56.6358%" y="213" width="0.3335%" height="15" fill="rgb(250,179,40)"/><text x="56.8858%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (83 samples, 0.41%)</title><rect x="56.6308%" y="229" width="0.4132%" height="15" fill="rgb(242,44,2)"/><text x="56.8808%" y="239.50"></text></g><g><title>syscall_exit_to_user_mode (15 samples, 0.07%)</title><rect x="56.9693%" y="213" width="0.0747%" height="15" fill="rgb(216,177,13)"/><text x="57.2193%" y="223.50"></text></g><g><title>error_entry (11 samples, 0.05%)</title><rect x="57.0440%" y="229" width="0.0548%" height="15" fill="rgb(216,106,43)"/><text x="57.2940%" y="239.50"></text></g><g><title>__GI___mprotect (101 samples, 0.50%)</title><rect x="56.6159%" y="245" width="0.5028%" height="15" fill="rgb(216,183,2)"/><text x="56.8659%" y="255.50"></text></g><g><title>syscall_return_via_sysret (4 samples, 0.02%)</title><rect x="57.0988%" y="229" width="0.0199%" height="15" fill="rgb(249,75,3)"/><text x="57.3488%" y="239.50"></text></g><g><title>__GI___libc_malloc (245 samples, 1.22%)</title><rect x="55.9040%" y="309" width="1.2196%" height="15" fill="rgb(219,67,39)"/><text x="56.1540%" y="319.50"></text></g><g><title>_int_malloc (217 samples, 1.08%)</title><rect x="56.0434%" y="293" width="1.0802%" height="15" fill="rgb(253,228,2)"/><text x="56.2934%" y="303.50"></text></g><g><title>sysmalloc (193 samples, 0.96%)</title><rect x="56.1629%" y="277" width="0.9608%" height="15" fill="rgb(235,138,27)"/><text x="56.4129%" y="287.50"></text></g><g><title>grow_heap (103 samples, 0.51%)</title><rect x="56.6109%" y="261" width="0.5127%" height="15" fill="rgb(236,97,51)"/><text x="56.8609%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (295 samples, 1.47%)</title><rect x="55.6601%" y="325" width="1.4685%" height="15" fill="rgb(240,80,30)"/><text x="55.9101%" y="335.50"></text></g><g><title>__memmove_avx_unaligned_erms (23 samples, 0.11%)</title><rect x="57.1286%" y="325" width="0.1145%" height="15" fill="rgb(230,178,19)"/><text x="57.3786%" y="335.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.01%)</title><rect x="57.6115%" y="245" width="0.0149%" height="15" fill="rgb(210,190,27)"/><text x="57.8615%" y="255.50"></text></g><g><title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="57.6414%" y="165" width="0.0199%" height="15" fill="rgb(222,107,31)"/><text x="57.8914%" y="175.50"></text></g><g><title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="57.6414%" y="149" width="0.0199%" height="15" fill="rgb(216,127,34)"/><text x="57.8914%" y="159.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.01%)</title><rect x="57.6464%" y="133" width="0.0149%" height="15" fill="rgb(234,116,52)"/><text x="57.8964%" y="143.50"></text></g><g><title>exc_page_fault (5 samples, 0.02%)</title><rect x="57.6414%" y="213" width="0.0249%" height="15" fill="rgb(222,124,15)"/><text x="57.8914%" y="223.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.02%)</title><rect x="57.6414%" y="197" width="0.0249%" height="15" fill="rgb(231,179,28)"/><text x="57.8914%" y="207.50"></text></g><g><title>handle_mm_fault (5 samples, 0.02%)</title><rect x="57.6414%" y="181" width="0.0249%" height="15" fill="rgb(226,93,45)"/><text x="57.8914%" y="191.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.03%)</title><rect x="57.6414%" y="229" width="0.0299%" height="15" fill="rgb(215,8,51)"/><text x="57.8914%" y="239.50"></text></g><g><title>change_protection (4 samples, 0.02%)</title><rect x="57.6862%" y="117" width="0.0199%" height="15" fill="rgb(223,106,5)"/><text x="57.9362%" y="127.50"></text></g><g><title>__x64_sys_mprotect (8 samples, 0.04%)</title><rect x="57.6762%" y="165" width="0.0398%" height="15" fill="rgb(250,191,5)"/><text x="57.9262%" y="175.50"></text></g><g><title>do_mprotect_pkey (8 samples, 0.04%)</title><rect x="57.6762%" y="149" width="0.0398%" height="15" fill="rgb(242,132,44)"/><text x="57.9262%" y="159.50"></text></g><g><title>mprotect_fixup (6 samples, 0.03%)</title><rect x="57.6862%" y="133" width="0.0299%" height="15" fill="rgb(251,152,29)"/><text x="57.9362%" y="143.50"></text></g><g><title>do_syscall_64 (9 samples, 0.04%)</title><rect x="57.6762%" y="181" width="0.0448%" height="15" fill="rgb(218,179,5)"/><text x="57.9262%" y="191.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.06%)</title><rect x="57.6762%" y="197" width="0.0647%" height="15" fill="rgb(227,67,19)"/><text x="57.9262%" y="207.50"></text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.02%)</title><rect x="57.7210%" y="181" width="0.0199%" height="15" fill="rgb(233,119,31)"/><text x="57.9710%" y="191.50"></text></g><g><title>sysmalloc (25 samples, 0.12%)</title><rect x="57.6264%" y="245" width="0.1245%" height="15" fill="rgb(241,120,22)"/><text x="57.8764%" y="255.50"></text></g><g><title>grow_heap (15 samples, 0.07%)</title><rect x="57.6762%" y="229" width="0.0747%" height="15" fill="rgb(224,102,30)"/><text x="57.9262%" y="239.50"></text></g><g><title>__GI___mprotect (15 samples, 0.07%)</title><rect x="57.6762%" y="213" width="0.0747%" height="15" fill="rgb(210,164,37)"/><text x="57.9262%" y="223.50"></text></g><g><title>_int_malloc (46 samples, 0.23%)</title><rect x="57.5319%" y="261" width="0.2290%" height="15" fill="rgb(226,191,16)"/><text x="57.7819%" y="271.50"></text></g><g><title>__GI___libc_malloc (67 samples, 0.33%)</title><rect x="57.4373%" y="277" width="0.3335%" height="15" fill="rgb(214,40,45)"/><text x="57.6873%" y="287.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (85 samples, 0.42%)</title><rect x="57.7857%" y="261" width="0.4231%" height="15" fill="rgb(244,29,26)"/><text x="58.0357%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="58.1890%" y="245" width="0.0199%" height="15" fill="rgb(216,16,5)"/><text x="58.4390%" y="255.50"></text></g><g><title>ate::conf::SerializationFormat::serialize (172 samples, 0.86%)</title><rect x="57.3726%" y="309" width="0.8562%" height="15" fill="rgb(249,76,35)"/><text x="57.6226%" y="319.50"></text></g><g><title>bincode::serialize (164 samples, 0.82%)</title><rect x="57.4124%" y="293" width="0.8164%" height="15" fill="rgb(207,11,44)"/><text x="57.6624%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (91 samples, 0.45%)</title><rect x="57.7758%" y="277" width="0.4530%" height="15" fill="rgb(228,190,49)"/><text x="58.0258%" y="287.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::MetaAuthorization&gt;::serialize (4 samples, 0.02%)</title><rect x="58.2089%" y="261" width="0.0199%" height="15" fill="rgb(214,173,12)"/><text x="58.4589%" y="271.50"></text></g><g><title>ate::event::EventData::as_header_raw (240 samples, 1.19%)</title><rect x="57.2531%" y="325" width="1.1947%" height="15" fill="rgb(218,26,35)"/><text x="57.5031%" y="335.50"></text></g><g><title>blake3::hash (44 samples, 0.22%)</title><rect x="58.2288%" y="309" width="0.2190%" height="15" fill="rgb(220,200,19)"/><text x="58.4788%" y="319.50"></text></g><g><title>blake3::ChunkState::update (16 samples, 0.08%)</title><rect x="58.3682%" y="293" width="0.0796%" height="15" fill="rgb(239,95,49)"/><text x="58.6182%" y="303.50"></text></g><g><title>bytes::bytes::shared_clone (17 samples, 0.08%)</title><rect x="58.4478%" y="325" width="0.0846%" height="15" fill="rgb(235,85,53)"/><text x="58.6978%" y="335.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="59.4634%" y="309" width="0.0199%" height="15" fill="rgb(233,133,31)"/><text x="59.7134%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.01%)</title><rect x="59.4833%" y="309" width="0.0149%" height="15" fill="rgb(218,25,20)"/><text x="59.7333%" y="319.50"></text></g><g><title>__memmove_avx_unaligned_erms (89 samples, 0.44%)</title><rect x="59.7869%" y="293" width="0.4431%" height="15" fill="rgb(252,210,38)"/><text x="60.0369%" y="303.50"></text></g><g><title>tlb_finish_mmu (3 samples, 0.01%)</title><rect x="60.5038%" y="165" width="0.0149%" height="15" fill="rgb(242,134,21)"/><text x="60.7538%" y="175.50"></text></g><g><title>release_pages (3 samples, 0.01%)</title><rect x="60.5038%" y="149" width="0.0149%" height="15" fill="rgb(213,28,48)"/><text x="60.7538%" y="159.50"></text></g><g><title>free_pcppages_bulk (3 samples, 0.01%)</title><rect x="60.5735%" y="85" width="0.0149%" height="15" fill="rgb(250,196,2)"/><text x="60.8235%" y="95.50"></text></g><g><title>__free_one_page (3 samples, 0.01%)</title><rect x="60.5735%" y="69" width="0.0149%" height="15" fill="rgb(227,5,17)"/><text x="60.8235%" y="79.50"></text></g><g><title>__GI_munmap (18 samples, 0.09%)</title><rect x="60.5038%" y="277" width="0.0896%" height="15" fill="rgb(221,226,24)"/><text x="60.7538%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (18 samples, 0.09%)</title><rect x="60.5038%" y="261" width="0.0896%" height="15" fill="rgb(211,5,48)"/><text x="60.7538%" y="271.50"></text></g><g><title>do_syscall_64 (18 samples, 0.09%)</title><rect x="60.5038%" y="245" width="0.0896%" height="15" fill="rgb(219,150,6)"/><text x="60.7538%" y="255.50"></text></g><g><title>__x64_sys_munmap (18 samples, 0.09%)</title><rect x="60.5038%" y="229" width="0.0896%" height="15" fill="rgb(251,46,16)"/><text x="60.7538%" y="239.50"></text></g><g><title>__vm_munmap (18 samples, 0.09%)</title><rect x="60.5038%" y="213" width="0.0896%" height="15" fill="rgb(220,204,40)"/><text x="60.7538%" y="223.50"></text></g><g><title>__do_munmap (18 samples, 0.09%)</title><rect x="60.5038%" y="197" width="0.0896%" height="15" fill="rgb(211,85,2)"/><text x="60.7538%" y="207.50"></text></g><g><title>unmap_region (18 samples, 0.09%)</title><rect x="60.5038%" y="181" width="0.0896%" height="15" fill="rgb(229,17,7)"/><text x="60.7538%" y="191.50"></text></g><g><title>unmap_vmas (15 samples, 0.07%)</title><rect x="60.5187%" y="165" width="0.0747%" height="15" fill="rgb(239,72,28)"/><text x="60.7687%" y="175.50"></text></g><g><title>unmap_page_range (15 samples, 0.07%)</title><rect x="60.5187%" y="149" width="0.0747%" height="15" fill="rgb(230,47,54)"/><text x="60.7687%" y="159.50"></text></g><g><title>tlb_flush_mmu (9 samples, 0.04%)</title><rect x="60.5486%" y="133" width="0.0448%" height="15" fill="rgb(214,50,8)"/><text x="60.7986%" y="143.50"></text></g><g><title>release_pages (8 samples, 0.04%)</title><rect x="60.5536%" y="117" width="0.0398%" height="15" fill="rgb(216,198,43)"/><text x="60.8036%" y="127.50"></text></g><g><title>free_unref_page_list (4 samples, 0.02%)</title><rect x="60.5735%" y="101" width="0.0199%" height="15" fill="rgb(234,20,35)"/><text x="60.8235%" y="111.50"></text></g><g><title>__irqentry_text_end (3 samples, 0.01%)</title><rect x="60.5934%" y="277" width="0.0149%" height="15" fill="rgb(254,45,19)"/><text x="60.8434%" y="287.50"></text></g><g><title>__irqentry_text_end (13 samples, 0.06%)</title><rect x="60.7577%" y="261" width="0.0647%" height="15" fill="rgb(219,14,44)"/><text x="61.0077%" y="271.50"></text></g><g><title>error_entry (3 samples, 0.01%)</title><rect x="60.8323%" y="245" width="0.0149%" height="15" fill="rgb(217,220,26)"/><text x="61.0823%" y="255.50"></text></g><g><title>kernel_init_free_pages (5 samples, 0.02%)</title><rect x="60.9916%" y="117" width="0.0249%" height="15" fill="rgb(213,158,28)"/><text x="61.2416%" y="127.50"></text></g><g><title>clear_page_erms (5 samples, 0.02%)</title><rect x="60.9916%" y="101" width="0.0249%" height="15" fill="rgb(252,51,52)"/><text x="61.2416%" y="111.50"></text></g><g><title>get_page_from_freelist (10 samples, 0.05%)</title><rect x="60.9717%" y="149" width="0.0498%" height="15" fill="rgb(246,89,16)"/><text x="61.2217%" y="159.50"></text></g><g><title>prep_new_page (6 samples, 0.03%)</title><rect x="60.9916%" y="133" width="0.0299%" height="15" fill="rgb(216,158,49)"/><text x="61.2416%" y="143.50"></text></g><g><title>mem_cgroup_iter (3 samples, 0.01%)</title><rect x="61.0265%" y="101" width="0.0149%" height="15" fill="rgb(236,107,19)"/><text x="61.2765%" y="111.50"></text></g><g><title>try_to_unmap (3 samples, 0.01%)</title><rect x="61.0763%" y="53" width="0.0149%" height="15" fill="rgb(228,185,30)"/><text x="61.3263%" y="63.50"></text></g><g><title>shrink_lruvec (11 samples, 0.05%)</title><rect x="61.0414%" y="101" width="0.0548%" height="15" fill="rgb(246,134,8)"/><text x="61.2914%" y="111.50"></text></g><g><title>shrink_inactive_list (9 samples, 0.04%)</title><rect x="61.0514%" y="85" width="0.0448%" height="15" fill="rgb(214,143,50)"/><text x="61.3014%" y="95.50"></text></g><g><title>shrink_page_list (8 samples, 0.04%)</title><rect x="61.0564%" y="69" width="0.0398%" height="15" fill="rgb(228,75,8)"/><text x="61.3064%" y="79.50"></text></g><g><title>count_shadow_nodes (5 samples, 0.02%)</title><rect x="61.1111%" y="69" width="0.0249%" height="15" fill="rgb(207,175,4)"/><text x="61.3611%" y="79.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (37 samples, 0.18%)</title><rect x="60.9667%" y="165" width="0.1842%" height="15" fill="rgb(205,108,24)"/><text x="61.2167%" y="175.50"></text></g><g><title>try_to_free_pages (25 samples, 0.12%)</title><rect x="61.0265%" y="149" width="0.1245%" height="15" fill="rgb(244,120,49)"/><text x="61.2765%" y="159.50"></text></g><g><title>do_try_to_free_pages (25 samples, 0.12%)</title><rect x="61.0265%" y="133" width="0.1245%" height="15" fill="rgb(223,47,38)"/><text x="61.2765%" y="143.50"></text></g><g><title>shrink_node (25 samples, 0.12%)</title><rect x="61.0265%" y="117" width="0.1245%" height="15" fill="rgb(229,179,11)"/><text x="61.2765%" y="127.50"></text></g><g><title>shrink_slab (11 samples, 0.05%)</title><rect x="61.0962%" y="101" width="0.0548%" height="15" fill="rgb(231,122,1)"/><text x="61.3462%" y="111.50"></text></g><g><title>do_shrink_slab (9 samples, 0.04%)</title><rect x="61.1061%" y="85" width="0.0448%" height="15" fill="rgb(245,119,9)"/><text x="61.3561%" y="95.50"></text></g><g><title>super_cache_count (3 samples, 0.01%)</title><rect x="61.1360%" y="69" width="0.0149%" height="15" fill="rgb(241,163,25)"/><text x="61.3860%" y="79.50"></text></g><g><title>__list_del_entry_valid (5 samples, 0.02%)</title><rect x="61.1808%" y="149" width="0.0249%" height="15" fill="rgb(217,214,3)"/><text x="61.4308%" y="159.50"></text></g><g><title>alloc_pages_vma (79 samples, 0.39%)</title><rect x="60.9369%" y="197" width="0.3933%" height="15" fill="rgb(240,86,28)"/><text x="61.1869%" y="207.50"></text></g><g><title>__alloc_pages_nodemask (76 samples, 0.38%)</title><rect x="60.9518%" y="181" width="0.3783%" height="15" fill="rgb(215,47,9)"/><text x="61.2018%" y="191.50"></text></g><g><title>get_page_from_freelist (36 samples, 0.18%)</title><rect x="61.1509%" y="165" width="0.1792%" height="15" fill="rgb(252,25,45)"/><text x="61.4009%" y="175.50"></text></g><g><title>prep_new_page (23 samples, 0.11%)</title><rect x="61.2157%" y="149" width="0.1145%" height="15" fill="rgb(251,164,9)"/><text x="61.4657%" y="159.50"></text></g><g><title>kernel_init_free_pages (23 samples, 0.11%)</title><rect x="61.2157%" y="133" width="0.1145%" height="15" fill="rgb(233,194,0)"/><text x="61.4657%" y="143.50"></text></g><g><title>clear_page_erms (23 samples, 0.11%)</title><rect x="61.2157%" y="117" width="0.1145%" height="15" fill="rgb(249,111,24)"/><text x="61.4657%" y="127.50"></text></g><g><title>__pagevec_lru_add_fn (3 samples, 0.01%)</title><rect x="61.3451%" y="165" width="0.0149%" height="15" fill="rgb(250,223,3)"/><text x="61.5951%" y="175.50"></text></g><g><title>lru_cache_add (9 samples, 0.04%)</title><rect x="61.3351%" y="197" width="0.0448%" height="15" fill="rgb(236,178,37)"/><text x="61.5851%" y="207.50"></text></g><g><title>pagevec_lru_move_fn (7 samples, 0.03%)</title><rect x="61.3451%" y="181" width="0.0348%" height="15" fill="rgb(241,158,50)"/><text x="61.5951%" y="191.50"></text></g><g><title>release_pages (4 samples, 0.02%)</title><rect x="61.3600%" y="165" width="0.0199%" height="15" fill="rgb(213,121,41)"/><text x="61.6100%" y="175.50"></text></g><g><title>get_mem_cgroup_from_mm (5 samples, 0.02%)</title><rect x="61.3949%" y="181" width="0.0249%" height="15" fill="rgb(240,92,3)"/><text x="61.6449%" y="191.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (3 samples, 0.01%)</title><rect x="61.4198%" y="181" width="0.0149%" height="15" fill="rgb(205,123,3)"/><text x="61.6698%" y="191.50"></text></g><g><title>mem_cgroup_charge (14 samples, 0.07%)</title><rect x="61.3799%" y="197" width="0.0697%" height="15" fill="rgb(205,97,47)"/><text x="61.6299%" y="207.50"></text></g><g><title>try_charge (3 samples, 0.01%)</title><rect x="61.4347%" y="181" width="0.0149%" height="15" fill="rgb(247,152,14)"/><text x="61.6847%" y="191.50"></text></g><g><title>page_add_new_anon_rmap (7 samples, 0.03%)</title><rect x="61.4496%" y="197" width="0.0348%" height="15" fill="rgb(248,195,53)"/><text x="61.6996%" y="207.50"></text></g><g><title>handle_mm_fault (123 samples, 0.61%)</title><rect x="60.8771%" y="213" width="0.6123%" height="15" fill="rgb(226,201,16)"/><text x="61.1271%" y="223.50"></text></g><g><title>exc_page_fault (131 samples, 0.65%)</title><rect x="60.8473%" y="245" width="0.6521%" height="15" fill="rgb(205,98,0)"/><text x="61.0973%" y="255.50"></text></g><g><title>do_user_addr_fault (130 samples, 0.65%)</title><rect x="60.8523%" y="229" width="0.6472%" height="15" fill="rgb(214,191,48)"/><text x="61.1023%" y="239.50"></text></g><g><title>asm_exc_page_fault (167 samples, 0.83%)</title><rect x="60.8224%" y="261" width="0.8313%" height="15" fill="rgb(237,112,39)"/><text x="61.0724%" y="271.50"></text></g><g><title>irqentry_exit_to_user_mode (31 samples, 0.15%)</title><rect x="61.4994%" y="245" width="0.1543%" height="15" fill="rgb(247,203,27)"/><text x="61.7494%" y="255.50"></text></g><g><title>error_entry (19 samples, 0.09%)</title><rect x="61.6537%" y="261" width="0.0946%" height="15" fill="rgb(235,124,28)"/><text x="61.9037%" y="271.50"></text></g><g><title>sync_regs (11 samples, 0.05%)</title><rect x="61.6935%" y="245" width="0.0548%" height="15" fill="rgb(208,207,46)"/><text x="61.9435%" y="255.50"></text></g><g><title>__memmove_avx_unaligned_erms (230 samples, 1.14%)</title><rect x="60.6083%" y="277" width="1.1450%" height="15" fill="rgb(234,176,4)"/><text x="60.8583%" y="287.50"></text></g><g><title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="61.7832%" y="197" width="0.0199%" height="15" fill="rgb(230,133,28)"/><text x="62.0332%" y="207.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.01%)</title><rect x="61.7881%" y="181" width="0.0149%" height="15" fill="rgb(211,137,40)"/><text x="62.0381%" y="191.50"></text></g><g><title>prep_new_page (3 samples, 0.01%)</title><rect x="61.7881%" y="165" width="0.0149%" height="15" fill="rgb(254,35,13)"/><text x="62.0381%" y="175.50"></text></g><g><title>kernel_init_free_pages (3 samples, 0.01%)</title><rect x="61.7881%" y="149" width="0.0149%" height="15" fill="rgb(225,49,51)"/><text x="62.0381%" y="159.50"></text></g><g><title>clear_page_erms (3 samples, 0.01%)</title><rect x="61.7881%" y="133" width="0.0149%" height="15" fill="rgb(251,10,15)"/><text x="62.0381%" y="143.50"></text></g><g><title>alloc_pages_vma (5 samples, 0.02%)</title><rect x="61.7832%" y="213" width="0.0249%" height="15" fill="rgb(228,207,15)"/><text x="62.0332%" y="223.50"></text></g><g><title>exc_page_fault (13 samples, 0.06%)</title><rect x="61.7682%" y="261" width="0.0647%" height="15" fill="rgb(241,99,19)"/><text x="62.0182%" y="271.50"></text></g><g><title>do_user_addr_fault (12 samples, 0.06%)</title><rect x="61.7732%" y="245" width="0.0597%" height="15" fill="rgb(207,104,49)"/><text x="62.0232%" y="255.50"></text></g><g><title>handle_mm_fault (12 samples, 0.06%)</title><rect x="61.7732%" y="229" width="0.0597%" height="15" fill="rgb(234,99,18)"/><text x="62.0232%" y="239.50"></text></g><g><title>mem_cgroup_charge (3 samples, 0.01%)</title><rect x="61.8180%" y="213" width="0.0149%" height="15" fill="rgb(213,191,49)"/><text x="62.0680%" y="223.50"></text></g><g><title>asm_exc_page_fault (23 samples, 0.11%)</title><rect x="61.7583%" y="277" width="0.1145%" height="15" fill="rgb(210,226,19)"/><text x="62.0083%" y="287.50"></text></g><g><title>irqentry_exit_to_user_mode (8 samples, 0.04%)</title><rect x="61.8329%" y="261" width="0.0398%" height="15" fill="rgb(229,97,18)"/><text x="62.0829%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.01%)</title><rect x="61.8728%" y="277" width="0.0149%" height="15" fill="rgb(211,167,15)"/><text x="62.1228%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (680 samples, 3.39%)</title><rect x="58.5325%" y="325" width="3.3851%" height="15" fill="rgb(210,169,34)"/><text x="58.7825%" y="335.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (486 samples, 2.42%)</title><rect x="59.4982%" y="309" width="2.4194%" height="15" fill="rgb(241,121,31)"/><text x="59.7482%" y="319.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (339 samples, 1.69%)</title><rect x="60.2300%" y="293" width="1.6876%" height="15" fill="rgb(232,40,11)"/><text x="60.4800%" y="303.50"></text></g><g><title>error_entry (6 samples, 0.03%)</title><rect x="61.8877%" y="277" width="0.0299%" height="15" fill="rgb(205,86,26)"/><text x="62.1377%" y="287.50"></text></g><g><title>sync_regs (3 samples, 0.01%)</title><rect x="61.9026%" y="261" width="0.0149%" height="15" fill="rgb(231,126,28)"/><text x="62.1526%" y="271.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.04%)</title><rect x="62.0072%" y="293" width="0.0398%" height="15" fill="rgb(219,221,18)"/><text x="62.2572%" y="303.50"></text></g><g><title>tokio::runtime::task::raw::try_read_output (5 samples, 0.02%)</title><rect x="62.0221%" y="277" width="0.0249%" height="15" fill="rgb(211,40,0)"/><text x="62.2721%" y="287.50"></text></g><g><title>__memmove_avx_unaligned_erms (31 samples, 0.15%)</title><rect x="62.0470%" y="293" width="0.1543%" height="15" fill="rgb(239,85,43)"/><text x="62.2970%" y="303.50"></text></g><g><title>core::ptr::drop_in_place (10 samples, 0.05%)</title><rect x="62.2113%" y="277" width="0.0498%" height="15" fill="rgb(231,55,21)"/><text x="62.4613%" y="287.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="62.2362%" y="261" width="0.0249%" height="15" fill="rgb(225,184,43)"/><text x="62.4862%" y="271.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.02%)</title><rect x="62.2362%" y="245" width="0.0249%" height="15" fill="rgb(251,158,41)"/><text x="62.4862%" y="255.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.02%)</title><rect x="62.2362%" y="229" width="0.0249%" height="15" fill="rgb(234,159,37)"/><text x="62.4862%" y="239.50"></text></g><g><title>schedule (5 samples, 0.02%)</title><rect x="62.2362%" y="213" width="0.0249%" height="15" fill="rgb(216,204,22)"/><text x="62.4862%" y="223.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="62.2362%" y="197" width="0.0249%" height="15" fill="rgb(214,17,3)"/><text x="62.4862%" y="207.50"></text></g><g><title>finish_task_switch (5 samples, 0.02%)</title><rect x="62.2362%" y="181" width="0.0249%" height="15" fill="rgb(212,111,17)"/><text x="62.4862%" y="191.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="62.2362%" y="165" width="0.0249%" height="15" fill="rgb(221,157,24)"/><text x="62.4862%" y="175.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.02%)</title><rect x="62.2362%" y="149" width="0.0249%" height="15" fill="rgb(252,16,13)"/><text x="62.4862%" y="159.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="62.2362%" y="133" width="0.0249%" height="15" fill="rgb(221,62,2)"/><text x="62.4862%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.02%)</title><rect x="62.2611%" y="277" width="0.0249%" height="15" fill="rgb(247,87,22)"/><text x="62.5111%" y="287.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (12 samples, 0.06%)</title><rect x="62.2909%" y="261" width="0.0597%" height="15" fill="rgb(215,73,9)"/><text x="62.5409%" y="271.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (5 samples, 0.02%)</title><rect x="62.3258%" y="245" width="0.0249%" height="15" fill="rgb(207,175,33)"/><text x="62.5758%" y="255.50"></text></g><g><title>std::time::Instant::now (4 samples, 0.02%)</title><rect x="62.3805%" y="245" width="0.0199%" height="15" fill="rgb(243,129,54)"/><text x="62.6305%" y="255.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (4 samples, 0.02%)</title><rect x="62.3805%" y="229" width="0.0199%" height="15" fill="rgb(227,119,45)"/><text x="62.6305%" y="239.50"></text></g><g><title>std::sys::unix::time::inner::now (4 samples, 0.02%)</title><rect x="62.3805%" y="213" width="0.0199%" height="15" fill="rgb(205,109,36)"/><text x="62.6305%" y="223.50"></text></g><g><title>__GI___clock_gettime (4 samples, 0.02%)</title><rect x="62.3805%" y="197" width="0.0199%" height="15" fill="rgb(205,6,39)"/><text x="62.6305%" y="207.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.01%)</title><rect x="62.3855%" y="181" width="0.0149%" height="15" fill="rgb(221,32,16)"/><text x="62.6355%" y="191.50"></text></g><g><title>[[vdso]] (3 samples, 0.01%)</title><rect x="62.3855%" y="165" width="0.0149%" height="15" fill="rgb(228,144,50)"/><text x="62.6355%" y="175.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.01%)</title><rect x="62.4104%" y="229" width="0.0149%" height="15" fill="rgb(229,201,53)"/><text x="62.6604%" y="239.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.02%)</title><rect x="62.4751%" y="149" width="0.0199%" height="15" fill="rgb(249,153,27)"/><text x="62.7251%" y="159.50"></text></g><g><title>mark_wake_futex (9 samples, 0.04%)</title><rect x="62.5149%" y="149" width="0.0448%" height="15" fill="rgb(227,106,25)"/><text x="62.7649%" y="159.50"></text></g><g><title>__unqueue_futex (6 samples, 0.03%)</title><rect x="62.5299%" y="133" width="0.0299%" height="15" fill="rgb(230,65,29)"/><text x="62.7799%" y="143.50"></text></g><g><title>plist_del (3 samples, 0.01%)</title><rect x="62.5448%" y="117" width="0.0149%" height="15" fill="rgb(221,57,46)"/><text x="62.7948%" y="127.50"></text></g><g><title>select_task_rq_fair (9 samples, 0.04%)</title><rect x="62.5896%" y="117" width="0.0448%" height="15" fill="rgb(229,161,17)"/><text x="62.8396%" y="127.50"></text></g><g><title>enqueue_task_fair (39 samples, 0.19%)</title><rect x="62.6493%" y="101" width="0.1941%" height="15" fill="rgb(222,213,11)"/><text x="62.8993%" y="111.50"></text></g><g><title>enqueue_entity (27 samples, 0.13%)</title><rect x="62.7091%" y="85" width="0.1344%" height="15" fill="rgb(235,35,13)"/><text x="62.9591%" y="95.50"></text></g><g><title>update_load_avg (9 samples, 0.04%)</title><rect x="62.7987%" y="69" width="0.0448%" height="15" fill="rgb(233,158,34)"/><text x="63.0487%" y="79.50"></text></g><g><title>ttwu_do_activate (97 samples, 0.48%)</title><rect x="62.6344%" y="117" width="0.4829%" height="15" fill="rgb(215,151,48)"/><text x="62.8844%" y="127.50"></text></g><g><title>psi_task_change (54 samples, 0.27%)</title><rect x="62.8485%" y="101" width="0.2688%" height="15" fill="rgb(229,84,14)"/><text x="63.0985%" y="111.50"></text></g><g><title>psi_group_change (44 samples, 0.22%)</title><rect x="62.8982%" y="85" width="0.2190%" height="15" fill="rgb(229,68,14)"/><text x="63.1482%" y="95.50"></text></g><g><title>record_times (5 samples, 0.02%)</title><rect x="63.0924%" y="69" width="0.0249%" height="15" fill="rgb(243,106,26)"/><text x="63.3424%" y="79.50"></text></g><g><title>sched_clock_cpu (4 samples, 0.02%)</title><rect x="63.0974%" y="53" width="0.0199%" height="15" fill="rgb(206,45,38)"/><text x="63.3474%" y="63.50"></text></g><g><title>sched_clock (3 samples, 0.01%)</title><rect x="63.1023%" y="37" width="0.0149%" height="15" fill="rgb(226,6,15)"/><text x="63.3523%" y="47.50"></text></g><g><title>ttwu_do_wakeup (6 samples, 0.03%)</title><rect x="63.1173%" y="117" width="0.0299%" height="15" fill="rgb(232,22,54)"/><text x="63.3673%" y="127.50"></text></g><g><title>check_preempt_curr (4 samples, 0.02%)</title><rect x="63.1272%" y="101" width="0.0199%" height="15" fill="rgb(229,222,32)"/><text x="63.3772%" y="111.50"></text></g><g><title>resched_curr (4 samples, 0.02%)</title><rect x="63.1272%" y="85" width="0.0199%" height="15" fill="rgb(228,62,29)"/><text x="63.3772%" y="95.50"></text></g><g><title>do_syscall_64 (149 samples, 0.74%)</title><rect x="62.4253%" y="213" width="0.7417%" height="15" fill="rgb(251,103,34)"/><text x="62.6753%" y="223.50"></text></g><g><title>__x64_sys_futex (149 samples, 0.74%)</title><rect x="62.4253%" y="197" width="0.7417%" height="15" fill="rgb(233,12,30)"/><text x="62.6753%" y="207.50"></text></g><g><title>do_futex (146 samples, 0.73%)</title><rect x="62.4403%" y="181" width="0.7268%" height="15" fill="rgb(238,52,0)"/><text x="62.6903%" y="191.50"></text></g><g><title>futex_wake (145 samples, 0.72%)</title><rect x="62.4452%" y="165" width="0.7218%" height="15" fill="rgb(223,98,5)"/><text x="62.6952%" y="175.50"></text></g><g><title>wake_up_q (122 samples, 0.61%)</title><rect x="62.5597%" y="149" width="0.6073%" height="15" fill="rgb(228,75,37)"/><text x="62.8097%" y="159.50"></text></g><g><title>try_to_wake_up (119 samples, 0.59%)</title><rect x="62.5747%" y="133" width="0.5924%" height="15" fill="rgb(205,115,49)"/><text x="62.8247%" y="143.50"></text></g><g><title>update_rq_clock (3 samples, 0.01%)</title><rect x="63.1521%" y="117" width="0.0149%" height="15" fill="rgb(250,154,43)"/><text x="63.4021%" y="127.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (179 samples, 0.89%)</title><rect x="62.4253%" y="229" width="0.8911%" height="15" fill="rgb(226,43,29)"/><text x="62.6753%" y="239.50"></text></g><g><title>syscall_exit_to_user_mode (30 samples, 0.15%)</title><rect x="63.1671%" y="213" width="0.1493%" height="15" fill="rgb(249,228,39)"/><text x="63.4171%" y="223.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_write::AsyncWrite&gt;::poll_write (292 samples, 1.45%)</title><rect x="61.9225%" y="309" width="1.4536%" height="15" fill="rgb(216,79,43)"/><text x="62.1725%" y="319.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (236 samples, 1.17%)</title><rect x="62.2013%" y="293" width="1.1748%" height="15" fill="rgb(228,95,12)"/><text x="62.4513%" y="303.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn (219 samples, 1.09%)</title><rect x="62.2859%" y="277" width="1.0902%" height="15" fill="rgb(249,221,15)"/><text x="62.5359%" y="287.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (206 samples, 1.03%)</title><rect x="62.3507%" y="261" width="1.0255%" height="15" fill="rgb(233,34,13)"/><text x="62.6007%" y="271.50"></text></g><g><title>syscall (196 samples, 0.98%)</title><rect x="62.4004%" y="245" width="0.9757%" height="15" fill="rgb(214,103,39)"/><text x="62.6504%" y="255.50"></text></g><g><title>syscall_return_via_sysret (12 samples, 0.06%)</title><rect x="63.3164%" y="229" width="0.0597%" height="15" fill="rgb(251,126,39)"/><text x="63.5664%" y="239.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,668 samples, 8.30%)</title><rect x="55.0826%" y="357" width="8.3035%" height="15" fill="rgb(214,216,36)"/><text x="55.3326%" y="367.50">&lt;core::futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,651 samples, 8.22%)</title><rect x="55.1673%" y="341" width="8.2188%" height="15" fill="rgb(220,221,8)"/><text x="55.4173%" y="351.50">&lt;core::futu..</text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (295 samples, 1.47%)</title><rect x="61.9176%" y="325" width="1.4685%" height="15" fill="rgb(240,216,3)"/><text x="62.1676%" y="335.50"></text></g><g><title>_int_free (40 samples, 0.20%)</title><rect x="63.4010%" y="357" width="0.1991%" height="15" fill="rgb(232,218,17)"/><text x="63.6510%" y="367.50"></text></g><g><title>alloc_pages_vma (5 samples, 0.02%)</title><rect x="63.6400%" y="213" width="0.0249%" height="15" fill="rgb(229,163,45)"/><text x="63.8900%" y="223.50"></text></g><g><title>__alloc_pages_nodemask (5 samples, 0.02%)</title><rect x="63.6400%" y="197" width="0.0249%" height="15" fill="rgb(231,110,42)"/><text x="63.8900%" y="207.50"></text></g><g><title>get_page_from_freelist (4 samples, 0.02%)</title><rect x="63.6450%" y="181" width="0.0199%" height="15" fill="rgb(208,170,48)"/><text x="63.8950%" y="191.50"></text></g><g><title>exc_page_fault (10 samples, 0.05%)</title><rect x="63.6300%" y="261" width="0.0498%" height="15" fill="rgb(239,116,25)"/><text x="63.8800%" y="271.50"></text></g><g><title>do_user_addr_fault (10 samples, 0.05%)</title><rect x="63.6300%" y="245" width="0.0498%" height="15" fill="rgb(219,200,50)"/><text x="63.8800%" y="255.50"></text></g><g><title>handle_mm_fault (10 samples, 0.05%)</title><rect x="63.6300%" y="229" width="0.0498%" height="15" fill="rgb(245,200,0)"/><text x="63.8800%" y="239.50"></text></g><g><title>asm_exc_page_fault (18 samples, 0.09%)</title><rect x="63.6300%" y="277" width="0.0896%" height="15" fill="rgb(245,119,33)"/><text x="63.8800%" y="287.50"></text></g><g><title>irqentry_exit_to_user_mode (8 samples, 0.04%)</title><rect x="63.6798%" y="261" width="0.0398%" height="15" fill="rgb(231,125,12)"/><text x="63.9298%" y="271.50"></text></g><g><title>__memmove_avx_unaligned_erms (27 samples, 0.13%)</title><rect x="63.6051%" y="293" width="0.1344%" height="15" fill="rgb(216,96,41)"/><text x="63.8551%" y="303.50"></text></g><g><title>error_entry (4 samples, 0.02%)</title><rect x="63.7196%" y="277" width="0.0199%" height="15" fill="rgb(248,43,45)"/><text x="63.9696%" y="287.50"></text></g><g><title>sync_regs (4 samples, 0.02%)</title><rect x="63.7196%" y="261" width="0.0199%" height="15" fill="rgb(217,222,7)"/><text x="63.9696%" y="271.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="63.7395%" y="293" width="0.0199%" height="15" fill="rgb(233,28,6)"/><text x="63.9895%" y="303.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.02%)</title><rect x="63.7843%" y="261" width="0.0249%" height="15" fill="rgb(231,218,15)"/><text x="64.0343%" y="271.50"></text></g><g><title>exc_page_fault (5 samples, 0.02%)</title><rect x="63.7843%" y="245" width="0.0249%" height="15" fill="rgb(226,171,48)"/><text x="64.0343%" y="255.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.02%)</title><rect x="63.7843%" y="229" width="0.0249%" height="15" fill="rgb(235,201,9)"/><text x="64.0343%" y="239.50"></text></g><g><title>handle_mm_fault (5 samples, 0.02%)</title><rect x="63.7843%" y="213" width="0.0249%" height="15" fill="rgb(217,80,15)"/><text x="64.0343%" y="223.50"></text></g><g><title>perf_event_mmap (6 samples, 0.03%)</title><rect x="63.8292%" y="149" width="0.0299%" height="15" fill="rgb(219,152,8)"/><text x="64.0792%" y="159.50"></text></g><g><title>perf_iterate_sb (6 samples, 0.03%)</title><rect x="63.8292%" y="133" width="0.0299%" height="15" fill="rgb(243,107,38)"/><text x="64.0792%" y="143.50"></text></g><g><title>perf_iterate_ctx (3 samples, 0.01%)</title><rect x="63.8441%" y="117" width="0.0149%" height="15" fill="rgb(231,17,5)"/><text x="64.0941%" y="127.50"></text></g><g><title>perf_event_mmap_output (3 samples, 0.01%)</title><rect x="63.8441%" y="101" width="0.0149%" height="15" fill="rgb(209,25,54)"/><text x="64.0941%" y="111.50"></text></g><g><title>do_syscall_64 (10 samples, 0.05%)</title><rect x="63.8192%" y="213" width="0.0498%" height="15" fill="rgb(219,0,2)"/><text x="64.0692%" y="223.50"></text></g><g><title>__x64_sys_mprotect (10 samples, 0.05%)</title><rect x="63.8192%" y="197" width="0.0498%" height="15" fill="rgb(246,9,5)"/><text x="64.0692%" y="207.50"></text></g><g><title>do_mprotect_pkey (10 samples, 0.05%)</title><rect x="63.8192%" y="181" width="0.0498%" height="15" fill="rgb(226,159,4)"/><text x="64.0692%" y="191.50"></text></g><g><title>mprotect_fixup (10 samples, 0.05%)</title><rect x="63.8192%" y="165" width="0.0498%" height="15" fill="rgb(219,175,34)"/><text x="64.0692%" y="175.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.06%)</title><rect x="63.8192%" y="229" width="0.0647%" height="15" fill="rgb(236,10,46)"/><text x="64.0692%" y="239.50"></text></g><g><title>syscall_exit_to_user_mode (3 samples, 0.01%)</title><rect x="63.8690%" y="213" width="0.0149%" height="15" fill="rgb(240,211,16)"/><text x="64.1190%" y="223.50"></text></g><g><title>_int_malloc (26 samples, 0.13%)</title><rect x="63.7595%" y="293" width="0.1294%" height="15" fill="rgb(205,3,43)"/><text x="64.0095%" y="303.50"></text></g><g><title>sysmalloc (25 samples, 0.12%)</title><rect x="63.7644%" y="277" width="0.1245%" height="15" fill="rgb(245,7,22)"/><text x="64.0144%" y="287.50"></text></g><g><title>grow_heap (14 samples, 0.07%)</title><rect x="63.8192%" y="261" width="0.0697%" height="15" fill="rgb(239,132,32)"/><text x="64.0692%" y="271.50"></text></g><g><title>__GI___mprotect (14 samples, 0.07%)</title><rect x="63.8192%" y="245" width="0.0697%" height="15" fill="rgb(228,202,34)"/><text x="64.0692%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (59 samples, 0.29%)</title><rect x="63.6002%" y="357" width="0.2937%" height="15" fill="rgb(254,200,22)"/><text x="63.8502%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (59 samples, 0.29%)</title><rect x="63.6002%" y="341" width="0.2937%" height="15" fill="rgb(219,10,39)"/><text x="63.8502%" y="351.50"></text></g><g><title>__GI___libc_realloc (59 samples, 0.29%)</title><rect x="63.6002%" y="325" width="0.2937%" height="15" fill="rgb(226,210,39)"/><text x="63.8502%" y="335.50"></text></g><g><title>_int_realloc (58 samples, 0.29%)</title><rect x="63.6051%" y="309" width="0.2887%" height="15" fill="rgb(208,219,16)"/><text x="63.8551%" y="319.50"></text></g><g><title>__GI___libc_free (5 samples, 0.02%)</title><rect x="64.0631%" y="325" width="0.0249%" height="15" fill="rgb(216,158,51)"/><text x="64.3131%" y="335.50"></text></g><g><title>_int_free (28 samples, 0.14%)</title><rect x="64.0880%" y="325" width="0.1394%" height="15" fill="rgb(233,14,44)"/><text x="64.3380%" y="335.50"></text></g><g><title>malloc_consolidate (267 samples, 1.33%)</title><rect x="64.5261%" y="293" width="1.3292%" height="15" fill="rgb(237,97,39)"/><text x="64.7761%" y="303.50"></text></g><g><title>unlink_chunk (124 samples, 0.62%)</title><rect x="65.2380%" y="277" width="0.6173%" height="15" fill="rgb(218,198,43)"/><text x="65.4880%" y="287.50"></text></g><g><title>alloc::collections::btree::navigate::next_kv_unchecked_dealloc (359 samples, 1.79%)</title><rect x="64.2274%" y="325" width="1.7871%" height="15" fill="rgb(231,104,20)"/><text x="64.4774%" y="335.50">a..</text></g><g><title>_int_free (330 samples, 1.64%)</title><rect x="64.3718%" y="309" width="1.6428%" height="15" fill="rgb(254,36,13)"/><text x="64.6218%" y="319.50"></text></g><g><title>unlink_chunk (32 samples, 0.16%)</title><rect x="65.8552%" y="293" width="0.1593%" height="15" fill="rgb(248,14,50)"/><text x="66.1052%" y="303.50"></text></g><g><title>__GI___libc_free (19 samples, 0.09%)</title><rect x="66.1639%" y="309" width="0.0946%" height="15" fill="rgb(217,107,29)"/><text x="66.4139%" y="319.50"></text></g><g><title>_int_free (32 samples, 0.16%)</title><rect x="66.2634%" y="309" width="0.1593%" height="15" fill="rgb(251,169,33)"/><text x="66.5134%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (509 samples, 2.53%)</title><rect x="63.8939%" y="341" width="2.5339%" height="15" fill="rgb(217,108,32)"/><text x="64.1439%" y="351.50">&lt;a..</text></g><g><title>bytes::bytes::shared_drop (83 samples, 0.41%)</title><rect x="66.0145%" y="325" width="0.4132%" height="15" fill="rgb(219,66,42)"/><text x="66.2645%" y="335.50"></text></g><g><title>__GI_munmap (6 samples, 0.03%)</title><rect x="66.4277%" y="341" width="0.0299%" height="15" fill="rgb(206,180,7)"/><text x="66.6777%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="66.4277%" y="325" width="0.0299%" height="15" fill="rgb(208,226,31)"/><text x="66.6777%" y="335.50"></text></g><g><title>do_syscall_64 (6 samples, 0.03%)</title><rect x="66.4277%" y="309" width="0.0299%" height="15" fill="rgb(218,26,49)"/><text x="66.6777%" y="319.50"></text></g><g><title>__x64_sys_munmap (6 samples, 0.03%)</title><rect x="66.4277%" y="293" width="0.0299%" height="15" fill="rgb(233,197,48)"/><text x="66.6777%" y="303.50"></text></g><g><title>__vm_munmap (6 samples, 0.03%)</title><rect x="66.4277%" y="277" width="0.0299%" height="15" fill="rgb(252,181,51)"/><text x="66.6777%" y="287.50"></text></g><g><title>__do_munmap (6 samples, 0.03%)</title><rect x="66.4277%" y="261" width="0.0299%" height="15" fill="rgb(253,90,19)"/><text x="66.6777%" y="271.50"></text></g><g><title>unmap_region (6 samples, 0.03%)</title><rect x="66.4277%" y="245" width="0.0299%" height="15" fill="rgb(215,171,30)"/><text x="66.6777%" y="255.50"></text></g><g><title>unmap_vmas (4 samples, 0.02%)</title><rect x="66.4377%" y="229" width="0.0199%" height="15" fill="rgb(214,222,9)"/><text x="66.6877%" y="239.50"></text></g><g><title>unmap_page_range (4 samples, 0.02%)</title><rect x="66.4377%" y="213" width="0.0199%" height="15" fill="rgb(223,3,22)"/><text x="66.6877%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.04%)</title><rect x="66.4576%" y="325" width="0.0448%" height="15" fill="rgb(225,196,46)"/><text x="66.7076%" y="335.50"></text></g><g><title>page_remove_rmap (3 samples, 0.01%)</title><rect x="66.5223%" y="181" width="0.0149%" height="15" fill="rgb(209,110,37)"/><text x="66.7723%" y="191.50"></text></g><g><title>__free_one_page (3 samples, 0.01%)</title><rect x="66.5472%" y="117" width="0.0149%" height="15" fill="rgb(249,89,12)"/><text x="66.7972%" y="127.50"></text></g><g><title>__GI_munmap (13 samples, 0.06%)</title><rect x="66.5024%" y="325" width="0.0647%" height="15" fill="rgb(226,27,33)"/><text x="66.7524%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.06%)</title><rect x="66.5024%" y="309" width="0.0647%" height="15" fill="rgb(213,82,22)"/><text x="66.7524%" y="319.50"></text></g><g><title>do_syscall_64 (13 samples, 0.06%)</title><rect x="66.5024%" y="293" width="0.0647%" height="15" fill="rgb(248,140,0)"/><text x="66.7524%" y="303.50"></text></g><g><title>__x64_sys_munmap (13 samples, 0.06%)</title><rect x="66.5024%" y="277" width="0.0647%" height="15" fill="rgb(228,106,3)"/><text x="66.7524%" y="287.50"></text></g><g><title>__vm_munmap (13 samples, 0.06%)</title><rect x="66.5024%" y="261" width="0.0647%" height="15" fill="rgb(209,23,37)"/><text x="66.7524%" y="271.50"></text></g><g><title>__do_munmap (13 samples, 0.06%)</title><rect x="66.5024%" y="245" width="0.0647%" height="15" fill="rgb(241,93,50)"/><text x="66.7524%" y="255.50"></text></g><g><title>unmap_region (13 samples, 0.06%)</title><rect x="66.5024%" y="229" width="0.0647%" height="15" fill="rgb(253,46,43)"/><text x="66.7524%" y="239.50"></text></g><g><title>unmap_vmas (11 samples, 0.05%)</title><rect x="66.5123%" y="213" width="0.0548%" height="15" fill="rgb(226,206,43)"/><text x="66.7623%" y="223.50"></text></g><g><title>unmap_page_range (11 samples, 0.05%)</title><rect x="66.5123%" y="197" width="0.0548%" height="15" fill="rgb(217,54,7)"/><text x="66.7623%" y="207.50"></text></g><g><title>tlb_flush_mmu (6 samples, 0.03%)</title><rect x="66.5372%" y="181" width="0.0299%" height="15" fill="rgb(223,5,52)"/><text x="66.7872%" y="191.50"></text></g><g><title>release_pages (6 samples, 0.03%)</title><rect x="66.5372%" y="165" width="0.0299%" height="15" fill="rgb(206,52,46)"/><text x="66.7872%" y="175.50"></text></g><g><title>free_unref_page_list (4 samples, 0.02%)</title><rect x="66.5472%" y="149" width="0.0199%" height="15" fill="rgb(253,136,11)"/><text x="66.7972%" y="159.50"></text></g><g><title>free_pcppages_bulk (4 samples, 0.02%)</title><rect x="66.5472%" y="133" width="0.0199%" height="15" fill="rgb(208,106,33)"/><text x="66.7972%" y="143.50"></text></g><g><title>__GI___libc_free (93 samples, 0.46%)</title><rect x="66.6268%" y="293" width="0.4630%" height="15" fill="rgb(206,54,4)"/><text x="66.8768%" y="303.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.01%)</title><rect x="67.0898%" y="293" width="0.0149%" height="15" fill="rgb(213,3,15)"/><text x="67.3398%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.01%)</title><rect x="67.0898%" y="277" width="0.0149%" height="15" fill="rgb(252,211,39)"/><text x="67.3398%" y="287.50"></text></g><g><title>malloc_consolidate (37 samples, 0.18%)</title><rect x="67.6474%" y="277" width="0.1842%" height="15" fill="rgb(223,6,36)"/><text x="67.8974%" y="287.50"></text></g><g><title>unlink_chunk (8 samples, 0.04%)</title><rect x="67.7917%" y="261" width="0.0398%" height="15" fill="rgb(252,169,45)"/><text x="68.0417%" y="271.50"></text></g><g><title>_int_free (146 samples, 0.73%)</title><rect x="67.1097%" y="293" width="0.7268%" height="15" fill="rgb(212,48,26)"/><text x="67.3597%" y="303.50"></text></g><g><title>__GI___libc_free (135 samples, 0.67%)</title><rect x="68.2198%" y="277" width="0.6720%" height="15" fill="rgb(251,102,48)"/><text x="68.4698%" y="287.50"></text></g><g><title>malloc_consolidate (219 samples, 1.09%)</title><rect x="69.7581%" y="261" width="1.0902%" height="15" fill="rgb(243,208,16)"/><text x="70.0081%" y="271.50"></text></g><g><title>unlink_chunk (96 samples, 0.48%)</title><rect x="70.3704%" y="245" width="0.4779%" height="15" fill="rgb(219,96,24)"/><text x="70.6204%" y="255.50"></text></g><g><title>_int_free (517 samples, 2.57%)</title><rect x="68.8969%" y="277" width="2.5737%" height="15" fill="rgb(219,33,29)"/><text x="69.1469%" y="287.50">_i..</text></g><g><title>unlink_chunk (125 samples, 0.62%)</title><rect x="70.8483%" y="261" width="0.6223%" height="15" fill="rgb(223,176,5)"/><text x="71.0983%" y="271.50"></text></g><g><title>bytes::bytes::shared_drop (729 samples, 3.63%)</title><rect x="67.8465%" y="293" width="3.6290%" height="15" fill="rgb(228,140,14)"/><text x="68.0965%" y="303.50">byte..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,020 samples, 5.08%)</title><rect x="66.5671%" y="309" width="5.0777%" height="15" fill="rgb(217,179,31)"/><text x="66.8171%" y="319.50">&lt;hashb..</text></g><g><title>core::ptr::drop_in_place (34 samples, 0.17%)</title><rect x="71.4755%" y="293" width="0.1693%" height="15" fill="rgb(230,9,30)"/><text x="71.7255%" y="303.50"></text></g><g><title>page_remove_rmap (3 samples, 0.01%)</title><rect x="71.6846%" y="165" width="0.0149%" height="15" fill="rgb(230,136,20)"/><text x="71.9346%" y="175.50"></text></g><g><title>__list_del_entry_valid (4 samples, 0.02%)</title><rect x="71.7194%" y="133" width="0.0199%" height="15" fill="rgb(215,210,22)"/><text x="71.9694%" y="143.50"></text></g><g><title>free_unref_page_list (6 samples, 0.03%)</title><rect x="71.7493%" y="133" width="0.0299%" height="15" fill="rgb(218,43,5)"/><text x="71.9993%" y="143.50"></text></g><g><title>free_pcppages_bulk (5 samples, 0.02%)</title><rect x="71.7543%" y="117" width="0.0249%" height="15" fill="rgb(216,11,5)"/><text x="72.0043%" y="127.50"></text></g><g><title>__free_one_page (4 samples, 0.02%)</title><rect x="71.7593%" y="101" width="0.0199%" height="15" fill="rgb(209,82,29)"/><text x="72.0093%" y="111.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1,586 samples, 7.90%)</title><rect x="63.8939%" y="357" width="7.8953%" height="15" fill="rgb(244,115,12)"/><text x="64.1439%" y="367.50">alloc::sync..</text></g><g><title>core::ptr::drop_in_place (1,071 samples, 5.33%)</title><rect x="66.4576%" y="341" width="5.3315%" height="15" fill="rgb(222,82,18)"/><text x="66.7076%" y="351.50">core::p..</text></g><g><title>core::ptr::drop_in_place (1,049 samples, 5.22%)</title><rect x="66.5671%" y="325" width="5.2220%" height="15" fill="rgb(249,227,8)"/><text x="66.8171%" y="335.50">core::..</text></g><g><title>__GI_munmap (29 samples, 0.14%)</title><rect x="71.6448%" y="309" width="0.1444%" height="15" fill="rgb(253,141,45)"/><text x="71.8948%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (29 samples, 0.14%)</title><rect x="71.6448%" y="293" width="0.1444%" height="15" fill="rgb(234,184,4)"/><text x="71.8948%" y="303.50"></text></g><g><title>do_syscall_64 (29 samples, 0.14%)</title><rect x="71.6448%" y="277" width="0.1444%" height="15" fill="rgb(218,194,23)"/><text x="71.8948%" y="287.50"></text></g><g><title>__x64_sys_munmap (29 samples, 0.14%)</title><rect x="71.6448%" y="261" width="0.1444%" height="15" fill="rgb(235,66,41)"/><text x="71.8948%" y="271.50"></text></g><g><title>__vm_munmap (29 samples, 0.14%)</title><rect x="71.6448%" y="245" width="0.1444%" height="15" fill="rgb(245,217,1)"/><text x="71.8948%" y="255.50"></text></g><g><title>__do_munmap (29 samples, 0.14%)</title><rect x="71.6448%" y="229" width="0.1444%" height="15" fill="rgb(229,91,1)"/><text x="71.8948%" y="239.50"></text></g><g><title>unmap_region (29 samples, 0.14%)</title><rect x="71.6448%" y="213" width="0.1444%" height="15" fill="rgb(207,101,30)"/><text x="71.8948%" y="223.50"></text></g><g><title>unmap_vmas (29 samples, 0.14%)</title><rect x="71.6448%" y="197" width="0.1444%" height="15" fill="rgb(223,82,49)"/><text x="71.8948%" y="207.50"></text></g><g><title>unmap_page_range (29 samples, 0.14%)</title><rect x="71.6448%" y="181" width="0.1444%" height="15" fill="rgb(218,167,17)"/><text x="71.8948%" y="191.50"></text></g><g><title>tlb_flush_mmu (18 samples, 0.09%)</title><rect x="71.6995%" y="165" width="0.0896%" height="15" fill="rgb(208,103,14)"/><text x="71.9495%" y="175.50"></text></g><g><title>release_pages (17 samples, 0.08%)</title><rect x="71.7045%" y="149" width="0.0846%" height="15" fill="rgb(238,20,8)"/><text x="71.9545%" y="159.50"></text></g><g><title>alloc_pages_vma (8 samples, 0.04%)</title><rect x="71.8090%" y="293" width="0.0398%" height="15" fill="rgb(218,80,54)"/><text x="72.0590%" y="303.50"></text></g><g><title>__alloc_pages_nodemask (8 samples, 0.04%)</title><rect x="71.8090%" y="277" width="0.0398%" height="15" fill="rgb(240,144,17)"/><text x="72.0590%" y="287.50"></text></g><g><title>get_page_from_freelist (7 samples, 0.03%)</title><rect x="71.8140%" y="261" width="0.0348%" height="15" fill="rgb(245,27,50)"/><text x="72.0640%" y="271.50"></text></g><g><title>prep_new_page (5 samples, 0.02%)</title><rect x="71.8240%" y="245" width="0.0249%" height="15" fill="rgb(251,51,7)"/><text x="72.0740%" y="255.50"></text></g><g><title>kernel_init_free_pages (5 samples, 0.02%)</title><rect x="71.8240%" y="229" width="0.0249%" height="15" fill="rgb(245,217,29)"/><text x="72.0740%" y="239.50"></text></g><g><title>clear_page_erms (5 samples, 0.02%)</title><rect x="71.8240%" y="213" width="0.0249%" height="15" fill="rgb(221,176,29)"/><text x="72.0740%" y="223.50"></text></g><g><title>mem_cgroup_charge (3 samples, 0.01%)</title><rect x="71.8489%" y="293" width="0.0149%" height="15" fill="rgb(212,180,24)"/><text x="72.0989%" y="303.50"></text></g><g><title>exc_page_fault (16 samples, 0.08%)</title><rect x="71.7891%" y="341" width="0.0796%" height="15" fill="rgb(254,24,2)"/><text x="72.0391%" y="351.50"></text></g><g><title>do_user_addr_fault (16 samples, 0.08%)</title><rect x="71.7891%" y="325" width="0.0796%" height="15" fill="rgb(230,100,2)"/><text x="72.0391%" y="335.50"></text></g><g><title>handle_mm_fault (14 samples, 0.07%)</title><rect x="71.7991%" y="309" width="0.0697%" height="15" fill="rgb(219,142,25)"/><text x="72.0491%" y="319.50"></text></g><g><title>asm_exc_page_fault (21 samples, 0.10%)</title><rect x="71.7891%" y="357" width="0.1045%" height="15" fill="rgb(240,73,43)"/><text x="72.0391%" y="367.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.02%)</title><rect x="71.8688%" y="341" width="0.0249%" height="15" fill="rgb(214,114,15)"/><text x="72.1188%" y="351.50"></text></g><g><title>&lt;ate::anti_replay::AntiReplayPlugin as ate::validator::EventValidator&gt;::validate (116 samples, 0.58%)</title><rect x="71.9534%" y="341" width="0.5775%" height="15" fill="rgb(207,130,4)"/><text x="72.2034%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (8 samples, 0.04%)</title><rect x="72.6404%" y="293" width="0.0398%" height="15" fill="rgb(221,25,40)"/><text x="72.8904%" y="303.50"></text></g><g><title>std::time::SystemTime::duration_since (9 samples, 0.04%)</title><rect x="72.6404%" y="309" width="0.0448%" height="15" fill="rgb(241,184,7)"/><text x="72.8904%" y="319.50"></text></g><g><title>&lt;ate::time::TimestampEnforcer as ate::validator::EventValidator&gt;::validate (45 samples, 0.22%)</title><rect x="72.5309%" y="341" width="0.2240%" height="15" fill="rgb(235,159,4)"/><text x="72.7809%" y="351.50"></text></g><g><title>ate::time::TimestampEnforcer::current_timestamp (35 samples, 0.17%)</title><rect x="72.5806%" y="325" width="0.1742%" height="15" fill="rgb(214,87,48)"/><text x="72.8306%" y="335.50"></text></g><g><title>std::time::SystemTime::now (14 samples, 0.07%)</title><rect x="72.6852%" y="309" width="0.0697%" height="15" fill="rgb(246,198,24)"/><text x="72.9352%" y="319.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (14 samples, 0.07%)</title><rect x="72.6852%" y="293" width="0.0697%" height="15" fill="rgb(209,66,40)"/><text x="72.9352%" y="303.50"></text></g><g><title>std::sys::unix::time::inner::now (14 samples, 0.07%)</title><rect x="72.6852%" y="277" width="0.0697%" height="15" fill="rgb(233,147,39)"/><text x="72.9352%" y="287.50"></text></g><g><title>__GI___clock_gettime (14 samples, 0.07%)</title><rect x="72.6852%" y="261" width="0.0697%" height="15" fill="rgb(231,145,52)"/><text x="72.9352%" y="271.50"></text></g><g><title>__vdso_clock_gettime (13 samples, 0.06%)</title><rect x="72.6902%" y="245" width="0.0647%" height="15" fill="rgb(206,20,26)"/><text x="72.9402%" y="255.50"></text></g><g><title>[[vdso]] (11 samples, 0.05%)</title><rect x="72.7001%" y="229" width="0.0548%" height="15" fill="rgb(238,220,4)"/><text x="72.9501%" y="239.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (31 samples, 0.15%)</title><rect x="72.7798%" y="325" width="0.1543%" height="15" fill="rgb(252,195,42)"/><text x="73.0298%" y="335.50"></text></g><g><title>__memmove_avx_unaligned_erms (27 samples, 0.13%)</title><rect x="72.7997%" y="309" width="0.1344%" height="15" fill="rgb(209,10,6)"/><text x="73.0497%" y="319.50"></text></g><g><title>ate::accessor::ChainProtectedSync::validate_event (276 samples, 1.37%)</title><rect x="71.8986%" y="357" width="1.3740%" height="15" fill="rgb(229,3,52)"/><text x="72.1486%" y="367.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::validator::EventValidator&gt;::validate (104 samples, 0.52%)</title><rect x="72.7549%" y="341" width="0.5177%" height="15" fill="rgb(253,49,37)"/><text x="73.0049%" y="351.50"></text></g><g><title>ate::tree::TreeAuthorityPlugin::compute_auth (68 samples, 0.34%)</title><rect x="72.9341%" y="325" width="0.3385%" height="15" fill="rgb(240,103,49)"/><text x="73.1841%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (105 samples, 0.52%)</title><rect x="73.2925%" y="341" width="0.5227%" height="15" fill="rgb(250,182,30)"/><text x="73.5425%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (8 samples, 0.04%)</title><rect x="73.7754%" y="325" width="0.0398%" height="15" fill="rgb(248,8,30)"/><text x="74.0254%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4 samples, 0.02%)</title><rect x="74.3578%" y="325" width="0.0199%" height="15" fill="rgb(237,120,30)"/><text x="74.6078%" y="335.50"></text></g><g><title>__memset_avx2_erms (3 samples, 0.01%)</title><rect x="74.7710%" y="293" width="0.0149%" height="15" fill="rgb(221,146,34)"/><text x="75.0210%" y="303.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.01%)</title><rect x="74.7710%" y="277" width="0.0149%" height="15" fill="rgb(242,55,13)"/><text x="75.0210%" y="287.50"></text></g><g><title>alloc_pages_vma (9 samples, 0.04%)</title><rect x="74.7859%" y="229" width="0.0448%" height="15" fill="rgb(242,112,31)"/><text x="75.0359%" y="239.50"></text></g><g><title>__alloc_pages_nodemask (9 samples, 0.04%)</title><rect x="74.7859%" y="213" width="0.0448%" height="15" fill="rgb(249,192,27)"/><text x="75.0359%" y="223.50"></text></g><g><title>get_page_from_freelist (9 samples, 0.04%)</title><rect x="74.7859%" y="197" width="0.0448%" height="15" fill="rgb(208,204,44)"/><text x="75.0359%" y="207.50"></text></g><g><title>prep_new_page (4 samples, 0.02%)</title><rect x="74.8108%" y="181" width="0.0199%" height="15" fill="rgb(208,93,54)"/><text x="75.0608%" y="191.50"></text></g><g><title>kernel_init_free_pages (4 samples, 0.02%)</title><rect x="74.8108%" y="165" width="0.0199%" height="15" fill="rgb(242,1,31)"/><text x="75.0608%" y="175.50"></text></g><g><title>clear_page_erms (4 samples, 0.02%)</title><rect x="74.8108%" y="149" width="0.0199%" height="15" fill="rgb(241,83,25)"/><text x="75.0608%" y="159.50"></text></g><g><title>lru_cache_add (3 samples, 0.01%)</title><rect x="74.8307%" y="229" width="0.0149%" height="15" fill="rgb(205,169,50)"/><text x="75.0807%" y="239.50"></text></g><g><title>pagevec_lru_move_fn (3 samples, 0.01%)</title><rect x="74.8307%" y="213" width="0.0149%" height="15" fill="rgb(239,186,37)"/><text x="75.0807%" y="223.50"></text></g><g><title>exc_page_fault (14 samples, 0.07%)</title><rect x="74.7859%" y="277" width="0.0697%" height="15" fill="rgb(205,221,10)"/><text x="75.0359%" y="287.50"></text></g><g><title>do_user_addr_fault (14 samples, 0.07%)</title><rect x="74.7859%" y="261" width="0.0697%" height="15" fill="rgb(218,196,15)"/><text x="75.0359%" y="271.50"></text></g><g><title>handle_mm_fault (14 samples, 0.07%)</title><rect x="74.7859%" y="245" width="0.0697%" height="15" fill="rgb(218,196,35)"/><text x="75.0359%" y="255.50"></text></g><g><title>asm_exc_page_fault (19 samples, 0.09%)</title><rect x="74.7859%" y="293" width="0.0946%" height="15" fill="rgb(233,63,24)"/><text x="75.0359%" y="303.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.02%)</title><rect x="74.8556%" y="277" width="0.0249%" height="15" fill="rgb(225,8,4)"/><text x="75.1056%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (5 samples, 0.02%)</title><rect x="74.8805%" y="293" width="0.0249%" height="15" fill="rgb(234,105,35)"/><text x="75.1305%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (115 samples, 0.57%)</title><rect x="74.3777%" y="325" width="0.5725%" height="15" fill="rgb(236,21,32)"/><text x="74.6277%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (53 samples, 0.26%)</title><rect x="74.6864%" y="309" width="0.2638%" height="15" fill="rgb(228,109,6)"/><text x="74.9364%" y="319.50"></text></g><g><title>error_entry (9 samples, 0.04%)</title><rect x="74.9054%" y="293" width="0.0448%" height="15" fill="rgb(229,215,31)"/><text x="75.1554%" y="303.50"></text></g><g><title>sync_regs (4 samples, 0.02%)</title><rect x="74.9303%" y="277" width="0.0199%" height="15" fill="rgb(221,52,54)"/><text x="75.1803%" y="287.50"></text></g><g><title>ate::chain::ChainOfTrust::add_history (339 samples, 1.69%)</title><rect x="73.2726%" y="357" width="1.6876%" height="15" fill="rgb(252,129,43)"/><text x="73.5226%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (230 samples, 1.14%)</title><rect x="73.8152%" y="341" width="1.1450%" height="15" fill="rgb(248,183,27)"/><text x="74.0652%" y="351.50"></text></g><g><title>alloc_pages_vma (7 samples, 0.03%)</title><rect x="75.4331%" y="213" width="0.0348%" height="15" fill="rgb(250,0,22)"/><text x="75.6831%" y="223.50"></text></g><g><title>__alloc_pages_nodemask (7 samples, 0.03%)</title><rect x="75.4331%" y="197" width="0.0348%" height="15" fill="rgb(213,166,10)"/><text x="75.6831%" y="207.50"></text></g><g><title>get_page_from_freelist (6 samples, 0.03%)</title><rect x="75.4381%" y="181" width="0.0299%" height="15" fill="rgb(207,163,36)"/><text x="75.6881%" y="191.50"></text></g><g><title>prep_new_page (3 samples, 0.01%)</title><rect x="75.4530%" y="165" width="0.0149%" height="15" fill="rgb(208,122,22)"/><text x="75.7030%" y="175.50"></text></g><g><title>kernel_init_free_pages (3 samples, 0.01%)</title><rect x="75.4530%" y="149" width="0.0149%" height="15" fill="rgb(207,104,49)"/><text x="75.7030%" y="159.50"></text></g><g><title>clear_page_erms (3 samples, 0.01%)</title><rect x="75.4530%" y="133" width="0.0149%" height="15" fill="rgb(248,211,50)"/><text x="75.7030%" y="143.50"></text></g><g><title>exc_page_fault (12 samples, 0.06%)</title><rect x="75.4281%" y="261" width="0.0597%" height="15" fill="rgb(217,13,45)"/><text x="75.6781%" y="271.50"></text></g><g><title>do_user_addr_fault (12 samples, 0.06%)</title><rect x="75.4281%" y="245" width="0.0597%" height="15" fill="rgb(211,216,49)"/><text x="75.6781%" y="255.50"></text></g><g><title>handle_mm_fault (11 samples, 0.05%)</title><rect x="75.4331%" y="229" width="0.0548%" height="15" fill="rgb(221,58,53)"/><text x="75.6831%" y="239.50"></text></g><g><title>asm_exc_page_fault (15 samples, 0.07%)</title><rect x="75.4231%" y="277" width="0.0747%" height="15" fill="rgb(220,112,41)"/><text x="75.6731%" y="287.50"></text></g><g><title>do_syscall_64 (4 samples, 0.02%)</title><rect x="75.5127%" y="229" width="0.0199%" height="15" fill="rgb(236,38,28)"/><text x="75.7627%" y="239.50"></text></g><g><title>__x64_sys_mprotect (4 samples, 0.02%)</title><rect x="75.5127%" y="213" width="0.0199%" height="15" fill="rgb(227,195,22)"/><text x="75.7627%" y="223.50"></text></g><g><title>do_mprotect_pkey (4 samples, 0.02%)</title><rect x="75.5127%" y="197" width="0.0199%" height="15" fill="rgb(214,55,33)"/><text x="75.7627%" y="207.50"></text></g><g><title>mprotect_fixup (4 samples, 0.02%)</title><rect x="75.5127%" y="181" width="0.0199%" height="15" fill="rgb(248,80,13)"/><text x="75.7627%" y="191.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="75.5127%" y="245" width="0.0348%" height="15" fill="rgb(238,52,6)"/><text x="75.7627%" y="255.50"></text></g><g><title>syscall_exit_to_user_mode (3 samples, 0.01%)</title><rect x="75.5327%" y="229" width="0.0149%" height="15" fill="rgb(224,198,47)"/><text x="75.7827%" y="239.50"></text></g><g><title>__GI___libc_malloc (63 samples, 0.31%)</title><rect x="75.2439%" y="325" width="0.3136%" height="15" fill="rgb(233,171,20)"/><text x="75.4939%" y="335.50"></text></g><g><title>_int_malloc (51 samples, 0.25%)</title><rect x="75.3037%" y="309" width="0.2539%" height="15" fill="rgb(241,30,25)"/><text x="75.5537%" y="319.50"></text></g><g><title>sysmalloc (28 samples, 0.14%)</title><rect x="75.4182%" y="293" width="0.1394%" height="15" fill="rgb(207,171,38)"/><text x="75.6682%" y="303.50"></text></g><g><title>grow_heap (10 samples, 0.05%)</title><rect x="75.5078%" y="277" width="0.0498%" height="15" fill="rgb(234,70,1)"/><text x="75.7578%" y="287.50"></text></g><g><title>__GI___mprotect (10 samples, 0.05%)</title><rect x="75.5078%" y="261" width="0.0498%" height="15" fill="rgb(232,178,18)"/><text x="75.7578%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (112 samples, 0.56%)</title><rect x="75.0050%" y="341" width="0.5575%" height="15" fill="rgb(241,78,40)"/><text x="75.2550%" y="351.50"></text></g><g><title>sysmalloc (3 samples, 0.01%)</title><rect x="76.1450%" y="261" width="0.0149%" height="15" fill="rgb(222,35,25)"/><text x="76.3950%" y="271.50"></text></g><g><title>grow_heap (3 samples, 0.01%)</title><rect x="76.1450%" y="245" width="0.0149%" height="15" fill="rgb(207,92,16)"/><text x="76.3950%" y="255.50"></text></g><g><title>__GI___libc_malloc (97 samples, 0.48%)</title><rect x="75.7119%" y="293" width="0.4829%" height="15" fill="rgb(216,59,51)"/><text x="75.9619%" y="303.50"></text></g><g><title>_int_malloc (77 samples, 0.38%)</title><rect x="75.8114%" y="277" width="0.3833%" height="15" fill="rgb(213,80,28)"/><text x="76.0614%" y="287.50"></text></g><g><title>unlink_chunk (7 samples, 0.03%)</title><rect x="76.1599%" y="261" width="0.0348%" height="15" fill="rgb(220,93,7)"/><text x="76.4099%" y="271.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (46 samples, 0.23%)</title><rect x="76.2196%" y="277" width="0.2290%" height="15" fill="rgb(225,24,44)"/><text x="76.4696%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="76.4337%" y="261" width="0.0149%" height="15" fill="rgb(243,74,40)"/><text x="76.6837%" y="271.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::MetaAuthorization&gt;::serialize (7 samples, 0.03%)</title><rect x="76.4486%" y="277" width="0.0348%" height="15" fill="rgb(228,39,7)"/><text x="76.6986%" y="287.50"></text></g><g><title>ate::conf::SerializationFormat::serialize (173 samples, 0.86%)</title><rect x="75.6322%" y="325" width="0.8612%" height="15" fill="rgb(227,79,8)"/><text x="75.8822%" y="335.50"></text></g><g><title>bincode::serialize (161 samples, 0.80%)</title><rect x="75.6920%" y="309" width="0.8015%" height="15" fill="rgb(236,58,11)"/><text x="75.9420%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (58 samples, 0.29%)</title><rect x="76.2047%" y="293" width="0.2887%" height="15" fill="rgb(249,63,35)"/><text x="76.4547%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.04%)</title><rect x="76.6975%" y="293" width="0.0398%" height="15" fill="rgb(252,114,16)"/><text x="76.9475%" y="303.50"></text></g><g><title>ate::event::EventData::as_header (358 samples, 1.78%)</title><rect x="74.9602%" y="357" width="1.7822%" height="15" fill="rgb(254,151,24)"/><text x="75.2102%" y="367.50">a..</text></g><g><title>ate::event::EventData::as_header_raw (237 samples, 1.18%)</title><rect x="75.5625%" y="341" width="1.1798%" height="15" fill="rgb(253,54,39)"/><text x="75.8125%" y="351.50"></text></g><g><title>blake3::hash (50 samples, 0.25%)</title><rect x="76.4934%" y="325" width="0.2489%" height="15" fill="rgb(243,25,45)"/><text x="76.7434%" y="335.50"></text></g><g><title>blake3::ChunkState::update (24 samples, 0.12%)</title><rect x="76.6229%" y="309" width="0.1195%" height="15" fill="rgb(234,134,9)"/><text x="76.8729%" y="319.50"></text></g><g><title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="80.8841%" y="181" width="0.0199%" height="15" fill="rgb(227,166,31)"/><text x="81.1341%" y="191.50"></text></g><g><title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="80.8841%" y="165" width="0.0199%" height="15" fill="rgb(245,143,41)"/><text x="81.1341%" y="175.50"></text></g><g><title>asm_exc_page_fault (10 samples, 0.05%)</title><rect x="80.8742%" y="245" width="0.0498%" height="15" fill="rgb(238,181,32)"/><text x="81.1242%" y="255.50"></text></g><g><title>exc_page_fault (10 samples, 0.05%)</title><rect x="80.8742%" y="229" width="0.0498%" height="15" fill="rgb(224,113,18)"/><text x="81.1242%" y="239.50"></text></g><g><title>do_user_addr_fault (10 samples, 0.05%)</title><rect x="80.8742%" y="213" width="0.0498%" height="15" fill="rgb(240,229,28)"/><text x="81.1242%" y="223.50"></text></g><g><title>handle_mm_fault (10 samples, 0.05%)</title><rect x="80.8742%" y="197" width="0.0498%" height="15" fill="rgb(250,185,3)"/><text x="81.1242%" y="207.50"></text></g><g><title>do_syscall_64 (3 samples, 0.01%)</title><rect x="80.9239%" y="197" width="0.0149%" height="15" fill="rgb(212,59,25)"/><text x="81.1739%" y="207.50"></text></g><g><title>__x64_sys_mprotect (3 samples, 0.01%)</title><rect x="80.9239%" y="181" width="0.0149%" height="15" fill="rgb(221,87,20)"/><text x="81.1739%" y="191.50"></text></g><g><title>do_mprotect_pkey (3 samples, 0.01%)</title><rect x="80.9239%" y="165" width="0.0149%" height="15" fill="rgb(213,74,28)"/><text x="81.1739%" y="175.50"></text></g><g><title>sysmalloc (16 samples, 0.08%)</title><rect x="80.8692%" y="261" width="0.0796%" height="15" fill="rgb(224,132,34)"/><text x="81.1192%" y="271.50"></text></g><g><title>grow_heap (5 samples, 0.02%)</title><rect x="80.9239%" y="245" width="0.0249%" height="15" fill="rgb(222,101,24)"/><text x="81.1739%" y="255.50"></text></g><g><title>__GI___mprotect (5 samples, 0.02%)</title><rect x="80.9239%" y="229" width="0.0249%" height="15" fill="rgb(254,142,4)"/><text x="81.1739%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="80.9239%" y="213" width="0.0249%" height="15" fill="rgb(230,229,49)"/><text x="81.1739%" y="223.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.11%)</title><rect x="80.8443%" y="293" width="0.1095%" height="15" fill="rgb(238,70,47)"/><text x="81.0943%" y="303.50"></text></g><g><title>_int_malloc (20 samples, 0.10%)</title><rect x="80.8542%" y="277" width="0.0996%" height="15" fill="rgb(231,160,17)"/><text x="81.1042%" y="287.50"></text></g><g><title>__memmove_avx_unaligned_erms (64 samples, 0.32%)</title><rect x="80.9538%" y="293" width="0.3186%" height="15" fill="rgb(218,68,53)"/><text x="81.2038%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (143 samples, 0.71%)</title><rect x="80.5705%" y="325" width="0.7119%" height="15" fill="rgb(236,111,10)"/><text x="80.8205%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (138 samples, 0.69%)</title><rect x="80.5954%" y="309" width="0.6870%" height="15" fill="rgb(224,34,41)"/><text x="80.8454%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (840 samples, 4.18%)</title><rect x="77.1107%" y="341" width="4.1816%" height="15" fill="rgb(241,118,19)"/><text x="77.3607%" y="351.50">alloc..</text></g><g><title>ate::index::BinaryTreeIndexer::feed (915 samples, 4.55%)</title><rect x="76.7423%" y="357" width="4.5550%" height="15" fill="rgb(238,129,25)"/><text x="76.9923%" y="367.50">ate::..</text></g><g><title>asm_exc_page_fault (3 samples, 0.01%)</title><rect x="81.5014%" y="293" width="0.0149%" height="15" fill="rgb(238,22,31)"/><text x="81.7514%" y="303.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.01%)</title><rect x="81.5362%" y="277" width="0.0149%" height="15" fill="rgb(222,174,48)"/><text x="81.7862%" y="287.50"></text></g><g><title>mprotect_fixup (5 samples, 0.02%)</title><rect x="81.5512%" y="181" width="0.0249%" height="15" fill="rgb(206,152,40)"/><text x="81.8012%" y="191.50"></text></g><g><title>perf_event_mmap (5 samples, 0.02%)</title><rect x="81.5512%" y="165" width="0.0249%" height="15" fill="rgb(218,99,54)"/><text x="81.8012%" y="175.50"></text></g><g><title>perf_iterate_sb (5 samples, 0.02%)</title><rect x="81.5512%" y="149" width="0.0249%" height="15" fill="rgb(220,174,26)"/><text x="81.8012%" y="159.50"></text></g><g><title>perf_iterate_ctx (4 samples, 0.02%)</title><rect x="81.5562%" y="133" width="0.0199%" height="15" fill="rgb(245,116,9)"/><text x="81.8062%" y="143.50"></text></g><g><title>perf_event_mmap_output (4 samples, 0.02%)</title><rect x="81.5562%" y="117" width="0.0199%" height="15" fill="rgb(209,72,35)"/><text x="81.8062%" y="127.50"></text></g><g><title>do_syscall_64 (6 samples, 0.03%)</title><rect x="81.5512%" y="229" width="0.0299%" height="15" fill="rgb(226,126,21)"/><text x="81.8012%" y="239.50"></text></g><g><title>__x64_sys_mprotect (6 samples, 0.03%)</title><rect x="81.5512%" y="213" width="0.0299%" height="15" fill="rgb(227,192,1)"/><text x="81.8012%" y="223.50"></text></g><g><title>do_mprotect_pkey (6 samples, 0.03%)</title><rect x="81.5512%" y="197" width="0.0299%" height="15" fill="rgb(237,180,29)"/><text x="81.8012%" y="207.50"></text></g><g><title>sysmalloc (13 samples, 0.06%)</title><rect x="81.5213%" y="293" width="0.0647%" height="15" fill="rgb(230,197,35)"/><text x="81.7713%" y="303.50"></text></g><g><title>grow_heap (7 samples, 0.03%)</title><rect x="81.5512%" y="277" width="0.0348%" height="15" fill="rgb(246,193,31)"/><text x="81.8012%" y="287.50"></text></g><g><title>__GI___mprotect (7 samples, 0.03%)</title><rect x="81.5512%" y="261" width="0.0348%" height="15" fill="rgb(241,36,4)"/><text x="81.8012%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="81.5512%" y="245" width="0.0348%" height="15" fill="rgb(241,130,17)"/><text x="81.8012%" y="255.50"></text></g><g><title>_int_malloc (33 samples, 0.16%)</title><rect x="81.4267%" y="309" width="0.1643%" height="15" fill="rgb(206,137,32)"/><text x="81.6767%" y="319.50"></text></g><g><title>__GI___libc_malloc (52 samples, 0.26%)</title><rect x="81.3371%" y="325" width="0.2589%" height="15" fill="rgb(237,228,51)"/><text x="81.5871%" y="335.50"></text></g><g><title>bytes::bytes::promotable_even_clone (61 samples, 0.30%)</title><rect x="81.2973%" y="357" width="0.3037%" height="15" fill="rgb(243,6,42)"/><text x="81.5473%" y="367.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (61 samples, 0.30%)</title><rect x="81.2973%" y="341" width="0.3037%" height="15" fill="rgb(251,74,28)"/><text x="81.5473%" y="351.50"></text></g><g><title>bytes::bytes::shared_drop (13 samples, 0.06%)</title><rect x="81.6010%" y="357" width="0.0647%" height="15" fill="rgb(218,20,49)"/><text x="81.8510%" y="367.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="81.7254%" y="341" width="0.0199%" height="15" fill="rgb(238,28,14)"/><text x="81.9754%" y="351.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.01%)</title><rect x="82.2332%" y="309" width="0.0149%" height="15" fill="rgb(229,40,46)"/><text x="82.4832%" y="319.50"></text></g><g><title>finish_task_switch (6 samples, 0.03%)</title><rect x="82.2929%" y="181" width="0.0299%" height="15" fill="rgb(244,195,20)"/><text x="82.5429%" y="191.50"></text></g><g><title>__perf_event_task_sched_in (6 samples, 0.03%)</title><rect x="82.2929%" y="165" width="0.0299%" height="15" fill="rgb(253,56,35)"/><text x="82.5429%" y="175.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (6 samples, 0.03%)</title><rect x="82.2929%" y="149" width="0.0299%" height="15" fill="rgb(210,149,44)"/><text x="82.5429%" y="159.50"></text></g><g><title>native_write_msr (6 samples, 0.03%)</title><rect x="82.2929%" y="133" width="0.0299%" height="15" fill="rgb(240,135,12)"/><text x="82.5429%" y="143.50"></text></g><g><title>futex_wait_queue_me (9 samples, 0.04%)</title><rect x="82.2830%" y="229" width="0.0448%" height="15" fill="rgb(251,24,50)"/><text x="82.5330%" y="239.50"></text></g><g><title>schedule (9 samples, 0.04%)</title><rect x="82.2830%" y="213" width="0.0448%" height="15" fill="rgb(243,200,47)"/><text x="82.5330%" y="223.50"></text></g><g><title>__schedule (9 samples, 0.04%)</title><rect x="82.2830%" y="197" width="0.0448%" height="15" fill="rgb(224,166,26)"/><text x="82.5330%" y="207.50"></text></g><g><title>__get_user_nocheck_4 (4 samples, 0.02%)</title><rect x="82.3626%" y="213" width="0.0199%" height="15" fill="rgb(233,0,47)"/><text x="82.6126%" y="223.50"></text></g><g><title>do_syscall_64 (30 samples, 0.15%)</title><rect x="82.2531%" y="293" width="0.1493%" height="15" fill="rgb(253,80,5)"/><text x="82.5031%" y="303.50"></text></g><g><title>__x64_sys_futex (29 samples, 0.14%)</title><rect x="82.2581%" y="277" width="0.1444%" height="15" fill="rgb(214,133,25)"/><text x="82.5081%" y="287.50"></text></g><g><title>do_futex (27 samples, 0.13%)</title><rect x="82.2680%" y="261" width="0.1344%" height="15" fill="rgb(209,27,14)"/><text x="82.5180%" y="271.50"></text></g><g><title>futex_wait (27 samples, 0.13%)</title><rect x="82.2680%" y="245" width="0.1344%" height="15" fill="rgb(219,102,51)"/><text x="82.5180%" y="255.50"></text></g><g><title>futex_wait_setup (15 samples, 0.07%)</title><rect x="82.3278%" y="229" width="0.0747%" height="15" fill="rgb(237,18,16)"/><text x="82.5778%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (53 samples, 0.26%)</title><rect x="82.2481%" y="309" width="0.2638%" height="15" fill="rgb(241,85,17)"/><text x="82.4981%" y="319.50"></text></g><g><title>syscall_exit_to_user_mode (22 samples, 0.11%)</title><rect x="82.4024%" y="293" width="0.1095%" height="15" fill="rgb(236,90,42)"/><text x="82.6524%" y="303.50"></text></g><g><title>__lll_lock_wait_private (79 samples, 0.39%)</title><rect x="82.1635%" y="325" width="0.3933%" height="15" fill="rgb(249,57,21)"/><text x="82.4135%" y="335.50"></text></g><g><title>syscall_return_via_sysret (9 samples, 0.04%)</title><rect x="82.5119%" y="309" width="0.0448%" height="15" fill="rgb(243,12,36)"/><text x="82.7619%" y="319.50"></text></g><g><title>entry_SYSCALL_64 (18 samples, 0.09%)</title><rect x="82.5568%" y="325" width="0.0896%" height="15" fill="rgb(253,128,47)"/><text x="82.8068%" y="335.50"></text></g><g><title>_raw_spin_lock (10 samples, 0.05%)</title><rect x="82.7160%" y="245" width="0.0498%" height="15" fill="rgb(207,33,20)"/><text x="82.9660%" y="255.50"></text></g><g><title>native_queued_spin_lock_slowpath (3 samples, 0.01%)</title><rect x="82.7509%" y="229" width="0.0149%" height="15" fill="rgb(233,215,35)"/><text x="83.0009%" y="239.50"></text></g><g><title>hash_futex (5 samples, 0.02%)</title><rect x="82.7658%" y="245" width="0.0249%" height="15" fill="rgb(249,188,52)"/><text x="83.0158%" y="255.50"></text></g><g><title>__x64_sys_futex (32 samples, 0.16%)</title><rect x="82.6464%" y="293" width="0.1593%" height="15" fill="rgb(225,12,32)"/><text x="82.8964%" y="303.50"></text></g><g><title>do_futex (29 samples, 0.14%)</title><rect x="82.6613%" y="277" width="0.1444%" height="15" fill="rgb(247,98,14)"/><text x="82.9113%" y="287.50"></text></g><g><title>futex_wake (29 samples, 0.14%)</title><rect x="82.6613%" y="261" width="0.1444%" height="15" fill="rgb(247,219,48)"/><text x="82.9113%" y="271.50"></text></g><g><title>wake_up_q (3 samples, 0.01%)</title><rect x="82.7907%" y="245" width="0.0149%" height="15" fill="rgb(253,60,48)"/><text x="83.0407%" y="255.50"></text></g><g><title>do_syscall_64 (33 samples, 0.16%)</title><rect x="82.6464%" y="309" width="0.1643%" height="15" fill="rgb(245,15,52)"/><text x="82.8964%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (81 samples, 0.40%)</title><rect x="82.6464%" y="325" width="0.4032%" height="15" fill="rgb(220,133,28)"/><text x="82.8964%" y="335.50"></text></g><g><title>syscall_exit_to_user_mode (48 samples, 0.24%)</title><rect x="82.8106%" y="309" width="0.2389%" height="15" fill="rgb(217,180,4)"/><text x="83.0606%" y="319.50"></text></g><g><title>syscall_return_via_sysret (18 samples, 0.09%)</title><rect x="83.0546%" y="325" width="0.0896%" height="15" fill="rgb(251,24,1)"/><text x="83.3046%" y="335.50"></text></g><g><title>_int_free (281 samples, 1.40%)</title><rect x="81.7503%" y="341" width="1.3988%" height="15" fill="rgb(212,185,49)"/><text x="82.0003%" y="351.50"></text></g><g><title>bytes::bytes::promotable_even_drop (23 samples, 0.11%)</title><rect x="83.1491%" y="341" width="0.1145%" height="15" fill="rgb(215,175,22)"/><text x="83.3991%" y="351.50"></text></g><g><title>core::ptr::drop_in_place (373 samples, 1.86%)</title><rect x="81.6657%" y="357" width="1.8568%" height="15" fill="rgb(250,205,14)"/><text x="81.9157%" y="367.50">c..</text></g><g><title>core::ptr::drop_in_place (52 samples, 0.26%)</title><rect x="83.2636%" y="341" width="0.2589%" height="15" fill="rgb(225,211,22)"/><text x="83.5136%" y="351.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,104 samples, 30.39%)</title><rect x="53.1611%" y="373" width="30.3863%" height="15" fill="rgb(251,179,42)"/><text x="53.4111%" y="383.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as co..</text></g><g><title>std::panicking::try (6,328 samples, 31.50%)</title><rect x="52.0609%" y="517" width="31.5014%" height="15" fill="rgb(208,216,51)"/><text x="52.3109%" y="527.50">std::panicking::try</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6,328 samples, 31.50%)</title><rect x="52.0609%" y="501" width="31.5014%" height="15" fill="rgb(235,36,11)"/><text x="52.3109%" y="511.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_..</text></g><g><title>tokio::runtime::thread_pool::worker::run (6,328 samples, 31.50%)</title><rect x="52.0609%" y="485" width="31.5014%" height="15" fill="rgb(213,189,28)"/><text x="52.3109%" y="495.50">tokio::runtime::thread_pool::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (6,328 samples, 31.50%)</title><rect x="52.0609%" y="469" width="31.5014%" height="15" fill="rgb(227,203,42)"/><text x="52.3109%" y="479.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (6,328 samples, 31.50%)</title><rect x="52.0609%" y="453" width="31.5014%" height="15" fill="rgb(244,72,36)"/><text x="52.3109%" y="463.50">tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (6,134 samples, 30.54%)</title><rect x="53.0267%" y="437" width="30.5356%" height="15" fill="rgb(213,53,17)"/><text x="53.2767%" y="447.50">tokio::runtime::thread_pool::worker::Context::run..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,110 samples, 30.42%)</title><rect x="53.1462%" y="421" width="30.4162%" height="15" fill="rgb(207,167,3)"/><text x="53.3962%" y="431.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6,109 samples, 30.41%)</title><rect x="53.1511%" y="405" width="30.4112%" height="15" fill="rgb(216,98,30)"/><text x="53.4011%" y="415.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::poll_future (6,108 samples, 30.41%)</title><rect x="53.1561%" y="389" width="30.4062%" height="15" fill="rgb(236,123,15)"/><text x="53.4061%" y="399.50">tokio::runtime::task::harness::poll_future</text></g><g><title>__pthread_enable_asynccancel (4 samples, 0.02%)</title><rect x="83.6420%" y="389" width="0.0199%" height="15" fill="rgb(248,81,50)"/><text x="83.8920%" y="399.50"></text></g><g><title>crc32c_pcl_intel_update (47 samples, 0.23%)</title><rect x="83.6669%" y="389" width="0.2340%" height="15" fill="rgb(214,120,4)"/><text x="83.9169%" y="399.50"></text></g><g><title>__x64_sys_write (4 samples, 0.02%)</title><rect x="83.9058%" y="357" width="0.0199%" height="15" fill="rgb(208,179,34)"/><text x="84.1558%" y="367.50"></text></g><g><title>__fdget_pos (14 samples, 0.07%)</title><rect x="83.9407%" y="341" width="0.0697%" height="15" fill="rgb(227,140,7)"/><text x="84.1907%" y="351.50"></text></g><g><title>__fget_light (12 samples, 0.06%)</title><rect x="83.9506%" y="325" width="0.0597%" height="15" fill="rgb(214,22,6)"/><text x="84.2006%" y="335.50"></text></g><g><title>__fget_files (9 samples, 0.04%)</title><rect x="83.9656%" y="309" width="0.0448%" height="15" fill="rgb(207,137,27)"/><text x="84.2156%" y="319.50"></text></g><g><title>down_write (3 samples, 0.01%)</title><rect x="84.1149%" y="293" width="0.0149%" height="15" fill="rgb(210,8,46)"/><text x="84.3649%" y="303.50"></text></g><g><title>ext4_generic_write_checks (6 samples, 0.03%)</title><rect x="84.1398%" y="293" width="0.0299%" height="15" fill="rgb(240,16,54)"/><text x="84.3898%" y="303.50"></text></g><g><title>generic_write_checks (5 samples, 0.02%)</title><rect x="84.1448%" y="277" width="0.0249%" height="15" fill="rgb(211,209,29)"/><text x="84.3948%" y="287.50"></text></g><g><title>generic_write_check_limits (4 samples, 0.02%)</title><rect x="84.1497%" y="261" width="0.0199%" height="15" fill="rgb(226,228,24)"/><text x="84.3997%" y="271.50"></text></g><g><title>file_modified (4 samples, 0.02%)</title><rect x="84.1697%" y="293" width="0.0199%" height="15" fill="rgb(222,84,9)"/><text x="84.4197%" y="303.50"></text></g><g><title>file_remove_privs (4 samples, 0.02%)</title><rect x="84.1697%" y="277" width="0.0199%" height="15" fill="rgb(234,203,30)"/><text x="84.4197%" y="287.50"></text></g><g><title>file_update_time (9 samples, 0.04%)</title><rect x="84.1896%" y="293" width="0.0448%" height="15" fill="rgb(238,109,14)"/><text x="84.4396%" y="303.50"></text></g><g><title>generic_update_time (7 samples, 0.03%)</title><rect x="84.1995%" y="277" width="0.0348%" height="15" fill="rgb(233,206,34)"/><text x="84.4495%" y="287.50"></text></g><g><title>__mark_inode_dirty (7 samples, 0.03%)</title><rect x="84.1995%" y="261" width="0.0348%" height="15" fill="rgb(220,167,47)"/><text x="84.4495%" y="271.50"></text></g><g><title>ext4_dirty_inode (5 samples, 0.02%)</title><rect x="84.2095%" y="245" width="0.0249%" height="15" fill="rgb(238,105,10)"/><text x="84.4595%" y="255.50"></text></g><g><title>__ext4_mark_inode_dirty (4 samples, 0.02%)</title><rect x="84.2145%" y="229" width="0.0199%" height="15" fill="rgb(213,227,17)"/><text x="84.4645%" y="239.50"></text></g><g><title>__radix_tree_lookup (6 samples, 0.03%)</title><rect x="84.3638%" y="261" width="0.0299%" height="15" fill="rgb(217,132,38)"/><text x="84.6138%" y="271.50"></text></g><g><title>balance_dirty_pages_ratelimited (27 samples, 0.13%)</title><rect x="84.2692%" y="277" width="0.1344%" height="15" fill="rgb(242,146,4)"/><text x="84.5192%" y="287.50"></text></g><g><title>ext4_journal_check_start (4 samples, 0.02%)</title><rect x="84.5032%" y="245" width="0.0199%" height="15" fill="rgb(212,61,9)"/><text x="84.7532%" y="255.50"></text></g><g><title>kmem_cache_alloc (12 samples, 0.06%)</title><rect x="84.5480%" y="229" width="0.0597%" height="15" fill="rgb(247,126,22)"/><text x="84.7980%" y="239.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (4 samples, 0.02%)</title><rect x="84.5878%" y="213" width="0.0199%" height="15" fill="rgb(220,196,2)"/><text x="84.8378%" y="223.50"></text></g><g><title>__ext4_journal_start_sb (50 samples, 0.25%)</title><rect x="84.4932%" y="261" width="0.2489%" height="15" fill="rgb(208,46,4)"/><text x="84.7432%" y="271.50"></text></g><g><title>jbd2__journal_start (44 samples, 0.22%)</title><rect x="84.5231%" y="245" width="0.2190%" height="15" fill="rgb(252,104,46)"/><text x="84.7731%" y="255.50"></text></g><g><title>start_this_handle (27 samples, 0.13%)</title><rect x="84.6077%" y="229" width="0.1344%" height="15" fill="rgb(237,152,48)"/><text x="84.8577%" y="239.50"></text></g><g><title>add_transaction_credits (7 samples, 0.03%)</title><rect x="84.7073%" y="213" width="0.0348%" height="15" fill="rgb(221,59,37)"/><text x="84.9573%" y="223.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.01%)</title><rect x="84.8168%" y="229" width="0.0149%" height="15" fill="rgb(209,202,51)"/><text x="85.0668%" y="239.50"></text></g><g><title>__slab_alloc (4 samples, 0.02%)</title><rect x="84.9114%" y="181" width="0.0199%" height="15" fill="rgb(228,81,30)"/><text x="85.1614%" y="191.50"></text></g><g><title>___slab_alloc (4 samples, 0.02%)</title><rect x="84.9114%" y="165" width="0.0199%" height="15" fill="rgb(227,42,39)"/><text x="85.1614%" y="175.50"></text></g><g><title>__mod_memcg_lruvec_state (3 samples, 0.01%)</title><rect x="84.9612%" y="165" width="0.0149%" height="15" fill="rgb(221,26,2)"/><text x="85.2112%" y="175.50"></text></g><g><title>memcg_slab_post_alloc_hook (11 samples, 0.05%)</title><rect x="84.9313%" y="181" width="0.0548%" height="15" fill="rgb(254,61,31)"/><text x="85.1813%" y="191.50"></text></g><g><title>get_obj_cgroup_from_current (10 samples, 0.05%)</title><rect x="84.9910%" y="165" width="0.0498%" height="15" fill="rgb(222,173,38)"/><text x="85.2410%" y="175.50"></text></g><g><title>alloc_buffer_head (42 samples, 0.21%)</title><rect x="84.8517%" y="213" width="0.2091%" height="15" fill="rgb(218,50,12)"/><text x="85.1017%" y="223.50"></text></g><g><title>kmem_cache_alloc (42 samples, 0.21%)</title><rect x="84.8517%" y="197" width="0.2091%" height="15" fill="rgb(223,88,40)"/><text x="85.1017%" y="207.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (15 samples, 0.07%)</title><rect x="84.9861%" y="181" width="0.0747%" height="15" fill="rgb(237,54,19)"/><text x="85.2361%" y="191.50"></text></g><g><title>obj_cgroup_charge (4 samples, 0.02%)</title><rect x="85.0408%" y="165" width="0.0199%" height="15" fill="rgb(251,129,25)"/><text x="85.2908%" y="175.50"></text></g><g><title>create_empty_buffers (53 samples, 0.26%)</title><rect x="84.8019%" y="245" width="0.2638%" height="15" fill="rgb(238,97,19)"/><text x="85.0519%" y="255.50"></text></g><g><title>alloc_page_buffers (47 samples, 0.23%)</title><rect x="84.8317%" y="229" width="0.2340%" height="15" fill="rgb(240,169,18)"/><text x="85.0817%" y="239.50"></text></g><g><title>down_read (3 samples, 0.01%)</title><rect x="85.1653%" y="229" width="0.0149%" height="15" fill="rgb(230,187,49)"/><text x="85.4153%" y="239.50"></text></g><g><title>__dquot_alloc_space (5 samples, 0.02%)</title><rect x="85.1852%" y="213" width="0.0249%" height="15" fill="rgb(209,44,26)"/><text x="85.4352%" y="223.50"></text></g><g><title>ext4_da_reserve_space (10 samples, 0.05%)</title><rect x="85.1802%" y="229" width="0.0498%" height="15" fill="rgb(244,0,6)"/><text x="85.4302%" y="239.50"></text></g><g><title>__es_insert_extent (16 samples, 0.08%)</title><rect x="85.2449%" y="213" width="0.0796%" height="15" fill="rgb(248,18,21)"/><text x="85.4949%" y="223.50"></text></g><g><title>ext4_es_can_be_merged.isra.0 (6 samples, 0.03%)</title><rect x="85.2947%" y="197" width="0.0299%" height="15" fill="rgb(245,180,19)"/><text x="85.5447%" y="207.50"></text></g><g><title>__es_remove_extent (4 samples, 0.02%)</title><rect x="85.3246%" y="213" width="0.0199%" height="15" fill="rgb(252,118,36)"/><text x="85.5746%" y="223.50"></text></g><g><title>ext4_es_insert_delayed_block (24 samples, 0.12%)</title><rect x="85.2300%" y="229" width="0.1195%" height="15" fill="rgb(210,224,19)"/><text x="85.4800%" y="239.50"></text></g><g><title>_raw_read_lock (4 samples, 0.02%)</title><rect x="85.4291%" y="213" width="0.0199%" height="15" fill="rgb(218,30,24)"/><text x="85.6791%" y="223.50"></text></g><g><title>ext4_es_lookup_extent (24 samples, 0.12%)</title><rect x="85.3495%" y="229" width="0.1195%" height="15" fill="rgb(219,75,50)"/><text x="85.5995%" y="239.50"></text></g><g><title>percpu_counter_add_batch (3 samples, 0.01%)</title><rect x="85.4540%" y="213" width="0.0149%" height="15" fill="rgb(234,72,50)"/><text x="85.7040%" y="223.50"></text></g><g><title>rwsem_down_read_slowpath (9 samples, 0.04%)</title><rect x="85.4689%" y="229" width="0.0448%" height="15" fill="rgb(219,100,48)"/><text x="85.7189%" y="239.50"></text></g><g><title>rwsem_optimistic_spin (9 samples, 0.04%)</title><rect x="85.4689%" y="213" width="0.0448%" height="15" fill="rgb(253,5,41)"/><text x="85.7189%" y="223.50"></text></g><g><title>rwsem_spin_on_owner (9 samples, 0.04%)</title><rect x="85.4689%" y="197" width="0.0448%" height="15" fill="rgb(247,181,11)"/><text x="85.7189%" y="207.50"></text></g><g><title>ext4_da_get_block_prep (96 samples, 0.48%)</title><rect x="85.0657%" y="245" width="0.4779%" height="15" fill="rgb(222,223,25)"/><text x="85.3157%" y="255.50"></text></g><g><title>up_read (6 samples, 0.03%)</title><rect x="85.5137%" y="229" width="0.0299%" height="15" fill="rgb(214,198,28)"/><text x="85.7637%" y="239.50"></text></g><g><title>ext4_block_write_begin (165 samples, 0.82%)</title><rect x="84.7471%" y="261" width="0.8214%" height="15" fill="rgb(230,46,43)"/><text x="84.9971%" y="271.50"></text></g><g><title>memset_erms (5 samples, 0.02%)</title><rect x="85.5436%" y="245" width="0.0249%" height="15" fill="rgb(233,65,53)"/><text x="85.7936%" y="255.50"></text></g><g><title>ext4_nonda_switch (3 samples, 0.01%)</title><rect x="85.5685%" y="261" width="0.0149%" height="15" fill="rgb(221,121,27)"/><text x="85.8185%" y="271.50"></text></g><g><title>__next_zones_zonelist (3 samples, 0.01%)</title><rect x="85.6531%" y="213" width="0.0149%" height="15" fill="rgb(247,70,47)"/><text x="85.9031%" y="223.50"></text></g><g><title>__list_del_entry_valid (24 samples, 0.12%)</title><rect x="85.7875%" y="197" width="0.1195%" height="15" fill="rgb(228,85,35)"/><text x="86.0375%" y="207.50"></text></g><g><title>node_dirty_ok (10 samples, 0.05%)</title><rect x="85.9170%" y="197" width="0.0498%" height="15" fill="rgb(209,50,18)"/><text x="86.1670%" y="207.50"></text></g><g><title>node_page_state (3 samples, 0.01%)</title><rect x="85.9518%" y="181" width="0.0149%" height="15" fill="rgb(250,19,35)"/><text x="86.2018%" y="191.50"></text></g><g><title>__alloc_pages_nodemask (102 samples, 0.51%)</title><rect x="85.6282%" y="229" width="0.5078%" height="15" fill="rgb(253,107,29)"/><text x="85.8782%" y="239.50"></text></g><g><title>get_page_from_freelist (93 samples, 0.46%)</title><rect x="85.6730%" y="213" width="0.4630%" height="15" fill="rgb(252,179,29)"/><text x="85.9230%" y="223.50"></text></g><g><title>prep_new_page (34 samples, 0.17%)</title><rect x="85.9667%" y="197" width="0.1693%" height="15" fill="rgb(238,194,6)"/><text x="86.2167%" y="207.50"></text></g><g><title>kernel_init_free_pages (31 samples, 0.15%)</title><rect x="85.9817%" y="181" width="0.1543%" height="15" fill="rgb(238,164,29)"/><text x="86.2317%" y="191.50"></text></g><g><title>clear_page_erms (29 samples, 0.14%)</title><rect x="85.9916%" y="165" width="0.1444%" height="15" fill="rgb(224,25,9)"/><text x="86.2416%" y="175.50"></text></g><g><title>__mod_lruvec_state (5 samples, 0.02%)</title><rect x="86.2157%" y="197" width="0.0249%" height="15" fill="rgb(244,153,23)"/><text x="86.4657%" y="207.50"></text></g><g><title>__mod_node_page_state (5 samples, 0.02%)</title><rect x="86.2157%" y="181" width="0.0249%" height="15" fill="rgb(212,203,14)"/><text x="86.4657%" y="191.50"></text></g><g><title>__mod_memcg_lruvec_state (5 samples, 0.02%)</title><rect x="86.2405%" y="197" width="0.0249%" height="15" fill="rgb(220,164,20)"/><text x="86.4905%" y="207.50"></text></g><g><title>__mod_memcg_state.part.0 (3 samples, 0.01%)</title><rect x="86.2505%" y="181" width="0.0149%" height="15" fill="rgb(222,203,48)"/><text x="86.5005%" y="191.50"></text></g><g><title>_raw_spin_lock_irq (4 samples, 0.02%)</title><rect x="86.2654%" y="197" width="0.0199%" height="15" fill="rgb(215,159,22)"/><text x="86.5154%" y="207.50"></text></g><g><title>mem_cgroup_charge (14 samples, 0.07%)</title><rect x="86.2853%" y="197" width="0.0697%" height="15" fill="rgb(216,183,47)"/><text x="86.5353%" y="207.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (7 samples, 0.03%)</title><rect x="86.3202%" y="181" width="0.0348%" height="15" fill="rgb(229,195,25)"/><text x="86.5702%" y="191.50"></text></g><g><title>__count_memcg_events.part.0 (6 samples, 0.03%)</title><rect x="86.3252%" y="165" width="0.0299%" height="15" fill="rgb(224,132,51)"/><text x="86.5752%" y="175.50"></text></g><g><title>xa_get_order (3 samples, 0.01%)</title><rect x="86.3600%" y="197" width="0.0149%" height="15" fill="rgb(240,63,7)"/><text x="86.6100%" y="207.50"></text></g><g><title>xas_load (3 samples, 0.01%)</title><rect x="86.3600%" y="181" width="0.0149%" height="15" fill="rgb(249,182,41)"/><text x="86.6100%" y="191.50"></text></g><g><title>xas_find_conflict (3 samples, 0.01%)</title><rect x="86.3750%" y="197" width="0.0149%" height="15" fill="rgb(243,47,26)"/><text x="86.6250%" y="207.50"></text></g><g><title>workingset_update_node (3 samples, 0.01%)</title><rect x="86.4297%" y="181" width="0.0149%" height="15" fill="rgb(233,48,2)"/><text x="86.6797%" y="191.50"></text></g><g><title>__add_to_page_cache_locked (68 samples, 0.34%)</title><rect x="86.1410%" y="213" width="0.3385%" height="15" fill="rgb(244,165,34)"/><text x="86.3910%" y="223.50"></text></g><g><title>xas_store (16 samples, 0.08%)</title><rect x="86.3998%" y="197" width="0.0796%" height="15" fill="rgb(207,89,7)"/><text x="86.6498%" y="207.50"></text></g><g><title>xas_create (7 samples, 0.03%)</title><rect x="86.4446%" y="181" width="0.0348%" height="15" fill="rgb(244,117,36)"/><text x="86.6946%" y="191.50"></text></g><g><title>__mod_memcg_lruvec_state (6 samples, 0.03%)</title><rect x="86.5691%" y="165" width="0.0299%" height="15" fill="rgb(226,144,34)"/><text x="86.8191%" y="175.50"></text></g><g><title>__mod_memcg_state.part.0 (3 samples, 0.01%)</title><rect x="86.5840%" y="149" width="0.0149%" height="15" fill="rgb(213,23,19)"/><text x="86.8340%" y="159.50"></text></g><g><title>__pagevec_lru_add_fn (21 samples, 0.10%)</title><rect x="86.5143%" y="181" width="0.1045%" height="15" fill="rgb(217,75,12)"/><text x="86.7643%" y="191.50"></text></g><g><title>page_mapping (3 samples, 0.01%)</title><rect x="86.6039%" y="165" width="0.0149%" height="15" fill="rgb(224,159,17)"/><text x="86.8539%" y="175.50"></text></g><g><title>_raw_spin_lock_irqsave (6 samples, 0.03%)</title><rect x="86.6239%" y="181" width="0.0299%" height="15" fill="rgb(217,118,1)"/><text x="86.8739%" y="191.50"></text></g><g><title>native_queued_spin_lock_slowpath (6 samples, 0.03%)</title><rect x="86.6239%" y="165" width="0.0299%" height="15" fill="rgb(232,180,48)"/><text x="86.8739%" y="175.50"></text></g><g><title>add_to_page_cache_lru (105 samples, 0.52%)</title><rect x="86.1360%" y="229" width="0.5227%" height="15" fill="rgb(230,27,33)"/><text x="86.3860%" y="239.50"></text></g><g><title>lru_cache_add (36 samples, 0.18%)</title><rect x="86.4795%" y="213" width="0.1792%" height="15" fill="rgb(205,31,21)"/><text x="86.7295%" y="223.50"></text></g><g><title>pagevec_lru_move_fn (33 samples, 0.16%)</title><rect x="86.4944%" y="197" width="0.1643%" height="15" fill="rgb(253,59,4)"/><text x="86.7444%" y="207.50"></text></g><g><title>pagecache_get_page (243 samples, 1.21%)</title><rect x="85.5884%" y="245" width="1.2097%" height="15" fill="rgb(224,201,9)"/><text x="85.8384%" y="255.50"></text></g><g><title>find_get_entry (26 samples, 0.13%)</title><rect x="86.6687%" y="229" width="0.1294%" height="15" fill="rgb(229,206,30)"/><text x="86.9187%" y="239.50"></text></g><g><title>xas_load (20 samples, 0.10%)</title><rect x="86.6985%" y="213" width="0.0996%" height="15" fill="rgb(212,67,47)"/><text x="86.9485%" y="223.50"></text></g><g><title>xas_start (5 samples, 0.02%)</title><rect x="86.7732%" y="197" width="0.0249%" height="15" fill="rgb(211,96,50)"/><text x="87.0232%" y="207.50"></text></g><g><title>grab_cache_page_write_begin (246 samples, 1.22%)</title><rect x="85.5834%" y="261" width="1.2246%" height="15" fill="rgb(252,114,18)"/><text x="85.8334%" y="271.50"></text></g><g><title>ext4_da_write_begin (484 samples, 2.41%)</title><rect x="84.4036%" y="277" width="2.4094%" height="15" fill="rgb(223,58,37)"/><text x="84.6536%" y="287.50">ex..</text></g><g><title>kmem_cache_free (10 samples, 0.05%)</title><rect x="86.9026%" y="229" width="0.0498%" height="15" fill="rgb(237,70,4)"/><text x="87.1526%" y="239.50"></text></g><g><title>slab_free_freelist_hook (3 samples, 0.01%)</title><rect x="86.9375%" y="213" width="0.0149%" height="15" fill="rgb(244,85,46)"/><text x="87.1875%" y="223.50"></text></g><g><title>__ext4_journal_stop (28 samples, 0.14%)</title><rect x="86.8777%" y="261" width="0.1394%" height="15" fill="rgb(223,39,52)"/><text x="87.1277%" y="271.50"></text></g><g><title>jbd2_journal_stop (27 samples, 0.13%)</title><rect x="86.8827%" y="245" width="0.1344%" height="15" fill="rgb(218,200,14)"/><text x="87.1327%" y="255.50"></text></g><g><title>stop_this_handle (13 samples, 0.06%)</title><rect x="86.9524%" y="229" width="0.0647%" height="15" fill="rgb(208,171,16)"/><text x="87.2024%" y="239.50"></text></g><g><title>__wake_up_common_lock (8 samples, 0.04%)</title><rect x="86.9773%" y="213" width="0.0398%" height="15" fill="rgb(234,200,18)"/><text x="87.2273%" y="223.50"></text></g><g><title>__xa_set_mark (7 samples, 0.03%)</title><rect x="87.1366%" y="197" width="0.0348%" height="15" fill="rgb(228,45,11)"/><text x="87.3866%" y="207.50"></text></g><g><title>xas_set_mark (6 samples, 0.03%)</title><rect x="87.1416%" y="181" width="0.0299%" height="15" fill="rgb(237,182,11)"/><text x="87.3916%" y="191.50"></text></g><g><title>__mod_memcg_lruvec_state (4 samples, 0.02%)</title><rect x="87.2162%" y="181" width="0.0199%" height="15" fill="rgb(241,175,49)"/><text x="87.4662%" y="191.50"></text></g><g><title>__mod_memcg_state.part.0 (3 samples, 0.01%)</title><rect x="87.2212%" y="165" width="0.0149%" height="15" fill="rgb(247,38,35)"/><text x="87.4712%" y="175.50"></text></g><g><title>__set_page_dirty (29 samples, 0.14%)</title><rect x="87.1167%" y="213" width="0.1444%" height="15" fill="rgb(228,39,49)"/><text x="87.3667%" y="223.50"></text></g><g><title>account_page_dirtied (16 samples, 0.08%)</title><rect x="87.1814%" y="197" width="0.0796%" height="15" fill="rgb(226,101,26)"/><text x="87.4314%" y="207.50"></text></g><g><title>percpu_counter_add_batch (5 samples, 0.02%)</title><rect x="87.2362%" y="181" width="0.0249%" height="15" fill="rgb(206,141,19)"/><text x="87.4862%" y="191.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (50 samples, 0.25%)</title><rect x="87.0271%" y="245" width="0.2489%" height="15" fill="rgb(211,200,13)"/><text x="87.2771%" y="255.50"></text></g><g><title>mark_buffer_dirty (42 samples, 0.21%)</title><rect x="87.0669%" y="229" width="0.2091%" height="15" fill="rgb(241,121,6)"/><text x="87.3169%" y="239.50"></text></g><g><title>__ext4_journal_start_sb (8 samples, 0.04%)</title><rect x="87.3407%" y="213" width="0.0398%" height="15" fill="rgb(234,221,29)"/><text x="87.5907%" y="223.50"></text></g><g><title>jbd2__journal_start (5 samples, 0.02%)</title><rect x="87.3556%" y="197" width="0.0249%" height="15" fill="rgb(229,136,5)"/><text x="87.6056%" y="207.50"></text></g><g><title>__ext4_handle_dirty_metadata (5 samples, 0.02%)</title><rect x="87.5149%" y="181" width="0.0249%" height="15" fill="rgb(238,36,11)"/><text x="87.7649%" y="191.50"></text></g><g><title>_raw_spin_lock (6 samples, 0.03%)</title><rect x="87.5398%" y="181" width="0.0299%" height="15" fill="rgb(251,55,41)"/><text x="87.7898%" y="191.50"></text></g><g><title>ext4_fc_track_inode (4 samples, 0.02%)</title><rect x="87.5697%" y="181" width="0.0199%" height="15" fill="rgb(242,34,40)"/><text x="87.8197%" y="191.50"></text></g><g><title>ext4_inode_csum_set (17 samples, 0.08%)</title><rect x="87.5896%" y="181" width="0.0846%" height="15" fill="rgb(215,42,17)"/><text x="87.8396%" y="191.50"></text></g><g><title>ext4_inode_csum (14 samples, 0.07%)</title><rect x="87.6045%" y="165" width="0.0697%" height="15" fill="rgb(207,44,46)"/><text x="87.8545%" y="175.50"></text></g><g><title>crypto_shash_update (7 samples, 0.03%)</title><rect x="87.6394%" y="149" width="0.0348%" height="15" fill="rgb(211,206,28)"/><text x="87.8894%" y="159.50"></text></g><g><title>ext4_mark_iloc_dirty (60 samples, 0.30%)</title><rect x="87.4004%" y="197" width="0.2987%" height="15" fill="rgb(237,167,16)"/><text x="87.6504%" y="207.50"></text></g><g><title>map_id_up (5 samples, 0.02%)</title><rect x="87.6742%" y="181" width="0.0249%" height="15" fill="rgb(233,66,6)"/><text x="87.9242%" y="191.50"></text></g><g><title>__ext4_journal_get_write_access (11 samples, 0.05%)</title><rect x="87.7190%" y="181" width="0.0548%" height="15" fill="rgb(246,123,29)"/><text x="87.9690%" y="191.50"></text></g><g><title>jbd2_journal_get_write_access (5 samples, 0.02%)</title><rect x="87.7489%" y="165" width="0.0249%" height="15" fill="rgb(209,62,40)"/><text x="87.9989%" y="175.50"></text></g><g><title>jbd2_write_access_granted.part.0 (5 samples, 0.02%)</title><rect x="87.7489%" y="149" width="0.0249%" height="15" fill="rgb(218,4,25)"/><text x="87.9989%" y="159.50"></text></g><g><title>__find_get_block (14 samples, 0.07%)</title><rect x="87.8684%" y="133" width="0.0697%" height="15" fill="rgb(253,91,49)"/><text x="88.1184%" y="143.50"></text></g><g><title>__getblk_gfp (16 samples, 0.08%)</title><rect x="87.8634%" y="149" width="0.0796%" height="15" fill="rgb(228,155,29)"/><text x="88.1134%" y="159.50"></text></g><g><title>ext4_get_group_desc (5 samples, 0.02%)</title><rect x="87.9431%" y="149" width="0.0249%" height="15" fill="rgb(243,57,37)"/><text x="88.1931%" y="159.50"></text></g><g><title>__mark_inode_dirty (141 samples, 0.70%)</title><rect x="87.2760%" y="245" width="0.7019%" height="15" fill="rgb(244,167,17)"/><text x="87.5260%" y="255.50"></text></g><g><title>ext4_dirty_inode (134 samples, 0.67%)</title><rect x="87.3108%" y="229" width="0.6671%" height="15" fill="rgb(207,181,38)"/><text x="87.5608%" y="239.50"></text></g><g><title>__ext4_mark_inode_dirty (120 samples, 0.60%)</title><rect x="87.3805%" y="213" width="0.5974%" height="15" fill="rgb(211,8,23)"/><text x="87.6305%" y="223.50"></text></g><g><title>ext4_reserve_inode_write (56 samples, 0.28%)</title><rect x="87.6991%" y="197" width="0.2788%" height="15" fill="rgb(235,11,44)"/><text x="87.9491%" y="207.50"></text></g><g><title>ext4_get_inode_loc (41 samples, 0.20%)</title><rect x="87.7738%" y="181" width="0.2041%" height="15" fill="rgb(248,18,52)"/><text x="88.0238%" y="191.50"></text></g><g><title>__ext4_get_inode_loc (39 samples, 0.19%)</title><rect x="87.7838%" y="165" width="0.1941%" height="15" fill="rgb(208,4,7)"/><text x="88.0338%" y="175.50"></text></g><g><title>ext4_da_write_end (239 samples, 1.19%)</title><rect x="86.8130%" y="277" width="1.1898%" height="15" fill="rgb(240,17,39)"/><text x="87.0630%" y="287.50"></text></g><g><title>generic_write_end (198 samples, 0.99%)</title><rect x="87.0171%" y="261" width="0.9857%" height="15" fill="rgb(207,170,3)"/><text x="87.2671%" y="271.50"></text></g><g><title>unlock_page (5 samples, 0.02%)</title><rect x="87.9779%" y="245" width="0.0249%" height="15" fill="rgb(236,100,52)"/><text x="88.2279%" y="255.50"></text></g><g><title>copy_user_enhanced_fast_string (44 samples, 0.22%)</title><rect x="88.0327%" y="261" width="0.2190%" height="15" fill="rgb(246,78,51)"/><text x="88.2827%" y="271.50"></text></g><g><title>iov_iter_copy_from_user_atomic (50 samples, 0.25%)</title><rect x="88.0078%" y="277" width="0.2489%" height="15" fill="rgb(211,17,15)"/><text x="88.2578%" y="287.50"></text></g><g><title>generic_perform_write (834 samples, 4.15%)</title><rect x="84.2344%" y="293" width="4.1517%" height="15" fill="rgb(209,59,46)"/><text x="84.4844%" y="303.50">gener..</text></g><g><title>iov_iter_fault_in_readable (26 samples, 0.13%)</title><rect x="88.2567%" y="277" width="0.1294%" height="15" fill="rgb(210,92,25)"/><text x="88.5067%" y="287.50"></text></g><g><title>__get_user_nocheck_1 (23 samples, 0.11%)</title><rect x="88.2716%" y="261" width="0.1145%" height="15" fill="rgb(238,174,52)"/><text x="88.5216%" y="271.50"></text></g><g><title>ext4_buffered_write_iter (861 samples, 4.29%)</title><rect x="84.1099%" y="309" width="4.2861%" height="15" fill="rgb(230,73,7)"/><text x="84.3599%" y="319.50">ext4_..</text></g><g><title>new_sync_write (870 samples, 4.33%)</title><rect x="84.0950%" y="325" width="4.3309%" height="15" fill="rgb(243,124,40)"/><text x="84.3450%" y="335.50">new_s..</text></g><g><title>ext4_file_write_iter (6 samples, 0.03%)</title><rect x="88.3961%" y="309" width="0.0299%" height="15" fill="rgb(244,170,11)"/><text x="88.6461%" y="319.50"></text></g><g><title>do_syscall_64 (916 samples, 4.56%)</title><rect x="83.9058%" y="373" width="4.5599%" height="15" fill="rgb(207,114,54)"/><text x="84.1558%" y="383.50">do_sy..</text></g><g><title>ksys_write (911 samples, 4.54%)</title><rect x="83.9307%" y="357" width="4.5350%" height="15" fill="rgb(205,42,20)"/><text x="84.1807%" y="367.50">ksys_..</text></g><g><title>vfs_write (894 samples, 4.45%)</title><rect x="84.0153%" y="341" width="4.4504%" height="15" fill="rgb(230,30,28)"/><text x="84.2653%" y="351.50">vfs_w..</text></g><g><title>security_file_permission (8 samples, 0.04%)</title><rect x="88.4259%" y="325" width="0.0398%" height="15" fill="rgb(205,73,54)"/><text x="88.6759%" y="335.50"></text></g><g><title>apparmor_file_permission (6 samples, 0.03%)</title><rect x="88.4359%" y="309" width="0.0299%" height="15" fill="rgb(254,227,23)"/><text x="88.6859%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (936 samples, 4.66%)</title><rect x="83.9058%" y="389" width="4.6595%" height="15" fill="rgb(228,202,34)"/><text x="84.1558%" y="399.50">entry..</text></g><g><title>syscall_exit_to_user_mode (20 samples, 0.10%)</title><rect x="88.4658%" y="373" width="0.0996%" height="15" fill="rgb(222,225,37)"/><text x="88.7158%" y="383.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1,013 samples, 5.04%)</title><rect x="83.5623%" y="517" width="5.0428%" height="15" fill="rgb(221,14,54)"/><text x="83.8123%" y="527.50">tokio:..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1,012 samples, 5.04%)</title><rect x="83.5673%" y="501" width="5.0378%" height="15" fill="rgb(254,102,2)"/><text x="83.8173%" y="511.50">&lt;tokio..</text></g><g><title>std::io::Write::write_all (1,007 samples, 5.01%)</title><rect x="83.5922%" y="485" width="5.0129%" height="15" fill="rgb(232,104,17)"/><text x="83.8422%" y="495.50">std::i..</text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,006 samples, 5.01%)</title><rect x="83.5972%" y="469" width="5.0080%" height="15" fill="rgb(250,220,14)"/><text x="83.8472%" y="479.50">&lt;&amp;std:..</text></g><g><title>std::sys::unix::fs::File::write (1,002 samples, 4.99%)</title><rect x="83.6171%" y="453" width="4.9881%" height="15" fill="rgb(241,158,9)"/><text x="83.8671%" y="463.50">std::s..</text></g><g><title>std::sys::unix::fd::FileDesc::write (1,002 samples, 4.99%)</title><rect x="83.6171%" y="437" width="4.9881%" height="15" fill="rgb(246,9,43)"/><text x="83.8671%" y="447.50">std::s..</text></g><g><title>__libc_write (1,002 samples, 4.99%)</title><rect x="83.6171%" y="421" width="4.9881%" height="15" fill="rgb(206,73,33)"/><text x="83.8671%" y="431.50">__libc..</text></g><g><title>__libc_write (999 samples, 4.97%)</title><rect x="83.6320%" y="405" width="4.9731%" height="15" fill="rgb(222,79,8)"/><text x="83.8820%" y="415.50">__libc..</text></g><g><title>syscall_return_via_sysret (7 samples, 0.03%)</title><rect x="88.5703%" y="389" width="0.0348%" height="15" fill="rgb(234,8,54)"/><text x="88.8203%" y="399.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (3 samples, 0.01%)</title><rect x="88.6201%" y="501" width="0.0149%" height="15" fill="rgb(209,134,38)"/><text x="88.8701%" y="511.50"></text></g><g><title>enqueue_task_fair (8 samples, 0.04%)</title><rect x="88.6748%" y="309" width="0.0398%" height="15" fill="rgb(230,127,29)"/><text x="88.9248%" y="319.50"></text></g><g><title>enqueue_entity (7 samples, 0.03%)</title><rect x="88.6798%" y="293" width="0.0348%" height="15" fill="rgb(242,44,41)"/><text x="88.9298%" y="303.50"></text></g><g><title>update_load_avg (6 samples, 0.03%)</title><rect x="88.6848%" y="277" width="0.0299%" height="15" fill="rgb(222,56,43)"/><text x="88.9348%" y="287.50"></text></g><g><title>ttwu_do_activate (11 samples, 0.05%)</title><rect x="88.6748%" y="325" width="0.0548%" height="15" fill="rgb(238,39,47)"/><text x="88.9248%" y="335.50"></text></g><g><title>psi_task_change (3 samples, 0.01%)</title><rect x="88.7147%" y="309" width="0.0149%" height="15" fill="rgb(226,79,43)"/><text x="88.9647%" y="319.50"></text></g><g><title>do_syscall_64 (17 samples, 0.08%)</title><rect x="88.6549%" y="421" width="0.0846%" height="15" fill="rgb(242,105,53)"/><text x="88.9049%" y="431.50"></text></g><g><title>__x64_sys_futex (17 samples, 0.08%)</title><rect x="88.6549%" y="405" width="0.0846%" height="15" fill="rgb(251,132,46)"/><text x="88.9049%" y="415.50"></text></g><g><title>do_futex (17 samples, 0.08%)</title><rect x="88.6549%" y="389" width="0.0846%" height="15" fill="rgb(231,77,14)"/><text x="88.9049%" y="399.50"></text></g><g><title>futex_wake (17 samples, 0.08%)</title><rect x="88.6549%" y="373" width="0.0846%" height="15" fill="rgb(240,135,9)"/><text x="88.9049%" y="383.50"></text></g><g><title>wake_up_q (15 samples, 0.07%)</title><rect x="88.6649%" y="357" width="0.0747%" height="15" fill="rgb(248,109,14)"/><text x="88.9149%" y="367.50"></text></g><g><title>try_to_wake_up (15 samples, 0.07%)</title><rect x="88.6649%" y="341" width="0.0747%" height="15" fill="rgb(227,146,52)"/><text x="88.9149%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.10%)</title><rect x="88.6549%" y="437" width="0.1045%" height="15" fill="rgb(232,54,3)"/><text x="88.9049%" y="447.50"></text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.02%)</title><rect x="88.7395%" y="421" width="0.0199%" height="15" fill="rgb(229,201,43)"/><text x="88.9895%" y="431.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (26 samples, 0.13%)</title><rect x="88.6350%" y="469" width="0.1294%" height="15" fill="rgb(252,161,33)"/><text x="88.8850%" y="479.50"></text></g><g><title>syscall (23 samples, 0.11%)</title><rect x="88.6499%" y="453" width="0.1145%" height="15" fill="rgb(226,146,40)"/><text x="88.8999%" y="463.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7,378 samples, 36.73%)</title><rect x="52.0460%" y="533" width="36.7284%" height="15" fill="rgb(219,47,25)"/><text x="52.2960%" y="543.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (34 samples, 0.17%)</title><rect x="88.6051%" y="517" width="0.1693%" height="15" fill="rgb(250,135,13)"/><text x="88.8551%" y="527.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (28 samples, 0.14%)</title><rect x="88.6350%" y="501" width="0.1394%" height="15" fill="rgb(219,229,18)"/><text x="88.8850%" y="511.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (28 samples, 0.14%)</title><rect x="88.6350%" y="485" width="0.1394%" height="15" fill="rgb(217,152,27)"/><text x="88.8850%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7,740 samples, 38.53%)</title><rect x="50.2539%" y="597" width="38.5305%" height="15" fill="rgb(225,71,47)"/><text x="50.5039%" y="607.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7,740 samples, 38.53%)</title><rect x="50.2539%" y="581" width="38.5305%" height="15" fill="rgb(220,139,14)"/><text x="50.5039%" y="591.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (7,740 samples, 38.53%)</title><rect x="50.2539%" y="565" width="38.5305%" height="15" fill="rgb(247,54,32)"/><text x="50.5039%" y="575.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7,739 samples, 38.53%)</title><rect x="50.2589%" y="549" width="38.5255%" height="15" fill="rgb(252,131,39)"/><text x="50.5089%" y="559.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>__GI___clone (7,797 samples, 38.81%)</title><rect x="49.9801%" y="645" width="38.8142%" height="15" fill="rgb(210,108,39)"/><text x="50.2301%" y="655.50">__GI___clone</text></g><g><title>start_thread (7,792 samples, 38.79%)</title><rect x="50.0050%" y="629" width="38.7893%" height="15" fill="rgb(205,23,29)"/><text x="50.2550%" y="639.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (7,742 samples, 38.54%)</title><rect x="50.2539%" y="613" width="38.5404%" height="15" fill="rgb(246,139,46)"/><text x="50.5039%" y="623.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>asm_exc_page_fault (116 samples, 0.58%)</title><rect x="88.8142%" y="645" width="0.5775%" height="15" fill="rgb(250,81,26)"/><text x="89.0642%" y="655.50"></text></g><g><title>common_interrupt (3 samples, 0.01%)</title><rect x="99.6067%" y="613" width="0.0149%" height="15" fill="rgb(214,104,7)"/><text x="99.8567%" y="623.50"></text></g><g><title>asm_common_interrupt (4 samples, 0.02%)</title><rect x="99.6067%" y="629" width="0.0199%" height="15" fill="rgb(233,189,8)"/><text x="99.8567%" y="639.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="99.6266%" y="597" width="0.0199%" height="15" fill="rgb(228,141,17)"/><text x="99.8766%" y="607.50"></text></g><g><title>hrtimer_interrupt (4 samples, 0.02%)</title><rect x="99.6266%" y="581" width="0.0199%" height="15" fill="rgb(247,157,1)"/><text x="99.8766%" y="591.50"></text></g><g><title>__hrtimer_run_queues (4 samples, 0.02%)</title><rect x="99.6266%" y="565" width="0.0199%" height="15" fill="rgb(249,225,5)"/><text x="99.8766%" y="575.50"></text></g><g><title>tick_sched_timer (3 samples, 0.01%)</title><rect x="99.6316%" y="549" width="0.0149%" height="15" fill="rgb(242,55,13)"/><text x="99.8816%" y="559.50"></text></g><g><title>tick_sched_handle (3 samples, 0.01%)</title><rect x="99.6316%" y="533" width="0.0149%" height="15" fill="rgb(230,49,50)"/><text x="99.8816%" y="543.50"></text></g><g><title>update_process_times (3 samples, 0.01%)</title><rect x="99.6316%" y="517" width="0.0149%" height="15" fill="rgb(241,111,38)"/><text x="99.8816%" y="527.50"></text></g><g><title>blake3_compress_in_place_sse41 (2,059 samples, 10.25%)</title><rect x="89.4016%" y="645" width="10.2499%" height="15" fill="rgb(252,155,4)"/><text x="89.6516%" y="655.50">blake3_compress..</text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="99.6266%" y="629" width="0.0249%" height="15" fill="rgb(212,69,32)"/><text x="99.8766%" y="639.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="99.6266%" y="613" width="0.0249%" height="15" fill="rgb(243,107,47)"/><text x="99.8766%" y="623.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.01%)</title><rect x="99.6665%" y="517" width="0.0149%" height="15" fill="rgb(247,130,12)"/><text x="99.9165%" y="527.50"></text></g><g><title>dequeue_entity (3 samples, 0.01%)</title><rect x="99.6665%" y="501" width="0.0149%" height="15" fill="rgb(233,74,16)"/><text x="99.9165%" y="511.50"></text></g><g><title>futex_wait_queue_me (7 samples, 0.03%)</title><rect x="99.6665%" y="565" width="0.0348%" height="15" fill="rgb(208,58,18)"/><text x="99.9165%" y="575.50"></text></g><g><title>schedule (7 samples, 0.03%)</title><rect x="99.6665%" y="549" width="0.0348%" height="15" fill="rgb(242,225,1)"/><text x="99.9165%" y="559.50"></text></g><g><title>__schedule (7 samples, 0.03%)</title><rect x="99.6665%" y="533" width="0.0348%" height="15" fill="rgb(249,39,40)"/><text x="99.9165%" y="543.50"></text></g><g><title>futex_wait (9 samples, 0.04%)</title><rect x="99.6665%" y="581" width="0.0448%" height="15" fill="rgb(207,72,44)"/><text x="99.9165%" y="591.50"></text></g><g><title>__x64_sys_futex (14 samples, 0.07%)</title><rect x="99.6615%" y="613" width="0.0697%" height="15" fill="rgb(215,193,12)"/><text x="99.9115%" y="623.50"></text></g><g><title>do_futex (13 samples, 0.06%)</title><rect x="99.6665%" y="597" width="0.0647%" height="15" fill="rgb(248,41,39)"/><text x="99.9165%" y="607.50"></text></g><g><title>futex_wake (4 samples, 0.02%)</title><rect x="99.7113%" y="581" width="0.0199%" height="15" fill="rgb(253,85,4)"/><text x="99.9613%" y="591.50"></text></g><g><title>wake_up_q (3 samples, 0.01%)</title><rect x="99.7162%" y="565" width="0.0149%" height="15" fill="rgb(243,70,31)"/><text x="99.9662%" y="575.50"></text></g><g><title>try_to_wake_up (3 samples, 0.01%)</title><rect x="99.7162%" y="549" width="0.0149%" height="15" fill="rgb(253,195,26)"/><text x="99.9662%" y="559.50"></text></g><g><title>ext4_block_write_begin (5 samples, 0.02%)</title><rect x="99.7611%" y="517" width="0.0249%" height="15" fill="rgb(243,42,11)"/><text x="100.0111%" y="527.50"></text></g><g><title>ext4_da_get_block_prep (4 samples, 0.02%)</title><rect x="99.7660%" y="501" width="0.0199%" height="15" fill="rgb(239,66,17)"/><text x="100.0160%" y="511.50"></text></g><g><title>add_to_page_cache_lru (4 samples, 0.02%)</title><rect x="99.7959%" y="485" width="0.0199%" height="15" fill="rgb(217,132,21)"/><text x="100.0459%" y="495.50"></text></g><g><title>__add_to_page_cache_locked (4 samples, 0.02%)</title><rect x="99.7959%" y="469" width="0.0199%" height="15" fill="rgb(252,202,21)"/><text x="100.0459%" y="479.50"></text></g><g><title>ext4_da_write_begin (13 samples, 0.06%)</title><rect x="99.7561%" y="533" width="0.0647%" height="15" fill="rgb(233,98,36)"/><text x="100.0061%" y="543.50"></text></g><g><title>grab_cache_page_write_begin (7 samples, 0.03%)</title><rect x="99.7859%" y="517" width="0.0348%" height="15" fill="rgb(216,153,54)"/><text x="100.0359%" y="527.50"></text></g><g><title>pagecache_get_page (7 samples, 0.03%)</title><rect x="99.7859%" y="501" width="0.0348%" height="15" fill="rgb(250,99,7)"/><text x="100.0359%" y="511.50"></text></g><g><title>ext4_da_write_end (6 samples, 0.03%)</title><rect x="99.8208%" y="533" width="0.0299%" height="15" fill="rgb(207,56,50)"/><text x="100.0708%" y="543.50"></text></g><g><title>generic_write_end (4 samples, 0.02%)</title><rect x="99.8307%" y="517" width="0.0199%" height="15" fill="rgb(244,61,34)"/><text x="100.0807%" y="527.50"></text></g><g><title>__mark_inode_dirty (3 samples, 0.01%)</title><rect x="99.8357%" y="501" width="0.0149%" height="15" fill="rgb(241,50,38)"/><text x="100.0857%" y="511.50"></text></g><g><title>iov_iter_copy_from_user_atomic (3 samples, 0.01%)</title><rect x="99.8507%" y="533" width="0.0149%" height="15" fill="rgb(212,166,30)"/><text x="100.1007%" y="543.50"></text></g><g><title>do_syscall_64 (42 samples, 0.21%)</title><rect x="99.6615%" y="629" width="0.2091%" height="15" fill="rgb(249,127,32)"/><text x="99.9115%" y="639.50"></text></g><g><title>ksys_write (26 samples, 0.13%)</title><rect x="99.7411%" y="613" width="0.1294%" height="15" fill="rgb(209,103,0)"/><text x="99.9911%" y="623.50"></text></g><g><title>vfs_write (25 samples, 0.12%)</title><rect x="99.7461%" y="597" width="0.1245%" height="15" fill="rgb(238,209,51)"/><text x="99.9961%" y="607.50"></text></g><g><title>new_sync_write (23 samples, 0.11%)</title><rect x="99.7561%" y="581" width="0.1145%" height="15" fill="rgb(237,56,23)"/><text x="100.0061%" y="591.50"></text></g><g><title>ext4_buffered_write_iter (23 samples, 0.11%)</title><rect x="99.7561%" y="565" width="0.1145%" height="15" fill="rgb(215,153,46)"/><text x="100.0061%" y="575.50"></text></g><g><title>generic_perform_write (23 samples, 0.11%)</title><rect x="99.7561%" y="549" width="0.1145%" height="15" fill="rgb(224,49,31)"/><text x="100.0061%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (46 samples, 0.23%)</title><rect x="99.6615%" y="645" width="0.2290%" height="15" fill="rgb(250,18,42)"/><text x="99.9115%" y="655.50"></text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.02%)</title><rect x="99.8706%" y="629" width="0.0199%" height="15" fill="rgb(215,176,39)"/><text x="100.1206%" y="639.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (14 samples, 0.07%)</title><rect x="99.8905%" y="645" width="0.0697%" height="15" fill="rgb(223,77,29)"/><text x="100.1405%" y="655.50"></text></g><g><title>malloc_consolidate (3 samples, 0.01%)</title><rect x="99.9602%" y="645" width="0.0149%" height="15" fill="rgb(234,94,52)"/><text x="100.2102%" y="655.50"></text></g><g><title>all (20,088 samples, 100%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(220,154,50)"/><text x="0.2500%" y="687.50"></text></g><g><title>tokio-runtime-w (10,681 samples, 53.17%)</title><rect x="46.8290%" y="661" width="53.1710%" height="15" fill="rgb(212,11,10)"/><text x="47.0790%" y="671.50">tokio-runtime-w</text></g><g><title>syscall_return_via_sysret (3 samples, 0.01%)</title><rect x="99.9851%" y="645" width="0.0149%" height="15" fill="rgb(205,166,19)"/><text x="100.2351%" y="655.50"></text></g></svg></svg>