<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="806" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="789.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="789.00"> </text><svg id="frames" x="10" width="1180"><g><title>perf_5.10 (5 samples, 0.02%)</title><rect x="0.0000%" y="741" width="0.0160%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="0.0000%" y="725" width="0.0160%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="735.50"></text></g><g><title>do_syscall_64 (5 samples, 0.02%)</title><rect x="0.0000%" y="709" width="0.0160%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="719.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.02%)</title><rect x="0.0000%" y="693" width="0.0160%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="703.50"></text></g><g><title>do_execveat_common (5 samples, 0.02%)</title><rect x="0.0000%" y="677" width="0.0160%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="687.50"></text></g><g><title>bprm_execve (5 samples, 0.02%)</title><rect x="0.0000%" y="661" width="0.0160%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="671.50"></text></g><g><title>load_elf_binary (5 samples, 0.02%)</title><rect x="0.0000%" y="645" width="0.0160%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="655.50"></text></g><g><title>begin_new_exec (5 samples, 0.02%)</title><rect x="0.0000%" y="629" width="0.0160%" height="15" fill="rgb(228,23,34)"/><text x="0.2500%" y="639.50"></text></g><g><title>perf_event_exec (5 samples, 0.02%)</title><rect x="0.0000%" y="613" width="0.0160%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="623.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.02%)</title><rect x="0.0000%" y="597" width="0.0160%" height="15" fill="rgb(220,122,19)"/><text x="0.2500%" y="607.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="0.0000%" y="581" width="0.0160%" height="15" fill="rgb(250,228,42)"/><text x="0.2500%" y="591.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::validator::EventValidator&gt;::validate (4 samples, 0.01%)</title><rect x="0.1604%" y="709" width="0.0128%" height="15" fill="rgb(240,193,28)"/><text x="0.4104%" y="719.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.01%)</title><rect x="0.1893%" y="709" width="0.0128%" height="15" fill="rgb(216,20,37)"/><text x="0.4393%" y="719.50"></text></g><g><title>_int_free (4 samples, 0.01%)</title><rect x="0.2118%" y="709" width="0.0128%" height="15" fill="rgb(206,188,39)"/><text x="0.4618%" y="719.50"></text></g><g><title>_int_malloc (8 samples, 0.03%)</title><rect x="0.2246%" y="709" width="0.0257%" height="15" fill="rgb(217,207,13)"/><text x="0.4746%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (36 samples, 0.12%)</title><rect x="0.2599%" y="709" width="0.1155%" height="15" fill="rgb(231,73,38)"/><text x="0.5099%" y="719.50"></text></g><g><title>ate::accessor::ChainProtectedAsync::process (5 samples, 0.02%)</title><rect x="0.3851%" y="709" width="0.0160%" height="15" fill="rgb(225,20,46)"/><text x="0.6351%" y="719.50"></text></g><g><title>[[heap]] (109 samples, 0.35%)</title><rect x="0.1316%" y="725" width="0.3498%" height="15" fill="rgb(210,31,41)"/><text x="0.3816%" y="735.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (8 samples, 0.03%)</title><rect x="0.4813%" y="709" width="0.0257%" height="15" fill="rgb(221,200,47)"/><text x="0.7313%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="0.5070%" y="709" width="0.0546%" height="15" fill="rgb(226,26,5)"/><text x="0.7570%" y="719.50"></text></g><g><title>&lt;ate::redo::LogFile as ate::spec::LogApi&gt;::read_u8 (5 samples, 0.02%)</title><rect x="0.5904%" y="709" width="0.0160%" height="15" fill="rgb(249,33,26)"/><text x="0.8404%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.04%)</title><rect x="0.6097%" y="709" width="0.0449%" height="15" fill="rgb(235,183,28)"/><text x="0.8597%" y="719.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (7 samples, 0.02%)</title><rect x="0.6578%" y="709" width="0.0225%" height="15" fill="rgb(221,5,38)"/><text x="0.9078%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.01%)</title><rect x="0.7060%" y="645" width="0.0128%" height="15" fill="rgb(247,18,42)"/><text x="0.9560%" y="655.50"></text></g><g><title>[stress] (9 samples, 0.03%)</title><rect x="0.7060%" y="709" width="0.0289%" height="15" fill="rgb(241,131,45)"/><text x="0.9560%" y="719.50"></text></g><g><title>tokio::park::thread::Inner::park (9 samples, 0.03%)</title><rect x="0.7060%" y="693" width="0.0289%" height="15" fill="rgb(249,31,29)"/><text x="0.9560%" y="703.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (9 samples, 0.03%)</title><rect x="0.7060%" y="677" width="0.0289%" height="15" fill="rgb(225,111,53)"/><text x="0.9560%" y="687.50"></text></g><g><title>syscall (9 samples, 0.03%)</title><rect x="0.7060%" y="661" width="0.0289%" height="15" fill="rgb(238,160,17)"/><text x="0.9560%" y="671.50"></text></g><g><title>error_entry (5 samples, 0.02%)</title><rect x="0.7188%" y="645" width="0.0160%" height="15" fill="rgb(214,148,48)"/><text x="0.9688%" y="655.50"></text></g><g><title>__libc_calloc (8 samples, 0.03%)</title><rect x="0.7381%" y="709" width="0.0257%" height="15" fill="rgb(232,36,49)"/><text x="0.9881%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.01%)</title><rect x="0.7637%" y="709" width="0.0128%" height="15" fill="rgb(209,103,24)"/><text x="1.0137%" y="719.50"></text></g><g><title>_int_free (43 samples, 0.14%)</title><rect x="0.7766%" y="709" width="0.1380%" height="15" fill="rgb(229,88,8)"/><text x="1.0266%" y="719.50"></text></g><g><title>_int_malloc (8 samples, 0.03%)</title><rect x="0.9145%" y="709" width="0.0257%" height="15" fill="rgb(213,181,19)"/><text x="1.1645%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (30 samples, 0.10%)</title><rect x="0.9402%" y="709" width="0.0963%" height="15" fill="rgb(254,191,54)"/><text x="1.1902%" y="719.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (7 samples, 0.02%)</title><rect x="1.0429%" y="709" width="0.0225%" height="15" fill="rgb(241,83,37)"/><text x="1.2929%" y="719.50"></text></g><g><title>ate::redo::RedoLog::new::{{closure}} (29 samples, 0.09%)</title><rect x="1.1071%" y="709" width="0.0931%" height="15" fill="rgb(233,36,39)"/><text x="1.3571%" y="719.50"></text></g><g><title>blake3::ChunkState::update (6 samples, 0.02%)</title><rect x="1.2034%" y="709" width="0.0193%" height="15" fill="rgb(226,3,54)"/><text x="1.4534%" y="719.50"></text></g><g><title>blake3::Hasher::update (4 samples, 0.01%)</title><rect x="1.2258%" y="709" width="0.0128%" height="15" fill="rgb(245,192,40)"/><text x="1.4758%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (21 samples, 0.07%)</title><rect x="1.2611%" y="709" width="0.0674%" height="15" fill="rgb(238,167,29)"/><text x="1.5111%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (22 samples, 0.07%)</title><rect x="1.3381%" y="709" width="0.0706%" height="15" fill="rgb(232,182,51)"/><text x="1.5881%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.02%)</title><rect x="1.4119%" y="709" width="0.0160%" height="15" fill="rgb(231,60,39)"/><text x="1.6619%" y="719.50"></text></g><g><title>stress::_::&lt;impl serde::ser::Serialize for stress::MyTestObject&gt;::serialize (4 samples, 0.01%)</title><rect x="1.4312%" y="709" width="0.0128%" height="15" fill="rgb(208,69,12)"/><text x="1.6812%" y="719.50"></text></g><g><title>[[stack]] (302 samples, 0.97%)</title><rect x="0.4813%" y="725" width="0.9691%" height="15" fill="rgb(235,93,37)"/><text x="0.7313%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19 samples, 0.06%)</title><rect x="1.5082%" y="629" width="0.0610%" height="15" fill="rgb(213,116,39)"/><text x="1.7582%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19 samples, 0.06%)</title><rect x="1.5082%" y="613" width="0.0610%" height="15" fill="rgb(222,207,29)"/><text x="1.7582%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 0.06%)</title><rect x="1.5082%" y="597" width="0.0610%" height="15" fill="rgb(206,96,30)"/><text x="1.7582%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.06%)</title><rect x="1.5082%" y="581" width="0.0610%" height="15" fill="rgb(218,138,4)"/><text x="1.7582%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.06%)</title><rect x="1.5082%" y="565" width="0.0610%" height="15" fill="rgb(250,191,14)"/><text x="1.7582%" y="575.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.06%)</title><rect x="1.5082%" y="549" width="0.0610%" height="15" fill="rgb(239,60,40)"/><text x="1.7582%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (39 samples, 0.13%)</title><rect x="1.4889%" y="709" width="0.1251%" height="15" fill="rgb(206,27,48)"/><text x="1.7389%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (33 samples, 0.11%)</title><rect x="1.5082%" y="693" width="0.1059%" height="15" fill="rgb(225,35,8)"/><text x="1.7582%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (33 samples, 0.11%)</title><rect x="1.5082%" y="677" width="0.1059%" height="15" fill="rgb(250,213,24)"/><text x="1.7582%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (33 samples, 0.11%)</title><rect x="1.5082%" y="661" width="0.1059%" height="15" fill="rgb(247,123,22)"/><text x="1.7582%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (33 samples, 0.11%)</title><rect x="1.5082%" y="645" width="0.1059%" height="15" fill="rgb(231,138,38)"/><text x="1.7582%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (14 samples, 0.04%)</title><rect x="1.5692%" y="629" width="0.0449%" height="15" fill="rgb(231,145,46)"/><text x="1.8192%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.04%)</title><rect x="1.5692%" y="613" width="0.0449%" height="15" fill="rgb(251,118,11)"/><text x="1.8192%" y="623.50"></text></g><g><title>&lt;ate::meta::_::&lt;impl serde::de::Deserialize for ate::meta::CoreMetadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (12 samples, 0.04%)</title><rect x="1.6205%" y="709" width="0.0385%" height="15" fill="rgb(217,147,25)"/><text x="1.8705%" y="719.50"></text></g><g><title>__GI___libc_free (42 samples, 0.13%)</title><rect x="1.7745%" y="693" width="0.1348%" height="15" fill="rgb(247,81,37)"/><text x="2.0245%" y="703.50"></text></g><g><title>free_unref_page_list (5 samples, 0.02%)</title><rect x="1.9286%" y="517" width="0.0160%" height="15" fill="rgb(209,12,38)"/><text x="2.1786%" y="527.50"></text></g><g><title>__GI_munmap (12 samples, 0.04%)</title><rect x="1.9093%" y="693" width="0.0385%" height="15" fill="rgb(227,1,9)"/><text x="2.1593%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.04%)</title><rect x="1.9093%" y="677" width="0.0385%" height="15" fill="rgb(248,47,43)"/><text x="2.1593%" y="687.50"></text></g><g><title>do_syscall_64 (12 samples, 0.04%)</title><rect x="1.9093%" y="661" width="0.0385%" height="15" fill="rgb(221,10,30)"/><text x="2.1593%" y="671.50"></text></g><g><title>__x64_sys_munmap (12 samples, 0.04%)</title><rect x="1.9093%" y="645" width="0.0385%" height="15" fill="rgb(210,229,1)"/><text x="2.1593%" y="655.50"></text></g><g><title>__vm_munmap (12 samples, 0.04%)</title><rect x="1.9093%" y="629" width="0.0385%" height="15" fill="rgb(222,148,37)"/><text x="2.1593%" y="639.50"></text></g><g><title>__do_munmap (12 samples, 0.04%)</title><rect x="1.9093%" y="613" width="0.0385%" height="15" fill="rgb(234,67,33)"/><text x="2.1593%" y="623.50"></text></g><g><title>unmap_region (12 samples, 0.04%)</title><rect x="1.9093%" y="597" width="0.0385%" height="15" fill="rgb(247,98,35)"/><text x="2.1593%" y="607.50"></text></g><g><title>unmap_vmas (12 samples, 0.04%)</title><rect x="1.9093%" y="581" width="0.0385%" height="15" fill="rgb(247,138,52)"/><text x="2.1593%" y="591.50"></text></g><g><title>unmap_page_range (12 samples, 0.04%)</title><rect x="1.9093%" y="565" width="0.0385%" height="15" fill="rgb(213,79,30)"/><text x="2.1593%" y="575.50"></text></g><g><title>tlb_flush_mmu (8 samples, 0.03%)</title><rect x="1.9222%" y="549" width="0.0257%" height="15" fill="rgb(246,177,23)"/><text x="2.1722%" y="559.50"></text></g><g><title>release_pages (8 samples, 0.03%)</title><rect x="1.9222%" y="533" width="0.0257%" height="15" fill="rgb(230,62,27)"/><text x="2.1722%" y="543.50"></text></g><g><title>_int_free (98 samples, 0.31%)</title><rect x="1.9607%" y="693" width="0.3145%" height="15" fill="rgb(216,154,8)"/><text x="2.2107%" y="703.50"></text></g><g><title>unlink_chunk (35 samples, 0.11%)</title><rect x="2.1628%" y="677" width="0.1123%" height="15" fill="rgb(244,35,45)"/><text x="2.4128%" y="687.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.01%)</title><rect x="2.2880%" y="613" width="0.0128%" height="15" fill="rgb(251,115,12)"/><text x="2.5380%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="2.2751%" y="693" width="0.0289%" height="15" fill="rgb(240,54,50)"/><text x="2.5251%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.03%)</title><rect x="2.2751%" y="677" width="0.0289%" height="15" fill="rgb(233,84,52)"/><text x="2.5251%" y="687.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.03%)</title><rect x="2.2751%" y="661" width="0.0289%" height="15" fill="rgb(207,117,47)"/><text x="2.5251%" y="671.50"></text></g><g><title>_int_realloc (9 samples, 0.03%)</title><rect x="2.2751%" y="645" width="0.0289%" height="15" fill="rgb(249,43,39)"/><text x="2.5251%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.03%)</title><rect x="2.2751%" y="629" width="0.0289%" height="15" fill="rgb(209,38,44)"/><text x="2.5251%" y="639.50"></text></g><g><title>__list_del_entry_valid (5 samples, 0.02%)</title><rect x="2.3233%" y="581" width="0.0160%" height="15" fill="rgb(236,212,23)"/><text x="2.5733%" y="591.50"></text></g><g><title>alloc_pages_vma (15 samples, 0.05%)</title><rect x="2.3201%" y="629" width="0.0481%" height="15" fill="rgb(242,79,21)"/><text x="2.5701%" y="639.50"></text></g><g><title>__alloc_pages_nodemask (15 samples, 0.05%)</title><rect x="2.3201%" y="613" width="0.0481%" height="15" fill="rgb(211,96,35)"/><text x="2.5701%" y="623.50"></text></g><g><title>get_page_from_freelist (15 samples, 0.05%)</title><rect x="2.3201%" y="597" width="0.0481%" height="15" fill="rgb(253,215,40)"/><text x="2.5701%" y="607.50"></text></g><g><title>prep_new_page (9 samples, 0.03%)</title><rect x="2.3393%" y="581" width="0.0289%" height="15" fill="rgb(211,81,21)"/><text x="2.5893%" y="591.50"></text></g><g><title>kernel_init_free_pages (8 samples, 0.03%)</title><rect x="2.3425%" y="565" width="0.0257%" height="15" fill="rgb(208,190,38)"/><text x="2.5925%" y="575.50"></text></g><g><title>clear_page_erms (8 samples, 0.03%)</title><rect x="2.3425%" y="549" width="0.0257%" height="15" fill="rgb(235,213,38)"/><text x="2.5925%" y="559.50"></text></g><g><title>lru_cache_add (5 samples, 0.02%)</title><rect x="2.3714%" y="629" width="0.0160%" height="15" fill="rgb(237,122,38)"/><text x="2.6214%" y="639.50"></text></g><g><title>pagevec_lru_move_fn (4 samples, 0.01%)</title><rect x="2.3746%" y="613" width="0.0128%" height="15" fill="rgb(244,218,35)"/><text x="2.6246%" y="623.50"></text></g><g><title>exc_page_fault (30 samples, 0.10%)</title><rect x="2.3040%" y="677" width="0.0963%" height="15" fill="rgb(240,68,47)"/><text x="2.5540%" y="687.50"></text></g><g><title>do_user_addr_fault (30 samples, 0.10%)</title><rect x="2.3040%" y="661" width="0.0963%" height="15" fill="rgb(210,16,53)"/><text x="2.5540%" y="671.50"></text></g><g><title>handle_mm_fault (29 samples, 0.09%)</title><rect x="2.3072%" y="645" width="0.0931%" height="15" fill="rgb(235,124,12)"/><text x="2.5572%" y="655.50"></text></g><g><title>mem_cgroup_charge (4 samples, 0.01%)</title><rect x="2.3874%" y="629" width="0.0128%" height="15" fill="rgb(224,169,11)"/><text x="2.6374%" y="639.50"></text></g><g><title>asm_exc_page_fault (41 samples, 0.13%)</title><rect x="2.3040%" y="693" width="0.1316%" height="15" fill="rgb(250,166,2)"/><text x="2.5540%" y="703.50"></text></g><g><title>irqentry_exit_to_user_mode (11 samples, 0.04%)</title><rect x="2.4003%" y="677" width="0.0353%" height="15" fill="rgb(242,216,29)"/><text x="2.6503%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (5 samples, 0.02%)</title><rect x="2.6795%" y="645" width="0.0160%" height="15" fill="rgb(230,116,27)"/><text x="2.9295%" y="655.50"></text></g><g><title>exc_page_fault (5 samples, 0.02%)</title><rect x="2.7789%" y="597" width="0.0160%" height="15" fill="rgb(228,99,48)"/><text x="3.0289%" y="607.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.02%)</title><rect x="2.7789%" y="581" width="0.0160%" height="15" fill="rgb(253,11,6)"/><text x="3.0289%" y="591.50"></text></g><g><title>handle_mm_fault (5 samples, 0.02%)</title><rect x="2.7789%" y="565" width="0.0160%" height="15" fill="rgb(247,143,39)"/><text x="3.0289%" y="575.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.02%)</title><rect x="2.7789%" y="613" width="0.0225%" height="15" fill="rgb(236,97,10)"/><text x="3.0289%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (6 samples, 0.02%)</title><rect x="2.8014%" y="613" width="0.0193%" height="15" fill="rgb(233,208,19)"/><text x="3.0514%" y="623.50"></text></g><g><title>&lt;ate::anti_replay::AntiReplayPlugin as ate::sink::EventSink&gt;::feed (54 samples, 0.17%)</title><rect x="2.6506%" y="677" width="0.1733%" height="15" fill="rgb(216,164,2)"/><text x="2.9006%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (53 samples, 0.17%)</title><rect x="2.6538%" y="661" width="0.1701%" height="15" fill="rgb(220,129,5)"/><text x="2.9038%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (40 samples, 0.13%)</title><rect x="2.6955%" y="645" width="0.1284%" height="15" fill="rgb(242,17,10)"/><text x="2.9455%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (34 samples, 0.11%)</title><rect x="2.7148%" y="629" width="0.1091%" height="15" fill="rgb(242,107,0)"/><text x="2.9648%" y="639.50"></text></g><g><title>&lt;ate::anti_replay::AntiReplayPlugin as ate::validator::EventValidator&gt;::validate (56 samples, 0.18%)</title><rect x="2.8239%" y="677" width="0.1797%" height="15" fill="rgb(251,28,31)"/><text x="3.0739%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="2.9875%" y="661" width="0.0160%" height="15" fill="rgb(233,223,10)"/><text x="3.2375%" y="671.50"></text></g><g><title>&lt;ate::time::TimestampEnforcer as ate::sink::EventSink&gt;::feed (4 samples, 0.01%)</title><rect x="3.0036%" y="677" width="0.0128%" height="15" fill="rgb(215,21,27)"/><text x="3.2536%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.01%)</title><rect x="3.2988%" y="629" width="0.0128%" height="15" fill="rgb(232,23,21)"/><text x="3.5488%" y="639.50"></text></g><g><title>std::time::SystemTime::duration_since (10 samples, 0.03%)</title><rect x="3.2988%" y="645" width="0.0321%" height="15" fill="rgb(244,5,23)"/><text x="3.5488%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (6 samples, 0.02%)</title><rect x="3.3116%" y="629" width="0.0193%" height="15" fill="rgb(226,81,46)"/><text x="3.5616%" y="639.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (6 samples, 0.02%)</title><rect x="3.3116%" y="613" width="0.0193%" height="15" fill="rgb(247,70,30)"/><text x="3.5616%" y="623.50"></text></g><g><title>&lt;ate::time::TimestampEnforcer as ate::validator::EventValidator&gt;::validate (112 samples, 0.36%)</title><rect x="3.0164%" y="677" width="0.3594%" height="15" fill="rgb(212,68,19)"/><text x="3.2664%" y="687.50"></text></g><g><title>ate::time::TimestampEnforcer::current_timestamp (37 samples, 0.12%)</title><rect x="3.2571%" y="661" width="0.1187%" height="15" fill="rgb(240,187,13)"/><text x="3.5071%" y="671.50"></text></g><g><title>std::time::SystemTime::now (14 samples, 0.04%)</title><rect x="3.3309%" y="645" width="0.0449%" height="15" fill="rgb(223,113,26)"/><text x="3.5809%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (14 samples, 0.04%)</title><rect x="3.3309%" y="629" width="0.0449%" height="15" fill="rgb(206,192,2)"/><text x="3.5809%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::now (14 samples, 0.04%)</title><rect x="3.3309%" y="613" width="0.0449%" height="15" fill="rgb(241,108,4)"/><text x="3.5809%" y="623.50"></text></g><g><title>__GI___clock_gettime (13 samples, 0.04%)</title><rect x="3.3341%" y="597" width="0.0417%" height="15" fill="rgb(247,173,49)"/><text x="3.5841%" y="607.50"></text></g><g><title>__vdso_clock_gettime (11 samples, 0.04%)</title><rect x="3.3405%" y="581" width="0.0353%" height="15" fill="rgb(224,114,35)"/><text x="3.5905%" y="591.50"></text></g><g><title>[[vdso]] (9 samples, 0.03%)</title><rect x="3.3469%" y="565" width="0.0289%" height="15" fill="rgb(245,159,27)"/><text x="3.5969%" y="575.50"></text></g><g><title>&lt;ate::signature::SignaturePlugin as ate::sink::EventSink&gt;::feed (12 samples, 0.04%)</title><rect x="3.4111%" y="661" width="0.0385%" height="15" fill="rgb(245,172,44)"/><text x="3.6611%" y="671.50"></text></g><g><title>ate::tree::TreeAuthorityPlugin::compute_auth (33 samples, 0.11%)</title><rect x="3.4496%" y="661" width="0.1059%" height="15" fill="rgb(236,23,11)"/><text x="3.6996%" y="671.50"></text></g><g><title>__GI_munmap (8 samples, 0.03%)</title><rect x="3.8186%" y="613" width="0.0257%" height="15" fill="rgb(205,117,38)"/><text x="4.0686%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.03%)</title><rect x="3.8186%" y="597" width="0.0257%" height="15" fill="rgb(237,72,25)"/><text x="4.0686%" y="607.50"></text></g><g><title>do_syscall_64 (8 samples, 0.03%)</title><rect x="3.8186%" y="581" width="0.0257%" height="15" fill="rgb(244,70,9)"/><text x="4.0686%" y="591.50"></text></g><g><title>__x64_sys_munmap (8 samples, 0.03%)</title><rect x="3.8186%" y="565" width="0.0257%" height="15" fill="rgb(217,125,39)"/><text x="4.0686%" y="575.50"></text></g><g><title>__vm_munmap (8 samples, 0.03%)</title><rect x="3.8186%" y="549" width="0.0257%" height="15" fill="rgb(235,36,10)"/><text x="4.0686%" y="559.50"></text></g><g><title>__do_munmap (8 samples, 0.03%)</title><rect x="3.8186%" y="533" width="0.0257%" height="15" fill="rgb(251,123,47)"/><text x="4.0686%" y="543.50"></text></g><g><title>unmap_region (8 samples, 0.03%)</title><rect x="3.8186%" y="517" width="0.0257%" height="15" fill="rgb(221,13,13)"/><text x="4.0686%" y="527.50"></text></g><g><title>unmap_vmas (6 samples, 0.02%)</title><rect x="3.8250%" y="501" width="0.0193%" height="15" fill="rgb(238,131,9)"/><text x="4.0750%" y="511.50"></text></g><g><title>unmap_page_range (6 samples, 0.02%)</title><rect x="3.8250%" y="485" width="0.0193%" height="15" fill="rgb(211,50,8)"/><text x="4.0750%" y="495.50"></text></g><g><title>alloc_pages_vma (13 samples, 0.04%)</title><rect x="3.8603%" y="549" width="0.0417%" height="15" fill="rgb(245,182,24)"/><text x="4.1103%" y="559.50"></text></g><g><title>__alloc_pages_nodemask (13 samples, 0.04%)</title><rect x="3.8603%" y="533" width="0.0417%" height="15" fill="rgb(242,14,37)"/><text x="4.1103%" y="543.50"></text></g><g><title>get_page_from_freelist (11 samples, 0.04%)</title><rect x="3.8668%" y="517" width="0.0353%" height="15" fill="rgb(246,228,12)"/><text x="4.1168%" y="527.50"></text></g><g><title>prep_new_page (10 samples, 0.03%)</title><rect x="3.8700%" y="501" width="0.0321%" height="15" fill="rgb(213,55,15)"/><text x="4.1200%" y="511.50"></text></g><g><title>kernel_init_free_pages (10 samples, 0.03%)</title><rect x="3.8700%" y="485" width="0.0321%" height="15" fill="rgb(209,9,3)"/><text x="4.1200%" y="495.50"></text></g><g><title>clear_page_erms (10 samples, 0.03%)</title><rect x="3.8700%" y="469" width="0.0321%" height="15" fill="rgb(230,59,30)"/><text x="4.1200%" y="479.50"></text></g><g><title>exc_page_fault (22 samples, 0.07%)</title><rect x="3.8539%" y="597" width="0.0706%" height="15" fill="rgb(209,121,21)"/><text x="4.1039%" y="607.50"></text></g><g><title>do_user_addr_fault (22 samples, 0.07%)</title><rect x="3.8539%" y="581" width="0.0706%" height="15" fill="rgb(220,109,13)"/><text x="4.1039%" y="591.50"></text></g><g><title>handle_mm_fault (22 samples, 0.07%)</title><rect x="3.8539%" y="565" width="0.0706%" height="15" fill="rgb(232,18,1)"/><text x="4.1039%" y="575.50"></text></g><g><title>mem_cgroup_charge (5 samples, 0.02%)</title><rect x="3.9085%" y="549" width="0.0160%" height="15" fill="rgb(215,41,42)"/><text x="4.1585%" y="559.50"></text></g><g><title>asm_exc_page_fault (31 samples, 0.10%)</title><rect x="3.8539%" y="613" width="0.0995%" height="15" fill="rgb(224,123,36)"/><text x="4.1039%" y="623.50"></text></g><g><title>irqentry_exit_to_user_mode (9 samples, 0.03%)</title><rect x="3.9245%" y="597" width="0.0289%" height="15" fill="rgb(240,125,3)"/><text x="4.1745%" y="607.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::sink::EventSink&gt;::feed (187 samples, 0.60%)</title><rect x="3.3758%" y="677" width="0.6001%" height="15" fill="rgb(205,98,50)"/><text x="3.6258%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (131 samples, 0.42%)</title><rect x="3.5555%" y="661" width="0.4204%" height="15" fill="rgb(205,185,37)"/><text x="3.8055%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (126 samples, 0.40%)</title><rect x="3.5715%" y="645" width="0.4043%" height="15" fill="rgb(238,207,15)"/><text x="3.8215%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (99 samples, 0.32%)</title><rect x="3.6582%" y="629" width="0.3177%" height="15" fill="rgb(213,199,42)"/><text x="3.9082%" y="639.50"></text></g><g><title>error_entry (7 samples, 0.02%)</title><rect x="3.9534%" y="613" width="0.0225%" height="15" fill="rgb(235,201,11)"/><text x="4.2034%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (34 samples, 0.11%)</title><rect x="3.9887%" y="645" width="0.1091%" height="15" fill="rgb(207,46,11)"/><text x="4.2387%" y="655.50"></text></g><g><title>blake3::Hasher::finalize (13 samples, 0.04%)</title><rect x="4.0978%" y="645" width="0.0417%" height="15" fill="rgb(241,35,35)"/><text x="4.3478%" y="655.50"></text></g><g><title>blake3::Hasher::final_output (10 samples, 0.03%)</title><rect x="4.1074%" y="629" width="0.0321%" height="15" fill="rgb(243,32,47)"/><text x="4.3574%" y="639.50"></text></g><g><title>blake3::ChunkState::update (10 samples, 0.03%)</title><rect x="4.1524%" y="629" width="0.0321%" height="15" fill="rgb(247,202,23)"/><text x="4.4024%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.02%)</title><rect x="4.1684%" y="613" width="0.0160%" height="15" fill="rgb(219,102,11)"/><text x="4.4184%" y="623.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (66 samples, 0.21%)</title><rect x="3.9823%" y="661" width="0.2118%" height="15" fill="rgb(243,110,44)"/><text x="4.2323%" y="671.50"></text></g><g><title>blake3::Hasher::update (17 samples, 0.05%)</title><rect x="4.1395%" y="645" width="0.0546%" height="15" fill="rgb(222,74,54)"/><text x="4.3895%" y="655.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::validator::EventValidator&gt;::validate (187 samples, 0.60%)</title><rect x="3.9759%" y="677" width="0.6001%" height="15" fill="rgb(216,99,12)"/><text x="4.2259%" y="687.50"></text></g><g><title>ate::tree::TreeAuthorityPlugin::compute_auth (119 samples, 0.38%)</title><rect x="4.1941%" y="661" width="0.3819%" height="15" fill="rgb(226,22,26)"/><text x="4.4441%" y="671.50"></text></g><g><title>__GI___libc_free (6 samples, 0.02%)</title><rect x="4.5759%" y="677" width="0.0193%" height="15" fill="rgb(217,163,10)"/><text x="4.8259%" y="687.50"></text></g><g><title>__GI_munmap (7 samples, 0.02%)</title><rect x="4.5952%" y="677" width="0.0225%" height="15" fill="rgb(213,25,53)"/><text x="4.8452%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.02%)</title><rect x="4.5952%" y="661" width="0.0225%" height="15" fill="rgb(252,105,26)"/><text x="4.8452%" y="671.50"></text></g><g><title>do_syscall_64 (7 samples, 0.02%)</title><rect x="4.5952%" y="645" width="0.0225%" height="15" fill="rgb(220,39,43)"/><text x="4.8452%" y="655.50"></text></g><g><title>__x64_sys_munmap (7 samples, 0.02%)</title><rect x="4.5952%" y="629" width="0.0225%" height="15" fill="rgb(229,68,48)"/><text x="4.8452%" y="639.50"></text></g><g><title>__vm_munmap (7 samples, 0.02%)</title><rect x="4.5952%" y="613" width="0.0225%" height="15" fill="rgb(252,8,32)"/><text x="4.8452%" y="623.50"></text></g><g><title>__do_munmap (7 samples, 0.02%)</title><rect x="4.5952%" y="597" width="0.0225%" height="15" fill="rgb(223,20,43)"/><text x="4.8452%" y="607.50"></text></g><g><title>unmap_region (7 samples, 0.02%)</title><rect x="4.5952%" y="581" width="0.0225%" height="15" fill="rgb(229,81,49)"/><text x="4.8452%" y="591.50"></text></g><g><title>unmap_vmas (6 samples, 0.02%)</title><rect x="4.5984%" y="565" width="0.0193%" height="15" fill="rgb(236,28,36)"/><text x="4.8484%" y="575.50"></text></g><g><title>unmap_page_range (6 samples, 0.02%)</title><rect x="4.5984%" y="549" width="0.0193%" height="15" fill="rgb(249,185,26)"/><text x="4.8484%" y="559.50"></text></g><g><title>_int_free (155 samples, 0.50%)</title><rect x="4.6241%" y="677" width="0.4974%" height="15" fill="rgb(249,174,33)"/><text x="4.8741%" y="687.50"></text></g><g><title>unlink_chunk (64 samples, 0.21%)</title><rect x="4.9161%" y="661" width="0.2054%" height="15" fill="rgb(233,201,37)"/><text x="5.1661%" y="671.50"></text></g><g><title>__GI___libc_malloc (61 samples, 0.20%)</title><rect x="5.7023%" y="629" width="0.1957%" height="15" fill="rgb(221,78,26)"/><text x="5.9523%" y="639.50"></text></g><g><title>_int_malloc (55 samples, 0.18%)</title><rect x="5.7215%" y="613" width="0.1765%" height="15" fill="rgb(250,127,30)"/><text x="5.9715%" y="623.50"></text></g><g><title>unlink_chunk (24 samples, 0.08%)</title><rect x="5.8210%" y="597" width="0.0770%" height="15" fill="rgb(230,49,44)"/><text x="6.0710%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.02%)</title><rect x="5.8980%" y="629" width="0.0160%" height="15" fill="rgb(229,67,23)"/><text x="6.1480%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (106 samples, 0.34%)</title><rect x="5.5771%" y="661" width="0.3401%" height="15" fill="rgb(249,83,47)"/><text x="5.8271%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (97 samples, 0.31%)</title><rect x="5.6060%" y="645" width="0.3113%" height="15" fill="rgb(215,43,3)"/><text x="5.8560%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (250 samples, 0.80%)</title><rect x="5.1215%" y="677" width="0.8022%" height="15" fill="rgb(238,154,13)"/><text x="5.3715%" y="687.50"></text></g><g><title>_int_free (5 samples, 0.02%)</title><rect x="6.4114%" y="629" width="0.0160%" height="15" fill="rgb(219,56,2)"/><text x="6.6614%" y="639.50"></text></g><g><title>systrim (5 samples, 0.02%)</title><rect x="6.4114%" y="613" width="0.0160%" height="15" fill="rgb(233,0,4)"/><text x="6.6614%" y="623.50"></text></g><g><title>__GI___default_morecore (5 samples, 0.02%)</title><rect x="6.4114%" y="597" width="0.0160%" height="15" fill="rgb(235,30,7)"/><text x="6.6614%" y="607.50"></text></g><g><title>__GI___sbrk (5 samples, 0.02%)</title><rect x="6.4114%" y="581" width="0.0160%" height="15" fill="rgb(250,79,13)"/><text x="6.6614%" y="591.50"></text></g><g><title>__GI___sbrk (5 samples, 0.02%)</title><rect x="6.4114%" y="565" width="0.0160%" height="15" fill="rgb(211,146,34)"/><text x="6.6614%" y="575.50"></text></g><g><title>__brk (5 samples, 0.02%)</title><rect x="6.4114%" y="549" width="0.0160%" height="15" fill="rgb(228,22,38)"/><text x="6.6614%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="6.4114%" y="533" width="0.0160%" height="15" fill="rgb(235,168,5)"/><text x="6.6614%" y="543.50"></text></g><g><title>do_syscall_64 (5 samples, 0.02%)</title><rect x="6.4114%" y="517" width="0.0160%" height="15" fill="rgb(221,155,16)"/><text x="6.6614%" y="527.50"></text></g><g><title>__do_sys_brk (5 samples, 0.02%)</title><rect x="6.4114%" y="501" width="0.0160%" height="15" fill="rgb(215,215,53)"/><text x="6.6614%" y="511.50"></text></g><g><title>__do_munmap (5 samples, 0.02%)</title><rect x="6.4114%" y="485" width="0.0160%" height="15" fill="rgb(223,4,10)"/><text x="6.6614%" y="495.50"></text></g><g><title>unmap_region (5 samples, 0.02%)</title><rect x="6.4114%" y="469" width="0.0160%" height="15" fill="rgb(234,103,6)"/><text x="6.6614%" y="479.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.01%)</title><rect x="6.4275%" y="629" width="0.0128%" height="15" fill="rgb(227,97,0)"/><text x="6.6775%" y="639.50"></text></g><g><title>exc_page_fault (4 samples, 0.01%)</title><rect x="6.4275%" y="613" width="0.0128%" height="15" fill="rgb(234,150,53)"/><text x="6.6775%" y="623.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.01%)</title><rect x="6.4275%" y="597" width="0.0128%" height="15" fill="rgb(228,201,54)"/><text x="6.6775%" y="607.50"></text></g><g><title>handle_mm_fault (4 samples, 0.01%)</title><rect x="6.4275%" y="581" width="0.0128%" height="15" fill="rgb(222,22,37)"/><text x="6.6775%" y="591.50"></text></g><g><title>ate::index::BinaryTreeIndexer::feed (163 samples, 0.52%)</title><rect x="5.9237%" y="677" width="0.5231%" height="15" fill="rgb(237,53,32)"/><text x="6.1737%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (73 samples, 0.23%)</title><rect x="6.2125%" y="661" width="0.2343%" height="15" fill="rgb(233,25,53)"/><text x="6.4625%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (45 samples, 0.14%)</title><rect x="6.3023%" y="645" width="0.1444%" height="15" fill="rgb(210,40,34)"/><text x="6.5523%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="6.4467%" y="677" width="0.0160%" height="15" fill="rgb(241,220,44)"/><text x="6.6967%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4 samples, 0.01%)</title><rect x="6.7452%" y="661" width="0.0128%" height="15" fill="rgb(235,28,35)"/><text x="6.9952%" y="671.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.01%)</title><rect x="6.9313%" y="629" width="0.0128%" height="15" fill="rgb(210,56,17)"/><text x="7.1813%" y="639.50"></text></g><g><title>exc_page_fault (4 samples, 0.01%)</title><rect x="6.9313%" y="613" width="0.0128%" height="15" fill="rgb(224,130,29)"/><text x="7.1813%" y="623.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.01%)</title><rect x="6.9313%" y="597" width="0.0128%" height="15" fill="rgb(235,212,8)"/><text x="7.1813%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (10 samples, 0.03%)</title><rect x="6.9473%" y="629" width="0.0321%" height="15" fill="rgb(223,33,50)"/><text x="7.1973%" y="639.50"></text></g><g><title>ate::accessor::ChainProtectedAsync::process (1,417 samples, 4.55%)</title><rect x="2.4356%" y="693" width="4.5471%" height="15" fill="rgb(219,149,13)"/><text x="2.6856%" y="703.50">ate::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (162 samples, 0.52%)</title><rect x="6.4628%" y="677" width="0.5198%" height="15" fill="rgb(250,156,29)"/><text x="6.7128%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (70 samples, 0.22%)</title><rect x="6.7580%" y="661" width="0.2246%" height="15" fill="rgb(216,193,19)"/><text x="7.0080%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (31 samples, 0.10%)</title><rect x="6.8832%" y="645" width="0.0995%" height="15" fill="rgb(216,135,14)"/><text x="7.1332%" y="655.50"></text></g><g><title>&lt;ate::meta::_::&lt;impl serde::de::Deserialize for ate::meta::CoreMetadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (55 samples, 0.18%)</title><rect x="7.6244%" y="613" width="0.1765%" height="15" fill="rgb(241,47,5)"/><text x="7.8744%" y="623.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (20 samples, 0.06%)</title><rect x="7.7367%" y="597" width="0.0642%" height="15" fill="rgb(233,42,35)"/><text x="7.9867%" y="607.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.03%)</title><rect x="7.8009%" y="613" width="0.0257%" height="15" fill="rgb(231,13,6)"/><text x="8.0509%" y="623.50"></text></g><g><title>_int_malloc (4 samples, 0.01%)</title><rect x="7.8138%" y="597" width="0.0128%" height="15" fill="rgb(207,181,40)"/><text x="8.0638%" y="607.50"></text></g><g><title>ate::spec::SerializationFormat::deserialize (229 samples, 0.73%)</title><rect x="7.0982%" y="677" width="0.7348%" height="15" fill="rgb(254,173,49)"/><text x="7.3482%" y="687.50"></text></g><g><title>bincode::deserialize (226 samples, 0.73%)</title><rect x="7.1078%" y="661" width="0.7252%" height="15" fill="rgb(221,1,38)"/><text x="7.3578%" y="671.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (222 samples, 0.71%)</title><rect x="7.1206%" y="645" width="0.7124%" height="15" fill="rgb(206,124,46)"/><text x="7.3706%" y="655.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (166 samples, 0.53%)</title><rect x="7.3003%" y="629" width="0.5327%" height="15" fill="rgb(249,21,11)"/><text x="7.5503%" y="639.50"></text></g><g><title>_int_malloc (57 samples, 0.18%)</title><rect x="7.9582%" y="629" width="0.1829%" height="15" fill="rgb(222,201,40)"/><text x="8.2082%" y="639.50"></text></g><g><title>unlink_chunk (13 samples, 0.04%)</title><rect x="8.0993%" y="613" width="0.0417%" height="15" fill="rgb(235,61,29)"/><text x="8.3493%" y="623.50"></text></g><g><title>ate::event::EventHeaderRaw::as_header (362 samples, 1.16%)</title><rect x="6.9826%" y="693" width="1.1616%" height="15" fill="rgb(219,207,3)"/><text x="7.2326%" y="703.50"></text></g><g><title>bytes::bytes::promotable_even_clone (97 samples, 0.31%)</title><rect x="7.8330%" y="677" width="0.3113%" height="15" fill="rgb(222,56,46)"/><text x="8.0830%" y="687.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (97 samples, 0.31%)</title><rect x="7.8330%" y="661" width="0.3113%" height="15" fill="rgb(239,76,54)"/><text x="8.0830%" y="671.50"></text></g><g><title>__GI___libc_malloc (83 samples, 0.27%)</title><rect x="7.8779%" y="645" width="0.2663%" height="15" fill="rgb(231,124,27)"/><text x="8.1279%" y="655.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.03%)</title><rect x="9.0813%" y="661" width="0.0257%" height="15" fill="rgb(249,195,6)"/><text x="9.3313%" y="671.50"></text></g><g><title>tcache_get (4 samples, 0.01%)</title><rect x="9.0941%" y="645" width="0.0128%" height="15" fill="rgb(237,174,47)"/><text x="9.3441%" y="655.50"></text></g><g><title>&lt;ate::redo::LogFile as ate::spec::LogApi&gt;::read_exact (18 samples, 0.06%)</title><rect x="9.0556%" y="677" width="0.0578%" height="15" fill="rgb(206,201,31)"/><text x="9.3056%" y="687.50"></text></g><g><title>checked_request2size (6 samples, 0.02%)</title><rect x="9.1390%" y="645" width="0.0193%" height="15" fill="rgb(231,57,52)"/><text x="9.3890%" y="655.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.04%)</title><rect x="9.1294%" y="661" width="0.0385%" height="15" fill="rgb(248,177,22)"/><text x="9.3794%" y="671.50"></text></g><g><title>&lt;ate::redo::LogFile as ate::spec::LogApi&gt;::read_u8 (21 samples, 0.07%)</title><rect x="9.1134%" y="677" width="0.0674%" height="15" fill="rgb(215,211,37)"/><text x="9.3634%" y="687.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (6 samples, 0.02%)</title><rect x="9.1840%" y="677" width="0.0193%" height="15" fill="rgb(241,128,51)"/><text x="9.4340%" y="687.50"></text></g><g><title>__GI___libc_malloc (19 samples, 0.06%)</title><rect x="9.4214%" y="645" width="0.0610%" height="15" fill="rgb(227,165,31)"/><text x="9.6714%" y="655.50"></text></g><g><title>tcache_get (14 samples, 0.04%)</title><rect x="9.4375%" y="629" width="0.0449%" height="15" fill="rgb(228,167,24)"/><text x="9.6875%" y="639.50"></text></g><g><title>&lt;ate::redo::LogFile as ate::spec::LogApi&gt;::read_u32 (27 samples, 0.09%)</title><rect x="9.4054%" y="661" width="0.0866%" height="15" fill="rgb(228,143,12)"/><text x="9.6554%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 0.17%)</title><rect x="9.4920%" y="661" width="0.1701%" height="15" fill="rgb(249,149,8)"/><text x="9.7420%" y="671.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (21 samples, 0.07%)</title><rect x="9.5947%" y="645" width="0.0674%" height="15" fill="rgb(243,35,44)"/><text x="9.8447%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.03%)</title><rect x="9.6364%" y="629" width="0.0257%" height="15" fill="rgb(246,89,9)"/><text x="9.8864%" y="639.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.04%)</title><rect x="9.8258%" y="629" width="0.0417%" height="15" fill="rgb(233,213,13)"/><text x="10.0758%" y="639.50"></text></g><g><title>tokio::runtime::task::raw::try_read_output (8 samples, 0.03%)</title><rect x="9.8418%" y="613" width="0.0257%" height="15" fill="rgb(233,141,41)"/><text x="10.0918%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::can_read_output (4 samples, 0.01%)</title><rect x="9.8546%" y="597" width="0.0128%" height="15" fill="rgb(239,167,4)"/><text x="10.1046%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (93 samples, 0.30%)</title><rect x="9.8707%" y="629" width="0.2984%" height="15" fill="rgb(209,217,16)"/><text x="10.1207%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.02%)</title><rect x="10.1819%" y="613" width="0.0225%" height="15" fill="rgb(219,88,35)"/><text x="10.4319%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.02%)</title><rect x="10.2044%" y="613" width="0.0160%" height="15" fill="rgb(220,193,23)"/><text x="10.4544%" y="623.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (14 samples, 0.04%)</title><rect x="10.2429%" y="597" width="0.0449%" height="15" fill="rgb(230,90,52)"/><text x="10.4929%" y="607.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (6 samples, 0.02%)</title><rect x="10.2686%" y="581" width="0.0193%" height="15" fill="rgb(252,106,19)"/><text x="10.5186%" y="591.50"></text></g><g><title>std::time::Instant::now (5 samples, 0.02%)</title><rect x="10.3071%" y="581" width="0.0160%" height="15" fill="rgb(206,74,20)"/><text x="10.5571%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (5 samples, 0.02%)</title><rect x="10.3071%" y="565" width="0.0160%" height="15" fill="rgb(230,138,44)"/><text x="10.5571%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::now (5 samples, 0.02%)</title><rect x="10.3071%" y="549" width="0.0160%" height="15" fill="rgb(235,182,43)"/><text x="10.5571%" y="559.50"></text></g><g><title>__GI___clock_gettime (5 samples, 0.02%)</title><rect x="10.3071%" y="533" width="0.0160%" height="15" fill="rgb(242,16,51)"/><text x="10.5571%" y="543.50"></text></g><g><title>__vdso_clock_gettime (4 samples, 0.01%)</title><rect x="10.3103%" y="517" width="0.0128%" height="15" fill="rgb(248,9,4)"/><text x="10.5603%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (10 samples, 0.03%)</title><rect x="10.3263%" y="565" width="0.0321%" height="15" fill="rgb(210,31,22)"/><text x="10.5763%" y="575.50"></text></g><g><title>_raw_spin_lock (5 samples, 0.02%)</title><rect x="10.4162%" y="485" width="0.0160%" height="15" fill="rgb(239,54,39)"/><text x="10.6662%" y="495.50"></text></g><g><title>mark_wake_futex (6 samples, 0.02%)</title><rect x="10.4419%" y="485" width="0.0193%" height="15" fill="rgb(230,99,41)"/><text x="10.6919%" y="495.50"></text></g><g><title>available_idle_cpu (6 samples, 0.02%)</title><rect x="10.5253%" y="437" width="0.0193%" height="15" fill="rgb(253,106,12)"/><text x="10.7753%" y="447.50"></text></g><g><title>select_task_rq_fair (13 samples, 0.04%)</title><rect x="10.5060%" y="453" width="0.0417%" height="15" fill="rgb(213,46,41)"/><text x="10.7560%" y="463.50"></text></g><g><title>reweight_entity (4 samples, 0.01%)</title><rect x="10.6248%" y="405" width="0.0128%" height="15" fill="rgb(215,133,35)"/><text x="10.8748%" y="415.50"></text></g><g><title>enqueue_task_fair (38 samples, 0.12%)</title><rect x="10.5606%" y="437" width="0.1219%" height="15" fill="rgb(213,28,5)"/><text x="10.8106%" y="447.50"></text></g><g><title>enqueue_entity (28 samples, 0.09%)</title><rect x="10.5927%" y="421" width="0.0899%" height="15" fill="rgb(215,77,49)"/><text x="10.8427%" y="431.50"></text></g><g><title>update_load_avg (9 samples, 0.03%)</title><rect x="10.6537%" y="405" width="0.0289%" height="15" fill="rgb(248,100,22)"/><text x="10.9037%" y="415.50"></text></g><g><title>__update_load_avg_se (5 samples, 0.02%)</title><rect x="10.6665%" y="389" width="0.0160%" height="15" fill="rgb(208,67,9)"/><text x="10.9165%" y="399.50"></text></g><g><title>ttwu_do_activate (94 samples, 0.30%)</title><rect x="10.5478%" y="453" width="0.3016%" height="15" fill="rgb(219,133,21)"/><text x="10.7978%" y="463.50"></text></g><g><title>psi_task_change (52 samples, 0.17%)</title><rect x="10.6825%" y="437" width="0.1669%" height="15" fill="rgb(246,46,29)"/><text x="10.9325%" y="447.50"></text></g><g><title>psi_group_change (43 samples, 0.14%)</title><rect x="10.7114%" y="421" width="0.1380%" height="15" fill="rgb(246,185,52)"/><text x="10.9614%" y="431.50"></text></g><g><title>__x64_sys_futex (161 samples, 0.52%)</title><rect x="10.3584%" y="533" width="0.5166%" height="15" fill="rgb(252,136,11)"/><text x="10.6084%" y="543.50"></text></g><g><title>do_futex (158 samples, 0.51%)</title><rect x="10.3681%" y="517" width="0.5070%" height="15" fill="rgb(219,138,53)"/><text x="10.6181%" y="527.50"></text></g><g><title>futex_wake (155 samples, 0.50%)</title><rect x="10.3777%" y="501" width="0.4974%" height="15" fill="rgb(211,51,23)"/><text x="10.6277%" y="511.50"></text></g><g><title>wake_up_q (127 samples, 0.41%)</title><rect x="10.4675%" y="485" width="0.4075%" height="15" fill="rgb(247,221,28)"/><text x="10.7175%" y="495.50"></text></g><g><title>try_to_wake_up (125 samples, 0.40%)</title><rect x="10.4740%" y="469" width="0.4011%" height="15" fill="rgb(251,222,45)"/><text x="10.7240%" y="479.50"></text></g><g><title>update_rq_clock (5 samples, 0.02%)</title><rect x="10.8590%" y="453" width="0.0160%" height="15" fill="rgb(217,162,53)"/><text x="11.1090%" y="463.50"></text></g><g><title>do_syscall_64 (162 samples, 0.52%)</title><rect x="10.3584%" y="549" width="0.5198%" height="15" fill="rgb(229,93,14)"/><text x="10.6084%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (193 samples, 0.62%)</title><rect x="10.3584%" y="565" width="0.6193%" height="15" fill="rgb(209,67,49)"/><text x="10.6084%" y="575.50"></text></g><g><title>syscall_exit_to_user_mode (31 samples, 0.10%)</title><rect x="10.8783%" y="549" width="0.0995%" height="15" fill="rgb(213,87,29)"/><text x="11.1283%" y="559.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (266 samples, 0.85%)</title><rect x="10.1691%" y="629" width="0.8536%" height="15" fill="rgb(205,151,52)"/><text x="10.4191%" y="639.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn (250 samples, 0.80%)</title><rect x="10.2205%" y="613" width="0.8022%" height="15" fill="rgb(253,215,39)"/><text x="10.4705%" y="623.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (229 samples, 0.73%)</title><rect x="10.2878%" y="597" width="0.7348%" height="15" fill="rgb(221,220,41)"/><text x="10.5378%" y="607.50"></text></g><g><title>syscall (218 samples, 0.70%)</title><rect x="10.3231%" y="581" width="0.6995%" height="15" fill="rgb(218,133,21)"/><text x="10.5731%" y="591.50"></text></g><g><title>syscall_return_via_sysret (14 samples, 0.04%)</title><rect x="10.9778%" y="565" width="0.0449%" height="15" fill="rgb(221,193,43)"/><text x="11.2278%" y="575.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_read::AsyncRead&gt;::poll_read (396 samples, 1.27%)</title><rect x="9.7616%" y="645" width="1.2707%" height="15" fill="rgb(240,128,52)"/><text x="10.0116%" y="655.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (473 samples, 1.52%)</title><rect x="9.6621%" y="661" width="1.5178%" height="15" fill="rgb(253,114,12)"/><text x="9.9121%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (46 samples, 0.15%)</title><rect x="11.0323%" y="645" width="0.1476%" height="15" fill="rgb(215,223,47)"/><text x="11.2823%" y="655.50"></text></g><g><title>__GI___libc_free (11 samples, 0.04%)</title><rect x="11.1799%" y="661" width="0.0353%" height="15" fill="rgb(248,225,23)"/><text x="11.4299%" y="671.50"></text></g><g><title>_int_free (8 samples, 0.03%)</title><rect x="11.2281%" y="661" width="0.0257%" height="15" fill="rgb(250,108,0)"/><text x="11.4781%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (643 samples, 2.06%)</title><rect x="9.2032%" y="677" width="2.0633%" height="15" fill="rgb(228,208,7)"/><text x="9.4532%" y="687.50">&lt;..</text></g><g><title>_int_malloc (4 samples, 0.01%)</title><rect x="11.2537%" y="661" width="0.0128%" height="15" fill="rgb(244,45,10)"/><text x="11.5037%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.01%)</title><rect x="11.2537%" y="645" width="0.0128%" height="15" fill="rgb(207,125,25)"/><text x="11.5037%" y="655.50"></text></g><g><title>__GI___libc_free (5 samples, 0.02%)</title><rect x="11.2698%" y="677" width="0.0160%" height="15" fill="rgb(210,195,18)"/><text x="11.5198%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.03%)</title><rect x="11.6228%" y="645" width="0.0257%" height="15" fill="rgb(249,80,12)"/><text x="11.8728%" y="655.50"></text></g><g><title>futex_wait_queue_me (7 samples, 0.02%)</title><rect x="11.6613%" y="565" width="0.0225%" height="15" fill="rgb(221,65,9)"/><text x="11.9113%" y="575.50"></text></g><g><title>schedule (6 samples, 0.02%)</title><rect x="11.6645%" y="549" width="0.0193%" height="15" fill="rgb(235,49,36)"/><text x="11.9145%" y="559.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="11.6677%" y="533" width="0.0160%" height="15" fill="rgb(225,32,20)"/><text x="11.9177%" y="543.50"></text></g><g><title>__get_user_nocheck_4 (5 samples, 0.02%)</title><rect x="11.7190%" y="549" width="0.0160%" height="15" fill="rgb(215,141,46)"/><text x="11.9690%" y="559.50"></text></g><g><title>do_syscall_64 (29 samples, 0.09%)</title><rect x="11.6484%" y="629" width="0.0931%" height="15" fill="rgb(250,160,47)"/><text x="11.8984%" y="639.50"></text></g><g><title>__x64_sys_futex (29 samples, 0.09%)</title><rect x="11.6484%" y="613" width="0.0931%" height="15" fill="rgb(216,222,40)"/><text x="11.8984%" y="623.50"></text></g><g><title>do_futex (28 samples, 0.09%)</title><rect x="11.6516%" y="597" width="0.0899%" height="15" fill="rgb(234,217,39)"/><text x="11.9016%" y="607.50"></text></g><g><title>futex_wait (27 samples, 0.09%)</title><rect x="11.6548%" y="581" width="0.0866%" height="15" fill="rgb(207,178,40)"/><text x="11.9048%" y="591.50"></text></g><g><title>futex_wait_setup (18 samples, 0.06%)</title><rect x="11.6837%" y="565" width="0.0578%" height="15" fill="rgb(221,136,13)"/><text x="11.9337%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (39 samples, 0.13%)</title><rect x="11.6484%" y="645" width="0.1251%" height="15" fill="rgb(249,199,10)"/><text x="11.8984%" y="655.50"></text></g><g><title>syscall_exit_to_user_mode (10 samples, 0.03%)</title><rect x="11.7415%" y="629" width="0.0321%" height="15" fill="rgb(249,222,13)"/><text x="11.9915%" y="639.50"></text></g><g><title>__lll_lock_wait_private (61 samples, 0.20%)</title><rect x="11.5971%" y="661" width="0.1957%" height="15" fill="rgb(244,185,38)"/><text x="11.8471%" y="671.50"></text></g><g><title>syscall_return_via_sysret (6 samples, 0.02%)</title><rect x="11.7736%" y="645" width="0.0193%" height="15" fill="rgb(236,202,9)"/><text x="12.0236%" y="655.50"></text></g><g><title>__irqentry_text_end (11 samples, 0.04%)</title><rect x="12.4154%" y="645" width="0.0353%" height="15" fill="rgb(250,229,37)"/><text x="12.6654%" y="655.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.01%)</title><rect x="12.4956%" y="581" width="0.0128%" height="15" fill="rgb(206,174,23)"/><text x="12.7456%" y="591.50"></text></g><g><title>__list_del_entry_valid (10 samples, 0.03%)</title><rect x="12.5501%" y="533" width="0.0321%" height="15" fill="rgb(211,33,43)"/><text x="12.8001%" y="543.50"></text></g><g><title>alloc_pages_vma (41 samples, 0.13%)</title><rect x="12.5084%" y="581" width="0.1316%" height="15" fill="rgb(245,58,50)"/><text x="12.7584%" y="591.50"></text></g><g><title>__alloc_pages_nodemask (39 samples, 0.13%)</title><rect x="12.5148%" y="565" width="0.1251%" height="15" fill="rgb(244,68,36)"/><text x="12.7648%" y="575.50"></text></g><g><title>get_page_from_freelist (37 samples, 0.12%)</title><rect x="12.5213%" y="549" width="0.1187%" height="15" fill="rgb(232,229,15)"/><text x="12.7713%" y="559.50"></text></g><g><title>prep_new_page (17 samples, 0.05%)</title><rect x="12.5854%" y="533" width="0.0546%" height="15" fill="rgb(254,30,23)"/><text x="12.8354%" y="543.50"></text></g><g><title>kernel_init_free_pages (17 samples, 0.05%)</title><rect x="12.5854%" y="517" width="0.0546%" height="15" fill="rgb(235,160,14)"/><text x="12.8354%" y="527.50"></text></g><g><title>clear_page_erms (17 samples, 0.05%)</title><rect x="12.5854%" y="501" width="0.0546%" height="15" fill="rgb(212,155,44)"/><text x="12.8354%" y="511.50"></text></g><g><title>__pagevec_lru_add_fn (7 samples, 0.02%)</title><rect x="12.6496%" y="549" width="0.0225%" height="15" fill="rgb(226,2,50)"/><text x="12.8996%" y="559.50"></text></g><g><title>lru_cache_add (8 samples, 0.03%)</title><rect x="12.6496%" y="581" width="0.0257%" height="15" fill="rgb(234,177,6)"/><text x="12.8996%" y="591.50"></text></g><g><title>pagevec_lru_move_fn (8 samples, 0.03%)</title><rect x="12.6496%" y="565" width="0.0257%" height="15" fill="rgb(217,24,9)"/><text x="12.8996%" y="575.50"></text></g><g><title>mem_cgroup_charge (9 samples, 0.03%)</title><rect x="12.6753%" y="581" width="0.0289%" height="15" fill="rgb(220,13,46)"/><text x="12.9253%" y="591.50"></text></g><g><title>try_charge (5 samples, 0.02%)</title><rect x="12.6881%" y="565" width="0.0160%" height="15" fill="rgb(239,221,27)"/><text x="12.9381%" y="575.50"></text></g><g><title>exc_page_fault (79 samples, 0.25%)</title><rect x="12.4603%" y="629" width="0.2535%" height="15" fill="rgb(222,198,25)"/><text x="12.7103%" y="639.50"></text></g><g><title>do_user_addr_fault (78 samples, 0.25%)</title><rect x="12.4635%" y="613" width="0.2503%" height="15" fill="rgb(211,99,13)"/><text x="12.7135%" y="623.50"></text></g><g><title>handle_mm_fault (73 samples, 0.23%)</title><rect x="12.4795%" y="597" width="0.2343%" height="15" fill="rgb(232,111,31)"/><text x="12.7295%" y="607.50"></text></g><g><title>asm_exc_page_fault (94 samples, 0.30%)</title><rect x="12.4571%" y="645" width="0.3016%" height="15" fill="rgb(245,82,37)"/><text x="12.7071%" y="655.50"></text></g><g><title>irqentry_exit_to_user_mode (14 samples, 0.04%)</title><rect x="12.7138%" y="629" width="0.0449%" height="15" fill="rgb(227,149,46)"/><text x="12.9638%" y="639.50"></text></g><g><title>checked_request2size (4 samples, 0.01%)</title><rect x="12.7619%" y="645" width="0.0128%" height="15" fill="rgb(218,36,50)"/><text x="13.0119%" y="655.50"></text></g><g><title>error_entry (16 samples, 0.05%)</title><rect x="12.7748%" y="645" width="0.0513%" height="15" fill="rgb(226,80,48)"/><text x="13.0248%" y="655.50"></text></g><g><title>sync_regs (12 samples, 0.04%)</title><rect x="12.7876%" y="629" width="0.0385%" height="15" fill="rgb(238,224,15)"/><text x="13.0376%" y="639.50"></text></g><g><title>perf_event_mmap (5 samples, 0.02%)</title><rect x="12.8357%" y="501" width="0.0160%" height="15" fill="rgb(241,136,10)"/><text x="13.0857%" y="511.50"></text></g><g><title>perf_iterate_sb (5 samples, 0.02%)</title><rect x="12.8357%" y="485" width="0.0160%" height="15" fill="rgb(208,32,45)"/><text x="13.0857%" y="495.50"></text></g><g><title>perf_iterate_ctx (4 samples, 0.01%)</title><rect x="12.8389%" y="469" width="0.0128%" height="15" fill="rgb(207,135,9)"/><text x="13.0889%" y="479.50"></text></g><g><title>__GI___default_morecore (8 samples, 0.03%)</title><rect x="12.8325%" y="629" width="0.0257%" height="15" fill="rgb(206,86,44)"/><text x="13.0825%" y="639.50"></text></g><g><title>__GI___sbrk (8 samples, 0.03%)</title><rect x="12.8325%" y="613" width="0.0257%" height="15" fill="rgb(245,177,15)"/><text x="13.0825%" y="623.50"></text></g><g><title>__GI___sbrk (8 samples, 0.03%)</title><rect x="12.8325%" y="597" width="0.0257%" height="15" fill="rgb(206,64,50)"/><text x="13.0825%" y="607.50"></text></g><g><title>__brk (8 samples, 0.03%)</title><rect x="12.8325%" y="581" width="0.0257%" height="15" fill="rgb(234,36,40)"/><text x="13.0825%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.03%)</title><rect x="12.8325%" y="565" width="0.0257%" height="15" fill="rgb(213,64,8)"/><text x="13.0825%" y="575.50"></text></g><g><title>do_syscall_64 (8 samples, 0.03%)</title><rect x="12.8325%" y="549" width="0.0257%" height="15" fill="rgb(210,75,36)"/><text x="13.0825%" y="559.50"></text></g><g><title>__do_sys_brk (8 samples, 0.03%)</title><rect x="12.8325%" y="533" width="0.0257%" height="15" fill="rgb(229,88,21)"/><text x="13.0825%" y="543.50"></text></g><g><title>do_brk_flags (8 samples, 0.03%)</title><rect x="12.8325%" y="517" width="0.0257%" height="15" fill="rgb(252,204,47)"/><text x="13.0825%" y="527.50"></text></g><g><title>sysmalloc (12 samples, 0.04%)</title><rect x="12.8293%" y="645" width="0.0385%" height="15" fill="rgb(208,77,27)"/><text x="13.0793%" y="655.50"></text></g><g><title>_int_malloc (401 samples, 1.29%)</title><rect x="11.7928%" y="661" width="1.2868%" height="15" fill="rgb(221,76,26)"/><text x="12.0428%" y="671.50"></text></g><g><title>unlink_chunk (66 samples, 0.21%)</title><rect x="12.8678%" y="645" width="0.2118%" height="15" fill="rgb(225,139,18)"/><text x="13.1178%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (14 samples, 0.04%)</title><rect x="13.0860%" y="661" width="0.0449%" height="15" fill="rgb(230,137,11)"/><text x="13.3360%" y="671.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.01%)</title><rect x="13.1630%" y="581" width="0.0128%" height="15" fill="rgb(212,28,1)"/><text x="13.4130%" y="591.50"></text></g><g><title>__x64_sys_futex (22 samples, 0.07%)</title><rect x="13.1310%" y="629" width="0.0706%" height="15" fill="rgb(248,164,17)"/><text x="13.3810%" y="639.50"></text></g><g><title>do_futex (20 samples, 0.06%)</title><rect x="13.1374%" y="613" width="0.0642%" height="15" fill="rgb(222,171,42)"/><text x="13.3874%" y="623.50"></text></g><g><title>futex_wake (20 samples, 0.06%)</title><rect x="13.1374%" y="597" width="0.0642%" height="15" fill="rgb(243,84,45)"/><text x="13.3874%" y="607.50"></text></g><g><title>wake_up_q (6 samples, 0.02%)</title><rect x="13.1823%" y="581" width="0.0193%" height="15" fill="rgb(252,49,23)"/><text x="13.4323%" y="591.50"></text></g><g><title>try_to_wake_up (5 samples, 0.02%)</title><rect x="13.1855%" y="565" width="0.0160%" height="15" fill="rgb(215,19,7)"/><text x="13.4355%" y="575.50"></text></g><g><title>ttwu_queue_wakelist (4 samples, 0.01%)</title><rect x="13.1887%" y="549" width="0.0128%" height="15" fill="rgb(238,81,41)"/><text x="13.4387%" y="559.50"></text></g><g><title>do_syscall_64 (23 samples, 0.07%)</title><rect x="13.1310%" y="645" width="0.0738%" height="15" fill="rgb(210,199,37)"/><text x="13.3810%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (67 samples, 0.21%)</title><rect x="13.1310%" y="661" width="0.2150%" height="15" fill="rgb(244,192,49)"/><text x="13.3810%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (44 samples, 0.14%)</title><rect x="13.2048%" y="645" width="0.1412%" height="15" fill="rgb(226,211,11)"/><text x="13.4548%" y="655.50"></text></g><g><title>__libc_calloc (652 samples, 2.09%)</title><rect x="11.2858%" y="677" width="2.0922%" height="15" fill="rgb(236,162,54)"/><text x="11.5358%" y="687.50">_..</text></g><g><title>syscall_return_via_sysret (10 samples, 0.03%)</title><rect x="13.3460%" y="661" width="0.0321%" height="15" fill="rgb(220,229,9)"/><text x="13.5960%" y="671.50"></text></g><g><title>__irqentry_text_end (7 samples, 0.02%)</title><rect x="13.4936%" y="661" width="0.0225%" height="15" fill="rgb(250,87,22)"/><text x="13.7436%" y="671.50"></text></g><g><title>__list_del_entry_valid (4 samples, 0.01%)</title><rect x="13.5577%" y="549" width="0.0128%" height="15" fill="rgb(239,43,17)"/><text x="13.8077%" y="559.50"></text></g><g><title>alloc_pages_vma (24 samples, 0.08%)</title><rect x="13.5353%" y="597" width="0.0770%" height="15" fill="rgb(231,177,25)"/><text x="13.7853%" y="607.50"></text></g><g><title>__alloc_pages_nodemask (24 samples, 0.08%)</title><rect x="13.5353%" y="581" width="0.0770%" height="15" fill="rgb(219,179,1)"/><text x="13.7853%" y="591.50"></text></g><g><title>get_page_from_freelist (21 samples, 0.07%)</title><rect x="13.5449%" y="565" width="0.0674%" height="15" fill="rgb(238,219,53)"/><text x="13.7949%" y="575.50"></text></g><g><title>prep_new_page (13 samples, 0.04%)</title><rect x="13.5706%" y="549" width="0.0417%" height="15" fill="rgb(232,167,36)"/><text x="13.8206%" y="559.50"></text></g><g><title>kernel_init_free_pages (12 samples, 0.04%)</title><rect x="13.5738%" y="533" width="0.0385%" height="15" fill="rgb(244,19,51)"/><text x="13.8238%" y="543.50"></text></g><g><title>clear_page_erms (12 samples, 0.04%)</title><rect x="13.5738%" y="517" width="0.0385%" height="15" fill="rgb(224,6,22)"/><text x="13.8238%" y="527.50"></text></g><g><title>lru_cache_add (7 samples, 0.02%)</title><rect x="13.6155%" y="597" width="0.0225%" height="15" fill="rgb(224,145,5)"/><text x="13.8655%" y="607.50"></text></g><g><title>pagevec_lru_move_fn (6 samples, 0.02%)</title><rect x="13.6187%" y="581" width="0.0193%" height="15" fill="rgb(234,130,49)"/><text x="13.8687%" y="591.50"></text></g><g><title>__pagevec_lru_add_fn (5 samples, 0.02%)</title><rect x="13.6219%" y="565" width="0.0160%" height="15" fill="rgb(254,6,2)"/><text x="13.8719%" y="575.50"></text></g><g><title>mem_cgroup_charge (5 samples, 0.02%)</title><rect x="13.6380%" y="597" width="0.0160%" height="15" fill="rgb(208,96,46)"/><text x="13.8880%" y="607.50"></text></g><g><title>handle_mm_fault (43 samples, 0.14%)</title><rect x="13.5192%" y="613" width="0.1380%" height="15" fill="rgb(239,3,39)"/><text x="13.7692%" y="623.50"></text></g><g><title>exc_page_fault (45 samples, 0.14%)</title><rect x="13.5160%" y="645" width="0.1444%" height="15" fill="rgb(233,210,1)"/><text x="13.7660%" y="655.50"></text></g><g><title>do_user_addr_fault (45 samples, 0.14%)</title><rect x="13.5160%" y="629" width="0.1444%" height="15" fill="rgb(244,137,37)"/><text x="13.7660%" y="639.50"></text></g><g><title>asm_exc_page_fault (55 samples, 0.18%)</title><rect x="13.5160%" y="661" width="0.1765%" height="15" fill="rgb(240,136,2)"/><text x="13.7660%" y="671.50"></text></g><g><title>irqentry_exit_to_user_mode (9 samples, 0.03%)</title><rect x="13.6636%" y="645" width="0.0289%" height="15" fill="rgb(239,18,37)"/><text x="13.9136%" y="655.50"></text></g><g><title>error_entry (9 samples, 0.03%)</title><rect x="13.6957%" y="661" width="0.0289%" height="15" fill="rgb(218,185,22)"/><text x="13.9457%" y="671.50"></text></g><g><title>sync_regs (8 samples, 0.03%)</title><rect x="13.6989%" y="645" width="0.0257%" height="15" fill="rgb(225,218,4)"/><text x="13.9489%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (109 samples, 0.35%)</title><rect x="13.3780%" y="677" width="0.3498%" height="15" fill="rgb(230,182,32)"/><text x="13.6280%" y="687.50"></text></g><g><title>__memset_avx2_unaligned_erms (11 samples, 0.04%)</title><rect x="13.7278%" y="677" width="0.0353%" height="15" fill="rgb(242,56,43)"/><text x="13.9778%" y="687.50"></text></g><g><title>__rdl_alloc_zeroed (4 samples, 0.01%)</title><rect x="13.7631%" y="677" width="0.0128%" height="15" fill="rgb(233,99,24)"/><text x="14.0131%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (4 samples, 0.01%)</title><rect x="13.7631%" y="661" width="0.0128%" height="15" fill="rgb(234,209,42)"/><text x="14.0131%" y="671.50"></text></g><g><title>_int_free (21 samples, 0.07%)</title><rect x="13.7888%" y="677" width="0.0674%" height="15" fill="rgb(227,7,12)"/><text x="14.0388%" y="687.50"></text></g><g><title>tcache_put (4 samples, 0.01%)</title><rect x="13.8433%" y="661" width="0.0128%" height="15" fill="rgb(245,203,43)"/><text x="14.0933%" y="671.50"></text></g><g><title>alloc_pages_vma (5 samples, 0.02%)</title><rect x="13.8818%" y="533" width="0.0160%" height="15" fill="rgb(238,205,33)"/><text x="14.1318%" y="543.50"></text></g><g><title>__alloc_pages_nodemask (5 samples, 0.02%)</title><rect x="13.8818%" y="517" width="0.0160%" height="15" fill="rgb(231,56,7)"/><text x="14.1318%" y="527.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.02%)</title><rect x="13.8818%" y="501" width="0.0160%" height="15" fill="rgb(244,186,29)"/><text x="14.1318%" y="511.50"></text></g><g><title>prep_new_page (4 samples, 0.01%)</title><rect x="13.8851%" y="485" width="0.0128%" height="15" fill="rgb(234,111,31)"/><text x="14.1351%" y="495.50"></text></g><g><title>kernel_init_free_pages (4 samples, 0.01%)</title><rect x="13.8851%" y="469" width="0.0128%" height="15" fill="rgb(241,149,10)"/><text x="14.1351%" y="479.50"></text></g><g><title>exc_page_fault (9 samples, 0.03%)</title><rect x="13.8786%" y="581" width="0.0289%" height="15" fill="rgb(249,206,44)"/><text x="14.1286%" y="591.50"></text></g><g><title>do_user_addr_fault (9 samples, 0.03%)</title><rect x="13.8786%" y="565" width="0.0289%" height="15" fill="rgb(251,153,30)"/><text x="14.1286%" y="575.50"></text></g><g><title>handle_mm_fault (9 samples, 0.03%)</title><rect x="13.8786%" y="549" width="0.0289%" height="15" fill="rgb(239,152,38)"/><text x="14.1286%" y="559.50"></text></g><g><title>asm_exc_page_fault (10 samples, 0.03%)</title><rect x="13.8786%" y="597" width="0.0321%" height="15" fill="rgb(249,139,47)"/><text x="14.1286%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (18 samples, 0.06%)</title><rect x="13.8562%" y="613" width="0.0578%" height="15" fill="rgb(244,64,35)"/><text x="14.1062%" y="623.50"></text></g><g><title>malloc_consolidate (36 samples, 0.12%)</title><rect x="13.9332%" y="597" width="0.1155%" height="15" fill="rgb(216,46,15)"/><text x="14.1832%" y="607.50"></text></g><g><title>unlink_chunk (17 samples, 0.05%)</title><rect x="13.9942%" y="581" width="0.0546%" height="15" fill="rgb(250,74,19)"/><text x="14.2442%" y="591.50"></text></g><g><title>_int_realloc (61 samples, 0.20%)</title><rect x="13.8562%" y="629" width="0.1957%" height="15" fill="rgb(249,42,33)"/><text x="14.1062%" y="639.50"></text></g><g><title>_int_malloc (43 samples, 0.14%)</title><rect x="13.9139%" y="613" width="0.1380%" height="15" fill="rgb(242,149,17)"/><text x="14.1639%" y="623.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::grow (62 samples, 0.20%)</title><rect x="13.8562%" y="677" width="0.1990%" height="15" fill="rgb(244,29,21)"/><text x="14.1062%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (62 samples, 0.20%)</title><rect x="13.8562%" y="661" width="0.1990%" height="15" fill="rgb(220,130,37)"/><text x="14.1062%" y="671.50"></text></g><g><title>__GI___libc_realloc (62 samples, 0.20%)</title><rect x="13.8562%" y="645" width="0.1990%" height="15" fill="rgb(211,67,2)"/><text x="14.1062%" y="655.50"></text></g><g><title>ate::crypto::Hash::from_bytes (79 samples, 0.25%)</title><rect x="14.0583%" y="677" width="0.2535%" height="15" fill="rgb(235,68,52)"/><text x="14.3083%" y="687.50"></text></g><g><title>blake3::hash (79 samples, 0.25%)</title><rect x="14.0583%" y="661" width="0.2535%" height="15" fill="rgb(246,142,3)"/><text x="14.3083%" y="671.50"></text></g><g><title>blake3::ChunkState::update (38 samples, 0.12%)</title><rect x="14.1899%" y="645" width="0.1219%" height="15" fill="rgb(241,25,7)"/><text x="14.4399%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.03%)</title><rect x="14.2830%" y="629" width="0.0289%" height="15" fill="rgb(242,119,39)"/><text x="14.5330%" y="639.50"></text></g><g><title>ate::event::EventHeaderRaw::new (11 samples, 0.04%)</title><rect x="14.3118%" y="677" width="0.0353%" height="15" fill="rgb(241,98,45)"/><text x="14.5618%" y="687.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (35 samples, 0.11%)</title><rect x="15.0403%" y="613" width="0.1123%" height="15" fill="rgb(254,28,30)"/><text x="15.2903%" y="623.50"></text></g><g><title>&lt;ate::meta::_::&lt;impl serde::de::Deserialize for ate::meta::WriteOption&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (5 samples, 0.02%)</title><rect x="15.1365%" y="597" width="0.0160%" height="15" fill="rgb(241,142,54)"/><text x="15.3865%" y="607.50"></text></g><g><title>&lt;ate::meta::_::&lt;impl serde::de::Deserialize for ate::meta::CoreMetadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (76 samples, 0.24%)</title><rect x="14.9248%" y="629" width="0.2439%" height="15" fill="rgb(222,85,15)"/><text x="15.1748%" y="639.50"></text></g><g><title>serde::de::SeqAccess::next_element (4 samples, 0.01%)</title><rect x="15.1558%" y="613" width="0.0128%" height="15" fill="rgb(210,85,47)"/><text x="15.4058%" y="623.50"></text></g><g><title>do_syscall_64 (10 samples, 0.03%)</title><rect x="15.3259%" y="581" width="0.0321%" height="15" fill="rgb(224,206,25)"/><text x="15.5759%" y="591.50"></text></g><g><title>__x64_sys_futex (10 samples, 0.03%)</title><rect x="15.3259%" y="565" width="0.0321%" height="15" fill="rgb(243,201,19)"/><text x="15.5759%" y="575.50"></text></g><g><title>do_futex (10 samples, 0.03%)</title><rect x="15.3259%" y="549" width="0.0321%" height="15" fill="rgb(236,59,4)"/><text x="15.5759%" y="559.50"></text></g><g><title>futex_wait (10 samples, 0.03%)</title><rect x="15.3259%" y="533" width="0.0321%" height="15" fill="rgb(254,179,45)"/><text x="15.5759%" y="543.50"></text></g><g><title>futex_wait_setup (8 samples, 0.03%)</title><rect x="15.3323%" y="517" width="0.0257%" height="15" fill="rgb(226,14,10)"/><text x="15.5823%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (20 samples, 0.06%)</title><rect x="15.3227%" y="597" width="0.0642%" height="15" fill="rgb(244,27,41)"/><text x="15.5727%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode (9 samples, 0.03%)</title><rect x="15.3580%" y="581" width="0.0289%" height="15" fill="rgb(235,35,32)"/><text x="15.6080%" y="591.50"></text></g><g><title>__lll_lock_wait_private (28 samples, 0.09%)</title><rect x="15.3098%" y="613" width="0.0899%" height="15" fill="rgb(218,68,31)"/><text x="15.5598%" y="623.50"></text></g><g><title>syscall_return_via_sysret (4 samples, 0.01%)</title><rect x="15.3868%" y="597" width="0.0128%" height="15" fill="rgb(207,120,37)"/><text x="15.6368%" y="607.50"></text></g><g><title>__list_del_entry_valid (7 samples, 0.02%)</title><rect x="16.0479%" y="485" width="0.0225%" height="15" fill="rgb(227,98,0)"/><text x="16.2979%" y="495.50"></text></g><g><title>alloc_pages_vma (19 samples, 0.06%)</title><rect x="16.0383%" y="533" width="0.0610%" height="15" fill="rgb(207,7,3)"/><text x="16.2883%" y="543.50"></text></g><g><title>__alloc_pages_nodemask (19 samples, 0.06%)</title><rect x="16.0383%" y="517" width="0.0610%" height="15" fill="rgb(206,98,19)"/><text x="16.2883%" y="527.50"></text></g><g><title>get_page_from_freelist (17 samples, 0.05%)</title><rect x="16.0447%" y="501" width="0.0546%" height="15" fill="rgb(217,5,26)"/><text x="16.2947%" y="511.50"></text></g><g><title>prep_new_page (9 samples, 0.03%)</title><rect x="16.0703%" y="485" width="0.0289%" height="15" fill="rgb(235,190,38)"/><text x="16.3203%" y="495.50"></text></g><g><title>kernel_init_free_pages (9 samples, 0.03%)</title><rect x="16.0703%" y="469" width="0.0289%" height="15" fill="rgb(247,86,24)"/><text x="16.3203%" y="479.50"></text></g><g><title>clear_page_erms (9 samples, 0.03%)</title><rect x="16.0703%" y="453" width="0.0289%" height="15" fill="rgb(205,101,16)"/><text x="16.3203%" y="463.50"></text></g><g><title>mem_cgroup_charge (5 samples, 0.02%)</title><rect x="16.1088%" y="533" width="0.0160%" height="15" fill="rgb(246,168,33)"/><text x="16.3588%" y="543.50"></text></g><g><title>exc_page_fault (36 samples, 0.12%)</title><rect x="16.0158%" y="581" width="0.1155%" height="15" fill="rgb(231,114,1)"/><text x="16.2658%" y="591.50"></text></g><g><title>do_user_addr_fault (36 samples, 0.12%)</title><rect x="16.0158%" y="565" width="0.1155%" height="15" fill="rgb(207,184,53)"/><text x="16.2658%" y="575.50"></text></g><g><title>handle_mm_fault (36 samples, 0.12%)</title><rect x="16.0158%" y="549" width="0.1155%" height="15" fill="rgb(224,95,51)"/><text x="16.2658%" y="559.50"></text></g><g><title>asm_exc_page_fault (41 samples, 0.13%)</title><rect x="16.0158%" y="597" width="0.1316%" height="15" fill="rgb(212,188,45)"/><text x="16.2658%" y="607.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.02%)</title><rect x="16.1313%" y="581" width="0.0160%" height="15" fill="rgb(223,154,38)"/><text x="16.3813%" y="591.50"></text></g><g><title>error_entry (4 samples, 0.01%)</title><rect x="16.1506%" y="597" width="0.0128%" height="15" fill="rgb(251,22,52)"/><text x="16.4006%" y="607.50"></text></g><g><title>sysmalloc (4 samples, 0.01%)</title><rect x="16.1634%" y="597" width="0.0128%" height="15" fill="rgb(229,209,22)"/><text x="16.4134%" y="607.50"></text></g><g><title>_int_malloc (273 samples, 0.88%)</title><rect x="15.3997%" y="613" width="0.8760%" height="15" fill="rgb(234,138,34)"/><text x="15.6497%" y="623.50"></text></g><g><title>unlink_chunk (31 samples, 0.10%)</title><rect x="16.1762%" y="597" width="0.0995%" height="15" fill="rgb(212,95,11)"/><text x="16.4262%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.02%)</title><rect x="16.2789%" y="613" width="0.0160%" height="15" fill="rgb(240,179,47)"/><text x="16.5289%" y="623.50"></text></g><g><title>_raw_spin_lock (5 samples, 0.02%)</title><rect x="16.3238%" y="533" width="0.0160%" height="15" fill="rgb(240,163,11)"/><text x="16.5738%" y="543.50"></text></g><g><title>mark_wake_futex (5 samples, 0.02%)</title><rect x="16.3431%" y="533" width="0.0160%" height="15" fill="rgb(236,37,12)"/><text x="16.5931%" y="543.50"></text></g><g><title>select_task_rq_fair (5 samples, 0.02%)</title><rect x="16.3784%" y="501" width="0.0160%" height="15" fill="rgb(232,164,16)"/><text x="16.6284%" y="511.50"></text></g><g><title>ttwu_do_activate (13 samples, 0.04%)</title><rect x="16.3944%" y="501" width="0.0417%" height="15" fill="rgb(244,205,15)"/><text x="16.6444%" y="511.50"></text></g><g><title>psi_task_change (10 samples, 0.03%)</title><rect x="16.4041%" y="485" width="0.0321%" height="15" fill="rgb(223,117,47)"/><text x="16.6541%" y="495.50"></text></g><g><title>psi_group_change (10 samples, 0.03%)</title><rect x="16.4041%" y="469" width="0.0321%" height="15" fill="rgb(244,107,35)"/><text x="16.6541%" y="479.50"></text></g><g><title>__smp_call_single_queue (4 samples, 0.01%)</title><rect x="16.4522%" y="485" width="0.0128%" height="15" fill="rgb(205,140,8)"/><text x="16.7022%" y="495.50"></text></g><g><title>llist_add_batch (4 samples, 0.01%)</title><rect x="16.4522%" y="469" width="0.0128%" height="15" fill="rgb(228,84,46)"/><text x="16.7022%" y="479.50"></text></g><g><title>ttwu_queue_wakelist (10 samples, 0.03%)</title><rect x="16.4394%" y="501" width="0.0321%" height="15" fill="rgb(254,188,9)"/><text x="16.6894%" y="511.50"></text></g><g><title>__x64_sys_futex (54 samples, 0.17%)</title><rect x="16.3046%" y="581" width="0.1733%" height="15" fill="rgb(206,112,54)"/><text x="16.5546%" y="591.50"></text></g><g><title>do_futex (51 samples, 0.16%)</title><rect x="16.3142%" y="565" width="0.1637%" height="15" fill="rgb(216,84,49)"/><text x="16.5642%" y="575.50"></text></g><g><title>futex_wake (51 samples, 0.16%)</title><rect x="16.3142%" y="549" width="0.1637%" height="15" fill="rgb(214,194,35)"/><text x="16.5642%" y="559.50"></text></g><g><title>wake_up_q (37 samples, 0.12%)</title><rect x="16.3591%" y="533" width="0.1187%" height="15" fill="rgb(249,28,3)"/><text x="16.6091%" y="543.50"></text></g><g><title>try_to_wake_up (34 samples, 0.11%)</title><rect x="16.3688%" y="517" width="0.1091%" height="15" fill="rgb(222,56,52)"/><text x="16.6188%" y="527.50"></text></g><g><title>do_syscall_64 (56 samples, 0.18%)</title><rect x="16.3014%" y="597" width="0.1797%" height="15" fill="rgb(245,217,50)"/><text x="16.5514%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (84 samples, 0.27%)</title><rect x="16.2950%" y="613" width="0.2696%" height="15" fill="rgb(213,201,24)"/><text x="16.5450%" y="623.50"></text></g><g><title>syscall_exit_to_user_mode (26 samples, 0.08%)</title><rect x="16.4811%" y="597" width="0.0834%" height="15" fill="rgb(248,116,28)"/><text x="16.7311%" y="607.50"></text></g><g><title>__GI___libc_malloc (439 samples, 1.41%)</title><rect x="15.1686%" y="629" width="1.4087%" height="15" fill="rgb(219,72,43)"/><text x="15.4186%" y="639.50"></text></g><g><title>syscall_return_via_sysret (4 samples, 0.01%)</title><rect x="16.5645%" y="613" width="0.0128%" height="15" fill="rgb(209,138,14)"/><text x="16.8145%" y="623.50"></text></g><g><title>ate::spec::SerializationFormat::deserialize (697 samples, 2.24%)</title><rect x="14.3536%" y="677" width="2.2366%" height="15" fill="rgb(222,18,33)"/><text x="14.6036%" y="687.50">a..</text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (694 samples, 2.23%)</title><rect x="14.3632%" y="661" width="2.2270%" height="15" fill="rgb(213,199,7)"/><text x="14.6132%" y="671.50">&lt;..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (664 samples, 2.13%)</title><rect x="14.4595%" y="645" width="2.1307%" height="15" fill="rgb(250,110,10)"/><text x="14.7095%" y="655.50">&lt;..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (5 samples, 0.02%)</title><rect x="16.9881%" y="661" width="0.0160%" height="15" fill="rgb(248,123,6)"/><text x="17.2381%" y="671.50"></text></g><g><title>__GI___libc_malloc (143 samples, 0.46%)</title><rect x="17.1774%" y="629" width="0.4589%" height="15" fill="rgb(206,91,31)"/><text x="17.4274%" y="639.50"></text></g><g><title>_int_malloc (143 samples, 0.46%)</title><rect x="17.1774%" y="613" width="0.4589%" height="15" fill="rgb(211,154,13)"/><text x="17.4274%" y="623.50"></text></g><g><title>malloc_consolidate (135 samples, 0.43%)</title><rect x="17.2031%" y="597" width="0.4332%" height="15" fill="rgb(225,148,7)"/><text x="17.4531%" y="607.50"></text></g><g><title>unlink_chunk (60 samples, 0.19%)</title><rect x="17.4438%" y="581" width="0.1925%" height="15" fill="rgb(220,160,43)"/><text x="17.6938%" y="591.50"></text></g><g><title>alloc_pages_vma (4 samples, 0.01%)</title><rect x="17.6748%" y="565" width="0.0128%" height="15" fill="rgb(213,52,39)"/><text x="17.9248%" y="575.50"></text></g><g><title>__alloc_pages_nodemask (4 samples, 0.01%)</title><rect x="17.6748%" y="549" width="0.0128%" height="15" fill="rgb(243,137,7)"/><text x="17.9248%" y="559.50"></text></g><g><title>exc_page_fault (11 samples, 0.04%)</title><rect x="17.6684%" y="613" width="0.0353%" height="15" fill="rgb(230,79,13)"/><text x="17.9184%" y="623.50"></text></g><g><title>do_user_addr_fault (11 samples, 0.04%)</title><rect x="17.6684%" y="597" width="0.0353%" height="15" fill="rgb(247,105,23)"/><text x="17.9184%" y="607.50"></text></g><g><title>handle_mm_fault (11 samples, 0.04%)</title><rect x="17.6684%" y="581" width="0.0353%" height="15" fill="rgb(223,179,41)"/><text x="17.9184%" y="591.50"></text></g><g><title>asm_exc_page_fault (22 samples, 0.07%)</title><rect x="17.6588%" y="629" width="0.0706%" height="15" fill="rgb(218,9,34)"/><text x="17.9088%" y="639.50"></text></g><g><title>irqentry_exit_to_user_mode (8 samples, 0.03%)</title><rect x="17.7037%" y="613" width="0.0257%" height="15" fill="rgb(222,106,8)"/><text x="17.9537%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (5 samples, 0.02%)</title><rect x="17.7294%" y="629" width="0.0160%" height="15" fill="rgb(211,220,0)"/><text x="17.9794%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (366 samples, 1.17%)</title><rect x="16.5902%" y="677" width="1.1745%" height="15" fill="rgb(229,52,16)"/><text x="16.8402%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (237 samples, 0.76%)</title><rect x="17.0041%" y="661" width="0.7605%" height="15" fill="rgb(212,155,18)"/><text x="17.2541%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (204 samples, 0.65%)</title><rect x="17.1100%" y="645" width="0.6546%" height="15" fill="rgb(242,21,14)"/><text x="17.3600%" y="655.50"></text></g><g><title>error_entry (6 samples, 0.02%)</title><rect x="17.7454%" y="629" width="0.0193%" height="15" fill="rgb(222,19,48)"/><text x="17.9954%" y="639.50"></text></g><g><title>__do_fault (6 samples, 0.02%)</title><rect x="17.7647%" y="581" width="0.0193%" height="15" fill="rgb(232,45,27)"/><text x="18.0147%" y="591.50"></text></g><g><title>ext4_filemap_fault (6 samples, 0.02%)</title><rect x="17.7647%" y="565" width="0.0193%" height="15" fill="rgb(249,103,42)"/><text x="18.0147%" y="575.50"></text></g><g><title>filemap_fault (6 samples, 0.02%)</title><rect x="17.7647%" y="549" width="0.0193%" height="15" fill="rgb(246,81,33)"/><text x="18.0147%" y="559.50"></text></g><g><title>wait_on_page_bit_common (6 samples, 0.02%)</title><rect x="17.7647%" y="533" width="0.0193%" height="15" fill="rgb(252,33,42)"/><text x="18.0147%" y="543.50"></text></g><g><title>io_schedule (6 samples, 0.02%)</title><rect x="17.7647%" y="517" width="0.0193%" height="15" fill="rgb(209,212,41)"/><text x="18.0147%" y="527.50"></text></g><g><title>schedule (6 samples, 0.02%)</title><rect x="17.7647%" y="501" width="0.0193%" height="15" fill="rgb(207,154,6)"/><text x="18.0147%" y="511.50"></text></g><g><title>__schedule (6 samples, 0.02%)</title><rect x="17.7647%" y="485" width="0.0193%" height="15" fill="rgb(223,64,47)"/><text x="18.0147%" y="495.50"></text></g><g><title>finish_task_switch (6 samples, 0.02%)</title><rect x="17.7647%" y="469" width="0.0193%" height="15" fill="rgb(211,161,38)"/><text x="18.0147%" y="479.50"></text></g><g><title>__perf_event_task_sched_in (6 samples, 0.02%)</title><rect x="17.7647%" y="453" width="0.0193%" height="15" fill="rgb(219,138,40)"/><text x="18.0147%" y="463.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (6 samples, 0.02%)</title><rect x="17.7647%" y="437" width="0.0193%" height="15" fill="rgb(241,228,46)"/><text x="18.0147%" y="447.50"></text></g><g><title>native_write_msr (6 samples, 0.02%)</title><rect x="17.7647%" y="421" width="0.0193%" height="15" fill="rgb(223,209,38)"/><text x="18.0147%" y="431.50"></text></g><g><title>ate::redo::RedoLog::new::{{closure}} (3,005 samples, 9.64%)</title><rect x="8.1443%" y="693" width="9.6428%" height="15" fill="rgb(236,164,45)"/><text x="8.3943%" y="703.50">ate::redo::Red..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.02%)</title><rect x="17.7647%" y="677" width="0.0225%" height="15" fill="rgb(231,15,5)"/><text x="18.0147%" y="687.50"></text></g><g><title>fastrand::RNG::__getit (7 samples, 0.02%)</title><rect x="17.7647%" y="661" width="0.0225%" height="15" fill="rgb(252,35,15)"/><text x="18.0147%" y="671.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.02%)</title><rect x="17.7647%" y="645" width="0.0225%" height="15" fill="rgb(248,181,18)"/><text x="18.0147%" y="655.50"></text></g><g><title>exc_page_fault (7 samples, 0.02%)</title><rect x="17.7647%" y="629" width="0.0225%" height="15" fill="rgb(233,39,42)"/><text x="18.0147%" y="639.50"></text></g><g><title>do_user_addr_fault (7 samples, 0.02%)</title><rect x="17.7647%" y="613" width="0.0225%" height="15" fill="rgb(238,110,33)"/><text x="18.0147%" y="623.50"></text></g><g><title>handle_mm_fault (7 samples, 0.02%)</title><rect x="17.7647%" y="597" width="0.0225%" height="15" fill="rgb(233,195,10)"/><text x="18.0147%" y="607.50"></text></g><g><title>ate::redo::RedoLogLoader::pop (11 samples, 0.04%)</title><rect x="17.7871%" y="693" width="0.0353%" height="15" fill="rgb(254,105,3)"/><text x="18.0371%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.03%)</title><rect x="17.7967%" y="677" width="0.0257%" height="15" fill="rgb(221,225,9)"/><text x="18.0467%" y="687.50"></text></g><g><title>bytes::bytes::promotable_even_drop (18 samples, 0.06%)</title><rect x="17.8224%" y="693" width="0.0578%" height="15" fill="rgb(224,227,45)"/><text x="18.0724%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (18 samples, 0.06%)</title><rect x="18.1626%" y="613" width="0.0578%" height="15" fill="rgb(229,198,43)"/><text x="18.4126%" y="623.50"></text></g><g><title>blake3::Hasher::finalize (10 samples, 0.03%)</title><rect x="18.2203%" y="613" width="0.0321%" height="15" fill="rgb(206,209,35)"/><text x="18.4703%" y="623.50"></text></g><g><title>blake3::Hasher::final_output (7 samples, 0.02%)</title><rect x="18.2300%" y="597" width="0.0225%" height="15" fill="rgb(245,195,53)"/><text x="18.4800%" y="607.50"></text></g><g><title>blake3::ChunkState::update (7 samples, 0.02%)</title><rect x="18.2717%" y="597" width="0.0225%" height="15" fill="rgb(240,92,26)"/><text x="18.5217%" y="607.50"></text></g><g><title>ate::event::EventData::as_header_raw (43 samples, 0.14%)</title><rect x="18.1626%" y="645" width="0.1380%" height="15" fill="rgb(207,40,23)"/><text x="18.4126%" y="655.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (43 samples, 0.14%)</title><rect x="18.1626%" y="629" width="0.1380%" height="15" fill="rgb(223,111,35)"/><text x="18.4126%" y="639.50"></text></g><g><title>blake3::Hasher::update (13 samples, 0.04%)</title><rect x="18.2588%" y="613" width="0.0417%" height="15" fill="rgb(229,147,28)"/><text x="18.5088%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (145 samples, 0.47%)</title><rect x="17.8802%" y="693" width="0.4653%" height="15" fill="rgb(211,29,28)"/><text x="18.1302%" y="703.50"></text></g><g><title>&lt;ate::dio::Dio as core::ops::drop::Drop&gt;::drop (57 samples, 0.18%)</title><rect x="18.1626%" y="677" width="0.1829%" height="15" fill="rgb(228,72,33)"/><text x="18.4126%" y="687.50"></text></g><g><title>ate::dio::Dio::commit (57 samples, 0.18%)</title><rect x="18.1626%" y="661" width="0.1829%" height="15" fill="rgb(205,214,31)"/><text x="18.4126%" y="671.50"></text></g><g><title>ate::multi::ChainMultiUser::metadata_lint_many (14 samples, 0.04%)</title><rect x="18.3005%" y="645" width="0.0449%" height="15" fill="rgb(224,111,15)"/><text x="18.5505%" y="655.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::lint::EventMetadataLinter&gt;::metadata_lint_many (14 samples, 0.04%)</title><rect x="18.3005%" y="629" width="0.0449%" height="15" fill="rgb(253,21,26)"/><text x="18.5505%" y="639.50"></text></g><g><title>&lt;ate::signature::SignaturePlugin as ate::lint::EventMetadataLinter&gt;::metadata_lint_many (14 samples, 0.04%)</title><rect x="18.3005%" y="613" width="0.0449%" height="15" fill="rgb(245,139,43)"/><text x="18.5505%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.04%)</title><rect x="18.3005%" y="597" width="0.0449%" height="15" fill="rgb(252,170,7)"/><text x="18.5505%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,192 samples, 16.66%)</title><rect x="1.7072%" y="709" width="16.6608%" height="15" fill="rgb(231,118,14)"/><text x="1.9572%" y="719.50">&lt;core::future::from_genera..</text></g><g><title>error_entry (7 samples, 0.02%)</title><rect x="18.3455%" y="693" width="0.0225%" height="15" fill="rgb(238,83,0)"/><text x="18.5955%" y="703.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.03%)</title><rect x="18.3968%" y="709" width="0.0321%" height="15" fill="rgb(221,39,39)"/><text x="18.6468%" y="719.50"></text></g><g><title>__GI___libc_free (10 samples, 0.03%)</title><rect x="18.3968%" y="693" width="0.0321%" height="15" fill="rgb(222,119,46)"/><text x="18.6468%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="18.4289%" y="693" width="0.0546%" height="15" fill="rgb(222,165,49)"/><text x="18.6789%" y="703.50"></text></g><g><title>[stress] (18 samples, 0.06%)</title><rect x="18.4289%" y="709" width="0.0578%" height="15" fill="rgb(219,113,52)"/><text x="18.6789%" y="719.50"></text></g><g><title>__GI___libc_free (4 samples, 0.01%)</title><rect x="18.4899%" y="709" width="0.0128%" height="15" fill="rgb(214,7,15)"/><text x="18.7399%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.02%)</title><rect x="18.5091%" y="693" width="0.0225%" height="15" fill="rgb(235,32,4)"/><text x="18.7591%" y="703.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.03%)</title><rect x="18.5027%" y="709" width="0.0321%" height="15" fill="rgb(238,90,54)"/><text x="18.7527%" y="719.50"></text></g><g><title>_int_free (40 samples, 0.13%)</title><rect x="18.5412%" y="709" width="0.1284%" height="15" fill="rgb(213,208,19)"/><text x="18.7912%" y="719.50"></text></g><g><title>_int_malloc (15 samples, 0.05%)</title><rect x="18.6696%" y="709" width="0.0481%" height="15" fill="rgb(233,156,4)"/><text x="18.9196%" y="719.50"></text></g><g><title>error_entry (4 samples, 0.01%)</title><rect x="18.7049%" y="693" width="0.0128%" height="15" fill="rgb(207,194,5)"/><text x="18.9549%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.05%)</title><rect x="18.7273%" y="709" width="0.0546%" height="15" fill="rgb(206,111,30)"/><text x="18.9773%" y="719.50"></text></g><g><title>ate::crypto::Hash::from_bytes (5 samples, 0.02%)</title><rect x="18.7915%" y="709" width="0.0160%" height="15" fill="rgb(243,70,54)"/><text x="19.0415%" y="719.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (9 samples, 0.03%)</title><rect x="18.8076%" y="709" width="0.0289%" height="15" fill="rgb(242,28,8)"/><text x="19.0576%" y="719.50"></text></g><g><title>ate::dio::DioState::dirty (5 samples, 0.02%)</title><rect x="18.8364%" y="709" width="0.0160%" height="15" fill="rgb(219,106,18)"/><text x="19.0864%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (30 samples, 0.10%)</title><rect x="18.8974%" y="661" width="0.0963%" height="15" fill="rgb(244,222,10)"/><text x="19.1474%" y="671.50"></text></g><g><title>blake3::Hasher::finalize (13 samples, 0.04%)</title><rect x="18.9937%" y="661" width="0.0417%" height="15" fill="rgb(236,179,52)"/><text x="19.2437%" y="671.50"></text></g><g><title>blake3::Hasher::final_output (8 samples, 0.03%)</title><rect x="19.0097%" y="645" width="0.0257%" height="15" fill="rgb(213,23,39)"/><text x="19.2597%" y="655.50"></text></g><g><title>blake3::Hasher::new (7 samples, 0.02%)</title><rect x="19.0354%" y="661" width="0.0225%" height="15" fill="rgb(238,48,10)"/><text x="19.2854%" y="671.50"></text></g><g><title>blake3::ChunkState::update (15 samples, 0.05%)</title><rect x="19.0707%" y="645" width="0.0481%" height="15" fill="rgb(251,196,23)"/><text x="19.3207%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.02%)</title><rect x="19.0964%" y="629" width="0.0225%" height="15" fill="rgb(250,152,24)"/><text x="19.3464%" y="639.50"></text></g><g><title>ate::redo::RedoLog::new::{{closure}} (80 samples, 0.26%)</title><rect x="18.8878%" y="709" width="0.2567%" height="15" fill="rgb(209,150,17)"/><text x="19.1378%" y="719.50"></text></g><g><title>ate::event::EventHeaderRaw::new (79 samples, 0.25%)</title><rect x="18.8910%" y="693" width="0.2535%" height="15" fill="rgb(234,202,34)"/><text x="19.1410%" y="703.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (79 samples, 0.25%)</title><rect x="18.8910%" y="677" width="0.2535%" height="15" fill="rgb(253,148,53)"/><text x="19.1410%" y="687.50"></text></g><g><title>blake3::Hasher::update (27 samples, 0.09%)</title><rect x="19.0579%" y="661" width="0.0866%" height="15" fill="rgb(218,129,16)"/><text x="19.3079%" y="671.50"></text></g><g><title>blake3::Hasher::merge_cv_stack (8 samples, 0.03%)</title><rect x="19.1188%" y="645" width="0.0257%" height="15" fill="rgb(216,85,19)"/><text x="19.3688%" y="655.50"></text></g><g><title>bincode::config::DefaultOptions::new (4 samples, 0.01%)</title><rect x="19.1766%" y="709" width="0.0128%" height="15" fill="rgb(235,228,7)"/><text x="19.4266%" y="719.50"></text></g><g><title>blake3::ChunkState::update (23 samples, 0.07%)</title><rect x="19.1991%" y="709" width="0.0738%" height="15" fill="rgb(245,175,0)"/><text x="19.4491%" y="719.50"></text></g><g><title>blake3::Hasher::final_output (4 samples, 0.01%)</title><rect x="19.2729%" y="709" width="0.0128%" height="15" fill="rgb(208,168,36)"/><text x="19.5229%" y="719.50"></text></g><g><title>blake3::Hasher::merge_cv_stack (7 samples, 0.02%)</title><rect x="19.2889%" y="709" width="0.0225%" height="15" fill="rgb(246,171,24)"/><text x="19.5389%" y="719.50"></text></g><g><title>blake3::Hasher::update (14 samples, 0.04%)</title><rect x="19.3178%" y="709" width="0.0449%" height="15" fill="rgb(215,142,24)"/><text x="19.5678%" y="719.50"></text></g><g><title>blake3::hash (11 samples, 0.04%)</title><rect x="19.3627%" y="709" width="0.0353%" height="15" fill="rgb(250,187,7)"/><text x="19.6127%" y="719.50"></text></g><g><title>blake3_compress_in_place_sse41 (161 samples, 0.52%)</title><rect x="19.3980%" y="709" width="0.5166%" height="15" fill="rgb(228,66,33)"/><text x="19.6480%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4 samples, 0.01%)</title><rect x="19.9179%" y="709" width="0.0128%" height="15" fill="rgb(234,215,21)"/><text x="20.1679%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.02%)</title><rect x="19.9307%" y="709" width="0.0193%" height="15" fill="rgb(222,191,20)"/><text x="20.1807%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (4 samples, 0.01%)</title><rect x="19.9499%" y="709" width="0.0128%" height="15" fill="rgb(245,79,54)"/><text x="20.1999%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (6 samples, 0.02%)</title><rect x="19.9660%" y="709" width="0.0193%" height="15" fill="rgb(240,10,37)"/><text x="20.2160%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.03%)</title><rect x="19.9981%" y="709" width="0.0257%" height="15" fill="rgb(214,192,32)"/><text x="20.2481%" y="719.50"></text></g><g><title>stress::_::&lt;impl serde::ser::Serialize for stress::MyTestObject&gt;::serialize (4 samples, 0.01%)</title><rect x="20.0398%" y="709" width="0.0128%" height="15" fill="rgb(209,36,54)"/><text x="20.2898%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (24 samples, 0.08%)</title><rect x="20.0687%" y="645" width="0.0770%" height="15" fill="rgb(220,10,11)"/><text x="20.3187%" y="655.50"></text></g><g><title>_int_malloc (36 samples, 0.12%)</title><rect x="20.2002%" y="613" width="0.1155%" height="15" fill="rgb(221,106,17)"/><text x="20.4502%" y="623.50"></text></g><g><title>__GI___libc_malloc (44 samples, 0.14%)</title><rect x="20.1874%" y="629" width="0.1412%" height="15" fill="rgb(251,142,44)"/><text x="20.4374%" y="639.50"></text></g><g><title>tcache_get (4 samples, 0.01%)</title><rect x="20.3158%" y="613" width="0.0128%" height="15" fill="rgb(238,13,15)"/><text x="20.5658%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.03%)</title><rect x="20.3286%" y="629" width="0.0289%" height="15" fill="rgb(208,107,27)"/><text x="20.5786%" y="639.50"></text></g><g><title>exc_page_fault (6 samples, 0.02%)</title><rect x="20.4409%" y="581" width="0.0193%" height="15" fill="rgb(205,136,37)"/><text x="20.6909%" y="591.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.02%)</title><rect x="20.4409%" y="565" width="0.0193%" height="15" fill="rgb(250,205,27)"/><text x="20.6909%" y="575.50"></text></g><g><title>handle_mm_fault (5 samples, 0.02%)</title><rect x="20.4441%" y="549" width="0.0160%" height="15" fill="rgb(210,80,43)"/><text x="20.6941%" y="559.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.02%)</title><rect x="20.4409%" y="597" width="0.0225%" height="15" fill="rgb(247,160,36)"/><text x="20.6909%" y="607.50"></text></g><g><title>ate::dio::DioState::dirty (101 samples, 0.32%)</title><rect x="20.1457%" y="645" width="0.3241%" height="15" fill="rgb(234,13,49)"/><text x="20.3957%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (30 samples, 0.10%)</title><rect x="20.3735%" y="629" width="0.0963%" height="15" fill="rgb(234,122,0)"/><text x="20.6235%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (27 samples, 0.09%)</title><rect x="20.3831%" y="613" width="0.0866%" height="15" fill="rgb(207,146,38)"/><text x="20.6331%" y="623.50"></text></g><g><title>ate::crypto::Hash::from_bytes (63 samples, 0.20%)</title><rect x="20.5564%" y="629" width="0.2022%" height="15" fill="rgb(207,177,25)"/><text x="20.8064%" y="639.50"></text></g><g><title>blake3::hash (62 samples, 0.20%)</title><rect x="20.5596%" y="613" width="0.1990%" height="15" fill="rgb(211,178,42)"/><text x="20.8096%" y="623.50"></text></g><g><title>blake3::ChunkState::update (48 samples, 0.15%)</title><rect x="20.6046%" y="597" width="0.1540%" height="15" fill="rgb(230,69,54)"/><text x="20.8546%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 0.04%)</title><rect x="20.7137%" y="581" width="0.0449%" height="15" fill="rgb(214,135,41)"/><text x="20.9637%" y="591.50"></text></g><g><title>__irqentry_text_end (4 samples, 0.01%)</title><rect x="21.9427%" y="565" width="0.0128%" height="15" fill="rgb(237,67,25)"/><text x="22.1927%" y="575.50"></text></g><g><title>alloc_pages_vma (9 samples, 0.03%)</title><rect x="21.9587%" y="501" width="0.0289%" height="15" fill="rgb(222,189,50)"/><text x="22.2087%" y="511.50"></text></g><g><title>__alloc_pages_nodemask (9 samples, 0.03%)</title><rect x="21.9587%" y="485" width="0.0289%" height="15" fill="rgb(245,148,34)"/><text x="22.2087%" y="495.50"></text></g><g><title>get_page_from_freelist (6 samples, 0.02%)</title><rect x="21.9684%" y="469" width="0.0193%" height="15" fill="rgb(222,29,6)"/><text x="22.2184%" y="479.50"></text></g><g><title>exc_page_fault (19 samples, 0.06%)</title><rect x="21.9555%" y="549" width="0.0610%" height="15" fill="rgb(221,189,43)"/><text x="22.2055%" y="559.50"></text></g><g><title>do_user_addr_fault (18 samples, 0.06%)</title><rect x="21.9587%" y="533" width="0.0578%" height="15" fill="rgb(207,36,27)"/><text x="22.2087%" y="543.50"></text></g><g><title>handle_mm_fault (18 samples, 0.06%)</title><rect x="21.9587%" y="517" width="0.0578%" height="15" fill="rgb(217,90,24)"/><text x="22.2087%" y="527.50"></text></g><g><title>asm_exc_page_fault (28 samples, 0.09%)</title><rect x="21.9555%" y="565" width="0.0899%" height="15" fill="rgb(224,66,35)"/><text x="22.2055%" y="575.50"></text></g><g><title>irqentry_exit_to_user_mode (9 samples, 0.03%)</title><rect x="22.0165%" y="549" width="0.0289%" height="15" fill="rgb(221,13,50)"/><text x="22.2665%" y="559.50"></text></g><g><title>error_entry (11 samples, 0.04%)</title><rect x="22.0454%" y="565" width="0.0353%" height="15" fill="rgb(236,68,49)"/><text x="22.2954%" y="575.50"></text></g><g><title>sync_regs (6 samples, 0.02%)</title><rect x="22.0614%" y="549" width="0.0193%" height="15" fill="rgb(229,146,28)"/><text x="22.3114%" y="559.50"></text></g><g><title>do_brk_flags (6 samples, 0.02%)</title><rect x="22.0871%" y="437" width="0.0193%" height="15" fill="rgb(225,31,38)"/><text x="22.3371%" y="447.50"></text></g><g><title>__GI___default_morecore (8 samples, 0.03%)</title><rect x="22.0839%" y="549" width="0.0257%" height="15" fill="rgb(250,208,3)"/><text x="22.3339%" y="559.50"></text></g><g><title>__GI___sbrk (8 samples, 0.03%)</title><rect x="22.0839%" y="533" width="0.0257%" height="15" fill="rgb(246,54,23)"/><text x="22.3339%" y="543.50"></text></g><g><title>__GI___sbrk (7 samples, 0.02%)</title><rect x="22.0871%" y="517" width="0.0225%" height="15" fill="rgb(243,76,11)"/><text x="22.3371%" y="527.50"></text></g><g><title>__brk (7 samples, 0.02%)</title><rect x="22.0871%" y="501" width="0.0225%" height="15" fill="rgb(245,21,50)"/><text x="22.3371%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.02%)</title><rect x="22.0871%" y="485" width="0.0225%" height="15" fill="rgb(228,9,43)"/><text x="22.3371%" y="495.50"></text></g><g><title>do_syscall_64 (7 samples, 0.02%)</title><rect x="22.0871%" y="469" width="0.0225%" height="15" fill="rgb(208,100,47)"/><text x="22.3371%" y="479.50"></text></g><g><title>__do_sys_brk (7 samples, 0.02%)</title><rect x="22.0871%" y="453" width="0.0225%" height="15" fill="rgb(232,26,8)"/><text x="22.3371%" y="463.50"></text></g><g><title>sysmalloc (10 samples, 0.03%)</title><rect x="22.0807%" y="565" width="0.0321%" height="15" fill="rgb(216,166,38)"/><text x="22.3307%" y="575.50"></text></g><g><title>_int_malloc (384 samples, 1.23%)</title><rect x="20.8902%" y="581" width="1.2322%" height="15" fill="rgb(251,202,51)"/><text x="21.1402%" y="591.50"></text></g><g><title>__GI___libc_malloc (410 samples, 1.32%)</title><rect x="20.8099%" y="597" width="1.3157%" height="15" fill="rgb(254,216,34)"/><text x="21.0599%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (90 samples, 0.29%)</title><rect x="22.6519%" y="581" width="0.2888%" height="15" fill="rgb(251,32,27)"/><text x="22.9019%" y="591.50"></text></g><g><title>asm_common_interrupt (5 samples, 0.02%)</title><rect x="22.9246%" y="565" width="0.0160%" height="15" fill="rgb(208,127,28)"/><text x="23.1746%" y="575.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.02%)</title><rect x="22.9246%" y="549" width="0.0160%" height="15" fill="rgb(224,137,22)"/><text x="23.1746%" y="559.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.02%)</title><rect x="22.9246%" y="533" width="0.0160%" height="15" fill="rgb(254,70,32)"/><text x="23.1746%" y="543.50"></text></g><g><title>schedule (5 samples, 0.02%)</title><rect x="22.9246%" y="517" width="0.0160%" height="15" fill="rgb(229,75,37)"/><text x="23.1746%" y="527.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="22.9246%" y="501" width="0.0160%" height="15" fill="rgb(252,64,23)"/><text x="23.1746%" y="511.50"></text></g><g><title>finish_task_switch (5 samples, 0.02%)</title><rect x="22.9246%" y="485" width="0.0160%" height="15" fill="rgb(232,162,48)"/><text x="23.1746%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="22.9246%" y="469" width="0.0160%" height="15" fill="rgb(246,160,12)"/><text x="23.1746%" y="479.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.02%)</title><rect x="22.9246%" y="453" width="0.0160%" height="15" fill="rgb(247,166,0)"/><text x="23.1746%" y="463.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="22.9246%" y="437" width="0.0160%" height="15" fill="rgb(249,219,21)"/><text x="23.1746%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (302 samples, 0.97%)</title><rect x="22.1288%" y="597" width="0.9691%" height="15" fill="rgb(205,209,3)"/><text x="22.3788%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (49 samples, 0.16%)</title><rect x="22.9407%" y="581" width="0.1572%" height="15" fill="rgb(243,44,1)"/><text x="23.1907%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.03%)</title><rect x="23.2969%" y="581" width="0.0321%" height="15" fill="rgb(206,159,16)"/><text x="23.5469%" y="591.50"></text></g><g><title>ate::dio::dao::Row&lt;D&gt;::as_row_data (892 samples, 2.86%)</title><rect x="20.4698%" y="645" width="2.8624%" height="15" fill="rgb(244,77,30)"/><text x="20.7198%" y="655.50">at..</text></g><g><title>ate::spec::SerializationFormat::serialize (802 samples, 2.57%)</title><rect x="20.7586%" y="629" width="2.5736%" height="15" fill="rgb(218,69,12)"/><text x="21.0086%" y="639.50">at..</text></g><g><title>bincode::serialize (792 samples, 2.54%)</title><rect x="20.7907%" y="613" width="2.5415%" height="15" fill="rgb(212,87,7)"/><text x="21.0407%" y="623.50">bi..</text></g><g><title>stress::_::&lt;impl serde::ser::Serialize for stress::MyTestObject&gt;::serialize (73 samples, 0.23%)</title><rect x="23.0979%" y="597" width="0.2343%" height="15" fill="rgb(245,114,25)"/><text x="23.3479%" y="607.50"></text></g><g><title>&lt;ate::dio::dao::Dao&lt;D&gt; as core::ops::drop::Drop&gt;::drop (1,026 samples, 3.29%)</title><rect x="20.0623%" y="661" width="3.2924%" height="15" fill="rgb(210,61,42)"/><text x="20.3123%" y="671.50">&lt;at..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (7 samples, 0.02%)</title><rect x="23.3322%" y="645" width="0.0225%" height="15" fill="rgb(211,52,33)"/><text x="23.5822%" y="655.50"></text></g><g><title>ate::conf::ChainOfTrustBuilder::new (7 samples, 0.02%)</title><rect x="23.3546%" y="661" width="0.0225%" height="15" fill="rgb(234,58,33)"/><text x="23.6046%" y="671.50"></text></g><g><title>ate::conf::ChainOfTrustBuilder::with_defaults (7 samples, 0.02%)</title><rect x="23.3546%" y="645" width="0.0225%" height="15" fill="rgb(220,115,36)"/><text x="23.6046%" y="655.50"></text></g><g><title>ate::time::TimestampEnforcer::new (7 samples, 0.02%)</title><rect x="23.3546%" y="629" width="0.0225%" height="15" fill="rgb(243,153,54)"/><text x="23.6046%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (7 samples, 0.02%)</title><rect x="23.3546%" y="613" width="0.0225%" height="15" fill="rgb(251,47,18)"/><text x="23.6046%" y="623.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.02%)</title><rect x="23.3546%" y="597" width="0.0225%" height="15" fill="rgb(242,102,42)"/><text x="23.6046%" y="607.50"></text></g><g><title>exc_page_fault (7 samples, 0.02%)</title><rect x="23.3546%" y="581" width="0.0225%" height="15" fill="rgb(234,31,38)"/><text x="23.6046%" y="591.50"></text></g><g><title>do_user_addr_fault (7 samples, 0.02%)</title><rect x="23.3546%" y="565" width="0.0225%" height="15" fill="rgb(221,117,51)"/><text x="23.6046%" y="575.50"></text></g><g><title>handle_mm_fault (7 samples, 0.02%)</title><rect x="23.3546%" y="549" width="0.0225%" height="15" fill="rgb(212,20,18)"/><text x="23.6046%" y="559.50"></text></g><g><title>__do_fault (6 samples, 0.02%)</title><rect x="23.3578%" y="533" width="0.0193%" height="15" fill="rgb(245,133,36)"/><text x="23.6078%" y="543.50"></text></g><g><title>ext4_filemap_fault (6 samples, 0.02%)</title><rect x="23.3578%" y="517" width="0.0193%" height="15" fill="rgb(212,6,19)"/><text x="23.6078%" y="527.50"></text></g><g><title>filemap_fault (6 samples, 0.02%)</title><rect x="23.3578%" y="501" width="0.0193%" height="15" fill="rgb(218,1,36)"/><text x="23.6078%" y="511.50"></text></g><g><title>wait_on_page_bit_common (6 samples, 0.02%)</title><rect x="23.3578%" y="485" width="0.0193%" height="15" fill="rgb(246,84,54)"/><text x="23.6078%" y="495.50"></text></g><g><title>io_schedule (6 samples, 0.02%)</title><rect x="23.3578%" y="469" width="0.0193%" height="15" fill="rgb(242,110,6)"/><text x="23.6078%" y="479.50"></text></g><g><title>schedule (6 samples, 0.02%)</title><rect x="23.3578%" y="453" width="0.0193%" height="15" fill="rgb(214,47,5)"/><text x="23.6078%" y="463.50"></text></g><g><title>__schedule (6 samples, 0.02%)</title><rect x="23.3578%" y="437" width="0.0193%" height="15" fill="rgb(218,159,25)"/><text x="23.6078%" y="447.50"></text></g><g><title>finish_task_switch (6 samples, 0.02%)</title><rect x="23.3578%" y="421" width="0.0193%" height="15" fill="rgb(215,211,28)"/><text x="23.6078%" y="431.50"></text></g><g><title>__perf_event_task_sched_in (6 samples, 0.02%)</title><rect x="23.3578%" y="405" width="0.0193%" height="15" fill="rgb(238,59,32)"/><text x="23.6078%" y="415.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (6 samples, 0.02%)</title><rect x="23.3578%" y="389" width="0.0193%" height="15" fill="rgb(226,82,3)"/><text x="23.6078%" y="399.50"></text></g><g><title>native_write_msr (6 samples, 0.02%)</title><rect x="23.3578%" y="373" width="0.0193%" height="15" fill="rgb(240,164,32)"/><text x="23.6078%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (52 samples, 0.17%)</title><rect x="23.4766%" y="645" width="0.1669%" height="15" fill="rgb(232,46,7)"/><text x="23.7266%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="23.6723%" y="629" width="0.0160%" height="15" fill="rgb(229,129,53)"/><text x="23.9223%" y="639.50"></text></g><g><title>ate::dio::DioState::lock (18 samples, 0.06%)</title><rect x="23.6434%" y="645" width="0.0578%" height="15" fill="rgb(234,188,29)"/><text x="23.8934%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (4 samples, 0.01%)</title><rect x="23.6883%" y="629" width="0.0128%" height="15" fill="rgb(246,141,4)"/><text x="23.9383%" y="639.50"></text></g><g><title>ate::dio::Dio::store (102 samples, 0.33%)</title><rect x="23.3771%" y="661" width="0.3273%" height="15" fill="rgb(229,23,39)"/><text x="23.6271%" y="671.50"></text></g><g><title>__irqentry_text_end (5 samples, 0.02%)</title><rect x="24.3333%" y="565" width="0.0160%" height="15" fill="rgb(206,12,3)"/><text x="24.5833%" y="575.50"></text></g><g><title>alloc_pages_vma (29 samples, 0.09%)</title><rect x="24.3943%" y="501" width="0.0931%" height="15" fill="rgb(252,226,20)"/><text x="24.6443%" y="511.50"></text></g><g><title>__alloc_pages_nodemask (27 samples, 0.09%)</title><rect x="24.4007%" y="485" width="0.0866%" height="15" fill="rgb(216,123,35)"/><text x="24.6507%" y="495.50"></text></g><g><title>get_page_from_freelist (25 samples, 0.08%)</title><rect x="24.4071%" y="469" width="0.0802%" height="15" fill="rgb(212,68,40)"/><text x="24.6571%" y="479.50"></text></g><g><title>prep_new_page (19 samples, 0.06%)</title><rect x="24.4264%" y="453" width="0.0610%" height="15" fill="rgb(254,125,32)"/><text x="24.6764%" y="463.50"></text></g><g><title>kernel_init_free_pages (16 samples, 0.05%)</title><rect x="24.4360%" y="437" width="0.0513%" height="15" fill="rgb(253,97,22)"/><text x="24.6860%" y="447.50"></text></g><g><title>clear_page_erms (16 samples, 0.05%)</title><rect x="24.4360%" y="421" width="0.0513%" height="15" fill="rgb(241,101,14)"/><text x="24.6860%" y="431.50"></text></g><g><title>__pagevec_lru_add_fn (4 samples, 0.01%)</title><rect x="24.4970%" y="469" width="0.0128%" height="15" fill="rgb(238,103,29)"/><text x="24.7470%" y="479.50"></text></g><g><title>lru_cache_add (8 samples, 0.03%)</title><rect x="24.4906%" y="501" width="0.0257%" height="15" fill="rgb(233,195,47)"/><text x="24.7406%" y="511.50"></text></g><g><title>pagevec_lru_move_fn (6 samples, 0.02%)</title><rect x="24.4970%" y="485" width="0.0193%" height="15" fill="rgb(246,218,30)"/><text x="24.7470%" y="495.50"></text></g><g><title>mem_cgroup_charge (6 samples, 0.02%)</title><rect x="24.5163%" y="501" width="0.0193%" height="15" fill="rgb(219,145,47)"/><text x="24.7663%" y="511.50"></text></g><g><title>exc_page_fault (60 samples, 0.19%)</title><rect x="24.3558%" y="549" width="0.1925%" height="15" fill="rgb(243,12,26)"/><text x="24.6058%" y="559.50"></text></g><g><title>do_user_addr_fault (60 samples, 0.19%)</title><rect x="24.3558%" y="533" width="0.1925%" height="15" fill="rgb(214,87,16)"/><text x="24.6058%" y="543.50"></text></g><g><title>handle_mm_fault (56 samples, 0.18%)</title><rect x="24.3686%" y="517" width="0.1797%" height="15" fill="rgb(208,99,42)"/><text x="24.6186%" y="527.50"></text></g><g><title>asm_exc_page_fault (74 samples, 0.24%)</title><rect x="24.3494%" y="565" width="0.2375%" height="15" fill="rgb(253,99,2)"/><text x="24.5994%" y="575.50"></text></g><g><title>irqentry_exit_to_user_mode (12 samples, 0.04%)</title><rect x="24.5483%" y="549" width="0.0385%" height="15" fill="rgb(220,168,23)"/><text x="24.7983%" y="559.50"></text></g><g><title>error_entry (9 samples, 0.03%)</title><rect x="24.5933%" y="565" width="0.0289%" height="15" fill="rgb(242,38,24)"/><text x="24.8433%" y="575.50"></text></g><g><title>sync_regs (4 samples, 0.01%)</title><rect x="24.6093%" y="549" width="0.0128%" height="15" fill="rgb(225,182,9)"/><text x="24.8593%" y="559.50"></text></g><g><title>_int_malloc (111 samples, 0.36%)</title><rect x="24.2692%" y="581" width="0.3562%" height="15" fill="rgb(243,178,37)"/><text x="24.5192%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (179 samples, 0.57%)</title><rect x="24.0542%" y="613" width="0.5744%" height="15" fill="rgb(232,139,19)"/><text x="24.3042%" y="623.50"></text></g><g><title>__GI___libc_malloc (132 samples, 0.42%)</title><rect x="24.2050%" y="597" width="0.4236%" height="15" fill="rgb(225,201,24)"/><text x="24.4550%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.02%)</title><rect x="24.9077%" y="581" width="0.0225%" height="15" fill="rgb(221,47,46)"/><text x="25.1577%" y="591.50"></text></g><g><title>__get_user_nocheck_4 (7 samples, 0.02%)</title><rect x="24.9559%" y="485" width="0.0225%" height="15" fill="rgb(249,23,13)"/><text x="25.2059%" y="495.50"></text></g><g><title>do_syscall_64 (16 samples, 0.05%)</title><rect x="24.9334%" y="565" width="0.0513%" height="15" fill="rgb(219,9,5)"/><text x="25.1834%" y="575.50"></text></g><g><title>__x64_sys_futex (16 samples, 0.05%)</title><rect x="24.9334%" y="549" width="0.0513%" height="15" fill="rgb(254,171,16)"/><text x="25.1834%" y="559.50"></text></g><g><title>do_futex (15 samples, 0.05%)</title><rect x="24.9366%" y="533" width="0.0481%" height="15" fill="rgb(230,171,20)"/><text x="25.1866%" y="543.50"></text></g><g><title>futex_wait (15 samples, 0.05%)</title><rect x="24.9366%" y="517" width="0.0481%" height="15" fill="rgb(210,71,41)"/><text x="25.1866%" y="527.50"></text></g><g><title>futex_wait_setup (12 samples, 0.04%)</title><rect x="24.9463%" y="501" width="0.0385%" height="15" fill="rgb(206,173,20)"/><text x="25.1963%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (36 samples, 0.12%)</title><rect x="24.9302%" y="581" width="0.1155%" height="15" fill="rgb(233,88,34)"/><text x="25.1802%" y="591.50"></text></g><g><title>syscall_exit_to_user_mode (19 samples, 0.06%)</title><rect x="24.9848%" y="565" width="0.0610%" height="15" fill="rgb(223,209,46)"/><text x="25.2348%" y="575.50"></text></g><g><title>__lll_lock_wait_private (62 samples, 0.20%)</title><rect x="24.8885%" y="597" width="0.1990%" height="15" fill="rgb(250,43,18)"/><text x="25.1385%" y="607.50"></text></g><g><title>syscall_return_via_sysret (13 samples, 0.04%)</title><rect x="25.0457%" y="581" width="0.0417%" height="15" fill="rgb(208,13,10)"/><text x="25.2957%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (19 samples, 0.06%)</title><rect x="25.0874%" y="597" width="0.0610%" height="15" fill="rgb(212,200,36)"/><text x="25.3374%" y="607.50"></text></g><g><title>_raw_spin_lock (7 samples, 0.02%)</title><rect x="25.1580%" y="517" width="0.0225%" height="15" fill="rgb(225,90,30)"/><text x="25.4080%" y="527.50"></text></g><g><title>native_queued_spin_lock_slowpath (6 samples, 0.02%)</title><rect x="25.1612%" y="501" width="0.0193%" height="15" fill="rgb(236,182,39)"/><text x="25.4112%" y="511.50"></text></g><g><title>__x64_sys_futex (13 samples, 0.04%)</title><rect x="25.1516%" y="565" width="0.0417%" height="15" fill="rgb(212,144,35)"/><text x="25.4016%" y="575.50"></text></g><g><title>do_futex (13 samples, 0.04%)</title><rect x="25.1516%" y="549" width="0.0417%" height="15" fill="rgb(228,63,44)"/><text x="25.4016%" y="559.50"></text></g><g><title>futex_wake (13 samples, 0.04%)</title><rect x="25.1516%" y="533" width="0.0417%" height="15" fill="rgb(228,109,6)"/><text x="25.4016%" y="543.50"></text></g><g><title>do_syscall_64 (15 samples, 0.05%)</title><rect x="25.1516%" y="581" width="0.0481%" height="15" fill="rgb(238,117,24)"/><text x="25.4016%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (50 samples, 0.16%)</title><rect x="25.1484%" y="597" width="0.1604%" height="15" fill="rgb(242,26,26)"/><text x="25.3984%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode (34 samples, 0.11%)</title><rect x="25.1998%" y="581" width="0.1091%" height="15" fill="rgb(221,92,48)"/><text x="25.4498%" y="591.50"></text></g><g><title>malloc_consolidate (4 samples, 0.01%)</title><rect x="25.3121%" y="597" width="0.0128%" height="15" fill="rgb(209,209,32)"/><text x="25.5621%" y="607.50"></text></g><g><title>_int_free (230 samples, 0.74%)</title><rect x="24.6510%" y="613" width="0.7381%" height="15" fill="rgb(221,70,22)"/><text x="24.9010%" y="623.50"></text></g><g><title>syscall_return_via_sysret (20 samples, 0.06%)</title><rect x="25.3249%" y="597" width="0.0642%" height="15" fill="rgb(248,145,5)"/><text x="25.5749%" y="607.50"></text></g><g><title>alloc_pages_vma (8 samples, 0.03%)</title><rect x="25.4597%" y="469" width="0.0257%" height="15" fill="rgb(226,116,26)"/><text x="25.7097%" y="479.50"></text></g><g><title>__alloc_pages_nodemask (8 samples, 0.03%)</title><rect x="25.4597%" y="453" width="0.0257%" height="15" fill="rgb(244,5,17)"/><text x="25.7097%" y="463.50"></text></g><g><title>get_page_from_freelist (8 samples, 0.03%)</title><rect x="25.4597%" y="437" width="0.0257%" height="15" fill="rgb(252,159,33)"/><text x="25.7097%" y="447.50"></text></g><g><title>prep_new_page (4 samples, 0.01%)</title><rect x="25.4725%" y="421" width="0.0128%" height="15" fill="rgb(206,71,0)"/><text x="25.7225%" y="431.50"></text></g><g><title>kernel_init_free_pages (4 samples, 0.01%)</title><rect x="25.4725%" y="405" width="0.0128%" height="15" fill="rgb(233,118,54)"/><text x="25.7225%" y="415.50"></text></g><g><title>clear_page_erms (4 samples, 0.01%)</title><rect x="25.4725%" y="389" width="0.0128%" height="15" fill="rgb(234,83,48)"/><text x="25.7225%" y="399.50"></text></g><g><title>handle_mm_fault (15 samples, 0.05%)</title><rect x="25.4436%" y="485" width="0.0481%" height="15" fill="rgb(228,3,54)"/><text x="25.6936%" y="495.50"></text></g><g><title>exc_page_fault (17 samples, 0.05%)</title><rect x="25.4436%" y="517" width="0.0546%" height="15" fill="rgb(226,155,13)"/><text x="25.6936%" y="527.50"></text></g><g><title>do_user_addr_fault (17 samples, 0.05%)</title><rect x="25.4436%" y="501" width="0.0546%" height="15" fill="rgb(241,28,37)"/><text x="25.6936%" y="511.50"></text></g><g><title>asm_exc_page_fault (25 samples, 0.08%)</title><rect x="25.4404%" y="533" width="0.0802%" height="15" fill="rgb(233,93,10)"/><text x="25.6904%" y="543.50"></text></g><g><title>irqentry_exit_to_user_mode (7 samples, 0.02%)</title><rect x="25.4982%" y="517" width="0.0225%" height="15" fill="rgb(225,113,19)"/><text x="25.7482%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (33 samples, 0.11%)</title><rect x="25.4244%" y="549" width="0.1059%" height="15" fill="rgb(241,2,18)"/><text x="25.6744%" y="559.50"></text></g><g><title>alloc_pages_vma (7 samples, 0.02%)</title><rect x="25.5463%" y="469" width="0.0225%" height="15" fill="rgb(228,207,21)"/><text x="25.7963%" y="479.50"></text></g><g><title>__alloc_pages_nodemask (5 samples, 0.02%)</title><rect x="25.5527%" y="453" width="0.0160%" height="15" fill="rgb(213,211,35)"/><text x="25.8027%" y="463.50"></text></g><g><title>get_page_from_freelist (4 samples, 0.01%)</title><rect x="25.5559%" y="437" width="0.0128%" height="15" fill="rgb(209,83,10)"/><text x="25.8059%" y="447.50"></text></g><g><title>prep_new_page (4 samples, 0.01%)</title><rect x="25.5559%" y="421" width="0.0128%" height="15" fill="rgb(209,164,1)"/><text x="25.8059%" y="431.50"></text></g><g><title>kernel_init_free_pages (4 samples, 0.01%)</title><rect x="25.5559%" y="405" width="0.0128%" height="15" fill="rgb(213,184,43)"/><text x="25.8059%" y="415.50"></text></g><g><title>clear_page_erms (4 samples, 0.01%)</title><rect x="25.5559%" y="389" width="0.0128%" height="15" fill="rgb(231,61,34)"/><text x="25.8059%" y="399.50"></text></g><g><title>exc_page_fault (10 samples, 0.03%)</title><rect x="25.5399%" y="517" width="0.0321%" height="15" fill="rgb(235,75,3)"/><text x="25.7899%" y="527.50"></text></g><g><title>do_user_addr_fault (10 samples, 0.03%)</title><rect x="25.5399%" y="501" width="0.0321%" height="15" fill="rgb(220,106,47)"/><text x="25.7899%" y="511.50"></text></g><g><title>handle_mm_fault (9 samples, 0.03%)</title><rect x="25.5431%" y="485" width="0.0289%" height="15" fill="rgb(210,196,33)"/><text x="25.7931%" y="495.50"></text></g><g><title>asm_exc_page_fault (13 samples, 0.04%)</title><rect x="25.5399%" y="533" width="0.0417%" height="15" fill="rgb(229,154,42)"/><text x="25.7899%" y="543.50"></text></g><g><title>__GI___default_morecore (4 samples, 0.01%)</title><rect x="25.5816%" y="517" width="0.0128%" height="15" fill="rgb(228,114,26)"/><text x="25.8316%" y="527.50"></text></g><g><title>__GI___sbrk (4 samples, 0.01%)</title><rect x="25.5816%" y="501" width="0.0128%" height="15" fill="rgb(208,144,1)"/><text x="25.8316%" y="511.50"></text></g><g><title>__GI___sbrk (4 samples, 0.01%)</title><rect x="25.5816%" y="485" width="0.0128%" height="15" fill="rgb(239,112,37)"/><text x="25.8316%" y="495.50"></text></g><g><title>__brk (4 samples, 0.01%)</title><rect x="25.5816%" y="469" width="0.0128%" height="15" fill="rgb(210,96,50)"/><text x="25.8316%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.01%)</title><rect x="25.5816%" y="453" width="0.0128%" height="15" fill="rgb(222,178,2)"/><text x="25.8316%" y="463.50"></text></g><g><title>_int_malloc (22 samples, 0.07%)</title><rect x="25.5335%" y="549" width="0.0706%" height="15" fill="rgb(226,74,18)"/><text x="25.7835%" y="559.50"></text></g><g><title>sysmalloc (7 samples, 0.02%)</title><rect x="25.5816%" y="533" width="0.0225%" height="15" fill="rgb(225,67,54)"/><text x="25.8316%" y="543.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.02%)</title><rect x="25.6041%" y="549" width="0.0193%" height="15" fill="rgb(251,92,32)"/><text x="25.8541%" y="559.50"></text></g><g><title>_int_realloc (65 samples, 0.21%)</title><rect x="25.4180%" y="565" width="0.2086%" height="15" fill="rgb(228,149,22)"/><text x="25.6680%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (75 samples, 0.24%)</title><rect x="25.3891%" y="613" width="0.2407%" height="15" fill="rgb(243,54,13)"/><text x="25.6391%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (71 samples, 0.23%)</title><rect x="25.4019%" y="597" width="0.2278%" height="15" fill="rgb(243,180,28)"/><text x="25.6519%" y="607.50"></text></g><g><title>__GI___libc_realloc (67 samples, 0.21%)</title><rect x="25.4148%" y="581" width="0.2150%" height="15" fill="rgb(208,167,24)"/><text x="25.6648%" y="591.50"></text></g><g><title>__list_del_entry_valid (4 samples, 0.01%)</title><rect x="25.6554%" y="501" width="0.0128%" height="15" fill="rgb(245,73,45)"/><text x="25.9054%" y="511.50"></text></g><g><title>alloc_pages_vma (18 samples, 0.06%)</title><rect x="25.6362%" y="549" width="0.0578%" height="15" fill="rgb(237,203,48)"/><text x="25.8862%" y="559.50"></text></g><g><title>__alloc_pages_nodemask (18 samples, 0.06%)</title><rect x="25.6362%" y="533" width="0.0578%" height="15" fill="rgb(211,197,16)"/><text x="25.8862%" y="543.50"></text></g><g><title>get_page_from_freelist (14 samples, 0.04%)</title><rect x="25.6490%" y="517" width="0.0449%" height="15" fill="rgb(243,99,51)"/><text x="25.8990%" y="527.50"></text></g><g><title>prep_new_page (8 samples, 0.03%)</title><rect x="25.6683%" y="501" width="0.0257%" height="15" fill="rgb(215,123,29)"/><text x="25.9183%" y="511.50"></text></g><g><title>kernel_init_free_pages (8 samples, 0.03%)</title><rect x="25.6683%" y="485" width="0.0257%" height="15" fill="rgb(239,186,37)"/><text x="25.9183%" y="495.50"></text></g><g><title>clear_page_erms (7 samples, 0.02%)</title><rect x="25.6715%" y="469" width="0.0225%" height="15" fill="rgb(252,136,39)"/><text x="25.9215%" y="479.50"></text></g><g><title>exc_page_fault (29 samples, 0.09%)</title><rect x="25.6298%" y="597" width="0.0931%" height="15" fill="rgb(223,213,32)"/><text x="25.8798%" y="607.50"></text></g><g><title>do_user_addr_fault (29 samples, 0.09%)</title><rect x="25.6298%" y="581" width="0.0931%" height="15" fill="rgb(233,115,5)"/><text x="25.8798%" y="591.50"></text></g><g><title>handle_mm_fault (28 samples, 0.09%)</title><rect x="25.6330%" y="565" width="0.0899%" height="15" fill="rgb(207,226,44)"/><text x="25.8830%" y="575.50"></text></g><g><title>asm_exc_page_fault (35 samples, 0.11%)</title><rect x="25.6298%" y="613" width="0.1123%" height="15" fill="rgb(208,126,0)"/><text x="25.8798%" y="623.50"></text></g><g><title>irqentry_exit_to_user_mode (6 samples, 0.02%)</title><rect x="25.7228%" y="597" width="0.0193%" height="15" fill="rgb(244,66,21)"/><text x="25.9728%" y="607.50"></text></g><g><title>exc_page_fault (8 samples, 0.03%)</title><rect x="25.9314%" y="517" width="0.0257%" height="15" fill="rgb(222,97,12)"/><text x="26.1814%" y="527.50"></text></g><g><title>do_user_addr_fault (8 samples, 0.03%)</title><rect x="25.9314%" y="501" width="0.0257%" height="15" fill="rgb(219,213,19)"/><text x="26.1814%" y="511.50"></text></g><g><title>handle_mm_fault (8 samples, 0.03%)</title><rect x="25.9314%" y="485" width="0.0257%" height="15" fill="rgb(252,169,30)"/><text x="26.1814%" y="495.50"></text></g><g><title>asm_exc_page_fault (10 samples, 0.03%)</title><rect x="25.9314%" y="533" width="0.0321%" height="15" fill="rgb(206,32,51)"/><text x="26.1814%" y="543.50"></text></g><g><title>__GI___libc_malloc (49 samples, 0.16%)</title><rect x="25.8095%" y="565" width="0.1572%" height="15" fill="rgb(250,172,42)"/><text x="26.0595%" y="575.50"></text></g><g><title>_int_malloc (24 samples, 0.08%)</title><rect x="25.8897%" y="549" width="0.0770%" height="15" fill="rgb(209,34,43)"/><text x="26.1397%" y="559.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (49 samples, 0.16%)</title><rect x="25.9859%" y="549" width="0.1572%" height="15" fill="rgb(223,11,35)"/><text x="26.2359%" y="559.50"></text></g><g><title>ate::spec::SerializationFormat::serialize (118 samples, 0.38%)</title><rect x="25.7774%" y="597" width="0.3787%" height="15" fill="rgb(251,219,26)"/><text x="26.0274%" y="607.50"></text></g><g><title>bincode::serialize (111 samples, 0.36%)</title><rect x="25.7998%" y="581" width="0.3562%" height="15" fill="rgb(231,119,3)"/><text x="26.0498%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (59 samples, 0.19%)</title><rect x="25.9667%" y="565" width="0.1893%" height="15" fill="rgb(216,97,11)"/><text x="26.2167%" y="575.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::MetaAuthorization&gt;::serialize (4 samples, 0.01%)</title><rect x="26.1432%" y="549" width="0.0128%" height="15" fill="rgb(223,59,9)"/><text x="26.3932%" y="559.50"></text></g><g><title>ate::event::EventData::as_header_raw (170 samples, 0.55%)</title><rect x="25.7421%" y="613" width="0.5455%" height="15" fill="rgb(233,93,31)"/><text x="25.9921%" y="623.50"></text></g><g><title>blake3::hash (41 samples, 0.13%)</title><rect x="26.1560%" y="597" width="0.1316%" height="15" fill="rgb(239,81,33)"/><text x="26.4060%" y="607.50"></text></g><g><title>blake3::ChunkState::update (27 samples, 0.09%)</title><rect x="26.2009%" y="581" width="0.0866%" height="15" fill="rgb(213,120,34)"/><text x="26.4509%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.02%)</title><rect x="26.2651%" y="565" width="0.0225%" height="15" fill="rgb(243,49,53)"/><text x="26.5151%" y="575.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::transform::EventDataTransformer&gt;::data_as_underlay (15 samples, 0.05%)</title><rect x="26.3614%" y="597" width="0.0481%" height="15" fill="rgb(247,216,33)"/><text x="26.6114%" y="607.50"></text></g><g><title>ate::multi::ChainMultiUser::data_as_underlay (39 samples, 0.13%)</title><rect x="26.2876%" y="613" width="0.1251%" height="15" fill="rgb(226,26,14)"/><text x="26.5376%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.03%)</title><rect x="26.5668%" y="581" width="0.0257%" height="15" fill="rgb(215,49,53)"/><text x="26.8168%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="26.5700%" y="565" width="0.0225%" height="15" fill="rgb(245,162,40)"/><text x="26.8200%" y="575.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.02%)</title><rect x="26.5732%" y="549" width="0.0193%" height="15" fill="rgb(229,68,17)"/><text x="26.8232%" y="559.50"></text></g><g><title>std::time::SystemTime::duration_since (15 samples, 0.05%)</title><rect x="26.6502%" y="565" width="0.0481%" height="15" fill="rgb(213,182,10)"/><text x="26.9002%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (13 samples, 0.04%)</title><rect x="26.6566%" y="549" width="0.0417%" height="15" fill="rgb(245,125,30)"/><text x="26.9066%" y="559.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (13 samples, 0.04%)</title><rect x="26.6566%" y="533" width="0.0417%" height="15" fill="rgb(232,202,2)"/><text x="26.9066%" y="543.50"></text></g><g><title>__GI___clock_gettime (29 samples, 0.09%)</title><rect x="26.6983%" y="517" width="0.0931%" height="15" fill="rgb(237,140,51)"/><text x="26.9483%" y="527.50"></text></g><g><title>__vdso_clock_gettime (26 samples, 0.08%)</title><rect x="26.7080%" y="501" width="0.0834%" height="15" fill="rgb(236,157,25)"/><text x="26.9580%" y="511.50"></text></g><g><title>[[vdso]] (23 samples, 0.07%)</title><rect x="26.7176%" y="485" width="0.0738%" height="15" fill="rgb(219,209,0)"/><text x="26.9676%" y="495.50"></text></g><g><title>&lt;ate::time::TimestampEnforcer as ate::lint::EventMetadataLinter&gt;::metadata_lint_event (77 samples, 0.25%)</title><rect x="26.5507%" y="597" width="0.2471%" height="15" fill="rgb(240,116,54)"/><text x="26.8007%" y="607.50"></text></g><g><title>ate::time::TimestampEnforcer::current_timestamp (64 samples, 0.21%)</title><rect x="26.5924%" y="581" width="0.2054%" height="15" fill="rgb(216,10,36)"/><text x="26.8424%" y="591.50"></text></g><g><title>std::time::SystemTime::now (31 samples, 0.10%)</title><rect x="26.6983%" y="565" width="0.0995%" height="15" fill="rgb(222,72,44)"/><text x="26.9483%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (31 samples, 0.10%)</title><rect x="26.6983%" y="549" width="0.0995%" height="15" fill="rgb(232,159,9)"/><text x="26.9483%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::now (31 samples, 0.10%)</title><rect x="26.6983%" y="533" width="0.0995%" height="15" fill="rgb(210,39,32)"/><text x="26.9483%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.03%)</title><rect x="26.8427%" y="581" width="0.0257%" height="15" fill="rgb(216,194,45)"/><text x="27.0927%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.02%)</title><rect x="26.8491%" y="565" width="0.0193%" height="15" fill="rgb(218,18,35)"/><text x="27.0991%" y="575.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::lint::EventMetadataLinter&gt;::metadata_lint_event (119 samples, 0.38%)</title><rect x="26.7978%" y="597" width="0.3819%" height="15" fill="rgb(207,83,51)"/><text x="27.0478%" y="607.50"></text></g><g><title>ate::tree::TreeAuthorityPlugin::compute_auth (97 samples, 0.31%)</title><rect x="26.8684%" y="581" width="0.3113%" height="15" fill="rgb(225,63,43)"/><text x="27.1184%" y="591.50"></text></g><g><title>_int_free (15 samples, 0.05%)</title><rect x="27.1957%" y="597" width="0.0481%" height="15" fill="rgb(207,57,36)"/><text x="27.4457%" y="607.50"></text></g><g><title>alloc_pages_vma (5 samples, 0.02%)</title><rect x="27.4235%" y="469" width="0.0160%" height="15" fill="rgb(216,99,33)"/><text x="27.6735%" y="479.50"></text></g><g><title>__alloc_pages_nodemask (5 samples, 0.02%)</title><rect x="27.4235%" y="453" width="0.0160%" height="15" fill="rgb(225,42,16)"/><text x="27.6735%" y="463.50"></text></g><g><title>exc_page_fault (9 samples, 0.03%)</title><rect x="27.4171%" y="517" width="0.0289%" height="15" fill="rgb(220,201,45)"/><text x="27.6671%" y="527.50"></text></g><g><title>do_user_addr_fault (9 samples, 0.03%)</title><rect x="27.4171%" y="501" width="0.0289%" height="15" fill="rgb(225,33,4)"/><text x="27.6671%" y="511.50"></text></g><g><title>handle_mm_fault (9 samples, 0.03%)</title><rect x="27.4171%" y="485" width="0.0289%" height="15" fill="rgb(224,33,50)"/><text x="27.6671%" y="495.50"></text></g><g><title>asm_exc_page_fault (10 samples, 0.03%)</title><rect x="27.4171%" y="533" width="0.0321%" height="15" fill="rgb(246,198,51)"/><text x="27.6671%" y="543.50"></text></g><g><title>__GI___default_morecore (4 samples, 0.01%)</title><rect x="27.4556%" y="517" width="0.0128%" height="15" fill="rgb(205,22,4)"/><text x="27.7056%" y="527.50"></text></g><g><title>__GI___sbrk (4 samples, 0.01%)</title><rect x="27.4556%" y="501" width="0.0128%" height="15" fill="rgb(206,3,8)"/><text x="27.7056%" y="511.50"></text></g><g><title>__GI___sbrk (4 samples, 0.01%)</title><rect x="27.4556%" y="485" width="0.0128%" height="15" fill="rgb(251,23,15)"/><text x="27.7056%" y="495.50"></text></g><g><title>__brk (4 samples, 0.01%)</title><rect x="27.4556%" y="469" width="0.0128%" height="15" fill="rgb(252,88,28)"/><text x="27.7056%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.01%)</title><rect x="27.4556%" y="453" width="0.0128%" height="15" fill="rgb(212,127,14)"/><text x="27.7056%" y="463.50"></text></g><g><title>do_syscall_64 (4 samples, 0.01%)</title><rect x="27.4556%" y="437" width="0.0128%" height="15" fill="rgb(247,145,37)"/><text x="27.7056%" y="447.50"></text></g><g><title>__do_sys_brk (4 samples, 0.01%)</title><rect x="27.4556%" y="421" width="0.0128%" height="15" fill="rgb(209,117,53)"/><text x="27.7056%" y="431.50"></text></g><g><title>_int_malloc (57 samples, 0.18%)</title><rect x="27.2888%" y="549" width="0.1829%" height="15" fill="rgb(212,90,42)"/><text x="27.5388%" y="559.50"></text></g><g><title>sysmalloc (5 samples, 0.02%)</title><rect x="27.4556%" y="533" width="0.0160%" height="15" fill="rgb(218,164,37)"/><text x="27.7056%" y="543.50"></text></g><g><title>__GI___libc_malloc (72 samples, 0.23%)</title><rect x="27.2471%" y="565" width="0.2310%" height="15" fill="rgb(246,65,34)"/><text x="27.4971%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (74 samples, 0.24%)</title><rect x="27.2438%" y="597" width="0.2375%" height="15" fill="rgb(231,100,33)"/><text x="27.4938%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (73 samples, 0.23%)</title><rect x="27.2471%" y="581" width="0.2343%" height="15" fill="rgb(228,126,14)"/><text x="27.4971%" y="591.50"></text></g><g><title>ate::multi::ChainMultiUser::metadata_lint_event (334 samples, 1.07%)</title><rect x="26.4127%" y="613" width="1.0718%" height="15" fill="rgb(215,173,21)"/><text x="26.6627%" y="623.50"></text></g><g><title>_int_malloc (13 samples, 0.04%)</title><rect x="27.6097%" y="565" width="0.0417%" height="15" fill="rgb(210,6,40)"/><text x="27.8597%" y="575.50"></text></g><g><title>unlink_chunk (4 samples, 0.01%)</title><rect x="27.6385%" y="549" width="0.0128%" height="15" fill="rgb(212,48,18)"/><text x="27.8885%" y="559.50"></text></g><g><title>__GI___libc_malloc (47 samples, 0.15%)</title><rect x="27.5102%" y="581" width="0.1508%" height="15" fill="rgb(230,214,11)"/><text x="27.7602%" y="591.50"></text></g><g><title>bytes::bytes::promotable_even_clone (57 samples, 0.18%)</title><rect x="27.4845%" y="613" width="0.1829%" height="15" fill="rgb(254,105,39)"/><text x="27.7345%" y="623.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (57 samples, 0.18%)</title><rect x="27.4845%" y="597" width="0.1829%" height="15" fill="rgb(245,158,5)"/><text x="27.7345%" y="607.50"></text></g><g><title>_int_free (25 samples, 0.08%)</title><rect x="27.7124%" y="597" width="0.0802%" height="15" fill="rgb(249,208,11)"/><text x="27.9624%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (50 samples, 0.16%)</title><rect x="27.6674%" y="613" width="0.1604%" height="15" fill="rgb(210,39,28)"/><text x="27.9174%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (10 samples, 0.03%)</title><rect x="27.7958%" y="597" width="0.0321%" height="15" fill="rgb(211,56,53)"/><text x="28.0458%" y="607.50"></text></g><g><title>finish_task_switch (16 samples, 0.05%)</title><rect x="27.8343%" y="357" width="0.0513%" height="15" fill="rgb(226,201,30)"/><text x="28.0843%" y="367.50"></text></g><g><title>__perf_event_task_sched_in (16 samples, 0.05%)</title><rect x="27.8343%" y="341" width="0.0513%" height="15" fill="rgb(239,101,34)"/><text x="28.0843%" y="351.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (16 samples, 0.05%)</title><rect x="27.8343%" y="325" width="0.0513%" height="15" fill="rgb(226,209,5)"/><text x="28.0843%" y="335.50"></text></g><g><title>native_write_msr (15 samples, 0.05%)</title><rect x="27.8375%" y="309" width="0.0481%" height="15" fill="rgb(250,105,47)"/><text x="28.0875%" y="319.50"></text></g><g><title>futex_wait_queue_me (18 samples, 0.06%)</title><rect x="27.8343%" y="405" width="0.0578%" height="15" fill="rgb(230,72,3)"/><text x="28.0843%" y="415.50"></text></g><g><title>schedule (18 samples, 0.06%)</title><rect x="27.8343%" y="389" width="0.0578%" height="15" fill="rgb(232,218,39)"/><text x="28.0843%" y="399.50"></text></g><g><title>__schedule (18 samples, 0.06%)</title><rect x="27.8343%" y="373" width="0.0578%" height="15" fill="rgb(248,166,6)"/><text x="28.0843%" y="383.50"></text></g><g><title>do_syscall_64 (19 samples, 0.06%)</title><rect x="27.8343%" y="469" width="0.0610%" height="15" fill="rgb(247,89,20)"/><text x="28.0843%" y="479.50"></text></g><g><title>__x64_sys_futex (19 samples, 0.06%)</title><rect x="27.8343%" y="453" width="0.0610%" height="15" fill="rgb(248,130,54)"/><text x="28.0843%" y="463.50"></text></g><g><title>do_futex (19 samples, 0.06%)</title><rect x="27.8343%" y="437" width="0.0610%" height="15" fill="rgb(234,196,4)"/><text x="28.0843%" y="447.50"></text></g><g><title>futex_wait (19 samples, 0.06%)</title><rect x="27.8343%" y="421" width="0.0610%" height="15" fill="rgb(250,143,31)"/><text x="28.0843%" y="431.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (20 samples, 0.06%)</title><rect x="27.8343%" y="565" width="0.0642%" height="15" fill="rgb(211,110,34)"/><text x="28.0843%" y="575.50"></text></g><g><title>std::thread::park (20 samples, 0.06%)</title><rect x="27.8343%" y="549" width="0.0642%" height="15" fill="rgb(215,124,48)"/><text x="28.0843%" y="559.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (20 samples, 0.06%)</title><rect x="27.8343%" y="533" width="0.0642%" height="15" fill="rgb(216,46,13)"/><text x="28.0843%" y="543.50"></text></g><g><title>std::sys::unix::futex::futex_wait (20 samples, 0.06%)</title><rect x="27.8343%" y="517" width="0.0642%" height="15" fill="rgb(205,184,25)"/><text x="28.0843%" y="527.50"></text></g><g><title>syscall (20 samples, 0.06%)</title><rect x="27.8343%" y="501" width="0.0642%" height="15" fill="rgb(228,1,10)"/><text x="28.0843%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (20 samples, 0.06%)</title><rect x="27.8343%" y="485" width="0.0642%" height="15" fill="rgb(213,116,27)"/><text x="28.0843%" y="495.50"></text></g><g><title>tokio::runtime::thread_pool::worker::block_in_place (21 samples, 0.07%)</title><rect x="27.8343%" y="613" width="0.0674%" height="15" fill="rgb(241,95,50)"/><text x="28.0843%" y="623.50"></text></g><g><title>tokio::runtime::enter::exit (21 samples, 0.07%)</title><rect x="27.8343%" y="597" width="0.0674%" height="15" fill="rgb(238,48,32)"/><text x="28.0843%" y="607.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (21 samples, 0.07%)</title><rect x="27.8343%" y="581" width="0.0674%" height="15" fill="rgb(235,113,49)"/><text x="28.0843%" y="591.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on (2,449 samples, 7.86%)</title><rect x="20.0623%" y="709" width="7.8587%" height="15" fill="rgb(205,127,43)"/><text x="20.3123%" y="719.50">tokio::park..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,449 samples, 7.86%)</title><rect x="20.0623%" y="693" width="7.8587%" height="15" fill="rgb(250,162,2)"/><text x="20.3123%" y="703.50">std::thread..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,449 samples, 7.86%)</title><rect x="20.0623%" y="677" width="7.8587%" height="15" fill="rgb(220,13,41)"/><text x="20.3123%" y="687.50">&lt;core::futu..</text></g><g><title>core::ptr::drop_in_place (1,314 samples, 4.22%)</title><rect x="23.7044%" y="661" width="4.2165%" height="15" fill="rgb(249,221,25)"/><text x="23.9544%" y="671.50">core:..</text></g><g><title>&lt;ate::dio::Dio as core::ops::drop::Drop&gt;::drop (1,314 samples, 4.22%)</title><rect x="23.7044%" y="645" width="4.2165%" height="15" fill="rgb(215,208,19)"/><text x="23.9544%" y="655.50">&lt;ate:..</text></g><g><title>ate::dio::Dio::commit (1,314 samples, 4.22%)</title><rect x="23.7044%" y="629" width="4.2165%" height="15" fill="rgb(236,175,2)"/><text x="23.9544%" y="639.50">ate::..</text></g><g><title>tokio::task::spawn::spawn (6 samples, 0.02%)</title><rect x="27.9017%" y="613" width="0.0193%" height="15" fill="rgb(241,52,2)"/><text x="28.1517%" y="623.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (6 samples, 0.02%)</title><rect x="27.9017%" y="597" width="0.0193%" height="15" fill="rgb(248,140,14)"/><text x="28.1517%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (5 samples, 0.02%)</title><rect x="27.9049%" y="581" width="0.0160%" height="15" fill="rgb(253,22,42)"/><text x="28.1549%" y="591.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (5 samples, 0.02%)</title><rect x="27.9049%" y="565" width="0.0160%" height="15" fill="rgb(234,61,47)"/><text x="28.1549%" y="575.50"></text></g><g><title>__perf_event_task_sched_out (5 samples, 0.02%)</title><rect x="28.0814%" y="485" width="0.0160%" height="15" fill="rgb(208,226,15)"/><text x="28.3314%" y="495.50"></text></g><g><title>cpuacct_charge (4 samples, 0.01%)</title><rect x="28.1905%" y="437" width="0.0128%" height="15" fill="rgb(217,221,4)"/><text x="28.4405%" y="447.50"></text></g><g><title>update_curr (18 samples, 0.06%)</title><rect x="28.1552%" y="453" width="0.0578%" height="15" fill="rgb(212,174,34)"/><text x="28.4052%" y="463.50"></text></g><g><title>dequeue_task_fair (39 samples, 0.13%)</title><rect x="28.1071%" y="485" width="0.1251%" height="15" fill="rgb(253,83,4)"/><text x="28.3571%" y="495.50"></text></g><g><title>dequeue_entity (31 samples, 0.10%)</title><rect x="28.1327%" y="469" width="0.0995%" height="15" fill="rgb(250,195,49)"/><text x="28.3827%" y="479.50"></text></g><g><title>update_load_avg (6 samples, 0.02%)</title><rect x="28.2129%" y="453" width="0.0193%" height="15" fill="rgb(241,192,25)"/><text x="28.4629%" y="463.50"></text></g><g><title>__perf_event_task_sched_in (10 samples, 0.03%)</title><rect x="28.2482%" y="469" width="0.0321%" height="15" fill="rgb(208,124,10)"/><text x="28.4982%" y="479.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (10 samples, 0.03%)</title><rect x="28.2482%" y="453" width="0.0321%" height="15" fill="rgb(222,33,0)"/><text x="28.4982%" y="463.50"></text></g><g><title>native_write_msr (10 samples, 0.03%)</title><rect x="28.2482%" y="437" width="0.0321%" height="15" fill="rgb(234,209,28)"/><text x="28.4982%" y="447.50"></text></g><g><title>finish_task_switch (16 samples, 0.05%)</title><rect x="28.2322%" y="485" width="0.0513%" height="15" fill="rgb(224,11,23)"/><text x="28.4822%" y="495.50"></text></g><g><title>pick_next_task_fair (5 samples, 0.02%)</title><rect x="28.2835%" y="485" width="0.0160%" height="15" fill="rgb(232,99,1)"/><text x="28.5335%" y="495.50"></text></g><g><title>pick_next_task_idle (7 samples, 0.02%)</title><rect x="28.2996%" y="485" width="0.0225%" height="15" fill="rgb(237,95,45)"/><text x="28.5496%" y="495.50"></text></g><g><title>__update_idle_core (6 samples, 0.02%)</title><rect x="28.3028%" y="469" width="0.0193%" height="15" fill="rgb(208,109,11)"/><text x="28.5528%" y="479.50"></text></g><g><title>psi_task_change (34 samples, 0.11%)</title><rect x="28.3220%" y="485" width="0.1091%" height="15" fill="rgb(216,190,48)"/><text x="28.5720%" y="495.50"></text></g><g><title>psi_group_change (32 samples, 0.10%)</title><rect x="28.3285%" y="469" width="0.1027%" height="15" fill="rgb(251,171,36)"/><text x="28.5785%" y="479.50"></text></g><g><title>record_times (7 samples, 0.02%)</title><rect x="28.4087%" y="453" width="0.0225%" height="15" fill="rgb(230,62,22)"/><text x="28.6587%" y="463.50"></text></g><g><title>sched_clock_cpu (7 samples, 0.02%)</title><rect x="28.4087%" y="437" width="0.0225%" height="15" fill="rgb(225,114,35)"/><text x="28.6587%" y="447.50"></text></g><g><title>sched_clock (5 samples, 0.02%)</title><rect x="28.4151%" y="421" width="0.0160%" height="15" fill="rgb(215,118,42)"/><text x="28.6651%" y="431.50"></text></g><g><title>native_sched_clock (4 samples, 0.01%)</title><rect x="28.4183%" y="405" width="0.0128%" height="15" fill="rgb(243,119,21)"/><text x="28.6683%" y="415.50"></text></g><g><title>put_prev_task_fair (4 samples, 0.01%)</title><rect x="28.4344%" y="485" width="0.0128%" height="15" fill="rgb(252,177,53)"/><text x="28.6844%" y="495.50"></text></g><g><title>futex_wait_queue_me (130 samples, 0.42%)</title><rect x="28.0397%" y="533" width="0.4172%" height="15" fill="rgb(237,209,29)"/><text x="28.2897%" y="543.50"></text></g><g><title>schedule (124 samples, 0.40%)</title><rect x="28.0589%" y="517" width="0.3979%" height="15" fill="rgb(212,65,23)"/><text x="28.3089%" y="527.50"></text></g><g><title>__schedule (123 samples, 0.39%)</title><rect x="28.0621%" y="501" width="0.3947%" height="15" fill="rgb(230,222,46)"/><text x="28.3121%" y="511.50"></text></g><g><title>do_syscall_64 (150 samples, 0.48%)</title><rect x="28.0140%" y="597" width="0.4813%" height="15" fill="rgb(215,135,32)"/><text x="28.2640%" y="607.50"></text></g><g><title>__x64_sys_futex (148 samples, 0.47%)</title><rect x="28.0204%" y="581" width="0.4749%" height="15" fill="rgb(246,101,22)"/><text x="28.2704%" y="591.50"></text></g><g><title>do_futex (147 samples, 0.47%)</title><rect x="28.0236%" y="565" width="0.4717%" height="15" fill="rgb(206,107,13)"/><text x="28.2736%" y="575.50"></text></g><g><title>futex_wait (146 samples, 0.47%)</title><rect x="28.0268%" y="549" width="0.4685%" height="15" fill="rgb(250,100,44)"/><text x="28.2768%" y="559.50"></text></g><g><title>futex_wait_setup (12 samples, 0.04%)</title><rect x="28.4568%" y="533" width="0.0385%" height="15" fill="rgb(231,147,38)"/><text x="28.7068%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (198 samples, 0.64%)</title><rect x="28.0140%" y="613" width="0.6354%" height="15" fill="rgb(229,8,40)"/><text x="28.2640%" y="623.50"></text></g><g><title>syscall_exit_to_user_mode (48 samples, 0.15%)</title><rect x="28.4953%" y="597" width="0.1540%" height="15" fill="rgb(221,135,30)"/><text x="28.7453%" y="607.50"></text></g><g><title>exit_to_user_mode_prepare (7 samples, 0.02%)</title><rect x="28.6269%" y="581" width="0.0225%" height="15" fill="rgb(249,193,18)"/><text x="28.8769%" y="591.50"></text></g><g><title>switch_fpu_return (4 samples, 0.01%)</title><rect x="28.6365%" y="565" width="0.0128%" height="15" fill="rgb(209,133,39)"/><text x="28.8865%" y="575.50"></text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (241 samples, 0.77%)</title><rect x="27.9273%" y="677" width="0.7734%" height="15" fill="rgb(232,100,14)"/><text x="28.1773%" y="687.50"></text></g><g><title>tokio::park::thread::Inner::park (241 samples, 0.77%)</title><rect x="27.9273%" y="661" width="0.7734%" height="15" fill="rgb(224,185,1)"/><text x="28.1773%" y="671.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (235 samples, 0.75%)</title><rect x="27.9466%" y="645" width="0.7541%" height="15" fill="rgb(223,139,8)"/><text x="28.1966%" y="655.50"></text></g><g><title>syscall (223 samples, 0.72%)</title><rect x="27.9851%" y="629" width="0.7156%" height="15" fill="rgb(232,213,38)"/><text x="28.2351%" y="639.50"></text></g><g><title>syscall_return_via_sysret (16 samples, 0.05%)</title><rect x="28.6494%" y="613" width="0.0513%" height="15" fill="rgb(207,94,22)"/><text x="28.8994%" y="623.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.02%)</title><rect x="28.7264%" y="469" width="0.0160%" height="15" fill="rgb(219,183,54)"/><text x="28.9764%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.03%)</title><rect x="28.7232%" y="565" width="0.0257%" height="15" fill="rgb(216,185,54)"/><text x="28.9732%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.03%)</title><rect x="28.7232%" y="549" width="0.0257%" height="15" fill="rgb(254,217,39)"/><text x="28.9732%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.03%)</title><rect x="28.7232%" y="533" width="0.0257%" height="15" fill="rgb(240,178,23)"/><text x="28.9732%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="28.7264%" y="517" width="0.0225%" height="15" fill="rgb(218,11,47)"/><text x="28.9764%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.02%)</title><rect x="28.7264%" y="501" width="0.0225%" height="15" fill="rgb(218,51,51)"/><text x="28.9764%" y="511.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="28.7264%" y="485" width="0.0225%" height="15" fill="rgb(238,126,27)"/><text x="28.9764%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13 samples, 0.04%)</title><rect x="28.7167%" y="645" width="0.0417%" height="15" fill="rgb(249,202,22)"/><text x="28.9667%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.04%)</title><rect x="28.7200%" y="629" width="0.0385%" height="15" fill="rgb(254,195,49)"/><text x="28.9700%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.04%)</title><rect x="28.7232%" y="613" width="0.0353%" height="15" fill="rgb(208,123,14)"/><text x="28.9732%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.04%)</title><rect x="28.7232%" y="597" width="0.0353%" height="15" fill="rgb(224,200,8)"/><text x="28.9732%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.04%)</title><rect x="28.7232%" y="581" width="0.0353%" height="15" fill="rgb(217,61,36)"/><text x="28.9732%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="29.9008%" y="597" width="0.0160%" height="15" fill="rgb(206,35,45)"/><text x="30.1508%" y="607.50"></text></g><g><title>checked_request2size (5 samples, 0.02%)</title><rect x="36.8418%" y="421" width="0.0160%" height="15" fill="rgb(217,65,33)"/><text x="37.0918%" y="431.50"></text></g><g><title>tcache_put (27 samples, 0.09%)</title><rect x="36.8578%" y="421" width="0.0866%" height="15" fill="rgb(222,158,48)"/><text x="37.1078%" y="431.50"></text></g><g><title>_int_malloc (1,952 samples, 6.26%)</title><rect x="30.6838%" y="437" width="6.2638%" height="15" fill="rgb(254,2,54)"/><text x="30.9338%" y="447.50">_int_mal..</text></g><g><title>checked_request2size (21 samples, 0.07%)</title><rect x="36.9477%" y="437" width="0.0674%" height="15" fill="rgb(250,143,38)"/><text x="37.1977%" y="447.50"></text></g><g><title>__GI___libc_malloc (2,227 samples, 7.15%)</title><rect x="29.9650%" y="453" width="7.1463%" height="15" fill="rgb(248,25,0)"/><text x="30.2150%" y="463.50">__GI___lib..</text></g><g><title>tcache_get (30 samples, 0.10%)</title><rect x="37.0150%" y="437" width="0.0963%" height="15" fill="rgb(206,152,27)"/><text x="37.2650%" y="447.50"></text></g><g><title>__rdl_alloc (36 samples, 0.12%)</title><rect x="37.1113%" y="453" width="0.1155%" height="15" fill="rgb(240,77,30)"/><text x="37.3613%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (36 samples, 0.12%)</title><rect x="37.1113%" y="437" width="0.1155%" height="15" fill="rgb(231,5,3)"/><text x="37.3613%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,302 samples, 7.39%)</title><rect x="29.9233%" y="549" width="7.3870%" height="15" fill="rgb(207,226,32)"/><text x="30.1733%" y="559.50">alloc::vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,302 samples, 7.39%)</title><rect x="29.9233%" y="533" width="7.3870%" height="15" fill="rgb(222,207,47)"/><text x="30.1733%" y="543.50">alloc::raw..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,302 samples, 7.39%)</title><rect x="29.9233%" y="517" width="7.3870%" height="15" fill="rgb(229,115,45)"/><text x="30.1733%" y="527.50">alloc::raw..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,290 samples, 7.35%)</title><rect x="29.9618%" y="501" width="7.3485%" height="15" fill="rgb(224,191,6)"/><text x="30.2118%" y="511.50">&lt;alloc::al..</text></g><g><title>alloc::alloc::Global::alloc_impl (2,290 samples, 7.35%)</title><rect x="29.9618%" y="485" width="7.3485%" height="15" fill="rgb(230,227,24)"/><text x="30.2118%" y="495.50">alloc::all..</text></g><g><title>alloc::alloc::alloc (2,289 samples, 7.35%)</title><rect x="29.9650%" y="469" width="7.3452%" height="15" fill="rgb(228,80,19)"/><text x="30.2150%" y="479.50">alloc::all..</text></g><g><title>__rust_alloc (26 samples, 0.08%)</title><rect x="37.2268%" y="453" width="0.0834%" height="15" fill="rgb(247,229,0)"/><text x="37.4768%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,402 samples, 7.71%)</title><rect x="29.8463%" y="629" width="7.7079%" height="15" fill="rgb(237,194,15)"/><text x="30.0963%" y="639.50">&lt;alloc::str..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,385 samples, 7.65%)</title><rect x="29.9008%" y="613" width="7.6533%" height="15" fill="rgb(219,203,20)"/><text x="30.1508%" y="623.50">&lt;alloc::ve..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,380 samples, 7.64%)</title><rect x="29.9169%" y="597" width="7.6373%" height="15" fill="rgb(234,128,8)"/><text x="30.1669%" y="607.50">alloc::sli..</text></g><g><title>alloc::slice::hack::to_vec (2,380 samples, 7.64%)</title><rect x="29.9169%" y="581" width="7.6373%" height="15" fill="rgb(248,202,8)"/><text x="30.1669%" y="591.50">alloc::sli..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,380 samples, 7.64%)</title><rect x="29.9169%" y="565" width="7.6373%" height="15" fill="rgb(206,104,37)"/><text x="30.1669%" y="575.50">&lt;T as allo..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (76 samples, 0.24%)</title><rect x="37.3103%" y="549" width="0.2439%" height="15" fill="rgb(223,8,27)"/><text x="37.5603%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (76 samples, 0.24%)</title><rect x="37.3103%" y="533" width="0.2439%" height="15" fill="rgb(216,217,28)"/><text x="37.5603%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (60 samples, 0.19%)</title><rect x="37.3616%" y="517" width="0.1925%" height="15" fill="rgb(249,199,1)"/><text x="37.6116%" y="527.50"></text></g><g><title>malloc_consolidate (414 samples, 1.33%)</title><rect x="37.7531%" y="597" width="1.3285%" height="15" fill="rgb(240,85,17)"/><text x="38.0031%" y="607.50"></text></g><g><title>_int_malloc (464 samples, 1.49%)</title><rect x="37.5959%" y="613" width="1.4889%" height="15" fill="rgb(206,108,45)"/><text x="37.8459%" y="623.50"></text></g><g><title>__GI___libc_malloc (478 samples, 1.53%)</title><rect x="37.5542%" y="629" width="1.5339%" height="15" fill="rgb(245,210,41)"/><text x="37.8042%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,220 samples, 10.33%)</title><rect x="28.7585%" y="645" width="10.3328%" height="15" fill="rgb(206,13,37)"/><text x="29.0085%" y="655.50">&lt;alloc::vec::Ve..</text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 0.04%)</title><rect x="39.0912%" y="645" width="0.0449%" height="15" fill="rgb(250,61,18)"/><text x="39.3412%" y="655.50"></text></g><g><title>_int_free (25 samples, 0.08%)</title><rect x="39.1490%" y="629" width="0.0802%" height="15" fill="rgb(235,172,48)"/><text x="39.3990%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.18%)</title><rect x="39.3383%" y="613" width="0.1797%" height="15" fill="rgb(249,201,17)"/><text x="39.5883%" y="623.50"></text></g><g><title>bytes::bytes::promotable_even_drop (19 samples, 0.06%)</title><rect x="39.4570%" y="597" width="0.0610%" height="15" fill="rgb(219,208,6)"/><text x="39.7070%" y="607.50"></text></g><g><title>__GI___libc_free (103 samples, 0.33%)</title><rect x="39.5180%" y="613" width="0.3305%" height="15" fill="rgb(248,31,23)"/><text x="39.7680%" y="623.50"></text></g><g><title>__rdl_dealloc (27 samples, 0.09%)</title><rect x="39.8485%" y="613" width="0.0866%" height="15" fill="rgb(245,15,42)"/><text x="40.0985%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (27 samples, 0.09%)</title><rect x="39.8485%" y="597" width="0.0866%" height="15" fill="rgb(222,217,39)"/><text x="40.0985%" y="607.50"></text></g><g><title>__rust_dealloc (15 samples, 0.05%)</title><rect x="39.9352%" y="613" width="0.0481%" height="15" fill="rgb(210,219,27)"/><text x="40.1852%" y="623.50"></text></g><g><title>__lll_lock_wait_private (4 samples, 0.01%)</title><rect x="41.8220%" y="597" width="0.0128%" height="15" fill="rgb(252,166,36)"/><text x="42.0720%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.01%)</title><rect x="41.8220%" y="581" width="0.0128%" height="15" fill="rgb(245,132,34)"/><text x="42.0720%" y="591.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4 samples, 0.01%)</title><rect x="41.8349%" y="597" width="0.0128%" height="15" fill="rgb(236,54,3)"/><text x="42.0849%" y="607.50"></text></g><g><title>free_perturb (9 samples, 0.03%)</title><rect x="41.8605%" y="597" width="0.0289%" height="15" fill="rgb(241,173,43)"/><text x="42.1105%" y="607.50"></text></g><g><title>[unknown] (12,595 samples, 40.42%)</title><rect x="1.4793%" y="725" width="40.4165%" height="15" fill="rgb(215,190,9)"/><text x="1.7293%" y="735.50">[unknown]</text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (4,353 samples, 13.97%)</title><rect x="27.9273%" y="709" width="13.9685%" height="15" fill="rgb(242,101,16)"/><text x="28.1773%" y="719.50">tokio::runtime::threa..</text></g><g><title>tokio::park::thread::CachedParkThread::block_on (4,353 samples, 13.97%)</title><rect x="27.9273%" y="693" width="13.9685%" height="15" fill="rgb(223,190,21)"/><text x="28.1773%" y="703.50">tokio::park::thread::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,112 samples, 13.20%)</title><rect x="28.7007%" y="677" width="13.1951%" height="15" fill="rgb(215,228,25)"/><text x="28.9507%" y="687.50">std::thread::local::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,111 samples, 13.19%)</title><rect x="28.7039%" y="661" width="13.1919%" height="15" fill="rgb(225,36,22)"/><text x="28.9539%" y="671.50">&lt;core::future::from_..</text></g><g><title>core::ptr::drop_in_place (859 samples, 2.76%)</title><rect x="39.1394%" y="645" width="2.7565%" height="15" fill="rgb(251,106,46)"/><text x="39.3894%" y="655.50">co..</text></g><g><title>core::ptr::drop_in_place (831 samples, 2.67%)</title><rect x="39.2292%" y="629" width="2.6666%" height="15" fill="rgb(208,90,1)"/><text x="39.4792%" y="639.50">co..</text></g><g><title>_int_free (596 samples, 1.91%)</title><rect x="39.9833%" y="613" width="1.9125%" height="15" fill="rgb(243,10,4)"/><text x="40.2333%" y="623.50">_..</text></g><g><title>__perf_event_task_sched_in (51 samples, 0.16%)</title><rect x="41.8990%" y="661" width="0.1637%" height="15" fill="rgb(212,137,27)"/><text x="42.1490%" y="671.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (51 samples, 0.16%)</title><rect x="41.8990%" y="645" width="0.1637%" height="15" fill="rgb(231,220,49)"/><text x="42.1490%" y="655.50"></text></g><g><title>native_write_msr (51 samples, 0.16%)</title><rect x="41.8990%" y="629" width="0.1637%" height="15" fill="rgb(237,96,20)"/><text x="42.1490%" y="639.50"></text></g><g><title>schedule_tail (52 samples, 0.17%)</title><rect x="41.8990%" y="693" width="0.1669%" height="15" fill="rgb(239,229,30)"/><text x="42.1490%" y="703.50"></text></g><g><title>finish_task_switch (52 samples, 0.17%)</title><rect x="41.8990%" y="677" width="0.1669%" height="15" fill="rgb(219,65,33)"/><text x="42.1490%" y="687.50"></text></g><g><title>ret_from_fork (54 samples, 0.17%)</title><rect x="41.8958%" y="709" width="0.1733%" height="15" fill="rgb(243,134,7)"/><text x="42.1458%" y="719.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.02%)</title><rect x="42.0755%" y="629" width="0.0160%" height="15" fill="rgb(216,177,54)"/><text x="42.3255%" y="639.50"></text></g><g><title>std::thread::sleep (5 samples, 0.02%)</title><rect x="42.0755%" y="613" width="0.0160%" height="15" fill="rgb(211,160,20)"/><text x="42.3255%" y="623.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (5 samples, 0.02%)</title><rect x="42.0755%" y="597" width="0.0160%" height="15" fill="rgb(239,85,39)"/><text x="42.3255%" y="607.50"></text></g><g><title>__GI___nanosleep (5 samples, 0.02%)</title><rect x="42.0755%" y="581" width="0.0160%" height="15" fill="rgb(232,125,22)"/><text x="42.3255%" y="591.50"></text></g><g><title>__GI___clock_nanosleep (5 samples, 0.02%)</title><rect x="42.0755%" y="565" width="0.0160%" height="15" fill="rgb(244,57,34)"/><text x="42.3255%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="42.0755%" y="549" width="0.0160%" height="15" fill="rgb(214,203,32)"/><text x="42.3255%" y="559.50"></text></g><g><title>do_syscall_64 (5 samples, 0.02%)</title><rect x="42.0755%" y="533" width="0.0160%" height="15" fill="rgb(207,58,43)"/><text x="42.3255%" y="543.50"></text></g><g><title>__x64_sys_clock_nanosleep (5 samples, 0.02%)</title><rect x="42.0755%" y="517" width="0.0160%" height="15" fill="rgb(215,193,15)"/><text x="42.3255%" y="527.50"></text></g><g><title>common_nsleep (5 samples, 0.02%)</title><rect x="42.0755%" y="501" width="0.0160%" height="15" fill="rgb(232,15,44)"/><text x="42.3255%" y="511.50"></text></g><g><title>hrtimer_nanosleep (5 samples, 0.02%)</title><rect x="42.0755%" y="485" width="0.0160%" height="15" fill="rgb(212,3,48)"/><text x="42.3255%" y="495.50"></text></g><g><title>do_nanosleep (5 samples, 0.02%)</title><rect x="42.0755%" y="469" width="0.0160%" height="15" fill="rgb(218,128,7)"/><text x="42.3255%" y="479.50"></text></g><g><title>schedule (5 samples, 0.02%)</title><rect x="42.0755%" y="453" width="0.0160%" height="15" fill="rgb(226,216,39)"/><text x="42.3255%" y="463.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="42.0755%" y="437" width="0.0160%" height="15" fill="rgb(243,47,51)"/><text x="42.3255%" y="447.50"></text></g><g><title>finish_task_switch (4 samples, 0.01%)</title><rect x="42.0787%" y="421" width="0.0128%" height="15" fill="rgb(241,183,40)"/><text x="42.3287%" y="431.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.01%)</title><rect x="42.0787%" y="405" width="0.0128%" height="15" fill="rgb(231,217,32)"/><text x="42.3287%" y="415.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (4 samples, 0.01%)</title><rect x="42.0787%" y="389" width="0.0128%" height="15" fill="rgb(229,61,38)"/><text x="42.3287%" y="399.50"></text></g><g><title>native_write_msr (4 samples, 0.01%)</title><rect x="42.0787%" y="373" width="0.0128%" height="15" fill="rgb(225,210,5)"/><text x="42.3287%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 0.03%)</title><rect x="42.0691%" y="677" width="0.0257%" height="15" fill="rgb(231,79,45)"/><text x="42.3191%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 0.03%)</title><rect x="42.0691%" y="661" width="0.0257%" height="15" fill="rgb(224,100,7)"/><text x="42.3191%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (8 samples, 0.03%)</title><rect x="42.0691%" y="645" width="0.0257%" height="15" fill="rgb(241,198,18)"/><text x="42.3191%" y="655.50"></text></g><g><title>__GI___clone (68 samples, 0.22%)</title><rect x="41.8958%" y="725" width="0.2182%" height="15" fill="rgb(252,97,53)"/><text x="42.1458%" y="735.50"></text></g><g><title>start_thread (14 samples, 0.04%)</title><rect x="42.0691%" y="709" width="0.0449%" height="15" fill="rgb(220,88,7)"/><text x="42.3191%" y="719.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (14 samples, 0.04%)</title><rect x="42.0691%" y="693" width="0.0449%" height="15" fill="rgb(213,176,14)"/><text x="42.3191%" y="703.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (6 samples, 0.02%)</title><rect x="42.0948%" y="677" width="0.0193%" height="15" fill="rgb(246,73,7)"/><text x="42.3448%" y="687.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (6 samples, 0.02%)</title><rect x="42.0948%" y="661" width="0.0193%" height="15" fill="rgb(245,64,36)"/><text x="42.3448%" y="671.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (5 samples, 0.02%)</title><rect x="42.0980%" y="645" width="0.0160%" height="15" fill="rgb(245,80,10)"/><text x="42.3480%" y="655.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (5 samples, 0.02%)</title><rect x="42.0980%" y="629" width="0.0160%" height="15" fill="rgb(232,107,50)"/><text x="42.3480%" y="639.50"></text></g><g><title>asm_exc_page_fault (123 samples, 0.39%)</title><rect x="42.1269%" y="725" width="0.3947%" height="15" fill="rgb(253,3,0)"/><text x="42.3769%" y="735.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4 samples, 0.01%)</title><rect x="52.4051%" y="709" width="0.0128%" height="15" fill="rgb(212,99,53)"/><text x="52.6551%" y="719.50"></text></g><g><title>sysvec_apic_timer_interrupt (4 samples, 0.01%)</title><rect x="52.4051%" y="693" width="0.0128%" height="15" fill="rgb(249,111,54)"/><text x="52.6551%" y="703.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4 samples, 0.01%)</title><rect x="52.4051%" y="677" width="0.0128%" height="15" fill="rgb(249,55,30)"/><text x="52.6551%" y="687.50"></text></g><g><title>blake3_compress_in_place_sse41 (3,083 samples, 9.89%)</title><rect x="42.5312%" y="725" width="9.8931%" height="15" fill="rgb(237,47,42)"/><text x="42.7812%" y="735.50">blake3_compres..</text></g><g><title>page_remove_rmap (17 samples, 0.05%)</title><rect x="52.5046%" y="581" width="0.0546%" height="15" fill="rgb(211,20,18)"/><text x="52.7546%" y="591.50"></text></g><g><title>__mod_memcg_lruvec_state (8 samples, 0.03%)</title><rect x="52.5335%" y="565" width="0.0257%" height="15" fill="rgb(231,203,46)"/><text x="52.7835%" y="575.50"></text></g><g><title>free_pages_and_swap_cache (5 samples, 0.02%)</title><rect x="52.5591%" y="565" width="0.0160%" height="15" fill="rgb(237,142,3)"/><text x="52.8091%" y="575.50"></text></g><g><title>__free_one_page (24 samples, 0.08%)</title><rect x="52.6361%" y="517" width="0.0770%" height="15" fill="rgb(241,107,1)"/><text x="52.8861%" y="527.50"></text></g><g><title>free_pcppages_bulk (31 samples, 0.10%)</title><rect x="52.6233%" y="533" width="0.0995%" height="15" fill="rgb(229,83,13)"/><text x="52.8733%" y="543.50"></text></g><g><title>free_unref_page_list (37 samples, 0.12%)</title><rect x="52.6201%" y="549" width="0.1187%" height="15" fill="rgb(241,91,40)"/><text x="52.8701%" y="559.50"></text></g><g><title>free_unref_page_commit (5 samples, 0.02%)</title><rect x="52.7228%" y="533" width="0.0160%" height="15" fill="rgb(225,3,45)"/><text x="52.9728%" y="543.50"></text></g><g><title>tlb_flush_mmu (58 samples, 0.19%)</title><rect x="52.5591%" y="581" width="0.1861%" height="15" fill="rgb(244,223,14)"/><text x="52.8091%" y="591.50"></text></g><g><title>release_pages (53 samples, 0.17%)</title><rect x="52.5752%" y="565" width="0.1701%" height="15" fill="rgb(224,124,37)"/><text x="52.8252%" y="575.50"></text></g><g><title>__x64_sys_exit_group (95 samples, 0.30%)</title><rect x="52.4436%" y="693" width="0.3048%" height="15" fill="rgb(251,171,30)"/><text x="52.6936%" y="703.50"></text></g><g><title>do_group_exit (95 samples, 0.30%)</title><rect x="52.4436%" y="677" width="0.3048%" height="15" fill="rgb(236,46,54)"/><text x="52.6936%" y="687.50"></text></g><g><title>do_exit (95 samples, 0.30%)</title><rect x="52.4436%" y="661" width="0.3048%" height="15" fill="rgb(245,213,5)"/><text x="52.6936%" y="671.50"></text></g><g><title>mmput (95 samples, 0.30%)</title><rect x="52.4436%" y="645" width="0.3048%" height="15" fill="rgb(230,144,27)"/><text x="52.6936%" y="655.50"></text></g><g><title>exit_mmap (95 samples, 0.30%)</title><rect x="52.4436%" y="629" width="0.3048%" height="15" fill="rgb(220,86,6)"/><text x="52.6936%" y="639.50"></text></g><g><title>unmap_vmas (93 samples, 0.30%)</title><rect x="52.4500%" y="613" width="0.2984%" height="15" fill="rgb(240,20,13)"/><text x="52.7000%" y="623.50"></text></g><g><title>unmap_page_range (93 samples, 0.30%)</title><rect x="52.4500%" y="597" width="0.2984%" height="15" fill="rgb(217,89,34)"/><text x="52.7000%" y="607.50"></text></g><g><title>do_syscall_64 (98 samples, 0.31%)</title><rect x="52.4372%" y="709" width="0.3145%" height="15" fill="rgb(229,13,5)"/><text x="52.6872%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (100 samples, 0.32%)</title><rect x="52.4340%" y="725" width="0.3209%" height="15" fill="rgb(244,67,35)"/><text x="52.6840%" y="735.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (13 samples, 0.04%)</title><rect x="52.7549%" y="725" width="0.0417%" height="15" fill="rgb(221,40,2)"/><text x="53.0049%" y="735.50"></text></g><g><title>stress (16,451 samples, 52.79%)</title><rect x="0.0160%" y="741" width="52.7902%" height="15" fill="rgb(237,157,21)"/><text x="0.2660%" y="751.50">stress</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.04%)</title><rect x="53.0822%" y="709" width="0.0385%" height="15" fill="rgb(222,94,11)"/><text x="53.3322%" y="719.50"></text></g><g><title>_int_free (4 samples, 0.01%)</title><rect x="53.1528%" y="709" width="0.0128%" height="15" fill="rgb(249,113,6)"/><text x="53.4028%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (4 samples, 0.01%)</title><rect x="53.1849%" y="709" width="0.0128%" height="15" fill="rgb(238,137,36)"/><text x="53.4349%" y="719.50"></text></g><g><title>ate::chain::ChainOfTrust::add_history (4 samples, 0.01%)</title><rect x="53.2073%" y="709" width="0.0128%" height="15" fill="rgb(210,102,26)"/><text x="53.4573%" y="719.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (7 samples, 0.02%)</title><rect x="53.2330%" y="709" width="0.0225%" height="15" fill="rgb(218,30,30)"/><text x="53.4830%" y="719.50"></text></g><g><title>blake3::ChunkState::update (10 samples, 0.03%)</title><rect x="53.2587%" y="709" width="0.0321%" height="15" fill="rgb(214,67,26)"/><text x="53.5087%" y="719.50"></text></g><g><title>blake3::hash (4 samples, 0.01%)</title><rect x="53.2908%" y="709" width="0.0128%" height="15" fill="rgb(251,9,53)"/><text x="53.5408%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="53.3036%" y="709" width="0.0128%" height="15" fill="rgb(228,204,25)"/><text x="53.5536%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (5 samples, 0.02%)</title><rect x="53.3164%" y="709" width="0.0160%" height="15" fill="rgb(207,153,8)"/><text x="53.5664%" y="719.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (6 samples, 0.02%)</title><rect x="53.3485%" y="709" width="0.0193%" height="15" fill="rgb(242,9,16)"/><text x="53.5985%" y="719.50"></text></g><g><title>[[heap]] (101 samples, 0.32%)</title><rect x="53.0597%" y="725" width="0.3241%" height="15" fill="rgb(217,211,10)"/><text x="53.3097%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.06%)</title><rect x="53.3870%" y="709" width="0.0578%" height="15" fill="rgb(219,228,52)"/><text x="53.6370%" y="719.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (6 samples, 0.02%)</title><rect x="53.4448%" y="709" width="0.0193%" height="15" fill="rgb(231,92,29)"/><text x="53.6948%" y="719.50"></text></g><g><title>_int_free (4 samples, 0.01%)</title><rect x="53.4897%" y="709" width="0.0128%" height="15" fill="rgb(232,8,23)"/><text x="53.7397%" y="719.50"></text></g><g><title>_int_malloc (6 samples, 0.02%)</title><rect x="53.5026%" y="709" width="0.0193%" height="15" fill="rgb(216,211,34)"/><text x="53.7526%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.02%)</title><rect x="53.5282%" y="709" width="0.0160%" height="15" fill="rgb(236,151,0)"/><text x="53.7782%" y="719.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (7 samples, 0.02%)</title><rect x="53.5443%" y="709" width="0.0225%" height="15" fill="rgb(209,168,3)"/><text x="53.7943%" y="719.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (6 samples, 0.02%)</title><rect x="53.5699%" y="709" width="0.0193%" height="15" fill="rgb(208,129,28)"/><text x="53.8199%" y="719.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_slice (11 samples, 0.04%)</title><rect x="53.6020%" y="709" width="0.0353%" height="15" fill="rgb(229,78,22)"/><text x="53.8520%" y="719.50"></text></g><g><title>bytes::bytes::shared_drop (4 samples, 0.01%)</title><rect x="53.6373%" y="709" width="0.0128%" height="15" fill="rgb(228,187,13)"/><text x="53.8873%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.01%)</title><rect x="53.6630%" y="709" width="0.0128%" height="15" fill="rgb(240,119,24)"/><text x="53.9130%" y="719.50"></text></g><g><title>std::time::Instant::now (4 samples, 0.01%)</title><rect x="53.6790%" y="709" width="0.0128%" height="15" fill="rgb(209,194,42)"/><text x="53.9290%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (4 samples, 0.01%)</title><rect x="53.6790%" y="693" width="0.0128%" height="15" fill="rgb(247,200,46)"/><text x="53.9290%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::now (4 samples, 0.01%)</title><rect x="53.6790%" y="677" width="0.0128%" height="15" fill="rgb(218,76,16)"/><text x="53.9290%" y="687.50"></text></g><g><title>syscall (6 samples, 0.02%)</title><rect x="53.6919%" y="709" width="0.0193%" height="15" fill="rgb(225,21,48)"/><text x="53.9419%" y="719.50"></text></g><g><title>sysmalloc (5 samples, 0.02%)</title><rect x="53.7111%" y="709" width="0.0160%" height="15" fill="rgb(239,223,50)"/><text x="53.9611%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.01%)</title><rect x="53.7143%" y="693" width="0.0128%" height="15" fill="rgb(244,45,21)"/><text x="53.9643%" y="703.50"></text></g><g><title>[anon] (122 samples, 0.39%)</title><rect x="53.3838%" y="725" width="0.3915%" height="15" fill="rgb(232,33,43)"/><text x="53.6338%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.03%)</title><rect x="53.7946%" y="709" width="0.0289%" height="15" fill="rgb(209,8,3)"/><text x="54.0446%" y="719.50"></text></g><g><title>_int_free (8 samples, 0.03%)</title><rect x="53.8523%" y="709" width="0.0257%" height="15" fill="rgb(214,25,53)"/><text x="54.1023%" y="719.50"></text></g><g><title>_int_malloc (5 samples, 0.02%)</title><rect x="53.8780%" y="709" width="0.0160%" height="15" fill="rgb(254,186,54)"/><text x="54.1280%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::next_kv_unchecked_dealloc (4 samples, 0.01%)</title><rect x="53.8940%" y="709" width="0.0128%" height="15" fill="rgb(208,174,49)"/><text x="54.1440%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (7 samples, 0.02%)</title><rect x="53.9069%" y="709" width="0.0225%" height="15" fill="rgb(233,191,51)"/><text x="54.1569%" y="719.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.02%)</title><rect x="53.9101%" y="693" width="0.0193%" height="15" fill="rgb(222,134,10)"/><text x="54.1601%" y="703.50"></text></g><g><title>_int_malloc (6 samples, 0.02%)</title><rect x="53.9101%" y="677" width="0.0193%" height="15" fill="rgb(230,226,20)"/><text x="54.1601%" y="687.50"></text></g><g><title>sysmalloc (6 samples, 0.02%)</title><rect x="53.9101%" y="661" width="0.0193%" height="15" fill="rgb(251,111,25)"/><text x="54.1601%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.02%)</title><rect x="53.9101%" y="645" width="0.0193%" height="15" fill="rgb(224,40,46)"/><text x="54.1601%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.02%)</title><rect x="53.9293%" y="709" width="0.0160%" height="15" fill="rgb(236,108,47)"/><text x="54.1793%" y="719.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (4 samples, 0.01%)</title><rect x="53.9550%" y="709" width="0.0128%" height="15" fill="rgb(234,93,0)"/><text x="54.2050%" y="719.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (4 samples, 0.01%)</title><rect x="53.9743%" y="709" width="0.0128%" height="15" fill="rgb(224,213,32)"/><text x="54.2243%" y="719.50"></text></g><g><title>bincode::config::DefaultOptions::new (5 samples, 0.02%)</title><rect x="53.9999%" y="709" width="0.0160%" height="15" fill="rgb(251,11,48)"/><text x="54.2499%" y="719.50"></text></g><g><title>blake3::ChunkState::update (20 samples, 0.06%)</title><rect x="54.0192%" y="709" width="0.0642%" height="15" fill="rgb(236,173,5)"/><text x="54.2692%" y="719.50"></text></g><g><title>blake3::Hasher::final_output (8 samples, 0.03%)</title><rect x="54.0834%" y="709" width="0.0257%" height="15" fill="rgb(230,95,12)"/><text x="54.3334%" y="719.50"></text></g><g><title>blake3::Hasher::update (19 samples, 0.06%)</title><rect x="54.1315%" y="709" width="0.0610%" height="15" fill="rgb(232,209,1)"/><text x="54.3815%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4 samples, 0.01%)</title><rect x="54.2117%" y="709" width="0.0128%" height="15" fill="rgb(232,6,1)"/><text x="54.4617%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.03%)</title><rect x="54.2246%" y="709" width="0.0257%" height="15" fill="rgb(210,224,50)"/><text x="54.4746%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (5 samples, 0.02%)</title><rect x="54.2502%" y="709" width="0.0160%" height="15" fill="rgb(228,127,35)"/><text x="54.5002%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (5 samples, 0.02%)</title><rect x="54.2663%" y="709" width="0.0160%" height="15" fill="rgb(245,102,45)"/><text x="54.5163%" y="719.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (5 samples, 0.02%)</title><rect x="54.2919%" y="709" width="0.0160%" height="15" fill="rgb(214,1,49)"/><text x="54.5419%" y="719.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit (4 samples, 0.01%)</title><rect x="54.3112%" y="709" width="0.0128%" height="15" fill="rgb(226,163,40)"/><text x="54.5612%" y="719.50"></text></g><g><title>std::panicking::try (13 samples, 0.04%)</title><rect x="54.3337%" y="709" width="0.0417%" height="15" fill="rgb(239,212,28)"/><text x="54.5837%" y="719.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (13 samples, 0.04%)</title><rect x="54.3337%" y="693" width="0.0417%" height="15" fill="rgb(220,20,13)"/><text x="54.5837%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (13 samples, 0.04%)</title><rect x="54.3337%" y="677" width="0.0417%" height="15" fill="rgb(210,164,35)"/><text x="54.5837%" y="687.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (13 samples, 0.04%)</title><rect x="54.3337%" y="661" width="0.0417%" height="15" fill="rgb(248,109,41)"/><text x="54.5837%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (13 samples, 0.04%)</title><rect x="54.3337%" y="645" width="0.0417%" height="15" fill="rgb(238,23,50)"/><text x="54.5837%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (13 samples, 0.04%)</title><rect x="54.3337%" y="629" width="0.0417%" height="15" fill="rgb(211,48,49)"/><text x="54.5837%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.04%)</title><rect x="54.3337%" y="613" width="0.0417%" height="15" fill="rgb(223,36,21)"/><text x="54.5837%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (13 samples, 0.04%)</title><rect x="54.3337%" y="597" width="0.0417%" height="15" fill="rgb(207,123,46)"/><text x="54.5837%" y="607.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (13 samples, 0.04%)</title><rect x="54.3337%" y="581" width="0.0417%" height="15" fill="rgb(240,218,32)"/><text x="54.5837%" y="591.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.04%)</title><rect x="54.3337%" y="565" width="0.0417%" height="15" fill="rgb(252,5,43)"/><text x="54.5837%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.04%)</title><rect x="54.3337%" y="549" width="0.0417%" height="15" fill="rgb(252,84,19)"/><text x="54.5837%" y="559.50"></text></g><g><title>ate::chain::ChainOfTrust::add_history (13 samples, 0.04%)</title><rect x="54.3337%" y="533" width="0.0417%" height="15" fill="rgb(243,152,39)"/><text x="54.5837%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (13 samples, 0.04%)</title><rect x="54.3337%" y="517" width="0.0417%" height="15" fill="rgb(234,160,15)"/><text x="54.5837%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (13 samples, 0.04%)</title><rect x="54.3337%" y="501" width="0.0417%" height="15" fill="rgb(237,34,20)"/><text x="54.5837%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (13 samples, 0.04%)</title><rect x="54.3337%" y="485" width="0.0417%" height="15" fill="rgb(229,97,13)"/><text x="54.5837%" y="495.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.04%)</title><rect x="54.3337%" y="469" width="0.0417%" height="15" fill="rgb(234,71,50)"/><text x="54.5837%" y="479.50"></text></g><g><title>_int_malloc (13 samples, 0.04%)</title><rect x="54.3337%" y="453" width="0.0417%" height="15" fill="rgb(253,155,4)"/><text x="54.5837%" y="463.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (30 samples, 0.10%)</title><rect x="54.3754%" y="709" width="0.0963%" height="15" fill="rgb(222,185,37)"/><text x="54.6254%" y="719.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (30 samples, 0.10%)</title><rect x="54.3754%" y="693" width="0.0963%" height="15" fill="rgb(251,177,13)"/><text x="54.6254%" y="703.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (30 samples, 0.10%)</title><rect x="54.3754%" y="677" width="0.0963%" height="15" fill="rgb(250,179,40)"/><text x="54.6254%" y="687.50"></text></g><g><title>std::panicking::try (30 samples, 0.10%)</title><rect x="54.3754%" y="661" width="0.0963%" height="15" fill="rgb(242,44,2)"/><text x="54.6254%" y="671.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (30 samples, 0.10%)</title><rect x="54.3754%" y="645" width="0.0963%" height="15" fill="rgb(216,177,13)"/><text x="54.6254%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (30 samples, 0.10%)</title><rect x="54.3754%" y="629" width="0.0963%" height="15" fill="rgb(216,106,43)"/><text x="54.6254%" y="639.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (30 samples, 0.10%)</title><rect x="54.3754%" y="613" width="0.0963%" height="15" fill="rgb(216,183,2)"/><text x="54.6254%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (30 samples, 0.10%)</title><rect x="54.3754%" y="597" width="0.0963%" height="15" fill="rgb(249,75,3)"/><text x="54.6254%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (30 samples, 0.10%)</title><rect x="54.3754%" y="581" width="0.0963%" height="15" fill="rgb(219,67,39)"/><text x="54.6254%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (30 samples, 0.10%)</title><rect x="54.3754%" y="565" width="0.0963%" height="15" fill="rgb(253,228,2)"/><text x="54.6254%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (30 samples, 0.10%)</title><rect x="54.3754%" y="549" width="0.0963%" height="15" fill="rgb(235,138,27)"/><text x="54.6254%" y="559.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (30 samples, 0.10%)</title><rect x="54.3754%" y="533" width="0.0963%" height="15" fill="rgb(236,97,51)"/><text x="54.6254%" y="543.50"></text></g><g><title>std::panic::catch_unwind (30 samples, 0.10%)</title><rect x="54.3754%" y="517" width="0.0963%" height="15" fill="rgb(240,80,30)"/><text x="54.6254%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.10%)</title><rect x="54.3754%" y="501" width="0.0963%" height="15" fill="rgb(230,178,19)"/><text x="54.6254%" y="511.50"></text></g><g><title>ate::accessor::ChainProtectedSync::validate_event (30 samples, 0.10%)</title><rect x="54.3754%" y="485" width="0.0963%" height="15" fill="rgb(210,190,27)"/><text x="54.6254%" y="495.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::validator::EventValidator&gt;::validate (30 samples, 0.10%)</title><rect x="54.3754%" y="469" width="0.0963%" height="15" fill="rgb(222,107,31)"/><text x="54.6254%" y="479.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (30 samples, 0.10%)</title><rect x="54.3754%" y="453" width="0.0963%" height="15" fill="rgb(216,127,34)"/><text x="54.6254%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (29 samples, 0.09%)</title><rect x="54.3786%" y="437" width="0.0931%" height="15" fill="rgb(234,116,52)"/><text x="54.6286%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.01%)</title><rect x="54.4716%" y="709" width="0.0128%" height="15" fill="rgb(222,124,15)"/><text x="54.7216%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4 samples, 0.01%)</title><rect x="54.4716%" y="693" width="0.0128%" height="15" fill="rgb(231,179,28)"/><text x="54.7216%" y="703.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (4 samples, 0.01%)</title><rect x="54.4716%" y="677" width="0.0128%" height="15" fill="rgb(226,93,45)"/><text x="54.7216%" y="687.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="54.4716%" y="661" width="0.0128%" height="15" fill="rgb(215,8,51)"/><text x="54.7216%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="54.4716%" y="645" width="0.0128%" height="15" fill="rgb(223,106,5)"/><text x="54.7216%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="54.4716%" y="629" width="0.0128%" height="15" fill="rgb(250,191,5)"/><text x="54.7216%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="54.4716%" y="613" width="0.0128%" height="15" fill="rgb(242,132,44)"/><text x="54.7216%" y="623.50"></text></g><g><title>ate::event::EventData::as_header_raw (4 samples, 0.01%)</title><rect x="54.4716%" y="597" width="0.0128%" height="15" fill="rgb(251,152,29)"/><text x="54.7216%" y="607.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (4 samples, 0.01%)</title><rect x="54.4716%" y="581" width="0.0128%" height="15" fill="rgb(218,179,5)"/><text x="54.7216%" y="591.50"></text></g><g><title>blake3::Hasher::update (4 samples, 0.01%)</title><rect x="54.4716%" y="565" width="0.0128%" height="15" fill="rgb(227,67,19)"/><text x="54.7216%" y="575.50"></text></g><g><title>syscall (5 samples, 0.02%)</title><rect x="54.4877%" y="709" width="0.0160%" height="15" fill="rgb(233,119,31)"/><text x="54.7377%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.02%)</title><rect x="54.4877%" y="693" width="0.0160%" height="15" fill="rgb(241,120,22)"/><text x="54.7377%" y="703.50"></text></g><g><title>alloc_pages_vma (8 samples, 0.03%)</title><rect x="54.5487%" y="373" width="0.0257%" height="15" fill="rgb(224,102,30)"/><text x="54.7987%" y="383.50"></text></g><g><title>__alloc_pages_nodemask (7 samples, 0.02%)</title><rect x="54.5519%" y="357" width="0.0225%" height="15" fill="rgb(210,164,37)"/><text x="54.8019%" y="367.50"></text></g><g><title>get_page_from_freelist (6 samples, 0.02%)</title><rect x="54.5551%" y="341" width="0.0193%" height="15" fill="rgb(226,191,16)"/><text x="54.8051%" y="351.50"></text></g><g><title>lru_cache_add (5 samples, 0.02%)</title><rect x="54.5743%" y="373" width="0.0160%" height="15" fill="rgb(214,40,45)"/><text x="54.8243%" y="383.50"></text></g><g><title>pagevec_lru_move_fn (4 samples, 0.01%)</title><rect x="54.5775%" y="357" width="0.0128%" height="15" fill="rgb(244,29,26)"/><text x="54.8275%" y="367.50"></text></g><g><title>__pagevec_lru_add_fn (4 samples, 0.01%)</title><rect x="54.5775%" y="341" width="0.0128%" height="15" fill="rgb(216,16,5)"/><text x="54.8275%" y="351.50"></text></g><g><title>mem_cgroup_charge (5 samples, 0.02%)</title><rect x="54.5904%" y="373" width="0.0160%" height="15" fill="rgb(249,76,35)"/><text x="54.8404%" y="383.50"></text></g><g><title>exc_page_fault (21 samples, 0.07%)</title><rect x="54.5422%" y="421" width="0.0674%" height="15" fill="rgb(207,11,44)"/><text x="54.7922%" y="431.50"></text></g><g><title>do_user_addr_fault (21 samples, 0.07%)</title><rect x="54.5422%" y="405" width="0.0674%" height="15" fill="rgb(228,190,49)"/><text x="54.7922%" y="415.50"></text></g><g><title>handle_mm_fault (20 samples, 0.06%)</title><rect x="54.5455%" y="389" width="0.0642%" height="15" fill="rgb(214,173,12)"/><text x="54.7955%" y="399.50"></text></g><g><title>asm_exc_page_fault (27 samples, 0.09%)</title><rect x="54.5422%" y="437" width="0.0866%" height="15" fill="rgb(218,26,35)"/><text x="54.7922%" y="447.50"></text></g><g><title>irqentry_exit_to_user_mode (6 samples, 0.02%)</title><rect x="54.6096%" y="421" width="0.0193%" height="15" fill="rgb(220,200,19)"/><text x="54.8596%" y="431.50"></text></g><g><title>perf_event_mmap (14 samples, 0.04%)</title><rect x="54.6674%" y="325" width="0.0449%" height="15" fill="rgb(239,95,49)"/><text x="54.9174%" y="335.50"></text></g><g><title>perf_iterate_sb (13 samples, 0.04%)</title><rect x="54.6706%" y="309" width="0.0417%" height="15" fill="rgb(235,85,53)"/><text x="54.9206%" y="319.50"></text></g><g><title>perf_iterate_ctx (9 samples, 0.03%)</title><rect x="54.6834%" y="293" width="0.0289%" height="15" fill="rgb(233,133,31)"/><text x="54.9334%" y="303.50"></text></g><g><title>perf_event_mmap_output (6 samples, 0.02%)</title><rect x="54.6931%" y="277" width="0.0193%" height="15" fill="rgb(218,25,20)"/><text x="54.9431%" y="287.50"></text></g><g><title>__vma_adjust (4 samples, 0.01%)</title><rect x="54.7123%" y="309" width="0.0128%" height="15" fill="rgb(252,210,38)"/><text x="54.9623%" y="319.50"></text></g><g><title>vma_merge (5 samples, 0.02%)</title><rect x="54.7123%" y="325" width="0.0160%" height="15" fill="rgb(242,134,21)"/><text x="54.9623%" y="335.50"></text></g><g><title>__x64_sys_mprotect (28 samples, 0.09%)</title><rect x="54.6417%" y="373" width="0.0899%" height="15" fill="rgb(213,28,48)"/><text x="54.8917%" y="383.50"></text></g><g><title>do_mprotect_pkey (27 samples, 0.09%)</title><rect x="54.6449%" y="357" width="0.0866%" height="15" fill="rgb(250,196,2)"/><text x="54.8949%" y="367.50"></text></g><g><title>mprotect_fixup (26 samples, 0.08%)</title><rect x="54.6481%" y="341" width="0.0834%" height="15" fill="rgb(227,5,17)"/><text x="54.8981%" y="351.50"></text></g><g><title>do_syscall_64 (30 samples, 0.10%)</title><rect x="54.6417%" y="389" width="0.0963%" height="15" fill="rgb(221,226,24)"/><text x="54.8917%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (41 samples, 0.13%)</title><rect x="54.6417%" y="405" width="0.1316%" height="15" fill="rgb(211,5,48)"/><text x="54.8917%" y="415.50"></text></g><g><title>syscall_exit_to_user_mode (11 samples, 0.04%)</title><rect x="54.7380%" y="389" width="0.0353%" height="15" fill="rgb(219,150,6)"/><text x="54.9880%" y="399.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (81 samples, 0.26%)</title><rect x="54.5262%" y="709" width="0.2599%" height="15" fill="rgb(251,46,16)"/><text x="54.7762%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (81 samples, 0.26%)</title><rect x="54.5262%" y="693" width="0.2599%" height="15" fill="rgb(220,204,40)"/><text x="54.7762%" y="703.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (81 samples, 0.26%)</title><rect x="54.5262%" y="677" width="0.2599%" height="15" fill="rgb(211,85,2)"/><text x="54.7762%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (81 samples, 0.26%)</title><rect x="54.5262%" y="661" width="0.2599%" height="15" fill="rgb(229,17,7)"/><text x="54.7762%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (81 samples, 0.26%)</title><rect x="54.5262%" y="645" width="0.2599%" height="15" fill="rgb(239,72,28)"/><text x="54.7762%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (81 samples, 0.26%)</title><rect x="54.5262%" y="629" width="0.2599%" height="15" fill="rgb(230,47,54)"/><text x="54.7762%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (81 samples, 0.26%)</title><rect x="54.5262%" y="613" width="0.2599%" height="15" fill="rgb(214,50,8)"/><text x="54.7762%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (81 samples, 0.26%)</title><rect x="54.5262%" y="597" width="0.2599%" height="15" fill="rgb(216,198,43)"/><text x="54.7762%" y="607.50"></text></g><g><title>std::panic::catch_unwind (81 samples, 0.26%)</title><rect x="54.5262%" y="581" width="0.2599%" height="15" fill="rgb(234,20,35)"/><text x="54.7762%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (81 samples, 0.26%)</title><rect x="54.5262%" y="565" width="0.2599%" height="15" fill="rgb(254,45,19)"/><text x="54.7762%" y="575.50"></text></g><g><title>ate::chain::ChainOfTrust::add_history (81 samples, 0.26%)</title><rect x="54.5262%" y="549" width="0.2599%" height="15" fill="rgb(219,14,44)"/><text x="54.7762%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (81 samples, 0.26%)</title><rect x="54.5262%" y="533" width="0.2599%" height="15" fill="rgb(217,220,26)"/><text x="54.7762%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (81 samples, 0.26%)</title><rect x="54.5262%" y="517" width="0.2599%" height="15" fill="rgb(213,158,28)"/><text x="54.7762%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (81 samples, 0.26%)</title><rect x="54.5262%" y="501" width="0.2599%" height="15" fill="rgb(252,51,52)"/><text x="54.7762%" y="511.50"></text></g><g><title>__GI___libc_malloc (81 samples, 0.26%)</title><rect x="54.5262%" y="485" width="0.2599%" height="15" fill="rgb(246,89,16)"/><text x="54.7762%" y="495.50"></text></g><g><title>_int_malloc (81 samples, 0.26%)</title><rect x="54.5262%" y="469" width="0.2599%" height="15" fill="rgb(216,158,49)"/><text x="54.7762%" y="479.50"></text></g><g><title>sysmalloc (81 samples, 0.26%)</title><rect x="54.5262%" y="453" width="0.2599%" height="15" fill="rgb(236,107,19)"/><text x="54.7762%" y="463.50"></text></g><g><title>grow_heap (47 samples, 0.15%)</title><rect x="54.6353%" y="437" width="0.1508%" height="15" fill="rgb(228,185,30)"/><text x="54.8853%" y="447.50"></text></g><g><title>__GI___mprotect (46 samples, 0.15%)</title><rect x="54.6385%" y="421" width="0.1476%" height="15" fill="rgb(246,134,8)"/><text x="54.8885%" y="431.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (15 samples, 0.05%)</title><rect x="54.7861%" y="709" width="0.0481%" height="15" fill="rgb(214,143,50)"/><text x="55.0361%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (15 samples, 0.05%)</title><rect x="54.7861%" y="693" width="0.0481%" height="15" fill="rgb(228,75,8)"/><text x="55.0361%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (15 samples, 0.05%)</title><rect x="54.7861%" y="677" width="0.0481%" height="15" fill="rgb(207,175,4)"/><text x="55.0361%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15 samples, 0.05%)</title><rect x="54.7861%" y="661" width="0.0481%" height="15" fill="rgb(205,108,24)"/><text x="55.0361%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (15 samples, 0.05%)</title><rect x="54.7861%" y="645" width="0.0481%" height="15" fill="rgb(244,120,49)"/><text x="55.0361%" y="655.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (15 samples, 0.05%)</title><rect x="54.7861%" y="629" width="0.0481%" height="15" fill="rgb(223,47,38)"/><text x="55.0361%" y="639.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 0.05%)</title><rect x="54.7861%" y="613" width="0.0481%" height="15" fill="rgb(229,179,11)"/><text x="55.0361%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.05%)</title><rect x="54.7861%" y="597" width="0.0481%" height="15" fill="rgb(231,122,1)"/><text x="55.0361%" y="607.50"></text></g><g><title>ate::event::EventData::as_header (15 samples, 0.05%)</title><rect x="54.7861%" y="581" width="0.0481%" height="15" fill="rgb(245,119,9)"/><text x="55.0361%" y="591.50"></text></g><g><title>ate::event::EventData::as_header_raw (15 samples, 0.05%)</title><rect x="54.7861%" y="565" width="0.0481%" height="15" fill="rgb(241,163,25)"/><text x="55.0361%" y="575.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (15 samples, 0.05%)</title><rect x="54.7861%" y="549" width="0.0481%" height="15" fill="rgb(217,214,3)"/><text x="55.0361%" y="559.50"></text></g><g><title>blake3::Hasher::update (15 samples, 0.05%)</title><rect x="54.7861%" y="533" width="0.0481%" height="15" fill="rgb(240,86,28)"/><text x="55.0361%" y="543.50"></text></g><g><title>blake3::ChunkState::update (15 samples, 0.05%)</title><rect x="54.7861%" y="517" width="0.0481%" height="15" fill="rgb(215,47,9)"/><text x="55.0361%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.02%)</title><rect x="54.8182%" y="501" width="0.0160%" height="15" fill="rgb(252,25,45)"/><text x="55.0682%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.03%)</title><rect x="54.9177%" y="437" width="0.0257%" height="15" fill="rgb(251,164,9)"/><text x="55.1677%" y="447.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (35 samples, 0.11%)</title><rect x="54.8343%" y="709" width="0.1123%" height="15" fill="rgb(233,194,0)"/><text x="55.0843%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (35 samples, 0.11%)</title><rect x="54.8343%" y="693" width="0.1123%" height="15" fill="rgb(249,111,24)"/><text x="55.0843%" y="703.50"></text></g><g><title>std::panicking::try (35 samples, 0.11%)</title><rect x="54.8343%" y="677" width="0.1123%" height="15" fill="rgb(250,223,3)"/><text x="55.0843%" y="687.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (35 samples, 0.11%)</title><rect x="54.8343%" y="661" width="0.1123%" height="15" fill="rgb(236,178,37)"/><text x="55.0843%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (35 samples, 0.11%)</title><rect x="54.8343%" y="645" width="0.1123%" height="15" fill="rgb(241,158,50)"/><text x="55.0843%" y="655.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (35 samples, 0.11%)</title><rect x="54.8343%" y="629" width="0.1123%" height="15" fill="rgb(213,121,41)"/><text x="55.0843%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (35 samples, 0.11%)</title><rect x="54.8343%" y="613" width="0.1123%" height="15" fill="rgb(240,92,3)"/><text x="55.0843%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (35 samples, 0.11%)</title><rect x="54.8343%" y="597" width="0.1123%" height="15" fill="rgb(205,123,3)"/><text x="55.0843%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (35 samples, 0.11%)</title><rect x="54.8343%" y="581" width="0.1123%" height="15" fill="rgb(205,97,47)"/><text x="55.0843%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (35 samples, 0.11%)</title><rect x="54.8343%" y="565" width="0.1123%" height="15" fill="rgb(247,152,14)"/><text x="55.0843%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (35 samples, 0.11%)</title><rect x="54.8343%" y="549" width="0.1123%" height="15" fill="rgb(248,195,53)"/><text x="55.0843%" y="559.50"></text></g><g><title>std::panic::catch_unwind (35 samples, 0.11%)</title><rect x="54.8343%" y="533" width="0.1123%" height="15" fill="rgb(226,201,16)"/><text x="55.0843%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.11%)</title><rect x="54.8343%" y="517" width="0.1123%" height="15" fill="rgb(205,98,0)"/><text x="55.0843%" y="527.50"></text></g><g><title>ate::chain::ChainOfTrust::add_history (33 samples, 0.11%)</title><rect x="54.8407%" y="501" width="0.1059%" height="15" fill="rgb(214,191,48)"/><text x="55.0907%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (33 samples, 0.11%)</title><rect x="54.8407%" y="485" width="0.1059%" height="15" fill="rgb(237,112,39)"/><text x="55.0907%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (33 samples, 0.11%)</title><rect x="54.8407%" y="469" width="0.1059%" height="15" fill="rgb(247,203,27)"/><text x="55.0907%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (33 samples, 0.11%)</title><rect x="54.8407%" y="453" width="0.1059%" height="15" fill="rgb(235,124,28)"/><text x="55.0907%" y="463.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.02%)</title><rect x="54.9594%" y="693" width="0.0225%" height="15" fill="rgb(208,207,46)"/><text x="55.2094%" y="703.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.02%)</title><rect x="54.9594%" y="677" width="0.0225%" height="15" fill="rgb(234,176,4)"/><text x="55.2094%" y="687.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (7 samples, 0.02%)</title><rect x="54.9594%" y="661" width="0.0225%" height="15" fill="rgb(230,133,28)"/><text x="55.2094%" y="671.50"></text></g><g><title>std::sys::unix::fs::File::write (7 samples, 0.02%)</title><rect x="54.9594%" y="645" width="0.0225%" height="15" fill="rgb(211,137,40)"/><text x="55.2094%" y="655.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (7 samples, 0.02%)</title><rect x="54.9594%" y="629" width="0.0225%" height="15" fill="rgb(254,35,13)"/><text x="55.2094%" y="639.50"></text></g><g><title>__libc_write (7 samples, 0.02%)</title><rect x="54.9594%" y="613" width="0.0225%" height="15" fill="rgb(225,49,51)"/><text x="55.2094%" y="623.50"></text></g><g><title>__libc_write (7 samples, 0.02%)</title><rect x="54.9594%" y="597" width="0.0225%" height="15" fill="rgb(251,10,15)"/><text x="55.2094%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.02%)</title><rect x="54.9594%" y="581" width="0.0225%" height="15" fill="rgb(228,207,15)"/><text x="55.2094%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (35 samples, 0.11%)</title><rect x="54.9562%" y="709" width="0.1123%" height="15" fill="rgb(241,99,19)"/><text x="55.2062%" y="719.50"></text></g><g><title>tokio::park::thread::wake_by_ref (27 samples, 0.09%)</title><rect x="54.9819%" y="693" width="0.0866%" height="15" fill="rgb(207,104,49)"/><text x="55.2319%" y="703.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (27 samples, 0.09%)</title><rect x="54.9819%" y="677" width="0.0866%" height="15" fill="rgb(234,99,18)"/><text x="55.2319%" y="687.50"></text></g><g><title>syscall (27 samples, 0.09%)</title><rect x="54.9819%" y="661" width="0.0866%" height="15" fill="rgb(213,191,49)"/><text x="55.2319%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (27 samples, 0.09%)</title><rect x="54.9819%" y="645" width="0.0866%" height="15" fill="rgb(210,226,19)"/><text x="55.2319%" y="655.50"></text></g><g><title>blake3::Hasher::finalize (10 samples, 0.03%)</title><rect x="55.0910%" y="469" width="0.0321%" height="15" fill="rgb(229,97,18)"/><text x="55.3410%" y="479.50"></text></g><g><title>blake3::Hasher::final_output (10 samples, 0.03%)</title><rect x="55.0910%" y="453" width="0.0321%" height="15" fill="rgb(211,167,15)"/><text x="55.3410%" y="463.50"></text></g><g><title>ate::accessor::ChainProtectedSync::validate_event (19 samples, 0.06%)</title><rect x="55.0910%" y="517" width="0.0610%" height="15" fill="rgb(210,169,34)"/><text x="55.3410%" y="527.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::validator::EventValidator&gt;::validate (19 samples, 0.06%)</title><rect x="55.0910%" y="501" width="0.0610%" height="15" fill="rgb(241,121,31)"/><text x="55.3410%" y="511.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (19 samples, 0.06%)</title><rect x="55.0910%" y="485" width="0.0610%" height="15" fill="rgb(232,40,11)"/><text x="55.3410%" y="495.50"></text></g><g><title>blake3::Hasher::update (9 samples, 0.03%)</title><rect x="55.1231%" y="469" width="0.0289%" height="15" fill="rgb(205,86,26)"/><text x="55.3731%" y="479.50"></text></g><g><title>blake3::ChunkState::update (7 samples, 0.02%)</title><rect x="55.1295%" y="453" width="0.0225%" height="15" fill="rgb(231,126,28)"/><text x="55.3795%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.01%)</title><rect x="55.1391%" y="437" width="0.0128%" height="15" fill="rgb(219,221,18)"/><text x="55.3891%" y="447.50"></text></g><g><title>ate::chain::ChainOfTrust::add_history (4 samples, 0.01%)</title><rect x="55.1519%" y="517" width="0.0128%" height="15" fill="rgb(211,40,0)"/><text x="55.4019%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (4 samples, 0.01%)</title><rect x="55.1519%" y="501" width="0.0128%" height="15" fill="rgb(239,85,43)"/><text x="55.4019%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (4 samples, 0.01%)</title><rect x="55.1519%" y="485" width="0.0128%" height="15" fill="rgb(231,55,21)"/><text x="55.4019%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (4 samples, 0.01%)</title><rect x="55.1519%" y="469" width="0.0128%" height="15" fill="rgb(225,184,43)"/><text x="55.4019%" y="479.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.01%)</title><rect x="55.1519%" y="453" width="0.0128%" height="15" fill="rgb(251,158,41)"/><text x="55.4019%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (27 samples, 0.09%)</title><rect x="55.1680%" y="469" width="0.0866%" height="15" fill="rgb(234,159,37)"/><text x="55.4180%" y="479.50"></text></g><g><title>std::panicking::try (54 samples, 0.17%)</title><rect x="55.0910%" y="693" width="0.1733%" height="15" fill="rgb(216,204,22)"/><text x="55.3410%" y="703.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (54 samples, 0.17%)</title><rect x="55.0910%" y="677" width="0.1733%" height="15" fill="rgb(214,17,3)"/><text x="55.3410%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (54 samples, 0.17%)</title><rect x="55.0910%" y="661" width="0.1733%" height="15" fill="rgb(212,111,17)"/><text x="55.3410%" y="671.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (54 samples, 0.17%)</title><rect x="55.0910%" y="645" width="0.1733%" height="15" fill="rgb(221,157,24)"/><text x="55.3410%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (54 samples, 0.17%)</title><rect x="55.0910%" y="629" width="0.1733%" height="15" fill="rgb(252,16,13)"/><text x="55.3410%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (54 samples, 0.17%)</title><rect x="55.0910%" y="613" width="0.1733%" height="15" fill="rgb(221,62,2)"/><text x="55.3410%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (54 samples, 0.17%)</title><rect x="55.0910%" y="597" width="0.1733%" height="15" fill="rgb(247,87,22)"/><text x="55.3410%" y="607.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (54 samples, 0.17%)</title><rect x="55.0910%" y="581" width="0.1733%" height="15" fill="rgb(215,73,9)"/><text x="55.3410%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (54 samples, 0.17%)</title><rect x="55.0910%" y="565" width="0.1733%" height="15" fill="rgb(207,175,33)"/><text x="55.3410%" y="575.50"></text></g><g><title>std::panic::catch_unwind (54 samples, 0.17%)</title><rect x="55.0910%" y="549" width="0.1733%" height="15" fill="rgb(243,129,54)"/><text x="55.3410%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (54 samples, 0.17%)</title><rect x="55.0910%" y="533" width="0.1733%" height="15" fill="rgb(227,119,45)"/><text x="55.3410%" y="543.50"></text></g><g><title>ate::event::EventData::as_header (31 samples, 0.10%)</title><rect x="55.1648%" y="517" width="0.0995%" height="15" fill="rgb(205,109,36)"/><text x="55.4148%" y="527.50"></text></g><g><title>ate::event::EventData::as_header_raw (31 samples, 0.10%)</title><rect x="55.1648%" y="501" width="0.0995%" height="15" fill="rgb(205,6,39)"/><text x="55.4148%" y="511.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (31 samples, 0.10%)</title><rect x="55.1648%" y="485" width="0.0995%" height="15" fill="rgb(221,32,16)"/><text x="55.4148%" y="495.50"></text></g><g><title>blake3::Hasher::finalize (8 samples, 0.03%)</title><rect x="55.2643%" y="581" width="0.0257%" height="15" fill="rgb(228,144,50)"/><text x="55.5143%" y="591.50"></text></g><g><title>blake3::Hasher::final_output (8 samples, 0.03%)</title><rect x="55.2643%" y="565" width="0.0257%" height="15" fill="rgb(229,201,53)"/><text x="55.5143%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (78 samples, 0.25%)</title><rect x="55.0685%" y="709" width="0.2503%" height="15" fill="rgb(249,153,27)"/><text x="55.3185%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (17 samples, 0.05%)</title><rect x="55.2643%" y="693" width="0.0546%" height="15" fill="rgb(227,106,25)"/><text x="55.5143%" y="703.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.05%)</title><rect x="55.2643%" y="677" width="0.0546%" height="15" fill="rgb(230,65,29)"/><text x="55.5143%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.05%)</title><rect x="55.2643%" y="661" width="0.0546%" height="15" fill="rgb(221,57,46)"/><text x="55.5143%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.05%)</title><rect x="55.2643%" y="645" width="0.0546%" height="15" fill="rgb(229,161,17)"/><text x="55.5143%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.05%)</title><rect x="55.2643%" y="629" width="0.0546%" height="15" fill="rgb(222,213,11)"/><text x="55.5143%" y="639.50"></text></g><g><title>ate::event::EventData::as_header_raw (17 samples, 0.05%)</title><rect x="55.2643%" y="613" width="0.0546%" height="15" fill="rgb(235,35,13)"/><text x="55.5143%" y="623.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (17 samples, 0.05%)</title><rect x="55.2643%" y="597" width="0.0546%" height="15" fill="rgb(233,158,34)"/><text x="55.5143%" y="607.50"></text></g><g><title>blake3::Hasher::update (9 samples, 0.03%)</title><rect x="55.2899%" y="581" width="0.0289%" height="15" fill="rgb(215,151,48)"/><text x="55.5399%" y="591.50"></text></g><g><title>blake3::ChunkState::update (9 samples, 0.03%)</title><rect x="55.2899%" y="565" width="0.0289%" height="15" fill="rgb(229,84,14)"/><text x="55.5399%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (6 samples, 0.02%)</title><rect x="55.3220%" y="709" width="0.0193%" height="15" fill="rgb(229,68,14)"/><text x="55.5720%" y="719.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="55.3220%" y="693" width="0.0193%" height="15" fill="rgb(243,106,26)"/><text x="55.5720%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.02%)</title><rect x="55.3220%" y="677" width="0.0193%" height="15" fill="rgb(206,45,38)"/><text x="55.5720%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.02%)</title><rect x="55.3220%" y="661" width="0.0193%" height="15" fill="rgb(226,6,15)"/><text x="55.5720%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.02%)</title><rect x="55.3220%" y="645" width="0.0193%" height="15" fill="rgb(232,22,54)"/><text x="55.5720%" y="655.50"></text></g><g><title>ate::event::EventData::as_header_raw (6 samples, 0.02%)</title><rect x="55.3220%" y="629" width="0.0193%" height="15" fill="rgb(229,222,32)"/><text x="55.5720%" y="639.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (6 samples, 0.02%)</title><rect x="55.3220%" y="613" width="0.0193%" height="15" fill="rgb(228,62,29)"/><text x="55.5720%" y="623.50"></text></g><g><title>blake3::Hasher::update (6 samples, 0.02%)</title><rect x="55.3220%" y="597" width="0.0193%" height="15" fill="rgb(251,103,34)"/><text x="55.5720%" y="607.50"></text></g><g><title>blake3::Hasher::merge_cv_stack (6 samples, 0.02%)</title><rect x="55.3220%" y="581" width="0.0193%" height="15" fill="rgb(233,12,30)"/><text x="55.5720%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (41 samples, 0.13%)</title><rect x="55.3541%" y="533" width="0.1316%" height="15" fill="rgb(238,52,0)"/><text x="55.6041%" y="543.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (48 samples, 0.15%)</title><rect x="55.3445%" y="709" width="0.1540%" height="15" fill="rgb(223,98,5)"/><text x="55.5945%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (48 samples, 0.15%)</title><rect x="55.3445%" y="693" width="0.1540%" height="15" fill="rgb(228,75,37)"/><text x="55.5945%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (48 samples, 0.15%)</title><rect x="55.3445%" y="677" width="0.1540%" height="15" fill="rgb(205,115,49)"/><text x="55.5945%" y="687.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (48 samples, 0.15%)</title><rect x="55.3445%" y="661" width="0.1540%" height="15" fill="rgb(250,154,43)"/><text x="55.5945%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (48 samples, 0.15%)</title><rect x="55.3445%" y="645" width="0.1540%" height="15" fill="rgb(226,43,29)"/><text x="55.5945%" y="655.50"></text></g><g><title>std::panic::catch_unwind (48 samples, 0.15%)</title><rect x="55.3445%" y="629" width="0.1540%" height="15" fill="rgb(249,228,39)"/><text x="55.5945%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (48 samples, 0.15%)</title><rect x="55.3445%" y="613" width="0.1540%" height="15" fill="rgb(216,79,43)"/><text x="55.5945%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (48 samples, 0.15%)</title><rect x="55.3445%" y="597" width="0.1540%" height="15" fill="rgb(228,95,12)"/><text x="55.5945%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (48 samples, 0.15%)</title><rect x="55.3445%" y="581" width="0.1540%" height="15" fill="rgb(249,221,15)"/><text x="55.5945%" y="591.50"></text></g><g><title>ate::event::EventData::as_header_raw (48 samples, 0.15%)</title><rect x="55.3445%" y="565" width="0.1540%" height="15" fill="rgb(233,34,13)"/><text x="55.5945%" y="575.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (48 samples, 0.15%)</title><rect x="55.3445%" y="549" width="0.1540%" height="15" fill="rgb(214,103,39)"/><text x="55.5945%" y="559.50"></text></g><g><title>blake3::Hasher::new (4 samples, 0.01%)</title><rect x="55.4857%" y="533" width="0.0128%" height="15" fill="rgb(251,126,39)"/><text x="55.7357%" y="543.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (6 samples, 0.02%)</title><rect x="55.4985%" y="709" width="0.0193%" height="15" fill="rgb(214,216,36)"/><text x="55.7485%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.02%)</title><rect x="55.4985%" y="693" width="0.0193%" height="15" fill="rgb(220,221,8)"/><text x="55.7485%" y="703.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6 samples, 0.02%)</title><rect x="55.4985%" y="677" width="0.0193%" height="15" fill="rgb(240,216,3)"/><text x="55.7485%" y="687.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (6 samples, 0.02%)</title><rect x="55.4985%" y="661" width="0.0193%" height="15" fill="rgb(232,218,17)"/><text x="55.7485%" y="671.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="55.4985%" y="645" width="0.0193%" height="15" fill="rgb(229,163,45)"/><text x="55.7485%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.02%)</title><rect x="55.4985%" y="629" width="0.0193%" height="15" fill="rgb(231,110,42)"/><text x="55.7485%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (9 samples, 0.03%)</title><rect x="55.5178%" y="709" width="0.0289%" height="15" fill="rgb(208,170,48)"/><text x="55.7678%" y="719.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (9 samples, 0.03%)</title><rect x="55.5178%" y="693" width="0.0289%" height="15" fill="rgb(239,116,25)"/><text x="55.7678%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (9 samples, 0.03%)</title><rect x="55.5178%" y="677" width="0.0289%" height="15" fill="rgb(219,200,50)"/><text x="55.7678%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (9 samples, 0.03%)</title><rect x="55.5178%" y="661" width="0.0289%" height="15" fill="rgb(245,200,0)"/><text x="55.7678%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.03%)</title><rect x="55.5178%" y="645" width="0.0289%" height="15" fill="rgb(245,119,33)"/><text x="55.7678%" y="655.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (9 samples, 0.03%)</title><rect x="55.5178%" y="629" width="0.0289%" height="15" fill="rgb(231,125,12)"/><text x="55.7678%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (9 samples, 0.03%)</title><rect x="55.5178%" y="613" width="0.0289%" height="15" fill="rgb(216,96,41)"/><text x="55.7678%" y="623.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.03%)</title><rect x="55.5178%" y="597" width="0.0289%" height="15" fill="rgb(248,43,45)"/><text x="55.7678%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.03%)</title><rect x="55.5178%" y="581" width="0.0289%" height="15" fill="rgb(217,222,7)"/><text x="55.7678%" y="591.50"></text></g><g><title>ate::event::EventData::as_header (7 samples, 0.02%)</title><rect x="55.5242%" y="565" width="0.0225%" height="15" fill="rgb(233,28,6)"/><text x="55.7742%" y="575.50"></text></g><g><title>ate::event::EventData::as_header_raw (7 samples, 0.02%)</title><rect x="55.5242%" y="549" width="0.0225%" height="15" fill="rgb(231,218,15)"/><text x="55.7742%" y="559.50"></text></g><g><title>ate::crypto::Hash::from_bytes_twice (7 samples, 0.02%)</title><rect x="55.5242%" y="533" width="0.0225%" height="15" fill="rgb(226,171,48)"/><text x="55.7742%" y="543.50"></text></g><g><title>blake3::Hasher::finalize (7 samples, 0.02%)</title><rect x="55.5242%" y="517" width="0.0225%" height="15" fill="rgb(235,201,9)"/><text x="55.7742%" y="527.50"></text></g><g><title>blake3::Hasher::final_output (7 samples, 0.02%)</title><rect x="55.5242%" y="501" width="0.0225%" height="15" fill="rgb(217,80,15)"/><text x="55.7742%" y="511.50"></text></g><g><title>[unknown] (552 samples, 1.77%)</title><rect x="53.7785%" y="725" width="1.7713%" height="15" fill="rgb(219,152,8)"/><text x="54.0285%" y="735.50">[..</text></g><g><title>ret_from_fork (5 samples, 0.02%)</title><rect x="55.5499%" y="709" width="0.0160%" height="15" fill="rgb(243,107,38)"/><text x="55.7999%" y="719.50"></text></g><g><title>schedule_tail (4 samples, 0.01%)</title><rect x="55.5531%" y="693" width="0.0128%" height="15" fill="rgb(231,17,5)"/><text x="55.8031%" y="703.50"></text></g><g><title>finish_task_switch (4 samples, 0.01%)</title><rect x="55.5531%" y="677" width="0.0128%" height="15" fill="rgb(209,25,54)"/><text x="55.8031%" y="687.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.01%)</title><rect x="55.5531%" y="661" width="0.0128%" height="15" fill="rgb(219,0,2)"/><text x="55.8031%" y="671.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (4 samples, 0.01%)</title><rect x="55.5531%" y="645" width="0.0128%" height="15" fill="rgb(246,9,5)"/><text x="55.8031%" y="655.50"></text></g><g><title>native_write_msr (4 samples, 0.01%)</title><rect x="55.5531%" y="629" width="0.0128%" height="15" fill="rgb(226,159,4)"/><text x="55.8031%" y="639.50"></text></g><g><title>free_unref_page_list (4 samples, 0.01%)</title><rect x="55.5723%" y="485" width="0.0128%" height="15" fill="rgb(219,175,34)"/><text x="55.8223%" y="495.50"></text></g><g><title>tlb_finish_mmu (9 samples, 0.03%)</title><rect x="55.5659%" y="517" width="0.0289%" height="15" fill="rgb(236,10,46)"/><text x="55.8159%" y="527.50"></text></g><g><title>release_pages (9 samples, 0.03%)</title><rect x="55.5659%" y="501" width="0.0289%" height="15" fill="rgb(240,211,16)"/><text x="55.8159%" y="511.50"></text></g><g><title>page_remove_rmap (5 samples, 0.02%)</title><rect x="55.6204%" y="485" width="0.0160%" height="15" fill="rgb(205,3,43)"/><text x="55.8704%" y="495.50"></text></g><g><title>free_pcppages_bulk (5 samples, 0.02%)</title><rect x="55.6525%" y="437" width="0.0160%" height="15" fill="rgb(245,7,22)"/><text x="55.9025%" y="447.50"></text></g><g><title>__free_one_page (5 samples, 0.02%)</title><rect x="55.6525%" y="421" width="0.0160%" height="15" fill="rgb(239,132,32)"/><text x="55.9025%" y="431.50"></text></g><g><title>free_unref_page_list (6 samples, 0.02%)</title><rect x="55.6525%" y="453" width="0.0193%" height="15" fill="rgb(228,202,34)"/><text x="55.9025%" y="463.50"></text></g><g><title>__GI_munmap (35 samples, 0.11%)</title><rect x="55.5659%" y="629" width="0.1123%" height="15" fill="rgb(254,200,22)"/><text x="55.8159%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (35 samples, 0.11%)</title><rect x="55.5659%" y="613" width="0.1123%" height="15" fill="rgb(219,10,39)"/><text x="55.8159%" y="623.50"></text></g><g><title>do_syscall_64 (35 samples, 0.11%)</title><rect x="55.5659%" y="597" width="0.1123%" height="15" fill="rgb(226,210,39)"/><text x="55.8159%" y="607.50"></text></g><g><title>__x64_sys_munmap (35 samples, 0.11%)</title><rect x="55.5659%" y="581" width="0.1123%" height="15" fill="rgb(208,219,16)"/><text x="55.8159%" y="591.50"></text></g><g><title>__vm_munmap (35 samples, 0.11%)</title><rect x="55.5659%" y="565" width="0.1123%" height="15" fill="rgb(216,158,51)"/><text x="55.8159%" y="575.50"></text></g><g><title>__do_munmap (35 samples, 0.11%)</title><rect x="55.5659%" y="549" width="0.1123%" height="15" fill="rgb(233,14,44)"/><text x="55.8159%" y="559.50"></text></g><g><title>unmap_region (35 samples, 0.11%)</title><rect x="55.5659%" y="533" width="0.1123%" height="15" fill="rgb(237,97,39)"/><text x="55.8159%" y="543.50"></text></g><g><title>unmap_vmas (26 samples, 0.08%)</title><rect x="55.5948%" y="517" width="0.0834%" height="15" fill="rgb(218,198,43)"/><text x="55.8448%" y="527.50"></text></g><g><title>unmap_page_range (26 samples, 0.08%)</title><rect x="55.5948%" y="501" width="0.0834%" height="15" fill="rgb(231,104,20)"/><text x="55.8448%" y="511.50"></text></g><g><title>tlb_flush_mmu (13 samples, 0.04%)</title><rect x="55.6365%" y="485" width="0.0417%" height="15" fill="rgb(254,36,13)"/><text x="55.8865%" y="495.50"></text></g><g><title>release_pages (12 samples, 0.04%)</title><rect x="55.6397%" y="469" width="0.0385%" height="15" fill="rgb(248,14,50)"/><text x="55.8897%" y="479.50"></text></g><g><title>heap_trim (47 samples, 0.15%)</title><rect x="55.5659%" y="645" width="0.1508%" height="15" fill="rgb(217,107,29)"/><text x="55.8159%" y="655.50"></text></g><g><title>shrink_heap (12 samples, 0.04%)</title><rect x="55.6782%" y="629" width="0.0385%" height="15" fill="rgb(251,169,33)"/><text x="55.9282%" y="639.50"></text></g><g><title>__GI_madvise (12 samples, 0.04%)</title><rect x="55.6782%" y="613" width="0.0385%" height="15" fill="rgb(217,108,32)"/><text x="55.9282%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.04%)</title><rect x="55.6782%" y="597" width="0.0385%" height="15" fill="rgb(219,66,42)"/><text x="55.9282%" y="607.50"></text></g><g><title>do_syscall_64 (12 samples, 0.04%)</title><rect x="55.6782%" y="581" width="0.0385%" height="15" fill="rgb(206,180,7)"/><text x="55.9282%" y="591.50"></text></g><g><title>__x64_sys_madvise (12 samples, 0.04%)</title><rect x="55.6782%" y="565" width="0.0385%" height="15" fill="rgb(208,226,31)"/><text x="55.9282%" y="575.50"></text></g><g><title>do_madvise.part.0 (12 samples, 0.04%)</title><rect x="55.6782%" y="549" width="0.0385%" height="15" fill="rgb(218,26,49)"/><text x="55.9282%" y="559.50"></text></g><g><title>zap_page_range (12 samples, 0.04%)</title><rect x="55.6782%" y="533" width="0.0385%" height="15" fill="rgb(233,197,48)"/><text x="55.9282%" y="543.50"></text></g><g><title>unmap_page_range (9 samples, 0.03%)</title><rect x="55.6878%" y="517" width="0.0289%" height="15" fill="rgb(252,181,51)"/><text x="55.9378%" y="527.50"></text></g><g><title>tlb_flush_mmu (6 samples, 0.02%)</title><rect x="55.6975%" y="501" width="0.0193%" height="15" fill="rgb(253,90,19)"/><text x="55.9475%" y="511.50"></text></g><g><title>release_pages (6 samples, 0.02%)</title><rect x="55.6975%" y="485" width="0.0193%" height="15" fill="rgb(215,171,30)"/><text x="55.9475%" y="495.50"></text></g><g><title>__malloc_arena_thread_freeres (48 samples, 0.15%)</title><rect x="55.5659%" y="693" width="0.1540%" height="15" fill="rgb(214,222,9)"/><text x="55.8159%" y="703.50"></text></g><g><title>tcache_thread_shutdown (48 samples, 0.15%)</title><rect x="55.5659%" y="677" width="0.1540%" height="15" fill="rgb(223,3,22)"/><text x="55.8159%" y="687.50"></text></g><g><title>_int_free (48 samples, 0.15%)</title><rect x="55.5659%" y="661" width="0.1540%" height="15" fill="rgb(225,196,46)"/><text x="55.8159%" y="671.50"></text></g><g><title>advise_stack_range (6 samples, 0.02%)</title><rect x="55.7199%" y="693" width="0.0193%" height="15" fill="rgb(209,110,37)"/><text x="55.9699%" y="703.50"></text></g><g><title>__GI_madvise (6 samples, 0.02%)</title><rect x="55.7199%" y="677" width="0.0193%" height="15" fill="rgb(249,89,12)"/><text x="55.9699%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.02%)</title><rect x="55.7199%" y="661" width="0.0193%" height="15" fill="rgb(226,27,33)"/><text x="55.9699%" y="671.50"></text></g><g><title>do_syscall_64 (6 samples, 0.02%)</title><rect x="55.7199%" y="645" width="0.0193%" height="15" fill="rgb(213,82,22)"/><text x="55.9699%" y="655.50"></text></g><g><title>__x64_sys_madvise (6 samples, 0.02%)</title><rect x="55.7199%" y="629" width="0.0193%" height="15" fill="rgb(248,140,0)"/><text x="55.9699%" y="639.50"></text></g><g><title>do_madvise.part.0 (6 samples, 0.02%)</title><rect x="55.7199%" y="613" width="0.0193%" height="15" fill="rgb(228,106,3)"/><text x="55.9699%" y="623.50"></text></g><g><title>rwsem_down_read_slowpath (6 samples, 0.02%)</title><rect x="55.7199%" y="597" width="0.0193%" height="15" fill="rgb(209,23,37)"/><text x="55.9699%" y="607.50"></text></g><g><title>schedule (6 samples, 0.02%)</title><rect x="55.7199%" y="581" width="0.0193%" height="15" fill="rgb(241,93,50)"/><text x="55.9699%" y="591.50"></text></g><g><title>__schedule (6 samples, 0.02%)</title><rect x="55.7199%" y="565" width="0.0193%" height="15" fill="rgb(253,46,43)"/><text x="55.9699%" y="575.50"></text></g><g><title>finish_task_switch (6 samples, 0.02%)</title><rect x="55.7199%" y="549" width="0.0193%" height="15" fill="rgb(226,206,43)"/><text x="55.9699%" y="559.50"></text></g><g><title>__perf_event_task_sched_in (6 samples, 0.02%)</title><rect x="55.7199%" y="533" width="0.0193%" height="15" fill="rgb(217,54,7)"/><text x="55.9699%" y="543.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (6 samples, 0.02%)</title><rect x="55.7199%" y="517" width="0.0193%" height="15" fill="rgb(223,5,52)"/><text x="55.9699%" y="527.50"></text></g><g><title>native_write_msr (6 samples, 0.02%)</title><rect x="55.7199%" y="501" width="0.0193%" height="15" fill="rgb(206,52,46)"/><text x="55.9699%" y="511.50"></text></g><g><title>__perf_event_task_sched_in (20 samples, 0.06%)</title><rect x="55.7552%" y="421" width="0.0642%" height="15" fill="rgb(253,136,11)"/><text x="56.0052%" y="431.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (20 samples, 0.06%)</title><rect x="55.7552%" y="405" width="0.0642%" height="15" fill="rgb(208,106,33)"/><text x="56.0052%" y="415.50"></text></g><g><title>native_write_msr (20 samples, 0.06%)</title><rect x="55.7552%" y="389" width="0.0642%" height="15" fill="rgb(206,54,4)"/><text x="56.0052%" y="399.50"></text></g><g><title>finish_task_switch (21 samples, 0.07%)</title><rect x="55.7552%" y="437" width="0.0674%" height="15" fill="rgb(213,3,15)"/><text x="56.0052%" y="447.50"></text></g><g><title>io_schedule (23 samples, 0.07%)</title><rect x="55.7520%" y="485" width="0.0738%" height="15" fill="rgb(252,211,39)"/><text x="56.0020%" y="495.50"></text></g><g><title>schedule (22 samples, 0.07%)</title><rect x="55.7552%" y="469" width="0.0706%" height="15" fill="rgb(223,6,36)"/><text x="56.0052%" y="479.50"></text></g><g><title>__schedule (22 samples, 0.07%)</title><rect x="55.7552%" y="453" width="0.0706%" height="15" fill="rgb(252,169,45)"/><text x="56.0052%" y="463.50"></text></g><g><title>wait_on_page_bit_common (24 samples, 0.08%)</title><rect x="55.7520%" y="501" width="0.0770%" height="15" fill="rgb(212,48,26)"/><text x="56.0020%" y="511.50"></text></g><g><title>__do_fault (27 samples, 0.09%)</title><rect x="55.7488%" y="549" width="0.0866%" height="15" fill="rgb(251,102,48)"/><text x="55.9988%" y="559.50"></text></g><g><title>ext4_filemap_fault (27 samples, 0.09%)</title><rect x="55.7488%" y="533" width="0.0866%" height="15" fill="rgb(243,208,16)"/><text x="55.9988%" y="543.50"></text></g><g><title>filemap_fault (27 samples, 0.09%)</title><rect x="55.7488%" y="517" width="0.0866%" height="15" fill="rgb(219,96,24)"/><text x="55.9988%" y="527.50"></text></g><g><title>asm_exc_page_fault (29 samples, 0.09%)</title><rect x="55.7488%" y="613" width="0.0931%" height="15" fill="rgb(219,33,29)"/><text x="55.9988%" y="623.50"></text></g><g><title>exc_page_fault (29 samples, 0.09%)</title><rect x="55.7488%" y="597" width="0.0931%" height="15" fill="rgb(223,176,5)"/><text x="55.9988%" y="607.50"></text></g><g><title>do_user_addr_fault (29 samples, 0.09%)</title><rect x="55.7488%" y="581" width="0.0931%" height="15" fill="rgb(228,140,14)"/><text x="55.9988%" y="591.50"></text></g><g><title>handle_mm_fault (29 samples, 0.09%)</title><rect x="55.7488%" y="565" width="0.0931%" height="15" fill="rgb(217,179,31)"/><text x="55.9988%" y="575.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (5 samples, 0.02%)</title><rect x="56.4227%" y="581" width="0.0160%" height="15" fill="rgb(230,9,30)"/><text x="56.6727%" y="591.50"></text></g><g><title>std::time::Instant::duration_since (4 samples, 0.01%)</title><rect x="56.4259%" y="565" width="0.0128%" height="15" fill="rgb(230,136,20)"/><text x="56.6759%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (4 samples, 0.01%)</title><rect x="56.4259%" y="549" width="0.0128%" height="15" fill="rgb(215,210,22)"/><text x="56.6759%" y="559.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (4 samples, 0.01%)</title><rect x="56.4259%" y="533" width="0.0128%" height="15" fill="rgb(218,43,5)"/><text x="56.6759%" y="543.50"></text></g><g><title>std::time::Instant::now (11 samples, 0.04%)</title><rect x="56.4419%" y="581" width="0.0353%" height="15" fill="rgb(216,11,5)"/><text x="56.6919%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (11 samples, 0.04%)</title><rect x="56.4419%" y="565" width="0.0353%" height="15" fill="rgb(209,82,29)"/><text x="56.6919%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::now (11 samples, 0.04%)</title><rect x="56.4419%" y="549" width="0.0353%" height="15" fill="rgb(244,115,12)"/><text x="56.6919%" y="559.50"></text></g><g><title>__GI___clock_gettime (10 samples, 0.03%)</title><rect x="56.4451%" y="533" width="0.0321%" height="15" fill="rgb(222,82,18)"/><text x="56.6951%" y="543.50"></text></g><g><title>__vdso_clock_gettime (8 samples, 0.03%)</title><rect x="56.4516%" y="517" width="0.0257%" height="15" fill="rgb(249,227,8)"/><text x="56.7016%" y="527.50"></text></g><g><title>[[vdso]] (5 samples, 0.02%)</title><rect x="56.4612%" y="501" width="0.0160%" height="15" fill="rgb(253,141,45)"/><text x="56.7112%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (43 samples, 0.14%)</title><rect x="56.5478%" y="565" width="0.1380%" height="15" fill="rgb(234,184,4)"/><text x="56.7978%" y="575.50"></text></g><g><title>enqueue_hrtimer (41 samples, 0.13%)</title><rect x="57.0548%" y="453" width="0.1316%" height="15" fill="rgb(218,194,23)"/><text x="57.3048%" y="463.50"></text></g><g><title>timerqueue_add (40 samples, 0.13%)</title><rect x="57.0580%" y="437" width="0.1284%" height="15" fill="rgb(235,66,41)"/><text x="57.3080%" y="447.50"></text></g><g><title>hrtimer_start_range_ns (60 samples, 0.19%)</title><rect x="57.0324%" y="469" width="0.1925%" height="15" fill="rgb(245,217,1)"/><text x="57.2824%" y="479.50"></text></g><g><title>get_nohz_timer_target (12 samples, 0.04%)</title><rect x="57.1864%" y="453" width="0.0385%" height="15" fill="rgb(229,91,1)"/><text x="57.4364%" y="463.50"></text></g><g><title>plist_add (7 samples, 0.02%)</title><rect x="57.2249%" y="469" width="0.0225%" height="15" fill="rgb(207,101,30)"/><text x="57.4749%" y="479.50"></text></g><g><title>__list_add_valid (4 samples, 0.01%)</title><rect x="57.2345%" y="453" width="0.0128%" height="15" fill="rgb(223,82,49)"/><text x="57.4845%" y="463.50"></text></g><g><title>_raw_spin_lock (6 samples, 0.02%)</title><rect x="57.4303%" y="421" width="0.0193%" height="15" fill="rgb(218,167,17)"/><text x="57.6803%" y="431.50"></text></g><g><title>__perf_event_task_sched_out (25 samples, 0.08%)</title><rect x="57.3950%" y="437" width="0.0802%" height="15" fill="rgb(208,103,14)"/><text x="57.6450%" y="447.50"></text></g><g><title>x86_pmu_disable (8 samples, 0.03%)</title><rect x="57.4495%" y="421" width="0.0257%" height="15" fill="rgb(238,20,8)"/><text x="57.6995%" y="431.50"></text></g><g><title>reweight_entity (9 samples, 0.03%)</title><rect x="57.6357%" y="405" width="0.0289%" height="15" fill="rgb(218,80,54)"/><text x="57.8857%" y="415.50"></text></g><g><title>update_cfs_group (17 samples, 0.05%)</title><rect x="57.6645%" y="405" width="0.0546%" height="15" fill="rgb(240,144,17)"/><text x="57.9145%" y="415.50"></text></g><g><title>__calc_delta (18 samples, 0.06%)</title><rect x="57.7929%" y="389" width="0.0578%" height="15" fill="rgb(245,27,50)"/><text x="58.0429%" y="399.50"></text></g><g><title>__cgroup_account_cputime (5 samples, 0.02%)</title><rect x="57.8507%" y="389" width="0.0160%" height="15" fill="rgb(251,51,7)"/><text x="58.1007%" y="399.50"></text></g><g><title>cpuacct_charge (7 samples, 0.02%)</title><rect x="57.8667%" y="389" width="0.0225%" height="15" fill="rgb(245,217,29)"/><text x="58.1167%" y="399.50"></text></g><g><title>update_curr (56 samples, 0.18%)</title><rect x="57.7191%" y="405" width="0.1797%" height="15" fill="rgb(221,176,29)"/><text x="57.9691%" y="415.50"></text></g><g><title>__update_load_avg_cfs_rq (7 samples, 0.02%)</title><rect x="57.9277%" y="389" width="0.0225%" height="15" fill="rgb(212,180,24)"/><text x="58.1777%" y="399.50"></text></g><g><title>dequeue_entity (122 samples, 0.39%)</title><rect x="57.5779%" y="421" width="0.3915%" height="15" fill="rgb(254,24,2)"/><text x="57.8279%" y="431.50"></text></g><g><title>update_load_avg (22 samples, 0.07%)</title><rect x="57.8988%" y="405" width="0.0706%" height="15" fill="rgb(230,100,2)"/><text x="58.1488%" y="415.50"></text></g><g><title>__update_load_avg_se (6 samples, 0.02%)</title><rect x="57.9501%" y="389" width="0.0193%" height="15" fill="rgb(219,142,25)"/><text x="58.2001%" y="399.50"></text></g><g><title>dequeue_task_fair (152 samples, 0.49%)</title><rect x="57.4880%" y="437" width="0.4878%" height="15" fill="rgb(240,73,43)"/><text x="57.7380%" y="447.50"></text></g><g><title>__perf_event_task_sched_in (93 samples, 0.30%)</title><rect x="58.0913%" y="421" width="0.2984%" height="15" fill="rgb(214,114,15)"/><text x="58.3413%" y="431.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (92 samples, 0.30%)</title><rect x="58.0945%" y="405" width="0.2952%" height="15" fill="rgb(207,130,4)"/><text x="58.3445%" y="415.50"></text></g><g><title>native_write_msr (87 samples, 0.28%)</title><rect x="58.1106%" y="389" width="0.2792%" height="15" fill="rgb(221,25,40)"/><text x="58.3606%" y="399.50"></text></g><g><title>handle_edge_irq (4 samples, 0.01%)</title><rect x="58.3898%" y="373" width="0.0128%" height="15" fill="rgb(241,184,7)"/><text x="58.6398%" y="383.50"></text></g><g><title>handle_irq_event (4 samples, 0.01%)</title><rect x="58.3898%" y="357" width="0.0128%" height="15" fill="rgb(235,159,4)"/><text x="58.6398%" y="367.50"></text></g><g><title>__handle_irq_event_percpu (4 samples, 0.01%)</title><rect x="58.3898%" y="341" width="0.0128%" height="15" fill="rgb(214,87,48)"/><text x="58.6398%" y="351.50"></text></g><g><title>nvme_irq (4 samples, 0.01%)</title><rect x="58.3898%" y="325" width="0.0128%" height="15" fill="rgb(246,198,24)"/><text x="58.6398%" y="335.50"></text></g><g><title>nvme_process_cq (4 samples, 0.01%)</title><rect x="58.3898%" y="309" width="0.0128%" height="15" fill="rgb(209,66,40)"/><text x="58.6398%" y="319.50"></text></g><g><title>asm_call_sysvec_on_stack (5 samples, 0.02%)</title><rect x="58.3898%" y="389" width="0.0160%" height="15" fill="rgb(233,147,39)"/><text x="58.6398%" y="399.50"></text></g><g><title>asm_common_interrupt (6 samples, 0.02%)</title><rect x="58.3898%" y="421" width="0.0193%" height="15" fill="rgb(231,145,52)"/><text x="58.6398%" y="431.50"></text></g><g><title>common_interrupt (6 samples, 0.02%)</title><rect x="58.3898%" y="405" width="0.0193%" height="15" fill="rgb(206,20,26)"/><text x="58.6398%" y="415.50"></text></g><g><title>finish_task_switch (138 samples, 0.44%)</title><rect x="57.9758%" y="437" width="0.4428%" height="15" fill="rgb(238,220,4)"/><text x="58.2258%" y="447.50"></text></g><g><title>pick_next_task_fair (21 samples, 0.07%)</title><rect x="58.4251%" y="437" width="0.0674%" height="15" fill="rgb(252,195,42)"/><text x="58.6751%" y="447.50"></text></g><g><title>newidle_balance (16 samples, 0.05%)</title><rect x="58.4411%" y="421" width="0.0513%" height="15" fill="rgb(209,10,6)"/><text x="58.6911%" y="431.50"></text></g><g><title>pick_next_task_idle (18 samples, 0.06%)</title><rect x="58.4924%" y="437" width="0.0578%" height="15" fill="rgb(229,3,52)"/><text x="58.7424%" y="447.50"></text></g><g><title>__update_idle_core (12 samples, 0.04%)</title><rect x="58.5117%" y="421" width="0.0385%" height="15" fill="rgb(253,49,37)"/><text x="58.7617%" y="431.50"></text></g><g><title>psi_task_change (163 samples, 0.52%)</title><rect x="58.5502%" y="437" width="0.5231%" height="15" fill="rgb(240,103,49)"/><text x="58.8002%" y="447.50"></text></g><g><title>psi_group_change (127 samples, 0.41%)</title><rect x="58.6657%" y="421" width="0.4075%" height="15" fill="rgb(250,182,30)"/><text x="58.9157%" y="431.50"></text></g><g><title>record_times (28 samples, 0.09%)</title><rect x="58.9834%" y="405" width="0.0899%" height="15" fill="rgb(248,8,30)"/><text x="59.2334%" y="415.50"></text></g><g><title>sched_clock_cpu (23 samples, 0.07%)</title><rect x="58.9995%" y="389" width="0.0738%" height="15" fill="rgb(237,120,30)"/><text x="59.2495%" y="399.50"></text></g><g><title>sched_clock (21 samples, 0.07%)</title><rect x="59.0059%" y="373" width="0.0674%" height="15" fill="rgb(221,146,34)"/><text x="59.2559%" y="383.50"></text></g><g><title>native_sched_clock (20 samples, 0.06%)</title><rect x="59.0091%" y="357" width="0.0642%" height="15" fill="rgb(242,55,13)"/><text x="59.2591%" y="367.50"></text></g><g><title>put_prev_task_fair (16 samples, 0.05%)</title><rect x="59.0765%" y="437" width="0.0513%" height="15" fill="rgb(242,112,31)"/><text x="59.3265%" y="447.50"></text></g><g><title>put_prev_entity (11 samples, 0.04%)</title><rect x="59.0925%" y="421" width="0.0353%" height="15" fill="rgb(249,192,27)"/><text x="59.3425%" y="431.50"></text></g><g><title>futex_wait_queue_me (696 samples, 2.23%)</title><rect x="56.9425%" y="485" width="2.2334%" height="15" fill="rgb(208,204,44)"/><text x="57.1925%" y="495.50">f..</text></g><g><title>schedule (601 samples, 1.93%)</title><rect x="57.2474%" y="469" width="1.9286%" height="15" fill="rgb(208,93,54)"/><text x="57.4974%" y="479.50">s..</text></g><g><title>__schedule (598 samples, 1.92%)</title><rect x="57.2570%" y="453" width="1.9189%" height="15" fill="rgb(242,1,31)"/><text x="57.5070%" y="463.50">_..</text></g><g><title>update_rq_clock (14 samples, 0.04%)</title><rect x="59.1310%" y="437" width="0.0449%" height="15" fill="rgb(241,83,25)"/><text x="59.3810%" y="447.50"></text></g><g><title>sched_clock_cpu (8 samples, 0.03%)</title><rect x="59.1503%" y="421" width="0.0257%" height="15" fill="rgb(205,169,50)"/><text x="59.4003%" y="431.50"></text></g><g><title>sched_clock (6 samples, 0.02%)</title><rect x="59.1567%" y="405" width="0.0193%" height="15" fill="rgb(239,186,37)"/><text x="59.4067%" y="415.50"></text></g><g><title>native_sched_clock (6 samples, 0.02%)</title><rect x="59.1567%" y="389" width="0.0193%" height="15" fill="rgb(205,221,10)"/><text x="59.4067%" y="399.50"></text></g><g><title>__get_user_nocheck_4 (16 samples, 0.05%)</title><rect x="59.3364%" y="469" width="0.0513%" height="15" fill="rgb(218,196,15)"/><text x="59.5864%" y="479.50"></text></g><g><title>futex_wait_setup (81 samples, 0.26%)</title><rect x="59.1759%" y="485" width="0.2599%" height="15" fill="rgb(218,196,35)"/><text x="59.4259%" y="495.50"></text></g><g><title>hash_futex (10 samples, 0.03%)</title><rect x="59.4038%" y="469" width="0.0321%" height="15" fill="rgb(233,63,24)"/><text x="59.6538%" y="479.50"></text></g><g><title>__remove_hrtimer (12 samples, 0.04%)</title><rect x="59.4680%" y="453" width="0.0385%" height="15" fill="rgb(225,8,4)"/><text x="59.7180%" y="463.50"></text></g><g><title>timerqueue_del (10 samples, 0.03%)</title><rect x="59.4744%" y="437" width="0.0321%" height="15" fill="rgb(234,105,35)"/><text x="59.7244%" y="447.50"></text></g><g><title>rb_erase (9 samples, 0.03%)</title><rect x="59.4776%" y="421" width="0.0289%" height="15" fill="rgb(236,21,32)"/><text x="59.7276%" y="431.50"></text></g><g><title>hrtimer_cancel (25 samples, 0.08%)</title><rect x="59.4359%" y="485" width="0.0802%" height="15" fill="rgb(228,109,6)"/><text x="59.6859%" y="495.50"></text></g><g><title>hrtimer_try_to_cancel.part.0 (20 samples, 0.06%)</title><rect x="59.4519%" y="469" width="0.0642%" height="15" fill="rgb(229,215,31)"/><text x="59.7019%" y="479.50"></text></g><g><title>hrtimer_init_sleeper (10 samples, 0.03%)</title><rect x="59.5161%" y="485" width="0.0321%" height="15" fill="rgb(221,52,54)"/><text x="59.7661%" y="495.50"></text></g><g><title>__hrtimer_init (9 samples, 0.03%)</title><rect x="59.5193%" y="469" width="0.0289%" height="15" fill="rgb(252,129,43)"/><text x="59.7693%" y="479.50"></text></g><g><title>do_futex (854 samples, 2.74%)</title><rect x="56.8142%" y="517" width="2.7404%" height="15" fill="rgb(248,183,27)"/><text x="57.0642%" y="527.50">do..</text></g><g><title>futex_wait (834 samples, 2.68%)</title><rect x="56.8783%" y="501" width="2.6763%" height="15" fill="rgb(250,0,22)"/><text x="57.1283%" y="511.50">fu..</text></g><g><title>copy_user_enhanced_fast_string (6 samples, 0.02%)</title><rect x="59.6092%" y="485" width="0.0193%" height="15" fill="rgb(213,166,10)"/><text x="59.8592%" y="495.50"></text></g><g><title>_copy_from_user (35 samples, 0.11%)</title><rect x="59.5642%" y="501" width="0.1123%" height="15" fill="rgb(207,163,36)"/><text x="59.8142%" y="511.50"></text></g><g><title>copy_user_generic_unrolled (15 samples, 0.05%)</title><rect x="59.6284%" y="485" width="0.0481%" height="15" fill="rgb(208,122,22)"/><text x="59.8784%" y="495.50"></text></g><g><title>get_timespec64 (39 samples, 0.13%)</title><rect x="59.5546%" y="517" width="0.1251%" height="15" fill="rgb(207,104,49)"/><text x="59.8046%" y="527.50"></text></g><g><title>do_syscall_64 (958 samples, 3.07%)</title><rect x="56.7019%" y="549" width="3.0742%" height="15" fill="rgb(248,211,50)"/><text x="56.9519%" y="559.50">do_..</text></g><g><title>__x64_sys_futex (947 samples, 3.04%)</title><rect x="56.7372%" y="533" width="3.0389%" height="15" fill="rgb(217,13,45)"/><text x="56.9872%" y="543.50">__x..</text></g><g><title>ktime_get (30 samples, 0.10%)</title><rect x="59.6797%" y="517" width="0.0963%" height="15" fill="rgb(211,216,49)"/><text x="59.9297%" y="527.50"></text></g><g><title>read_tsc (19 samples, 0.06%)</title><rect x="59.7150%" y="501" width="0.0610%" height="15" fill="rgb(221,58,53)"/><text x="59.9650%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,138 samples, 3.65%)</title><rect x="56.6858%" y="565" width="3.6518%" height="15" fill="rgb(220,112,41)"/><text x="56.9358%" y="575.50">entr..</text></g><g><title>syscall_exit_to_user_mode (175 samples, 0.56%)</title><rect x="59.7760%" y="549" width="0.5616%" height="15" fill="rgb(236,38,28)"/><text x="60.0260%" y="559.50"></text></g><g><title>exit_to_user_mode_prepare (34 samples, 0.11%)</title><rect x="60.2285%" y="533" width="0.1091%" height="15" fill="rgb(227,195,22)"/><text x="60.4785%" y="543.50"></text></g><g><title>switch_fpu_return (27 samples, 0.09%)</title><rect x="60.2509%" y="517" width="0.0866%" height="15" fill="rgb(214,55,33)"/><text x="60.5009%" y="527.50"></text></g><g><title>copy_kernel_to_fpregs (8 samples, 0.03%)</title><rect x="60.3119%" y="501" width="0.0257%" height="15" fill="rgb(248,80,13)"/><text x="60.5619%" y="511.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1,383 samples, 4.44%)</title><rect x="56.0633%" y="597" width="4.4380%" height="15" fill="rgb(238,52,6)"/><text x="56.3133%" y="607.50">parki..</text></g><g><title>syscall (1,254 samples, 4.02%)</title><rect x="56.4772%" y="581" width="4.0240%" height="15" fill="rgb(224,198,47)"/><text x="56.7272%" y="591.50">sysc..</text></g><g><title>syscall_return_via_sysret (51 samples, 0.16%)</title><rect x="60.3376%" y="565" width="0.1637%" height="15" fill="rgb(233,171,20)"/><text x="60.5876%" y="575.50"></text></g><g><title>std::time::Instant::now (8 samples, 0.03%)</title><rect x="60.5012%" y="597" width="0.0257%" height="15" fill="rgb(241,30,25)"/><text x="60.7512%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (8 samples, 0.03%)</title><rect x="60.5012%" y="581" width="0.0257%" height="15" fill="rgb(207,171,38)"/><text x="60.7512%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::now (8 samples, 0.03%)</title><rect x="60.5012%" y="565" width="0.0257%" height="15" fill="rgb(234,70,1)"/><text x="60.7512%" y="575.50"></text></g><g><title>__GI___clock_gettime (7 samples, 0.02%)</title><rect x="60.5044%" y="549" width="0.0225%" height="15" fill="rgb(232,178,18)"/><text x="60.7544%" y="559.50"></text></g><g><title>__vdso_clock_gettime (7 samples, 0.02%)</title><rect x="60.5044%" y="533" width="0.0225%" height="15" fill="rgb(241,78,40)"/><text x="60.7544%" y="543.50"></text></g><g><title>pick_next_task_fair (11 samples, 0.04%)</title><rect x="60.6938%" y="373" width="0.0353%" height="15" fill="rgb(222,35,25)"/><text x="60.9438%" y="383.50"></text></g><g><title>update_curr (6 samples, 0.02%)</title><rect x="60.7098%" y="357" width="0.0193%" height="15" fill="rgb(207,92,16)"/><text x="60.9598%" y="367.50"></text></g><g><title>do_syscall_64 (19 samples, 0.06%)</title><rect x="60.6745%" y="437" width="0.0610%" height="15" fill="rgb(216,59,51)"/><text x="60.9245%" y="447.50"></text></g><g><title>__x64_sys_sched_yield (19 samples, 0.06%)</title><rect x="60.6745%" y="421" width="0.0610%" height="15" fill="rgb(213,80,28)"/><text x="60.9245%" y="431.50"></text></g><g><title>schedule (17 samples, 0.05%)</title><rect x="60.6809%" y="405" width="0.0546%" height="15" fill="rgb(220,93,7)"/><text x="60.9309%" y="415.50"></text></g><g><title>__schedule (17 samples, 0.05%)</title><rect x="60.6809%" y="389" width="0.0546%" height="15" fill="rgb(225,24,44)"/><text x="60.9309%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (32 samples, 0.10%)</title><rect x="60.6745%" y="453" width="0.1027%" height="15" fill="rgb(243,74,40)"/><text x="60.9245%" y="463.50"></text></g><g><title>syscall_exit_to_user_mode (13 samples, 0.04%)</title><rect x="60.7355%" y="437" width="0.0417%" height="15" fill="rgb(228,39,7)"/><text x="60.9855%" y="447.50"></text></g><g><title>__GI___sched_yield (35 samples, 0.11%)</title><rect x="60.6713%" y="469" width="0.1123%" height="15" fill="rgb(227,79,8)"/><text x="60.9213%" y="479.50"></text></g><g><title>dequeue_entity (9 samples, 0.03%)</title><rect x="60.8542%" y="293" width="0.0289%" height="15" fill="rgb(236,58,11)"/><text x="61.1042%" y="303.50"></text></g><g><title>dequeue_task_fair (12 samples, 0.04%)</title><rect x="60.8478%" y="309" width="0.0385%" height="15" fill="rgb(249,63,35)"/><text x="61.0978%" y="319.50"></text></g><g><title>__perf_event_task_sched_in (110 samples, 0.35%)</title><rect x="60.8863%" y="293" width="0.3530%" height="15" fill="rgb(252,114,16)"/><text x="61.1363%" y="303.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (109 samples, 0.35%)</title><rect x="60.8895%" y="277" width="0.3498%" height="15" fill="rgb(254,151,24)"/><text x="61.1395%" y="287.50"></text></g><g><title>native_write_msr (109 samples, 0.35%)</title><rect x="60.8895%" y="261" width="0.3498%" height="15" fill="rgb(253,54,39)"/><text x="61.1395%" y="271.50"></text></g><g><title>finish_task_switch (111 samples, 0.36%)</title><rect x="60.8863%" y="309" width="0.3562%" height="15" fill="rgb(243,25,45)"/><text x="61.1363%" y="319.50"></text></g><g><title>psi_task_change (8 samples, 0.03%)</title><rect x="61.2425%" y="309" width="0.0257%" height="15" fill="rgb(234,134,9)"/><text x="61.4925%" y="319.50"></text></g><g><title>psi_group_change (7 samples, 0.02%)</title><rect x="61.2457%" y="293" width="0.0225%" height="15" fill="rgb(227,166,31)"/><text x="61.4957%" y="303.50"></text></g><g><title>record_times (4 samples, 0.01%)</title><rect x="61.2553%" y="277" width="0.0128%" height="15" fill="rgb(245,143,41)"/><text x="61.5053%" y="287.50"></text></g><g><title>futex_wait_queue_me (137 samples, 0.44%)</title><rect x="60.8318%" y="357" width="0.4396%" height="15" fill="rgb(238,181,32)"/><text x="61.0818%" y="367.50"></text></g><g><title>schedule (135 samples, 0.43%)</title><rect x="60.8382%" y="341" width="0.4332%" height="15" fill="rgb(224,113,18)"/><text x="61.0882%" y="351.50"></text></g><g><title>__schedule (135 samples, 0.43%)</title><rect x="60.8382%" y="325" width="0.4332%" height="15" fill="rgb(240,229,28)"/><text x="61.0882%" y="335.50"></text></g><g><title>do_syscall_64 (142 samples, 0.46%)</title><rect x="60.8221%" y="421" width="0.4557%" height="15" fill="rgb(250,185,3)"/><text x="61.0721%" y="431.50"></text></g><g><title>__x64_sys_futex (141 samples, 0.45%)</title><rect x="60.8253%" y="405" width="0.4525%" height="15" fill="rgb(212,59,25)"/><text x="61.0753%" y="415.50"></text></g><g><title>do_futex (141 samples, 0.45%)</title><rect x="60.8253%" y="389" width="0.4525%" height="15" fill="rgb(221,87,20)"/><text x="61.0753%" y="399.50"></text></g><g><title>futex_wait (140 samples, 0.45%)</title><rect x="60.8285%" y="373" width="0.4493%" height="15" fill="rgb(213,74,28)"/><text x="61.0785%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (154 samples, 0.49%)</title><rect x="60.8157%" y="437" width="0.4942%" height="15" fill="rgb(224,132,34)"/><text x="61.0657%" y="447.50"></text></g><g><title>syscall_exit_to_user_mode (10 samples, 0.03%)</title><rect x="61.2778%" y="421" width="0.0321%" height="15" fill="rgb(222,101,24)"/><text x="61.5278%" y="431.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (166 samples, 0.53%)</title><rect x="60.7836%" y="469" width="0.5327%" height="15" fill="rgb(254,142,4)"/><text x="61.0336%" y="479.50"></text></g><g><title>syscall (157 samples, 0.50%)</title><rect x="60.8125%" y="453" width="0.5038%" height="15" fill="rgb(230,229,49)"/><text x="61.0625%" y="463.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (207 samples, 0.66%)</title><rect x="60.6585%" y="501" width="0.6642%" height="15" fill="rgb(238,70,47)"/><text x="60.9085%" y="511.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (207 samples, 0.66%)</title><rect x="60.6585%" y="485" width="0.6642%" height="15" fill="rgb(231,160,17)"/><text x="60.9085%" y="495.50"></text></g><g><title>do_syscall_64 (12 samples, 0.04%)</title><rect x="61.3388%" y="437" width="0.0385%" height="15" fill="rgb(218,68,53)"/><text x="61.5888%" y="447.50"></text></g><g><title>__x64_sys_futex (12 samples, 0.04%)</title><rect x="61.3388%" y="421" width="0.0385%" height="15" fill="rgb(236,111,10)"/><text x="61.5888%" y="431.50"></text></g><g><title>do_futex (12 samples, 0.04%)</title><rect x="61.3388%" y="405" width="0.0385%" height="15" fill="rgb(224,34,41)"/><text x="61.5888%" y="415.50"></text></g><g><title>futex_wake (12 samples, 0.04%)</title><rect x="61.3388%" y="389" width="0.0385%" height="15" fill="rgb(241,118,19)"/><text x="61.5888%" y="399.50"></text></g><g><title>wake_up_q (8 samples, 0.03%)</title><rect x="61.3516%" y="373" width="0.0257%" height="15" fill="rgb(238,129,25)"/><text x="61.6016%" y="383.50"></text></g><g><title>try_to_wake_up (8 samples, 0.03%)</title><rect x="61.3516%" y="357" width="0.0257%" height="15" fill="rgb(238,22,31)"/><text x="61.6016%" y="367.50"></text></g><g><title>ttwu_do_activate (5 samples, 0.02%)</title><rect x="61.3612%" y="341" width="0.0160%" height="15" fill="rgb(222,174,48)"/><text x="61.6112%" y="351.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (16 samples, 0.05%)</title><rect x="61.3323%" y="485" width="0.0513%" height="15" fill="rgb(206,152,40)"/><text x="61.5823%" y="495.50"></text></g><g><title>syscall (15 samples, 0.05%)</title><rect x="61.3356%" y="469" width="0.0481%" height="15" fill="rgb(218,99,54)"/><text x="61.5856%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.05%)</title><rect x="61.3356%" y="453" width="0.0481%" height="15" fill="rgb(220,174,26)"/><text x="61.5856%" y="463.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.02%)</title><rect x="61.9998%" y="309" width="0.0160%" height="15" fill="rgb(245,116,9)"/><text x="62.2498%" y="319.50"></text></g><g><title>handle_mm_fault (5 samples, 0.02%)</title><rect x="61.9998%" y="293" width="0.0160%" height="15" fill="rgb(209,72,35)"/><text x="62.2498%" y="303.50"></text></g><g><title>exc_page_fault (6 samples, 0.02%)</title><rect x="61.9998%" y="325" width="0.0193%" height="15" fill="rgb(226,126,21)"/><text x="62.2498%" y="335.50"></text></g><g><title>asm_exc_page_fault (11 samples, 0.04%)</title><rect x="61.9998%" y="341" width="0.0353%" height="15" fill="rgb(227,192,1)"/><text x="62.2498%" y="351.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.02%)</title><rect x="62.0191%" y="325" width="0.0160%" height="15" fill="rgb(237,180,29)"/><text x="62.2691%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (12 samples, 0.04%)</title><rect x="62.0351%" y="341" width="0.0385%" height="15" fill="rgb(230,197,35)"/><text x="62.2851%" y="351.50"></text></g><g><title>&lt;ate::anti_replay::AntiReplayPlugin as ate::sink::EventSink&gt;::feed (76 samples, 0.24%)</title><rect x="61.8362%" y="405" width="0.2439%" height="15" fill="rgb(246,193,31)"/><text x="62.0862%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (76 samples, 0.24%)</title><rect x="61.8362%" y="389" width="0.2439%" height="15" fill="rgb(241,36,4)"/><text x="62.0862%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (69 samples, 0.22%)</title><rect x="61.8586%" y="373" width="0.2214%" height="15" fill="rgb(241,130,17)"/><text x="62.1086%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (40 samples, 0.13%)</title><rect x="61.9517%" y="357" width="0.1284%" height="15" fill="rgb(206,137,32)"/><text x="62.2017%" y="367.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.02%)</title><rect x="62.0929%" y="389" width="0.0160%" height="15" fill="rgb(237,228,51)"/><text x="62.3429%" y="399.50"></text></g><g><title>&lt;ate::redo::RedoLog as ate::redo::LogWritable&gt;::write (13 samples, 0.04%)</title><rect x="62.0800%" y="405" width="0.0417%" height="15" fill="rgb(243,6,42)"/><text x="62.3300%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.01%)</title><rect x="62.1089%" y="389" width="0.0128%" height="15" fill="rgb(251,74,28)"/><text x="62.3589%" y="399.50"></text></g><g><title>&lt;ate::time::TimestampEnforcer as ate::sink::EventSink&gt;::feed (4 samples, 0.01%)</title><rect x="62.1217%" y="405" width="0.0128%" height="15" fill="rgb(218,20,49)"/><text x="62.3717%" y="415.50"></text></g><g><title>&lt;ate::signature::SignaturePlugin as ate::sink::EventSink&gt;::feed (8 samples, 0.03%)</title><rect x="62.1635%" y="389" width="0.0257%" height="15" fill="rgb(238,28,14)"/><text x="62.4135%" y="399.50"></text></g><g><title>ate::tree::TreeAuthorityPlugin::compute_auth (19 samples, 0.06%)</title><rect x="62.1891%" y="389" width="0.0610%" height="15" fill="rgb(229,40,46)"/><text x="62.4391%" y="399.50"></text></g><g><title>__GI_munmap (7 samples, 0.02%)</title><rect x="62.5164%" y="341" width="0.0225%" height="15" fill="rgb(244,195,20)"/><text x="62.7664%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.02%)</title><rect x="62.5164%" y="325" width="0.0225%" height="15" fill="rgb(253,56,35)"/><text x="62.7664%" y="335.50"></text></g><g><title>do_syscall_64 (7 samples, 0.02%)</title><rect x="62.5164%" y="309" width="0.0225%" height="15" fill="rgb(210,149,44)"/><text x="62.7664%" y="319.50"></text></g><g><title>__x64_sys_munmap (7 samples, 0.02%)</title><rect x="62.5164%" y="293" width="0.0225%" height="15" fill="rgb(240,135,12)"/><text x="62.7664%" y="303.50"></text></g><g><title>__vm_munmap (7 samples, 0.02%)</title><rect x="62.5164%" y="277" width="0.0225%" height="15" fill="rgb(251,24,50)"/><text x="62.7664%" y="287.50"></text></g><g><title>__do_munmap (7 samples, 0.02%)</title><rect x="62.5164%" y="261" width="0.0225%" height="15" fill="rgb(243,200,47)"/><text x="62.7664%" y="271.50"></text></g><g><title>unmap_region (7 samples, 0.02%)</title><rect x="62.5164%" y="245" width="0.0225%" height="15" fill="rgb(224,166,26)"/><text x="62.7664%" y="255.50"></text></g><g><title>unmap_vmas (4 samples, 0.01%)</title><rect x="62.5261%" y="229" width="0.0128%" height="15" fill="rgb(233,0,47)"/><text x="62.7761%" y="239.50"></text></g><g><title>unmap_page_range (4 samples, 0.01%)</title><rect x="62.5261%" y="213" width="0.0128%" height="15" fill="rgb(253,80,5)"/><text x="62.7761%" y="223.50"></text></g><g><title>__alloc_pages_nodemask (10 samples, 0.03%)</title><rect x="62.5710%" y="261" width="0.0321%" height="15" fill="rgb(214,133,25)"/><text x="62.8210%" y="271.50"></text></g><g><title>get_page_from_freelist (10 samples, 0.03%)</title><rect x="62.5710%" y="245" width="0.0321%" height="15" fill="rgb(209,27,14)"/><text x="62.8210%" y="255.50"></text></g><g><title>prep_new_page (6 samples, 0.02%)</title><rect x="62.5838%" y="229" width="0.0193%" height="15" fill="rgb(219,102,51)"/><text x="62.8338%" y="239.50"></text></g><g><title>kernel_init_free_pages (6 samples, 0.02%)</title><rect x="62.5838%" y="213" width="0.0193%" height="15" fill="rgb(237,18,16)"/><text x="62.8338%" y="223.50"></text></g><g><title>clear_page_erms (6 samples, 0.02%)</title><rect x="62.5838%" y="197" width="0.0193%" height="15" fill="rgb(241,85,17)"/><text x="62.8338%" y="207.50"></text></g><g><title>alloc_pages_vma (11 samples, 0.04%)</title><rect x="62.5710%" y="277" width="0.0353%" height="15" fill="rgb(236,90,42)"/><text x="62.8210%" y="287.50"></text></g><g><title>__pagevec_lru_add_fn (6 samples, 0.02%)</title><rect x="62.6095%" y="245" width="0.0193%" height="15" fill="rgb(249,57,21)"/><text x="62.8595%" y="255.50"></text></g><g><title>lru_cache_add (8 samples, 0.03%)</title><rect x="62.6095%" y="277" width="0.0257%" height="15" fill="rgb(243,12,36)"/><text x="62.8595%" y="287.50"></text></g><g><title>pagevec_lru_move_fn (8 samples, 0.03%)</title><rect x="62.6095%" y="261" width="0.0257%" height="15" fill="rgb(253,128,47)"/><text x="62.8595%" y="271.50"></text></g><g><title>mem_cgroup_charge (6 samples, 0.02%)</title><rect x="62.6352%" y="277" width="0.0193%" height="15" fill="rgb(207,33,20)"/><text x="62.8852%" y="287.50"></text></g><g><title>exc_page_fault (33 samples, 0.11%)</title><rect x="62.5517%" y="325" width="0.1059%" height="15" fill="rgb(233,215,35)"/><text x="62.8017%" y="335.50"></text></g><g><title>do_user_addr_fault (32 samples, 0.10%)</title><rect x="62.5550%" y="309" width="0.1027%" height="15" fill="rgb(249,188,52)"/><text x="62.8050%" y="319.50"></text></g><g><title>handle_mm_fault (31 samples, 0.10%)</title><rect x="62.5582%" y="293" width="0.0995%" height="15" fill="rgb(225,12,32)"/><text x="62.8082%" y="303.50"></text></g><g><title>asm_exc_page_fault (48 samples, 0.15%)</title><rect x="62.5517%" y="341" width="0.1540%" height="15" fill="rgb(247,98,14)"/><text x="62.8017%" y="351.50"></text></g><g><title>irqentry_exit_to_user_mode (15 samples, 0.05%)</title><rect x="62.6576%" y="325" width="0.0481%" height="15" fill="rgb(247,219,48)"/><text x="62.9076%" y="335.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::sink::EventSink&gt;::feed (189 samples, 0.61%)</title><rect x="62.1346%" y="405" width="0.6065%" height="15" fill="rgb(253,60,48)"/><text x="62.3846%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (153 samples, 0.49%)</title><rect x="62.2501%" y="389" width="0.4910%" height="15" fill="rgb(245,15,52)"/><text x="62.5001%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (151 samples, 0.48%)</title><rect x="62.2565%" y="373" width="0.4845%" height="15" fill="rgb(220,133,28)"/><text x="62.5065%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (100 samples, 0.32%)</title><rect x="62.4202%" y="357" width="0.3209%" height="15" fill="rgb(217,180,4)"/><text x="62.6702%" y="367.50"></text></g><g><title>error_entry (11 samples, 0.04%)</title><rect x="62.7058%" y="341" width="0.0353%" height="15" fill="rgb(251,24,1)"/><text x="62.9558%" y="351.50"></text></g><g><title>sync_regs (4 samples, 0.01%)</title><rect x="62.7282%" y="325" width="0.0128%" height="15" fill="rgb(212,185,49)"/><text x="62.9782%" y="335.50"></text></g><g><title>exc_page_fault (5 samples, 0.02%)</title><rect x="63.6428%" y="309" width="0.0160%" height="15" fill="rgb(215,175,22)"/><text x="63.8928%" y="319.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.02%)</title><rect x="63.6428%" y="293" width="0.0160%" height="15" fill="rgb(250,205,14)"/><text x="63.8928%" y="303.50"></text></g><g><title>handle_mm_fault (5 samples, 0.02%)</title><rect x="63.6428%" y="277" width="0.0160%" height="15" fill="rgb(225,211,22)"/><text x="63.8928%" y="287.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.02%)</title><rect x="63.6428%" y="325" width="0.0193%" height="15" fill="rgb(251,179,42)"/><text x="63.8928%" y="335.50"></text></g><g><title>__irqentry_text_end (4 samples, 0.01%)</title><rect x="63.6845%" y="309" width="0.0128%" height="15" fill="rgb(208,216,51)"/><text x="63.9345%" y="319.50"></text></g><g><title>__list_del_entry_valid (6 samples, 0.02%)</title><rect x="63.7615%" y="197" width="0.0193%" height="15" fill="rgb(235,36,11)"/><text x="64.0115%" y="207.50"></text></g><g><title>kernel_init_free_pages (8 samples, 0.03%)</title><rect x="63.7840%" y="181" width="0.0257%" height="15" fill="rgb(213,189,28)"/><text x="64.0340%" y="191.50"></text></g><g><title>clear_page_erms (8 samples, 0.03%)</title><rect x="63.7840%" y="165" width="0.0257%" height="15" fill="rgb(227,203,42)"/><text x="64.0340%" y="175.50"></text></g><g><title>alloc_pages_vma (24 samples, 0.08%)</title><rect x="63.7358%" y="245" width="0.0770%" height="15" fill="rgb(244,72,36)"/><text x="63.9858%" y="255.50"></text></g><g><title>__alloc_pages_nodemask (21 samples, 0.07%)</title><rect x="63.7455%" y="229" width="0.0674%" height="15" fill="rgb(213,53,17)"/><text x="63.9955%" y="239.50"></text></g><g><title>get_page_from_freelist (19 samples, 0.06%)</title><rect x="63.7519%" y="213" width="0.0610%" height="15" fill="rgb(207,167,3)"/><text x="64.0019%" y="223.50"></text></g><g><title>prep_new_page (9 samples, 0.03%)</title><rect x="63.7840%" y="197" width="0.0289%" height="15" fill="rgb(216,98,30)"/><text x="64.0340%" y="207.50"></text></g><g><title>cgroup_throttle_swaprate (5 samples, 0.02%)</title><rect x="63.8129%" y="245" width="0.0160%" height="15" fill="rgb(236,123,15)"/><text x="64.0629%" y="255.50"></text></g><g><title>__pagevec_lru_add_fn (8 samples, 0.03%)</title><rect x="63.8289%" y="213" width="0.0257%" height="15" fill="rgb(248,81,50)"/><text x="64.0789%" y="223.50"></text></g><g><title>lru_cache_add (9 samples, 0.03%)</title><rect x="63.8289%" y="245" width="0.0289%" height="15" fill="rgb(214,120,4)"/><text x="64.0789%" y="255.50"></text></g><g><title>pagevec_lru_move_fn (9 samples, 0.03%)</title><rect x="63.8289%" y="229" width="0.0289%" height="15" fill="rgb(208,179,34)"/><text x="64.0789%" y="239.50"></text></g><g><title>mem_cgroup_charge (4 samples, 0.01%)</title><rect x="63.8578%" y="245" width="0.0128%" height="15" fill="rgb(227,140,7)"/><text x="64.1078%" y="255.50"></text></g><g><title>handle_mm_fault (54 samples, 0.17%)</title><rect x="63.7134%" y="261" width="0.1733%" height="15" fill="rgb(214,22,6)"/><text x="63.9634%" y="271.50"></text></g><g><title>page_add_new_anon_rmap (4 samples, 0.01%)</title><rect x="63.8738%" y="245" width="0.0128%" height="15" fill="rgb(207,137,27)"/><text x="64.1238%" y="255.50"></text></g><g><title>exc_page_fault (60 samples, 0.19%)</title><rect x="63.6973%" y="293" width="0.1925%" height="15" fill="rgb(210,8,46)"/><text x="63.9473%" y="303.50"></text></g><g><title>do_user_addr_fault (58 samples, 0.19%)</title><rect x="63.7038%" y="277" width="0.1861%" height="15" fill="rgb(240,16,54)"/><text x="63.9538%" y="287.50"></text></g><g><title>asm_exc_page_fault (71 samples, 0.23%)</title><rect x="63.6973%" y="309" width="0.2278%" height="15" fill="rgb(211,209,29)"/><text x="63.9473%" y="319.50"></text></g><g><title>irqentry_exit_to_user_mode (11 samples, 0.04%)</title><rect x="63.8899%" y="293" width="0.0353%" height="15" fill="rgb(226,228,24)"/><text x="64.1399%" y="303.50"></text></g><g><title>error_entry (9 samples, 0.03%)</title><rect x="63.9252%" y="309" width="0.0289%" height="15" fill="rgb(222,84,9)"/><text x="64.1752%" y="319.50"></text></g><g><title>sync_regs (9 samples, 0.03%)</title><rect x="63.9252%" y="293" width="0.0289%" height="15" fill="rgb(234,203,30)"/><text x="64.1752%" y="303.50"></text></g><g><title>perf_output_copy (7 samples, 0.02%)</title><rect x="64.0567%" y="133" width="0.0225%" height="15" fill="rgb(238,109,14)"/><text x="64.3067%" y="143.50"></text></g><g><title>memcpy_erms (5 samples, 0.02%)</title><rect x="64.0632%" y="117" width="0.0160%" height="15" fill="rgb(233,206,34)"/><text x="64.3132%" y="127.50"></text></g><g><title>perf_iterate_sb (22 samples, 0.07%)</title><rect x="64.0150%" y="181" width="0.0706%" height="15" fill="rgb(220,167,47)"/><text x="64.2650%" y="191.50"></text></g><g><title>perf_iterate_ctx (20 samples, 0.06%)</title><rect x="64.0214%" y="165" width="0.0642%" height="15" fill="rgb(238,105,10)"/><text x="64.2714%" y="175.50"></text></g><g><title>perf_event_mmap_output (16 samples, 0.05%)</title><rect x="64.0343%" y="149" width="0.0513%" height="15" fill="rgb(213,227,17)"/><text x="64.2843%" y="159.50"></text></g><g><title>perf_event_mmap (24 samples, 0.08%)</title><rect x="64.0118%" y="197" width="0.0770%" height="15" fill="rgb(217,132,38)"/><text x="64.2618%" y="207.50"></text></g><g><title>mprotect_fixup (34 samples, 0.11%)</title><rect x="63.9958%" y="213" width="0.1091%" height="15" fill="rgb(242,146,4)"/><text x="64.2458%" y="223.50"></text></g><g><title>vma_merge (4 samples, 0.01%)</title><rect x="64.0920%" y="197" width="0.0128%" height="15" fill="rgb(212,61,9)"/><text x="64.3420%" y="207.50"></text></g><g><title>__vma_adjust (4 samples, 0.01%)</title><rect x="64.0920%" y="181" width="0.0128%" height="15" fill="rgb(247,126,22)"/><text x="64.3420%" y="191.50"></text></g><g><title>do_syscall_64 (47 samples, 0.15%)</title><rect x="63.9605%" y="261" width="0.1508%" height="15" fill="rgb(220,196,2)"/><text x="64.2105%" y="271.50"></text></g><g><title>__x64_sys_mprotect (46 samples, 0.15%)</title><rect x="63.9637%" y="245" width="0.1476%" height="15" fill="rgb(208,46,4)"/><text x="64.2137%" y="255.50"></text></g><g><title>do_mprotect_pkey (43 samples, 0.14%)</title><rect x="63.9733%" y="229" width="0.1380%" height="15" fill="rgb(252,104,46)"/><text x="64.2233%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (60 samples, 0.19%)</title><rect x="63.9573%" y="277" width="0.1925%" height="15" fill="rgb(237,152,48)"/><text x="64.2073%" y="287.50"></text></g><g><title>syscall_exit_to_user_mode (12 samples, 0.04%)</title><rect x="64.1113%" y="261" width="0.0385%" height="15" fill="rgb(221,59,37)"/><text x="64.3613%" y="271.50"></text></g><g><title>sysmalloc (156 samples, 0.50%)</title><rect x="63.6652%" y="325" width="0.5006%" height="15" fill="rgb(209,202,51)"/><text x="63.9152%" y="335.50"></text></g><g><title>grow_heap (65 samples, 0.21%)</title><rect x="63.9573%" y="309" width="0.2086%" height="15" fill="rgb(228,81,30)"/><text x="64.2073%" y="319.50"></text></g><g><title>__GI___mprotect (65 samples, 0.21%)</title><rect x="63.9573%" y="293" width="0.2086%" height="15" fill="rgb(227,42,39)"/><text x="64.2073%" y="303.50"></text></g><g><title>_int_malloc (180 samples, 0.58%)</title><rect x="63.5914%" y="341" width="0.5776%" height="15" fill="rgb(221,26,2)"/><text x="63.8414%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (275 samples, 0.88%)</title><rect x="63.2994%" y="373" width="0.8825%" height="15" fill="rgb(254,61,31)"/><text x="63.5494%" y="383.50"></text></g><g><title>__GI___libc_malloc (210 samples, 0.67%)</title><rect x="63.5080%" y="357" width="0.6739%" height="15" fill="rgb(222,173,38)"/><text x="63.7580%" y="367.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (8 samples, 0.03%)</title><rect x="64.3520%" y="341" width="0.0257%" height="15" fill="rgb(218,50,12)"/><text x="64.6020%" y="351.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.13%)</title><rect x="64.2782%" y="357" width="0.1251%" height="15" fill="rgb(223,88,40)"/><text x="64.5282%" y="367.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_slice (8 samples, 0.03%)</title><rect x="64.3776%" y="341" width="0.0257%" height="15" fill="rgb(237,54,19)"/><text x="64.6276%" y="351.50"></text></g><g><title>__memmove_avx_unaligned_erms (22 samples, 0.07%)</title><rect x="64.4418%" y="341" width="0.0706%" height="15" fill="rgb(251,129,25)"/><text x="64.6918%" y="351.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.03%)</title><rect x="64.5381%" y="309" width="0.0257%" height="15" fill="rgb(238,97,19)"/><text x="64.7881%" y="319.50"></text></g><g><title>tokio::runtime::task::raw::try_read_output (5 samples, 0.02%)</title><rect x="64.5477%" y="293" width="0.0160%" height="15" fill="rgb(240,169,18)"/><text x="64.7977%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (35 samples, 0.11%)</title><rect x="64.5702%" y="309" width="0.1123%" height="15" fill="rgb(230,187,49)"/><text x="64.8202%" y="319.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.03%)</title><rect x="64.6889%" y="293" width="0.0289%" height="15" fill="rgb(209,44,26)"/><text x="64.9389%" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.02%)</title><rect x="64.7178%" y="293" width="0.0160%" height="15" fill="rgb(244,0,6)"/><text x="64.9678%" y="303.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (17 samples, 0.05%)</title><rect x="64.7434%" y="277" width="0.0546%" height="15" fill="rgb(248,18,21)"/><text x="64.9934%" y="287.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (9 samples, 0.03%)</title><rect x="64.7691%" y="261" width="0.0289%" height="15" fill="rgb(245,180,19)"/><text x="65.0191%" y="271.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.02%)</title><rect x="64.8237%" y="245" width="0.0160%" height="15" fill="rgb(252,118,36)"/><text x="65.0737%" y="255.50"></text></g><g><title>mark_wake_futex (9 samples, 0.03%)</title><rect x="64.8782%" y="165" width="0.0289%" height="15" fill="rgb(210,224,19)"/><text x="65.1282%" y="175.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.01%)</title><rect x="64.9199%" y="133" width="0.0128%" height="15" fill="rgb(218,30,24)"/><text x="65.1699%" y="143.50"></text></g><g><title>select_task_rq_fair (12 samples, 0.04%)</title><rect x="64.9488%" y="133" width="0.0385%" height="15" fill="rgb(219,75,50)"/><text x="65.1988%" y="143.50"></text></g><g><title>enqueue_task_fair (36 samples, 0.12%)</title><rect x="64.9873%" y="117" width="0.1155%" height="15" fill="rgb(234,72,50)"/><text x="65.2373%" y="127.50"></text></g><g><title>enqueue_entity (25 samples, 0.08%)</title><rect x="65.0226%" y="101" width="0.0802%" height="15" fill="rgb(219,100,48)"/><text x="65.2726%" y="111.50"></text></g><g><title>update_load_avg (11 samples, 0.04%)</title><rect x="65.0675%" y="85" width="0.0353%" height="15" fill="rgb(253,5,41)"/><text x="65.3175%" y="95.50"></text></g><g><title>ttwu_do_activate (78 samples, 0.25%)</title><rect x="64.9873%" y="133" width="0.2503%" height="15" fill="rgb(247,181,11)"/><text x="65.2373%" y="143.50"></text></g><g><title>psi_task_change (42 samples, 0.13%)</title><rect x="65.1028%" y="117" width="0.1348%" height="15" fill="rgb(222,223,25)"/><text x="65.3528%" y="127.50"></text></g><g><title>psi_group_change (36 samples, 0.12%)</title><rect x="65.1221%" y="101" width="0.1155%" height="15" fill="rgb(214,198,28)"/><text x="65.3721%" y="111.50"></text></g><g><title>record_times (7 samples, 0.02%)</title><rect x="65.2152%" y="85" width="0.0225%" height="15" fill="rgb(230,46,43)"/><text x="65.4652%" y="95.50"></text></g><g><title>sched_clock_cpu (5 samples, 0.02%)</title><rect x="65.2216%" y="69" width="0.0160%" height="15" fill="rgb(233,65,53)"/><text x="65.4716%" y="79.50"></text></g><g><title>sched_clock (4 samples, 0.01%)</title><rect x="65.2248%" y="53" width="0.0128%" height="15" fill="rgb(221,121,27)"/><text x="65.4748%" y="63.50"></text></g><g><title>native_sched_clock (4 samples, 0.01%)</title><rect x="65.2248%" y="37" width="0.0128%" height="15" fill="rgb(247,70,47)"/><text x="65.4748%" y="47.50"></text></g><g><title>ttwu_do_wakeup (8 samples, 0.03%)</title><rect x="65.2376%" y="133" width="0.0257%" height="15" fill="rgb(228,85,35)"/><text x="65.4876%" y="143.50"></text></g><g><title>check_preempt_curr (7 samples, 0.02%)</title><rect x="65.2408%" y="117" width="0.0225%" height="15" fill="rgb(209,50,18)"/><text x="65.4908%" y="127.50"></text></g><g><title>resched_curr (6 samples, 0.02%)</title><rect x="65.2440%" y="101" width="0.0193%" height="15" fill="rgb(250,19,35)"/><text x="65.4940%" y="111.50"></text></g><g><title>__x64_sys_futex (137 samples, 0.44%)</title><rect x="64.8397%" y="213" width="0.4396%" height="15" fill="rgb(253,107,29)"/><text x="65.0897%" y="223.50"></text></g><g><title>do_futex (134 samples, 0.43%)</title><rect x="64.8493%" y="197" width="0.4300%" height="15" fill="rgb(252,179,29)"/><text x="65.0993%" y="207.50"></text></g><g><title>futex_wake (132 samples, 0.42%)</title><rect x="64.8558%" y="181" width="0.4236%" height="15" fill="rgb(238,194,6)"/><text x="65.1058%" y="191.50"></text></g><g><title>wake_up_q (116 samples, 0.37%)</title><rect x="64.9071%" y="165" width="0.3722%" height="15" fill="rgb(238,164,29)"/><text x="65.1571%" y="175.50"></text></g><g><title>try_to_wake_up (114 samples, 0.37%)</title><rect x="64.9135%" y="149" width="0.3658%" height="15" fill="rgb(224,25,9)"/><text x="65.1635%" y="159.50"></text></g><g><title>update_rq_clock (4 samples, 0.01%)</title><rect x="65.2665%" y="133" width="0.0128%" height="15" fill="rgb(244,153,23)"/><text x="65.5165%" y="143.50"></text></g><g><title>do_syscall_64 (141 samples, 0.45%)</title><rect x="64.8397%" y="229" width="0.4525%" height="15" fill="rgb(212,203,14)"/><text x="65.0897%" y="239.50"></text></g><g><title>syscall_enter_from_user_mode (4 samples, 0.01%)</title><rect x="65.2793%" y="213" width="0.0128%" height="15" fill="rgb(220,164,20)"/><text x="65.5293%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (162 samples, 0.52%)</title><rect x="64.8397%" y="245" width="0.5198%" height="15" fill="rgb(222,203,48)"/><text x="65.0897%" y="255.50"></text></g><g><title>syscall_exit_to_user_mode (21 samples, 0.07%)</title><rect x="65.2922%" y="229" width="0.0674%" height="15" fill="rgb(215,159,22)"/><text x="65.5422%" y="239.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (212 samples, 0.68%)</title><rect x="64.6889%" y="309" width="0.6803%" height="15" fill="rgb(216,183,47)"/><text x="64.9389%" y="319.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn (198 samples, 0.64%)</title><rect x="64.7338%" y="293" width="0.6354%" height="15" fill="rgb(229,195,25)"/><text x="64.9838%" y="303.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (178 samples, 0.57%)</title><rect x="64.7980%" y="277" width="0.5712%" height="15" fill="rgb(224,132,51)"/><text x="65.0480%" y="287.50"></text></g><g><title>syscall (173 samples, 0.56%)</title><rect x="64.8140%" y="261" width="0.5551%" height="15" fill="rgb(240,63,7)"/><text x="65.0640%" y="271.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_write::AsyncWrite&gt;::poll_write (270 samples, 0.87%)</title><rect x="64.5124%" y="325" width="0.8664%" height="15" fill="rgb(249,182,41)"/><text x="64.7624%" y="335.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (306 samples, 0.98%)</title><rect x="64.4033%" y="357" width="0.9819%" height="15" fill="rgb(243,47,26)"/><text x="64.6533%" y="367.50"></text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (272 samples, 0.87%)</title><rect x="64.5124%" y="341" width="0.8728%" height="15" fill="rgb(233,48,2)"/><text x="64.7624%" y="351.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.03%)</title><rect x="65.3852%" y="357" width="0.0257%" height="15" fill="rgb(244,165,34)"/><text x="65.6352%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (399 samples, 1.28%)</title><rect x="64.1819%" y="373" width="1.2804%" height="15" fill="rgb(207,89,7)"/><text x="64.4319%" y="383.50"></text></g><g><title>_int_free (14 samples, 0.04%)</title><rect x="65.4173%" y="357" width="0.0449%" height="15" fill="rgb(244,117,36)"/><text x="65.6673%" y="367.50"></text></g><g><title>tcache_put (4 samples, 0.01%)</title><rect x="65.4494%" y="341" width="0.0128%" height="15" fill="rgb(226,144,34)"/><text x="65.6994%" y="351.50"></text></g><g><title>__GI___libc_free (13 samples, 0.04%)</title><rect x="65.4622%" y="373" width="0.0417%" height="15" fill="rgb(213,23,19)"/><text x="65.7122%" y="383.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.02%)</title><rect x="65.6131%" y="325" width="0.0160%" height="15" fill="rgb(217,75,12)"/><text x="65.8631%" y="335.50"></text></g><g><title>exc_page_fault (5 samples, 0.02%)</title><rect x="65.6131%" y="309" width="0.0160%" height="15" fill="rgb(224,159,17)"/><text x="65.8631%" y="319.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.02%)</title><rect x="65.6131%" y="293" width="0.0160%" height="15" fill="rgb(217,118,1)"/><text x="65.8631%" y="303.50"></text></g><g><title>handle_mm_fault (5 samples, 0.02%)</title><rect x="65.6131%" y="277" width="0.0160%" height="15" fill="rgb(232,180,48)"/><text x="65.8631%" y="287.50"></text></g><g><title>do_syscall_64 (7 samples, 0.02%)</title><rect x="65.6291%" y="277" width="0.0225%" height="15" fill="rgb(230,27,33)"/><text x="65.8791%" y="287.50"></text></g><g><title>__x64_sys_mprotect (7 samples, 0.02%)</title><rect x="65.6291%" y="261" width="0.0225%" height="15" fill="rgb(205,31,21)"/><text x="65.8791%" y="271.50"></text></g><g><title>do_mprotect_pkey (7 samples, 0.02%)</title><rect x="65.6291%" y="245" width="0.0225%" height="15" fill="rgb(253,59,4)"/><text x="65.8791%" y="255.50"></text></g><g><title>mprotect_fixup (6 samples, 0.02%)</title><rect x="65.6323%" y="229" width="0.0193%" height="15" fill="rgb(224,201,9)"/><text x="65.8823%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.03%)</title><rect x="65.6291%" y="293" width="0.0257%" height="15" fill="rgb(229,206,30)"/><text x="65.8791%" y="303.50"></text></g><g><title>_int_malloc (27 samples, 0.09%)</title><rect x="65.5714%" y="357" width="0.0866%" height="15" fill="rgb(212,67,47)"/><text x="65.8214%" y="367.50"></text></g><g><title>sysmalloc (19 samples, 0.06%)</title><rect x="65.5970%" y="341" width="0.0610%" height="15" fill="rgb(211,96,50)"/><text x="65.8470%" y="351.50"></text></g><g><title>grow_heap (9 samples, 0.03%)</title><rect x="65.6291%" y="325" width="0.0289%" height="15" fill="rgb(252,114,18)"/><text x="65.8791%" y="335.50"></text></g><g><title>__GI___mprotect (9 samples, 0.03%)</title><rect x="65.6291%" y="309" width="0.0289%" height="15" fill="rgb(223,58,37)"/><text x="65.8791%" y="319.50"></text></g><g><title>checked_request2size (5 samples, 0.02%)</title><rect x="65.6580%" y="357" width="0.0160%" height="15" fill="rgb(237,70,4)"/><text x="65.9080%" y="367.50"></text></g><g><title>__GI___libc_malloc (60 samples, 0.19%)</title><rect x="65.5040%" y="373" width="0.1925%" height="15" fill="rgb(244,85,46)"/><text x="65.7540%" y="383.50"></text></g><g><title>tcache_get (7 samples, 0.02%)</title><rect x="65.6740%" y="357" width="0.0225%" height="15" fill="rgb(223,39,52)"/><text x="65.9240%" y="367.50"></text></g><g><title>_int_free (12 samples, 0.04%)</title><rect x="65.7093%" y="373" width="0.0385%" height="15" fill="rgb(218,200,14)"/><text x="65.9593%" y="383.50"></text></g><g><title>do_syscall_64 (6 samples, 0.02%)</title><rect x="65.9981%" y="229" width="0.0193%" height="15" fill="rgb(208,171,16)"/><text x="66.2481%" y="239.50"></text></g><g><title>__x64_sys_mprotect (6 samples, 0.02%)</title><rect x="65.9981%" y="213" width="0.0193%" height="15" fill="rgb(234,200,18)"/><text x="66.2481%" y="223.50"></text></g><g><title>do_mprotect_pkey (6 samples, 0.02%)</title><rect x="65.9981%" y="197" width="0.0193%" height="15" fill="rgb(228,45,11)"/><text x="66.2481%" y="207.50"></text></g><g><title>mprotect_fixup (6 samples, 0.02%)</title><rect x="65.9981%" y="181" width="0.0193%" height="15" fill="rgb(237,182,11)"/><text x="66.2481%" y="191.50"></text></g><g><title>perf_event_mmap (5 samples, 0.02%)</title><rect x="66.0013%" y="165" width="0.0160%" height="15" fill="rgb(241,175,49)"/><text x="66.2513%" y="175.50"></text></g><g><title>perf_iterate_sb (4 samples, 0.01%)</title><rect x="66.0046%" y="149" width="0.0128%" height="15" fill="rgb(247,38,35)"/><text x="66.2546%" y="159.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.02%)</title><rect x="65.9981%" y="245" width="0.0225%" height="15" fill="rgb(228,39,49)"/><text x="66.2481%" y="255.50"></text></g><g><title>__GI___libc_malloc (51 samples, 0.16%)</title><rect x="65.8602%" y="325" width="0.1637%" height="15" fill="rgb(226,101,26)"/><text x="66.1102%" y="335.50"></text></g><g><title>_int_malloc (31 samples, 0.10%)</title><rect x="65.9243%" y="309" width="0.0995%" height="15" fill="rgb(206,141,19)"/><text x="66.1743%" y="319.50"></text></g><g><title>sysmalloc (13 samples, 0.04%)</title><rect x="65.9821%" y="293" width="0.0417%" height="15" fill="rgb(211,200,13)"/><text x="66.2321%" y="303.50"></text></g><g><title>grow_heap (8 samples, 0.03%)</title><rect x="65.9981%" y="277" width="0.0257%" height="15" fill="rgb(241,121,6)"/><text x="66.2481%" y="287.50"></text></g><g><title>__GI___mprotect (8 samples, 0.03%)</title><rect x="65.9981%" y="261" width="0.0257%" height="15" fill="rgb(234,221,29)"/><text x="66.2481%" y="271.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.02%)</title><rect x="66.2452%" y="293" width="0.0193%" height="15" fill="rgb(229,136,5)"/><text x="66.4952%" y="303.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (70 samples, 0.22%)</title><rect x="66.0463%" y="309" width="0.2246%" height="15" fill="rgb(238,36,11)"/><text x="66.2963%" y="319.50"></text></g><g><title>ate::spec::SerializationFormat::serialize (144 samples, 0.46%)</title><rect x="65.8249%" y="357" width="0.4621%" height="15" fill="rgb(251,55,41)"/><text x="66.0749%" y="367.50"></text></g><g><title>bincode::serialize (137 samples, 0.44%)</title><rect x="65.8473%" y="341" width="0.4396%" height="15" fill="rgb(242,34,40)"/><text x="66.0973%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (82 samples, 0.26%)</title><rect x="66.0238%" y="325" width="0.2631%" height="15" fill="rgb(215,42,17)"/><text x="66.2738%" y="335.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::MetaAuthorization&gt;::serialize (5 samples, 0.02%)</title><rect x="66.2709%" y="309" width="0.0160%" height="15" fill="rgb(207,44,46)"/><text x="66.5209%" y="319.50"></text></g><g><title>ate::event::EventData::as_header_raw (217 samples, 0.70%)</title><rect x="65.7511%" y="373" width="0.6963%" height="15" fill="rgb(211,206,28)"/><text x="66.0011%" y="383.50"></text></g><g><title>blake3::hash (50 samples, 0.16%)</title><rect x="66.2869%" y="357" width="0.1604%" height="15" fill="rgb(237,167,16)"/><text x="66.5369%" y="367.50"></text></g><g><title>blake3::ChunkState::update (29 samples, 0.09%)</title><rect x="66.3543%" y="341" width="0.0931%" height="15" fill="rgb(233,66,6)"/><text x="66.6043%" y="351.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.02%)</title><rect x="66.4313%" y="325" width="0.0160%" height="15" fill="rgb(246,123,29)"/><text x="66.6813%" y="335.50"></text></g><g><title>bytes::bytes::shared_clone (17 samples, 0.05%)</title><rect x="66.4474%" y="373" width="0.0546%" height="15" fill="rgb(209,62,40)"/><text x="66.6974%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (8 samples, 0.03%)</title><rect x="67.1694%" y="357" width="0.0257%" height="15" fill="rgb(218,4,25)"/><text x="67.4194%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (71 samples, 0.23%)</title><rect x="67.3716%" y="341" width="0.2278%" height="15" fill="rgb(253,91,49)"/><text x="67.6216%" y="351.50"></text></g><g><title>page_remove_rmap (4 samples, 0.01%)</title><rect x="67.6989%" y="181" width="0.0128%" height="15" fill="rgb(228,155,29)"/><text x="67.9489%" y="191.50"></text></g><g><title>__GI_munmap (17 samples, 0.05%)</title><rect x="67.6796%" y="325" width="0.0546%" height="15" fill="rgb(243,57,37)"/><text x="67.9296%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (17 samples, 0.05%)</title><rect x="67.6796%" y="309" width="0.0546%" height="15" fill="rgb(244,167,17)"/><text x="67.9296%" y="319.50"></text></g><g><title>do_syscall_64 (17 samples, 0.05%)</title><rect x="67.6796%" y="293" width="0.0546%" height="15" fill="rgb(207,181,38)"/><text x="67.9296%" y="303.50"></text></g><g><title>__x64_sys_munmap (17 samples, 0.05%)</title><rect x="67.6796%" y="277" width="0.0546%" height="15" fill="rgb(211,8,23)"/><text x="67.9296%" y="287.50"></text></g><g><title>__vm_munmap (17 samples, 0.05%)</title><rect x="67.6796%" y="261" width="0.0546%" height="15" fill="rgb(235,11,44)"/><text x="67.9296%" y="271.50"></text></g><g><title>__do_munmap (17 samples, 0.05%)</title><rect x="67.6796%" y="245" width="0.0546%" height="15" fill="rgb(248,18,52)"/><text x="67.9296%" y="255.50"></text></g><g><title>unmap_region (17 samples, 0.05%)</title><rect x="67.6796%" y="229" width="0.0546%" height="15" fill="rgb(208,4,7)"/><text x="67.9296%" y="239.50"></text></g><g><title>unmap_vmas (14 samples, 0.04%)</title><rect x="67.6892%" y="213" width="0.0449%" height="15" fill="rgb(240,17,39)"/><text x="67.9392%" y="223.50"></text></g><g><title>unmap_page_range (14 samples, 0.04%)</title><rect x="67.6892%" y="197" width="0.0449%" height="15" fill="rgb(207,170,3)"/><text x="67.9392%" y="207.50"></text></g><g><title>tlb_flush_mmu (7 samples, 0.02%)</title><rect x="67.7117%" y="181" width="0.0225%" height="15" fill="rgb(236,100,52)"/><text x="67.9617%" y="191.50"></text></g><g><title>release_pages (6 samples, 0.02%)</title><rect x="67.7149%" y="165" width="0.0193%" height="15" fill="rgb(246,78,51)"/><text x="67.9649%" y="175.50"></text></g><g><title>free_unref_page_list (5 samples, 0.02%)</title><rect x="67.7181%" y="149" width="0.0160%" height="15" fill="rgb(211,17,15)"/><text x="67.9681%" y="159.50"></text></g><g><title>free_pcppages_bulk (4 samples, 0.01%)</title><rect x="67.7213%" y="133" width="0.0128%" height="15" fill="rgb(209,59,46)"/><text x="67.9713%" y="143.50"></text></g><g><title>__irqentry_text_end (10 samples, 0.03%)</title><rect x="67.8240%" y="309" width="0.0321%" height="15" fill="rgb(210,92,25)"/><text x="68.0740%" y="319.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.01%)</title><rect x="67.8914%" y="245" width="0.0128%" height="15" fill="rgb(238,174,52)"/><text x="68.1414%" y="255.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.02%)</title><rect x="67.9235%" y="197" width="0.0160%" height="15" fill="rgb(230,73,7)"/><text x="68.1735%" y="207.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (15 samples, 0.05%)</title><rect x="67.9171%" y="213" width="0.0481%" height="15" fill="rgb(243,124,40)"/><text x="68.1671%" y="223.50"></text></g><g><title>try_to_free_pages (8 samples, 0.03%)</title><rect x="67.9395%" y="197" width="0.0257%" height="15" fill="rgb(244,170,11)"/><text x="68.1895%" y="207.50"></text></g><g><title>do_try_to_free_pages (8 samples, 0.03%)</title><rect x="67.9395%" y="181" width="0.0257%" height="15" fill="rgb(207,114,54)"/><text x="68.1895%" y="191.50"></text></g><g><title>shrink_node (8 samples, 0.03%)</title><rect x="67.9395%" y="165" width="0.0257%" height="15" fill="rgb(205,42,20)"/><text x="68.1895%" y="175.50"></text></g><g><title>__list_del_entry_valid (5 samples, 0.02%)</title><rect x="68.0069%" y="197" width="0.0160%" height="15" fill="rgb(230,30,28)"/><text x="68.2569%" y="207.50"></text></g><g><title>__alloc_pages_nodemask (63 samples, 0.20%)</title><rect x="67.9139%" y="229" width="0.2022%" height="15" fill="rgb(205,73,54)"/><text x="68.1639%" y="239.50"></text></g><g><title>get_page_from_freelist (46 samples, 0.15%)</title><rect x="67.9684%" y="213" width="0.1476%" height="15" fill="rgb(254,227,23)"/><text x="68.2184%" y="223.50"></text></g><g><title>prep_new_page (26 samples, 0.08%)</title><rect x="68.0326%" y="197" width="0.0834%" height="15" fill="rgb(228,202,34)"/><text x="68.2826%" y="207.50"></text></g><g><title>kernel_init_free_pages (26 samples, 0.08%)</title><rect x="68.0326%" y="181" width="0.0834%" height="15" fill="rgb(222,225,37)"/><text x="68.2826%" y="191.50"></text></g><g><title>clear_page_erms (26 samples, 0.08%)</title><rect x="68.0326%" y="165" width="0.0834%" height="15" fill="rgb(221,14,54)"/><text x="68.2826%" y="175.50"></text></g><g><title>alloc_pages_vma (67 samples, 0.21%)</title><rect x="67.9042%" y="245" width="0.2150%" height="15" fill="rgb(254,102,2)"/><text x="68.1542%" y="255.50"></text></g><g><title>lru_cache_add (8 samples, 0.03%)</title><rect x="68.1289%" y="245" width="0.0257%" height="15" fill="rgb(232,104,17)"/><text x="68.3789%" y="255.50"></text></g><g><title>pagevec_lru_move_fn (7 samples, 0.02%)</title><rect x="68.1321%" y="229" width="0.0225%" height="15" fill="rgb(250,220,14)"/><text x="68.3821%" y="239.50"></text></g><g><title>__pagevec_lru_add_fn (7 samples, 0.02%)</title><rect x="68.1321%" y="213" width="0.0225%" height="15" fill="rgb(241,158,9)"/><text x="68.3821%" y="223.50"></text></g><g><title>mem_cgroup_charge (12 samples, 0.04%)</title><rect x="68.1545%" y="245" width="0.0385%" height="15" fill="rgb(246,9,43)"/><text x="68.4045%" y="255.50"></text></g><g><title>try_charge (4 samples, 0.01%)</title><rect x="68.1802%" y="229" width="0.0128%" height="15" fill="rgb(206,73,33)"/><text x="68.4302%" y="239.50"></text></g><g><title>handle_mm_fault (105 samples, 0.34%)</title><rect x="67.8689%" y="261" width="0.3369%" height="15" fill="rgb(222,79,8)"/><text x="68.1189%" y="271.50"></text></g><g><title>page_add_new_anon_rmap (4 samples, 0.01%)</title><rect x="68.1930%" y="245" width="0.0128%" height="15" fill="rgb(234,8,54)"/><text x="68.4430%" y="255.50"></text></g><g><title>exc_page_fault (109 samples, 0.35%)</title><rect x="67.8625%" y="293" width="0.3498%" height="15" fill="rgb(209,134,38)"/><text x="68.1125%" y="303.50"></text></g><g><title>do_user_addr_fault (108 samples, 0.35%)</title><rect x="67.8657%" y="277" width="0.3466%" height="15" fill="rgb(230,127,29)"/><text x="68.1157%" y="287.50"></text></g><g><title>asm_exc_page_fault (136 samples, 0.44%)</title><rect x="67.8561%" y="309" width="0.4364%" height="15" fill="rgb(242,44,41)"/><text x="68.1061%" y="319.50"></text></g><g><title>irqentry_exit_to_user_mode (25 samples, 0.08%)</title><rect x="68.2123%" y="293" width="0.0802%" height="15" fill="rgb(222,56,43)"/><text x="68.4623%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (205 samples, 0.66%)</title><rect x="67.7342%" y="325" width="0.6578%" height="15" fill="rgb(238,39,47)"/><text x="67.9842%" y="335.50"></text></g><g><title>error_entry (31 samples, 0.10%)</title><rect x="68.2925%" y="309" width="0.0995%" height="15" fill="rgb(226,79,43)"/><text x="68.5425%" y="319.50"></text></g><g><title>sync_regs (11 samples, 0.04%)</title><rect x="68.3567%" y="293" width="0.0353%" height="15" fill="rgb(242,105,53)"/><text x="68.6067%" y="303.50"></text></g><g><title>alloc_pages_vma (5 samples, 0.02%)</title><rect x="68.4080%" y="261" width="0.0160%" height="15" fill="rgb(251,132,46)"/><text x="68.6580%" y="271.50"></text></g><g><title>__alloc_pages_nodemask (5 samples, 0.02%)</title><rect x="68.4080%" y="245" width="0.0160%" height="15" fill="rgb(231,77,14)"/><text x="68.6580%" y="255.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.02%)</title><rect x="68.4080%" y="229" width="0.0160%" height="15" fill="rgb(240,135,9)"/><text x="68.6580%" y="239.50"></text></g><g><title>exc_page_fault (13 samples, 0.04%)</title><rect x="68.3952%" y="309" width="0.0417%" height="15" fill="rgb(248,109,14)"/><text x="68.6452%" y="319.50"></text></g><g><title>do_user_addr_fault (13 samples, 0.04%)</title><rect x="68.3952%" y="293" width="0.0417%" height="15" fill="rgb(227,146,52)"/><text x="68.6452%" y="303.50"></text></g><g><title>handle_mm_fault (13 samples, 0.04%)</title><rect x="68.3952%" y="277" width="0.0417%" height="15" fill="rgb(232,54,3)"/><text x="68.6452%" y="287.50"></text></g><g><title>asm_exc_page_fault (20 samples, 0.06%)</title><rect x="68.3920%" y="325" width="0.0642%" height="15" fill="rgb(229,201,43)"/><text x="68.6420%" y="335.50"></text></g><g><title>irqentry_exit_to_user_mode (6 samples, 0.02%)</title><rect x="68.4369%" y="309" width="0.0193%" height="15" fill="rgb(252,161,33)"/><text x="68.6869%" y="319.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,806 samples, 5.80%)</title><rect x="62.7411%" y="405" width="5.7953%" height="15" fill="rgb(226,146,40)"/><text x="62.9911%" y="415.50">&lt;core::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,797 samples, 5.77%)</title><rect x="62.7700%" y="389" width="5.7665%" height="15" fill="rgb(219,47,25)"/><text x="63.0200%" y="399.50">&lt;core::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (634 samples, 2.03%)</title><rect x="66.5019%" y="373" width="2.0345%" height="15" fill="rgb(250,135,13)"/><text x="66.7519%" y="383.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (418 samples, 1.34%)</title><rect x="67.1951%" y="357" width="1.3413%" height="15" fill="rgb(219,229,18)"/><text x="67.4451%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (292 samples, 0.94%)</title><rect x="67.5994%" y="341" width="0.9370%" height="15" fill="rgb(217,152,27)"/><text x="67.8494%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (25 samples, 0.08%)</title><rect x="68.4562%" y="325" width="0.0802%" height="15" fill="rgb(225,71,47)"/><text x="68.7062%" y="335.50"></text></g><g><title>_int_free (50 samples, 0.16%)</title><rect x="68.5621%" y="405" width="0.1604%" height="15" fill="rgb(220,139,14)"/><text x="68.8121%" y="415.50"></text></g><g><title>malloc_consolidate (7 samples, 0.02%)</title><rect x="68.7001%" y="389" width="0.0225%" height="15" fill="rgb(247,54,32)"/><text x="68.9501%" y="399.50"></text></g><g><title>unlink_chunk (6 samples, 0.02%)</title><rect x="68.7033%" y="373" width="0.0193%" height="15" fill="rgb(252,131,39)"/><text x="68.9533%" y="383.50"></text></g><g><title>alloc_pages_vma (5 samples, 0.02%)</title><rect x="68.7674%" y="261" width="0.0160%" height="15" fill="rgb(210,108,39)"/><text x="69.0174%" y="271.50"></text></g><g><title>__alloc_pages_nodemask (4 samples, 0.01%)</title><rect x="68.7707%" y="245" width="0.0128%" height="15" fill="rgb(205,23,29)"/><text x="69.0207%" y="255.50"></text></g><g><title>get_page_from_freelist (4 samples, 0.01%)</title><rect x="68.7707%" y="229" width="0.0128%" height="15" fill="rgb(246,139,46)"/><text x="69.0207%" y="239.50"></text></g><g><title>exc_page_fault (9 samples, 0.03%)</title><rect x="68.7674%" y="309" width="0.0289%" height="15" fill="rgb(250,81,26)"/><text x="69.0174%" y="319.50"></text></g><g><title>do_user_addr_fault (9 samples, 0.03%)</title><rect x="68.7674%" y="293" width="0.0289%" height="15" fill="rgb(214,104,7)"/><text x="69.0174%" y="303.50"></text></g><g><title>handle_mm_fault (9 samples, 0.03%)</title><rect x="68.7674%" y="277" width="0.0289%" height="15" fill="rgb(233,189,8)"/><text x="69.0174%" y="287.50"></text></g><g><title>asm_exc_page_fault (12 samples, 0.04%)</title><rect x="68.7642%" y="325" width="0.0385%" height="15" fill="rgb(228,141,17)"/><text x="69.0142%" y="335.50"></text></g><g><title>__memmove_avx_unaligned_erms (27 samples, 0.09%)</title><rect x="68.7418%" y="341" width="0.0866%" height="15" fill="rgb(247,157,1)"/><text x="68.9918%" y="351.50"></text></g><g><title>error_entry (8 samples, 0.03%)</title><rect x="68.8027%" y="325" width="0.0257%" height="15" fill="rgb(249,225,5)"/><text x="69.0527%" y="335.50"></text></g><g><title>exc_page_fault (5 samples, 0.02%)</title><rect x="68.8413%" y="293" width="0.0160%" height="15" fill="rgb(242,55,13)"/><text x="69.0913%" y="303.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.01%)</title><rect x="68.8445%" y="277" width="0.0128%" height="15" fill="rgb(230,49,50)"/><text x="69.0945%" y="287.50"></text></g><g><title>handle_mm_fault (4 samples, 0.01%)</title><rect x="68.8445%" y="261" width="0.0128%" height="15" fill="rgb(241,111,38)"/><text x="69.0945%" y="271.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.02%)</title><rect x="68.8413%" y="309" width="0.0193%" height="15" fill="rgb(252,155,4)"/><text x="69.0913%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.01%)</title><rect x="68.8637%" y="277" width="0.0128%" height="15" fill="rgb(212,69,32)"/><text x="69.1137%" y="287.50"></text></g><g><title>do_syscall_64 (4 samples, 0.01%)</title><rect x="68.8637%" y="261" width="0.0128%" height="15" fill="rgb(243,107,47)"/><text x="69.1137%" y="271.50"></text></g><g><title>__x64_sys_mprotect (4 samples, 0.01%)</title><rect x="68.8637%" y="245" width="0.0128%" height="15" fill="rgb(247,130,12)"/><text x="69.1137%" y="255.50"></text></g><g><title>do_mprotect_pkey (4 samples, 0.01%)</title><rect x="68.8637%" y="229" width="0.0128%" height="15" fill="rgb(233,74,16)"/><text x="69.1137%" y="239.50"></text></g><g><title>mprotect_fixup (4 samples, 0.01%)</title><rect x="68.8637%" y="213" width="0.0128%" height="15" fill="rgb(208,58,18)"/><text x="69.1137%" y="223.50"></text></g><g><title>_int_malloc (14 samples, 0.04%)</title><rect x="68.8348%" y="341" width="0.0449%" height="15" fill="rgb(242,225,1)"/><text x="69.0848%" y="351.50"></text></g><g><title>sysmalloc (14 samples, 0.04%)</title><rect x="68.8348%" y="325" width="0.0449%" height="15" fill="rgb(249,39,40)"/><text x="69.0848%" y="335.50"></text></g><g><title>grow_heap (5 samples, 0.02%)</title><rect x="68.8637%" y="309" width="0.0160%" height="15" fill="rgb(207,72,44)"/><text x="69.1137%" y="319.50"></text></g><g><title>__GI___mprotect (5 samples, 0.02%)</title><rect x="68.8637%" y="293" width="0.0160%" height="15" fill="rgb(215,193,12)"/><text x="69.1137%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (51 samples, 0.16%)</title><rect x="68.7225%" y="405" width="0.1637%" height="15" fill="rgb(248,41,39)"/><text x="68.9725%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (51 samples, 0.16%)</title><rect x="68.7225%" y="389" width="0.1637%" height="15" fill="rgb(253,85,4)"/><text x="68.9725%" y="399.50"></text></g><g><title>__GI___libc_realloc (51 samples, 0.16%)</title><rect x="68.7225%" y="373" width="0.1637%" height="15" fill="rgb(243,70,31)"/><text x="68.9725%" y="383.50"></text></g><g><title>_int_realloc (49 samples, 0.16%)</title><rect x="68.7289%" y="357" width="0.1572%" height="15" fill="rgb(253,195,26)"/><text x="68.9789%" y="367.50"></text></g><g><title>__GI___libc_free (4 samples, 0.01%)</title><rect x="69.0851%" y="373" width="0.0128%" height="15" fill="rgb(243,42,11)"/><text x="69.3351%" y="383.50"></text></g><g><title>_int_free (39 samples, 0.13%)</title><rect x="69.1044%" y="373" width="0.1251%" height="15" fill="rgb(239,66,17)"/><text x="69.3544%" y="383.50"></text></g><g><title>malloc_consolidate (328 samples, 1.05%)</title><rect x="69.3451%" y="341" width="1.0525%" height="15" fill="rgb(217,132,21)"/><text x="69.5951%" y="351.50"></text></g><g><title>unlink_chunk (160 samples, 0.51%)</title><rect x="69.8842%" y="325" width="0.5134%" height="15" fill="rgb(252,202,21)"/><text x="70.1342%" y="335.50"></text></g><g><title>alloc::collections::btree::navigate::next_kv_unchecked_dealloc (414 samples, 1.33%)</title><rect x="69.2295%" y="373" width="1.3285%" height="15" fill="rgb(233,98,36)"/><text x="69.4795%" y="383.50"></text></g><g><title>_int_free (400 samples, 1.28%)</title><rect x="69.2745%" y="357" width="1.2836%" height="15" fill="rgb(216,153,54)"/><text x="69.5245%" y="367.50"></text></g><g><title>unlink_chunk (50 samples, 0.16%)</title><rect x="70.3976%" y="341" width="0.1604%" height="15" fill="rgb(250,99,7)"/><text x="70.6476%" y="351.50"></text></g><g><title>__GI___libc_free (89 samples, 0.29%)</title><rect x="70.7442%" y="357" width="0.2856%" height="15" fill="rgb(207,56,50)"/><text x="70.9942%" y="367.50"></text></g><g><title>_int_free (61 samples, 0.20%)</title><rect x="71.0297%" y="357" width="0.1957%" height="15" fill="rgb(244,61,34)"/><text x="71.2797%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (730 samples, 2.34%)</title><rect x="68.8862%" y="389" width="2.3425%" height="15" fill="rgb(241,50,38)"/><text x="69.1362%" y="399.50">&lt;..</text></g><g><title>bytes::bytes::shared_drop (209 samples, 0.67%)</title><rect x="70.5580%" y="373" width="0.6707%" height="15" fill="rgb(212,166,30)"/><text x="70.8080%" y="383.50"></text></g><g><title>__GI_munmap (9 samples, 0.03%)</title><rect x="71.2287%" y="389" width="0.0289%" height="15" fill="rgb(249,127,32)"/><text x="71.4787%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.03%)</title><rect x="71.2287%" y="373" width="0.0289%" height="15" fill="rgb(209,103,0)"/><text x="71.4787%" y="383.50"></text></g><g><title>do_syscall_64 (9 samples, 0.03%)</title><rect x="71.2287%" y="357" width="0.0289%" height="15" fill="rgb(238,209,51)"/><text x="71.4787%" y="367.50"></text></g><g><title>__x64_sys_munmap (9 samples, 0.03%)</title><rect x="71.2287%" y="341" width="0.0289%" height="15" fill="rgb(237,56,23)"/><text x="71.4787%" y="351.50"></text></g><g><title>__vm_munmap (9 samples, 0.03%)</title><rect x="71.2287%" y="325" width="0.0289%" height="15" fill="rgb(215,153,46)"/><text x="71.4787%" y="335.50"></text></g><g><title>__do_munmap (9 samples, 0.03%)</title><rect x="71.2287%" y="309" width="0.0289%" height="15" fill="rgb(224,49,31)"/><text x="71.4787%" y="319.50"></text></g><g><title>unmap_region (9 samples, 0.03%)</title><rect x="71.2287%" y="293" width="0.0289%" height="15" fill="rgb(250,18,42)"/><text x="71.4787%" y="303.50"></text></g><g><title>unmap_vmas (6 samples, 0.02%)</title><rect x="71.2383%" y="277" width="0.0193%" height="15" fill="rgb(215,176,39)"/><text x="71.4883%" y="287.50"></text></g><g><title>unmap_page_range (6 samples, 0.02%)</title><rect x="71.2383%" y="261" width="0.0193%" height="15" fill="rgb(223,77,29)"/><text x="71.4883%" y="271.50"></text></g><g><title>_int_free (170 samples, 0.55%)</title><rect x="71.2576%" y="389" width="0.5455%" height="15" fill="rgb(234,94,52)"/><text x="71.5076%" y="399.50"></text></g><g><title>malloc_consolidate (170 samples, 0.55%)</title><rect x="71.2576%" y="373" width="0.5455%" height="15" fill="rgb(220,154,50)"/><text x="71.5076%" y="383.50"></text></g><g><title>unlink_chunk (98 samples, 0.31%)</title><rect x="71.4886%" y="357" width="0.3145%" height="15" fill="rgb(212,11,10)"/><text x="71.7386%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.07%)</title><rect x="71.8031%" y="373" width="0.0674%" height="15" fill="rgb(205,166,19)"/><text x="72.0531%" y="383.50"></text></g><g><title>__GI_munmap (15 samples, 0.05%)</title><rect x="71.8705%" y="373" width="0.0481%" height="15" fill="rgb(244,198,16)"/><text x="72.1205%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.05%)</title><rect x="71.8705%" y="357" width="0.0481%" height="15" fill="rgb(219,69,12)"/><text x="72.1205%" y="367.50"></text></g><g><title>do_syscall_64 (15 samples, 0.05%)</title><rect x="71.8705%" y="341" width="0.0481%" height="15" fill="rgb(245,30,7)"/><text x="72.1205%" y="351.50"></text></g><g><title>__x64_sys_munmap (15 samples, 0.05%)</title><rect x="71.8705%" y="325" width="0.0481%" height="15" fill="rgb(218,221,48)"/><text x="72.1205%" y="335.50"></text></g><g><title>__vm_munmap (15 samples, 0.05%)</title><rect x="71.8705%" y="309" width="0.0481%" height="15" fill="rgb(216,66,15)"/><text x="72.1205%" y="319.50"></text></g><g><title>__do_munmap (15 samples, 0.05%)</title><rect x="71.8705%" y="293" width="0.0481%" height="15" fill="rgb(226,122,50)"/><text x="72.1205%" y="303.50"></text></g><g><title>unmap_region (15 samples, 0.05%)</title><rect x="71.8705%" y="277" width="0.0481%" height="15" fill="rgb(239,156,16)"/><text x="72.1205%" y="287.50"></text></g><g><title>unmap_vmas (13 samples, 0.04%)</title><rect x="71.8769%" y="261" width="0.0417%" height="15" fill="rgb(224,27,38)"/><text x="72.1269%" y="271.50"></text></g><g><title>unmap_page_range (13 samples, 0.04%)</title><rect x="71.8769%" y="245" width="0.0417%" height="15" fill="rgb(224,39,27)"/><text x="72.1269%" y="255.50"></text></g><g><title>tlb_flush_mmu (8 samples, 0.03%)</title><rect x="71.8929%" y="229" width="0.0257%" height="15" fill="rgb(215,92,29)"/><text x="72.1429%" y="239.50"></text></g><g><title>release_pages (7 samples, 0.02%)</title><rect x="71.8962%" y="213" width="0.0225%" height="15" fill="rgb(207,159,16)"/><text x="72.1462%" y="223.50"></text></g><g><title>free_unref_page_list (4 samples, 0.01%)</title><rect x="71.9058%" y="197" width="0.0128%" height="15" fill="rgb(238,163,47)"/><text x="72.1558%" y="207.50"></text></g><g><title>free_pcppages_bulk (4 samples, 0.01%)</title><rect x="71.9058%" y="181" width="0.0128%" height="15" fill="rgb(219,91,49)"/><text x="72.1558%" y="191.50"></text></g><g><title>__GI___libc_free (96 samples, 0.31%)</title><rect x="71.9956%" y="341" width="0.3081%" height="15" fill="rgb(227,167,31)"/><text x="72.2456%" y="351.50"></text></g><g><title>malloc_consolidate (59 samples, 0.19%)</title><rect x="72.6599%" y="325" width="0.1893%" height="15" fill="rgb(234,80,54)"/><text x="72.9099%" y="335.50"></text></g><g><title>unlink_chunk (17 samples, 0.05%)</title><rect x="72.7947%" y="309" width="0.0546%" height="15" fill="rgb(212,114,2)"/><text x="73.0447%" y="319.50"></text></g><g><title>_int_free (193 samples, 0.62%)</title><rect x="72.3069%" y="341" width="0.6193%" height="15" fill="rgb(234,50,24)"/><text x="72.5569%" y="351.50"></text></g><g><title>unlink_chunk (24 samples, 0.08%)</title><rect x="72.8492%" y="325" width="0.0770%" height="15" fill="rgb(221,68,8)"/><text x="73.0992%" y="335.50"></text></g><g><title>__GI___libc_free (143 samples, 0.46%)</title><rect x="73.2535%" y="325" width="0.4589%" height="15" fill="rgb(254,180,31)"/><text x="73.5035%" y="335.50"></text></g><g><title>entry_SYSCALL_64 (17 samples, 0.05%)</title><rect x="74.4023%" y="293" width="0.0546%" height="15" fill="rgb(247,130,50)"/><text x="74.6523%" y="303.50"></text></g><g><title>update_curr (8 samples, 0.03%)</title><rect x="74.5499%" y="133" width="0.0257%" height="15" fill="rgb(211,109,4)"/><text x="74.7999%" y="143.50"></text></g><g><title>dequeue_task_fair (17 samples, 0.05%)</title><rect x="74.5307%" y="165" width="0.0546%" height="15" fill="rgb(238,50,21)"/><text x="74.7807%" y="175.50"></text></g><g><title>dequeue_entity (15 samples, 0.05%)</title><rect x="74.5371%" y="149" width="0.0481%" height="15" fill="rgb(225,57,45)"/><text x="74.7871%" y="159.50"></text></g><g><title>finish_task_switch (4 samples, 0.01%)</title><rect x="74.5852%" y="165" width="0.0128%" height="15" fill="rgb(209,196,50)"/><text x="74.8352%" y="175.50"></text></g><g><title>psi_task_change (12 samples, 0.04%)</title><rect x="74.6045%" y="165" width="0.0385%" height="15" fill="rgb(242,140,13)"/><text x="74.8545%" y="175.50"></text></g><g><title>psi_group_change (8 samples, 0.03%)</title><rect x="74.6173%" y="149" width="0.0257%" height="15" fill="rgb(217,111,7)"/><text x="74.8673%" y="159.50"></text></g><g><title>futex_wait_queue_me (50 samples, 0.16%)</title><rect x="74.4922%" y="213" width="0.1604%" height="15" fill="rgb(253,193,51)"/><text x="74.7422%" y="223.50"></text></g><g><title>schedule (49 samples, 0.16%)</title><rect x="74.4954%" y="197" width="0.1572%" height="15" fill="rgb(252,70,29)"/><text x="74.7454%" y="207.50"></text></g><g><title>__schedule (47 samples, 0.15%)</title><rect x="74.5018%" y="181" width="0.1508%" height="15" fill="rgb(232,127,12)"/><text x="74.7518%" y="191.50"></text></g><g><title>__get_user_nocheck_4 (9 samples, 0.03%)</title><rect x="74.6976%" y="197" width="0.0289%" height="15" fill="rgb(211,180,21)"/><text x="74.9476%" y="207.50"></text></g><g><title>do_syscall_64 (88 samples, 0.28%)</title><rect x="74.4601%" y="277" width="0.2824%" height="15" fill="rgb(229,72,13)"/><text x="74.7101%" y="287.50"></text></g><g><title>__x64_sys_futex (88 samples, 0.28%)</title><rect x="74.4601%" y="261" width="0.2824%" height="15" fill="rgb(240,211,49)"/><text x="74.7101%" y="271.50"></text></g><g><title>do_futex (85 samples, 0.27%)</title><rect x="74.4697%" y="245" width="0.2728%" height="15" fill="rgb(219,149,40)"/><text x="74.7197%" y="255.50"></text></g><g><title>futex_wait (84 samples, 0.27%)</title><rect x="74.4729%" y="229" width="0.2696%" height="15" fill="rgb(210,127,46)"/><text x="74.7229%" y="239.50"></text></g><g><title>futex_wait_setup (28 samples, 0.09%)</title><rect x="74.6526%" y="213" width="0.0899%" height="15" fill="rgb(220,106,7)"/><text x="74.9026%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (126 samples, 0.40%)</title><rect x="74.4569%" y="293" width="0.4043%" height="15" fill="rgb(249,31,22)"/><text x="74.7069%" y="303.50"></text></g><g><title>syscall_exit_to_user_mode (37 samples, 0.12%)</title><rect x="74.7425%" y="277" width="0.1187%" height="15" fill="rgb(253,1,49)"/><text x="74.9925%" y="287.50"></text></g><g><title>__lll_lock_wait_private (178 samples, 0.57%)</title><rect x="74.3478%" y="309" width="0.5712%" height="15" fill="rgb(227,144,33)"/><text x="74.5978%" y="319.50"></text></g><g><title>syscall_return_via_sysret (18 samples, 0.06%)</title><rect x="74.8612%" y="293" width="0.0578%" height="15" fill="rgb(249,163,44)"/><text x="75.1112%" y="303.50"></text></g><g><title>entry_SYSCALL_64 (19 samples, 0.06%)</title><rect x="74.9190%" y="309" width="0.0610%" height="15" fill="rgb(234,15,39)"/><text x="75.1690%" y="319.50"></text></g><g><title>_raw_spin_lock (5 samples, 0.02%)</title><rect x="75.0281%" y="229" width="0.0160%" height="15" fill="rgb(207,66,16)"/><text x="75.2781%" y="239.50"></text></g><g><title>__x64_sys_futex (27 samples, 0.09%)</title><rect x="74.9799%" y="277" width="0.0866%" height="15" fill="rgb(233,112,24)"/><text x="75.2299%" y="287.50"></text></g><g><title>do_futex (23 samples, 0.07%)</title><rect x="74.9928%" y="261" width="0.0738%" height="15" fill="rgb(230,90,22)"/><text x="75.2428%" y="271.50"></text></g><g><title>futex_wake (20 samples, 0.06%)</title><rect x="75.0024%" y="245" width="0.0642%" height="15" fill="rgb(229,61,13)"/><text x="75.2524%" y="255.50"></text></g><g><title>do_syscall_64 (28 samples, 0.09%)</title><rect x="74.9799%" y="293" width="0.0899%" height="15" fill="rgb(225,57,24)"/><text x="75.2299%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (72 samples, 0.23%)</title><rect x="74.9799%" y="309" width="0.2310%" height="15" fill="rgb(208,169,48)"/><text x="75.2299%" y="319.50"></text></g><g><title>syscall_exit_to_user_mode (44 samples, 0.14%)</title><rect x="75.0698%" y="293" width="0.1412%" height="15" fill="rgb(244,218,51)"/><text x="75.3198%" y="303.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.02%)</title><rect x="75.1949%" y="277" width="0.0160%" height="15" fill="rgb(214,148,10)"/><text x="75.4449%" y="287.50"></text></g><g><title>syscall_return_via_sysret (17 samples, 0.05%)</title><rect x="75.2110%" y="309" width="0.0546%" height="15" fill="rgb(225,174,27)"/><text x="75.4610%" y="319.50"></text></g><g><title>bytes::bytes::shared_drop (849 samples, 2.72%)</title><rect x="72.9262%" y="341" width="2.7244%" height="15" fill="rgb(230,96,26)"/><text x="73.1762%" y="351.50">by..</text></g><g><title>_int_free (603 samples, 1.93%)</title><rect x="73.7156%" y="325" width="1.9350%" height="15" fill="rgb(232,10,30)"/><text x="73.9656%" y="335.50">_..</text></g><g><title>unlink_chunk (120 samples, 0.39%)</title><rect x="75.2655%" y="309" width="0.3851%" height="15" fill="rgb(222,8,50)"/><text x="75.5155%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,203 samples, 3.86%)</title><rect x="71.9186%" y="357" width="3.8603%" height="15" fill="rgb(213,81,27)"/><text x="72.1686%" y="367.50">&lt;has..</text></g><g><title>core::ptr::drop_in_place (40 samples, 0.13%)</title><rect x="75.6506%" y="341" width="0.1284%" height="15" fill="rgb(245,50,10)"/><text x="75.9006%" y="351.50"></text></g><g><title>__list_del_entry_valid (4 samples, 0.01%)</title><rect x="75.8175%" y="181" width="0.0128%" height="15" fill="rgb(216,100,18)"/><text x="76.0675%" y="191.50"></text></g><g><title>__GI_munmap (22 samples, 0.07%)</title><rect x="75.7790%" y="357" width="0.0706%" height="15" fill="rgb(236,147,54)"/><text x="76.0290%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (22 samples, 0.07%)</title><rect x="75.7790%" y="341" width="0.0706%" height="15" fill="rgb(205,143,26)"/><text x="76.0290%" y="351.50"></text></g><g><title>do_syscall_64 (22 samples, 0.07%)</title><rect x="75.7790%" y="325" width="0.0706%" height="15" fill="rgb(236,26,9)"/><text x="76.0290%" y="335.50"></text></g><g><title>__x64_sys_munmap (22 samples, 0.07%)</title><rect x="75.7790%" y="309" width="0.0706%" height="15" fill="rgb(221,165,53)"/><text x="76.0290%" y="319.50"></text></g><g><title>__vm_munmap (22 samples, 0.07%)</title><rect x="75.7790%" y="293" width="0.0706%" height="15" fill="rgb(214,110,17)"/><text x="76.0290%" y="303.50"></text></g><g><title>__do_munmap (22 samples, 0.07%)</title><rect x="75.7790%" y="277" width="0.0706%" height="15" fill="rgb(237,197,12)"/><text x="76.0290%" y="287.50"></text></g><g><title>unmap_region (22 samples, 0.07%)</title><rect x="75.7790%" y="261" width="0.0706%" height="15" fill="rgb(205,84,17)"/><text x="76.0290%" y="271.50"></text></g><g><title>unmap_vmas (21 samples, 0.07%)</title><rect x="75.7822%" y="245" width="0.0674%" height="15" fill="rgb(237,18,45)"/><text x="76.0322%" y="255.50"></text></g><g><title>unmap_page_range (21 samples, 0.07%)</title><rect x="75.7822%" y="229" width="0.0674%" height="15" fill="rgb(221,87,14)"/><text x="76.0322%" y="239.50"></text></g><g><title>tlb_flush_mmu (13 samples, 0.04%)</title><rect x="75.8078%" y="213" width="0.0417%" height="15" fill="rgb(238,186,15)"/><text x="76.0578%" y="223.50"></text></g><g><title>release_pages (11 samples, 0.04%)</title><rect x="75.8143%" y="197" width="0.0353%" height="15" fill="rgb(208,115,11)"/><text x="76.0643%" y="207.50"></text></g><g><title>free_unref_page_list (5 samples, 0.02%)</title><rect x="75.8335%" y="181" width="0.0160%" height="15" fill="rgb(254,175,0)"/><text x="76.0835%" y="191.50"></text></g><g><title>__free_one_page (5 samples, 0.02%)</title><rect x="75.8720%" y="85" width="0.0160%" height="15" fill="rgb(227,24,42)"/><text x="76.1220%" y="95.50"></text></g><g><title>free_pcppages_bulk (8 samples, 0.03%)</title><rect x="75.8720%" y="101" width="0.0257%" height="15" fill="rgb(223,211,37)"/><text x="76.1220%" y="111.50"></text></g><g><title>free_unref_page_list (11 samples, 0.04%)</title><rect x="75.8688%" y="117" width="0.0353%" height="15" fill="rgb(235,49,27)"/><text x="76.1188%" y="127.50"></text></g><g><title>__pagevec_release (19 samples, 0.06%)</title><rect x="75.8560%" y="149" width="0.0610%" height="15" fill="rgb(254,97,51)"/><text x="76.1060%" y="159.50"></text></g><g><title>release_pages (19 samples, 0.06%)</title><rect x="75.8560%" y="133" width="0.0610%" height="15" fill="rgb(249,51,40)"/><text x="76.1060%" y="143.50"></text></g><g><title>mem_cgroup_uncharge_list (4 samples, 0.01%)</title><rect x="75.9041%" y="117" width="0.0128%" height="15" fill="rgb(210,128,45)"/><text x="76.1541%" y="127.50"></text></g><g><title>delete_from_page_cache_batch (17 samples, 0.05%)</title><rect x="75.9202%" y="149" width="0.0546%" height="15" fill="rgb(224,137,50)"/><text x="76.1702%" y="159.50"></text></g><g><title>xas_store (9 samples, 0.03%)</title><rect x="75.9458%" y="133" width="0.0289%" height="15" fill="rgb(242,15,9)"/><text x="76.1958%" y="143.50"></text></g><g><title>pagevec_lookup_entries (6 samples, 0.02%)</title><rect x="75.9747%" y="149" width="0.0193%" height="15" fill="rgb(233,187,41)"/><text x="76.2247%" y="159.50"></text></g><g><title>find_get_entries (6 samples, 0.02%)</title><rect x="75.9747%" y="133" width="0.0193%" height="15" fill="rgb(227,2,29)"/><text x="76.2247%" y="143.50"></text></g><g><title>truncate_exceptional_pvec_entries.part.0 (8 samples, 0.03%)</title><rect x="76.0036%" y="149" width="0.0257%" height="15" fill="rgb(222,70,3)"/><text x="76.2536%" y="159.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2,227 samples, 7.15%)</title><rect x="68.8862%" y="405" width="7.1463%" height="15" fill="rgb(213,11,42)"/><text x="69.1362%" y="415.50">alloc::syn..</text></g><g><title>core::ptr::drop_in_place (1,318 samples, 4.23%)</title><rect x="71.8031%" y="389" width="4.2294%" height="15" fill="rgb(225,150,9)"/><text x="72.0531%" y="399.50">core:..</text></g><g><title>core::ptr::drop_in_place (1,282 samples, 4.11%)</title><rect x="71.9186%" y="373" width="4.1139%" height="15" fill="rgb(230,162,45)"/><text x="72.1686%" y="383.50">core..</text></g><g><title>core::ptr::drop_in_place (57 samples, 0.18%)</title><rect x="75.8496%" y="357" width="0.1829%" height="15" fill="rgb(222,14,52)"/><text x="76.0996%" y="367.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (57 samples, 0.18%)</title><rect x="75.8496%" y="341" width="0.1829%" height="15" fill="rgb(254,198,14)"/><text x="76.0996%" y="351.50"></text></g><g><title>__close (57 samples, 0.18%)</title><rect x="75.8496%" y="325" width="0.1829%" height="15" fill="rgb(220,217,30)"/><text x="76.0996%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (57 samples, 0.18%)</title><rect x="75.8496%" y="309" width="0.1829%" height="15" fill="rgb(215,146,41)"/><text x="76.0996%" y="319.50"></text></g><g><title>syscall_exit_to_user_mode (57 samples, 0.18%)</title><rect x="75.8496%" y="293" width="0.1829%" height="15" fill="rgb(217,27,36)"/><text x="76.0996%" y="303.50"></text></g><g><title>exit_to_user_mode_prepare (57 samples, 0.18%)</title><rect x="75.8496%" y="277" width="0.1829%" height="15" fill="rgb(219,218,39)"/><text x="76.0996%" y="287.50"></text></g><g><title>task_work_run (57 samples, 0.18%)</title><rect x="75.8496%" y="261" width="0.1829%" height="15" fill="rgb(219,4,42)"/><text x="76.0996%" y="271.50"></text></g><g><title>__fput (57 samples, 0.18%)</title><rect x="75.8496%" y="245" width="0.1829%" height="15" fill="rgb(249,119,36)"/><text x="76.0996%" y="255.50"></text></g><g><title>dput (57 samples, 0.18%)</title><rect x="75.8496%" y="229" width="0.1829%" height="15" fill="rgb(209,23,33)"/><text x="76.0996%" y="239.50"></text></g><g><title>__dentry_kill (57 samples, 0.18%)</title><rect x="75.8496%" y="213" width="0.1829%" height="15" fill="rgb(211,10,0)"/><text x="76.0996%" y="223.50"></text></g><g><title>evict (57 samples, 0.18%)</title><rect x="75.8496%" y="197" width="0.1829%" height="15" fill="rgb(208,99,37)"/><text x="76.0996%" y="207.50"></text></g><g><title>ext4_evict_inode (57 samples, 0.18%)</title><rect x="75.8496%" y="181" width="0.1829%" height="15" fill="rgb(213,132,31)"/><text x="76.0996%" y="191.50"></text></g><g><title>truncate_inode_pages_range (56 samples, 0.18%)</title><rect x="75.8528%" y="165" width="0.1797%" height="15" fill="rgb(243,129,40)"/><text x="76.1028%" y="175.50"></text></g><g><title>alloc_pages_vma (6 samples, 0.02%)</title><rect x="76.0485%" y="341" width="0.0193%" height="15" fill="rgb(210,66,33)"/><text x="76.2985%" y="351.50"></text></g><g><title>__alloc_pages_nodemask (6 samples, 0.02%)</title><rect x="76.0485%" y="325" width="0.0193%" height="15" fill="rgb(209,189,4)"/><text x="76.2985%" y="335.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.02%)</title><rect x="76.0517%" y="309" width="0.0160%" height="15" fill="rgb(214,107,37)"/><text x="76.3017%" y="319.50"></text></g><g><title>lru_cache_add (4 samples, 0.01%)</title><rect x="76.0742%" y="341" width="0.0128%" height="15" fill="rgb(245,88,54)"/><text x="76.3242%" y="351.50"></text></g><g><title>pagevec_lru_move_fn (4 samples, 0.01%)</title><rect x="76.0742%" y="325" width="0.0128%" height="15" fill="rgb(205,146,20)"/><text x="76.3242%" y="335.50"></text></g><g><title>mem_cgroup_charge (5 samples, 0.02%)</title><rect x="76.0870%" y="341" width="0.0160%" height="15" fill="rgb(220,161,25)"/><text x="76.3370%" y="351.50"></text></g><g><title>exc_page_fault (22 samples, 0.07%)</title><rect x="76.0357%" y="389" width="0.0706%" height="15" fill="rgb(215,152,15)"/><text x="76.2857%" y="399.50"></text></g><g><title>do_user_addr_fault (22 samples, 0.07%)</title><rect x="76.0357%" y="373" width="0.0706%" height="15" fill="rgb(233,192,44)"/><text x="76.2857%" y="383.50"></text></g><g><title>handle_mm_fault (20 samples, 0.06%)</title><rect x="76.0421%" y="357" width="0.0642%" height="15" fill="rgb(240,170,46)"/><text x="76.2921%" y="367.50"></text></g><g><title>asm_exc_page_fault (25 samples, 0.08%)</title><rect x="76.0357%" y="405" width="0.0802%" height="15" fill="rgb(207,104,33)"/><text x="76.2857%" y="415.50"></text></g><g><title>&lt;ate::anti_replay::AntiReplayPlugin as ate::validator::EventValidator&gt;::validate (103 samples, 0.33%)</title><rect x="76.1352%" y="389" width="0.3305%" height="15" fill="rgb(219,21,39)"/><text x="76.3852%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.01%)</title><rect x="76.5267%" y="341" width="0.0128%" height="15" fill="rgb(214,133,29)"/><text x="76.7767%" y="351.50"></text></g><g><title>std::time::SystemTime::duration_since (9 samples, 0.03%)</title><rect x="76.5234%" y="357" width="0.0289%" height="15" fill="rgb(226,93,6)"/><text x="76.7734%" y="367.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (4 samples, 0.01%)</title><rect x="76.5395%" y="341" width="0.0128%" height="15" fill="rgb(252,222,34)"/><text x="76.7895%" y="351.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (4 samples, 0.01%)</title><rect x="76.5395%" y="325" width="0.0128%" height="15" fill="rgb(252,92,48)"/><text x="76.7895%" y="335.50"></text></g><g><title>&lt;ate::time::TimestampEnforcer as ate::validator::EventValidator&gt;::validate (40 samples, 0.13%)</title><rect x="76.4657%" y="389" width="0.1284%" height="15" fill="rgb(245,223,24)"/><text x="76.7157%" y="399.50"></text></g><g><title>ate::time::TimestampEnforcer::current_timestamp (35 samples, 0.11%)</title><rect x="76.4817%" y="373" width="0.1123%" height="15" fill="rgb(205,176,3)"/><text x="76.7317%" y="383.50"></text></g><g><title>std::time::SystemTime::now (13 samples, 0.04%)</title><rect x="76.5523%" y="357" width="0.0417%" height="15" fill="rgb(235,151,15)"/><text x="76.8023%" y="367.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (13 samples, 0.04%)</title><rect x="76.5523%" y="341" width="0.0417%" height="15" fill="rgb(237,209,11)"/><text x="76.8023%" y="351.50"></text></g><g><title>std::sys::unix::time::inner::now (13 samples, 0.04%)</title><rect x="76.5523%" y="325" width="0.0417%" height="15" fill="rgb(243,227,24)"/><text x="76.8023%" y="335.50"></text></g><g><title>__GI___clock_gettime (12 samples, 0.04%)</title><rect x="76.5555%" y="309" width="0.0385%" height="15" fill="rgb(239,193,16)"/><text x="76.8055%" y="319.50"></text></g><g><title>__vdso_clock_gettime (12 samples, 0.04%)</title><rect x="76.5555%" y="293" width="0.0385%" height="15" fill="rgb(231,27,9)"/><text x="76.8055%" y="303.50"></text></g><g><title>[[vdso]] (9 samples, 0.03%)</title><rect x="76.5652%" y="277" width="0.0289%" height="15" fill="rgb(219,169,10)"/><text x="76.8152%" y="287.50"></text></g><g><title>ate::accessor::ChainProtectedSync::validate_event (216 samples, 0.69%)</title><rect x="76.1159%" y="405" width="0.6931%" height="15" fill="rgb(244,229,43)"/><text x="76.3659%" y="415.50"></text></g><g><title>&lt;ate::tree::TreeAuthorityPlugin as ate::validator::EventValidator&gt;::validate (67 samples, 0.21%)</title><rect x="76.5940%" y="389" width="0.2150%" height="15" fill="rgb(254,38,20)"/><text x="76.8440%" y="399.50"></text></g><g><title>ate::tree::TreeAuthorityPlugin::compute_auth (65 samples, 0.21%)</title><rect x="76.6005%" y="373" width="0.2086%" height="15" fill="rgb(250,47,30)"/><text x="76.8505%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (111 samples, 0.36%)</title><rect x="76.8219%" y="389" width="0.3562%" height="15" fill="rgb(224,124,36)"/><text x="77.0719%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (8 samples, 0.03%)</title><rect x="77.1524%" y="373" width="0.0257%" height="15" fill="rgb(246,68,51)"/><text x="77.4024%" y="383.50"></text></g><g><title>handle_mm_fault (12 samples, 0.04%)</title><rect x="77.6145%" y="293" width="0.0385%" height="15" fill="rgb(253,43,49)"/><text x="77.8645%" y="303.50"></text></g><g><title>exc_page_fault (15 samples, 0.05%)</title><rect x="77.6113%" y="325" width="0.0481%" height="15" fill="rgb(219,54,36)"/><text x="77.8613%" y="335.50"></text></g><g><title>do_user_addr_fault (15 samples, 0.05%)</title><rect x="77.6113%" y="309" width="0.0481%" height="15" fill="rgb(227,133,34)"/><text x="77.8613%" y="319.50"></text></g><g><title>asm_exc_page_fault (18 samples, 0.06%)</title><rect x="77.6113%" y="341" width="0.0578%" height="15" fill="rgb(247,227,15)"/><text x="77.8613%" y="351.50"></text></g><g><title>ate::chain::ChainOfTrust::add_history (278 samples, 0.89%)</title><rect x="76.8090%" y="405" width="0.8921%" height="15" fill="rgb(229,96,14)"/><text x="77.0590%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (163 samples, 0.52%)</title><rect x="77.1781%" y="389" width="0.5231%" height="15" fill="rgb(220,79,17)"/><text x="77.4281%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (86 samples, 0.28%)</title><rect x="77.4252%" y="373" width="0.2760%" height="15" fill="rgb(205,131,53)"/><text x="77.6752%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (44 samples, 0.14%)</title><rect x="77.5599%" y="357" width="0.1412%" height="15" fill="rgb(209,50,29)"/><text x="77.8099%" y="367.50"></text></g><g><title>error_entry (7 samples, 0.02%)</title><rect x="77.6787%" y="341" width="0.0225%" height="15" fill="rgb(245,86,46)"/><text x="77.9287%" y="351.50"></text></g><g><title>sync_regs (5 samples, 0.02%)</title><rect x="77.6851%" y="325" width="0.0160%" height="15" fill="rgb(235,66,46)"/><text x="77.9351%" y="335.50"></text></g><g><title>alloc_pages_vma (4 samples, 0.01%)</title><rect x="78.0990%" y="261" width="0.0128%" height="15" fill="rgb(232,148,31)"/><text x="78.3490%" y="271.50"></text></g><g><title>__alloc_pages_nodemask (4 samples, 0.01%)</title><rect x="78.0990%" y="245" width="0.0128%" height="15" fill="rgb(217,149,8)"/><text x="78.3490%" y="255.50"></text></g><g><title>get_page_from_freelist (4 samples, 0.01%)</title><rect x="78.0990%" y="229" width="0.0128%" height="15" fill="rgb(209,183,11)"/><text x="78.3490%" y="239.50"></text></g><g><title>exc_page_fault (8 samples, 0.03%)</title><rect x="78.0990%" y="309" width="0.0257%" height="15" fill="rgb(208,55,20)"/><text x="78.3490%" y="319.50"></text></g><g><title>do_user_addr_fault (8 samples, 0.03%)</title><rect x="78.0990%" y="293" width="0.0257%" height="15" fill="rgb(218,39,14)"/><text x="78.3490%" y="303.50"></text></g><g><title>handle_mm_fault (8 samples, 0.03%)</title><rect x="78.0990%" y="277" width="0.0257%" height="15" fill="rgb(216,169,33)"/><text x="78.3490%" y="287.50"></text></g><g><title>asm_exc_page_fault (10 samples, 0.03%)</title><rect x="78.0990%" y="325" width="0.0321%" height="15" fill="rgb(233,80,24)"/><text x="78.3490%" y="335.50"></text></g><g><title>do_syscall_64 (9 samples, 0.03%)</title><rect x="78.1311%" y="277" width="0.0289%" height="15" fill="rgb(213,179,31)"/><text x="78.3811%" y="287.50"></text></g><g><title>__x64_sys_mprotect (9 samples, 0.03%)</title><rect x="78.1311%" y="261" width="0.0289%" height="15" fill="rgb(209,19,5)"/><text x="78.3811%" y="271.50"></text></g><g><title>do_mprotect_pkey (8 samples, 0.03%)</title><rect x="78.1343%" y="245" width="0.0257%" height="15" fill="rgb(219,18,35)"/><text x="78.3843%" y="255.50"></text></g><g><title>mprotect_fixup (8 samples, 0.03%)</title><rect x="78.1343%" y="229" width="0.0257%" height="15" fill="rgb(209,169,16)"/><text x="78.3843%" y="239.50"></text></g><g><title>perf_event_mmap (6 samples, 0.02%)</title><rect x="78.1407%" y="213" width="0.0193%" height="15" fill="rgb(245,90,51)"/><text x="78.3907%" y="223.50"></text></g><g><title>perf_iterate_sb (6 samples, 0.02%)</title><rect x="78.1407%" y="197" width="0.0193%" height="15" fill="rgb(220,99,45)"/><text x="78.3907%" y="207.50"></text></g><g><title>perf_iterate_ctx (6 samples, 0.02%)</title><rect x="78.1407%" y="181" width="0.0193%" height="15" fill="rgb(249,89,25)"/><text x="78.3907%" y="191.50"></text></g><g><title>perf_event_mmap_output (4 samples, 0.01%)</title><rect x="78.1472%" y="165" width="0.0128%" height="15" fill="rgb(239,193,0)"/><text x="78.3972%" y="175.50"></text></g><g><title>_int_malloc (61 samples, 0.20%)</title><rect x="77.9675%" y="357" width="0.1957%" height="15" fill="rgb(231,126,1)"/><text x="78.2175%" y="367.50"></text></g><g><title>sysmalloc (23 samples, 0.07%)</title><rect x="78.0894%" y="341" width="0.0738%" height="15" fill="rgb(243,166,3)"/><text x="78.3394%" y="351.50"></text></g><g><title>grow_heap (10 samples, 0.03%)</title><rect x="78.1311%" y="325" width="0.0321%" height="15" fill="rgb(223,22,34)"/><text x="78.3811%" y="335.50"></text></g><g><title>__GI___mprotect (10 samples, 0.03%)</title><rect x="78.1311%" y="309" width="0.0321%" height="15" fill="rgb(251,52,51)"/><text x="78.3811%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 0.03%)</title><rect x="78.1311%" y="293" width="0.0321%" height="15" fill="rgb(221,165,28)"/><text x="78.3811%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (130 samples, 0.42%)</title><rect x="77.7525%" y="389" width="0.4172%" height="15" fill="rgb(218,121,47)"/><text x="78.0025%" y="399.50"></text></g><g><title>__GI___libc_malloc (70 samples, 0.22%)</title><rect x="77.9450%" y="373" width="0.2246%" height="15" fill="rgb(209,120,9)"/><text x="78.1950%" y="383.50"></text></g><g><title>_int_malloc (69 samples, 0.22%)</title><rect x="78.3076%" y="325" width="0.2214%" height="15" fill="rgb(236,68,12)"/><text x="78.5576%" y="335.50"></text></g><g><title>unlink_chunk (7 samples, 0.02%)</title><rect x="78.5066%" y="309" width="0.0225%" height="15" fill="rgb(225,194,26)"/><text x="78.7566%" y="319.50"></text></g><g><title>__GI___libc_malloc (87 samples, 0.28%)</title><rect x="78.2563%" y="341" width="0.2792%" height="15" fill="rgb(231,84,39)"/><text x="78.5063%" y="351.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.02%)</title><rect x="78.6734%" y="309" width="0.0193%" height="15" fill="rgb(210,11,45)"/><text x="78.9234%" y="319.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::CoreMetadata&gt;::serialize (40 samples, 0.13%)</title><rect x="78.5675%" y="325" width="0.1284%" height="15" fill="rgb(224,54,52)"/><text x="78.8175%" y="335.50"></text></g><g><title>ate::spec::SerializationFormat::serialize (151 samples, 0.48%)</title><rect x="78.2242%" y="373" width="0.4845%" height="15" fill="rgb(238,102,14)"/><text x="78.4742%" y="383.50"></text></g><g><title>bincode::serialize (145 samples, 0.47%)</title><rect x="78.2434%" y="357" width="0.4653%" height="15" fill="rgb(243,160,52)"/><text x="78.4934%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (52 samples, 0.17%)</title><rect x="78.5419%" y="341" width="0.1669%" height="15" fill="rgb(216,114,19)"/><text x="78.7919%" y="351.50"></text></g><g><title>ate::meta::_::&lt;impl serde::ser::Serialize for ate::meta::MetaAuthorization&gt;::serialize (4 samples, 0.01%)</title><rect x="78.6959%" y="325" width="0.0128%" height="15" fill="rgb(244,166,37)"/><text x="78.9459%" y="335.50"></text></g><g><title>ate::event::EventData::as_header (367 samples, 1.18%)</title><rect x="77.7011%" y="405" width="1.1777%" height="15" fill="rgb(246,29,44)"/><text x="77.9511%" y="415.50"></text></g><g><title>ate::event::EventData::as_header_raw (221 samples, 0.71%)</title><rect x="78.1696%" y="389" width="0.7092%" height="15" fill="rgb(215,56,53)"/><text x="78.4196%" y="399.50"></text></g><g><title>blake3::hash (53 samples, 0.17%)</title><rect x="78.7087%" y="373" width="0.1701%" height="15" fill="rgb(217,60,2)"/><text x="78.9587%" y="383.50"></text></g><g><title>blake3::ChunkState::update (25 samples, 0.08%)</title><rect x="78.7986%" y="357" width="0.0802%" height="15" fill="rgb(207,26,24)"/><text x="79.0486%" y="367.50"></text></g><g><title>alloc_pages_vma (7 samples, 0.02%)</title><rect x="79.5912%" y="293" width="0.0225%" height="15" fill="rgb(252,210,15)"/><text x="79.8412%" y="303.50"></text></g><g><title>__alloc_pages_nodemask (6 samples, 0.02%)</title><rect x="79.5944%" y="277" width="0.0193%" height="15" fill="rgb(253,209,26)"/><text x="79.8444%" y="287.50"></text></g><g><title>get_page_from_freelist (6 samples, 0.02%)</title><rect x="79.5944%" y="261" width="0.0193%" height="15" fill="rgb(238,170,14)"/><text x="79.8444%" y="271.50"></text></g><g><title>prep_new_page (4 samples, 0.01%)</title><rect x="79.6008%" y="245" width="0.0128%" height="15" fill="rgb(216,178,15)"/><text x="79.8508%" y="255.50"></text></g><g><title>kernel_init_free_pages (4 samples, 0.01%)</title><rect x="79.6008%" y="229" width="0.0128%" height="15" fill="rgb(250,197,2)"/><text x="79.8508%" y="239.50"></text></g><g><title>clear_page_erms (4 samples, 0.01%)</title><rect x="79.6008%" y="213" width="0.0128%" height="15" fill="rgb(212,70,42)"/><text x="79.8508%" y="223.50"></text></g><g><title>exc_page_fault (10 samples, 0.03%)</title><rect x="79.5848%" y="341" width="0.0321%" height="15" fill="rgb(227,213,9)"/><text x="79.8348%" y="351.50"></text></g><g><title>do_user_addr_fault (10 samples, 0.03%)</title><rect x="79.5848%" y="325" width="0.0321%" height="15" fill="rgb(245,99,25)"/><text x="79.8348%" y="335.50"></text></g><g><title>handle_mm_fault (10 samples, 0.03%)</title><rect x="79.5848%" y="309" width="0.0321%" height="15" fill="rgb(250,82,29)"/><text x="79.8348%" y="319.50"></text></g><g><title>asm_exc_page_fault (12 samples, 0.04%)</title><rect x="79.5848%" y="357" width="0.0385%" height="15" fill="rgb(241,226,54)"/><text x="79.8348%" y="367.50"></text></g><g><title>ate::index::BinaryTreeIndexer::feed (233 samples, 0.75%)</title><rect x="78.8788%" y="405" width="0.7477%" height="15" fill="rgb(221,99,41)"/><text x="79.1288%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (86 samples, 0.28%)</title><rect x="79.3505%" y="389" width="0.2760%" height="15" fill="rgb(213,90,21)"/><text x="79.6005%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (44 samples, 0.14%)</title><rect x="79.4853%" y="373" width="0.1412%" height="15" fill="rgb(205,208,24)"/><text x="79.7353%" y="383.50"></text></g><g><title>_int_malloc (15 samples, 0.05%)</title><rect x="79.6778%" y="357" width="0.0481%" height="15" fill="rgb(246,31,12)"/><text x="79.9278%" y="367.50"></text></g><g><title>bytes::bytes::promotable_even_clone (32 samples, 0.10%)</title><rect x="79.6265%" y="405" width="0.1027%" height="15" fill="rgb(213,154,6)"/><text x="79.8765%" y="415.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (31 samples, 0.10%)</title><rect x="79.6297%" y="389" width="0.0995%" height="15" fill="rgb(222,163,29)"/><text x="79.8797%" y="399.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.05%)</title><rect x="79.6778%" y="373" width="0.0513%" height="15" fill="rgb(227,201,8)"/><text x="79.9278%" y="383.50"></text></g><g><title>bytes::bytes::shared_drop (17 samples, 0.05%)</title><rect x="79.7292%" y="405" width="0.0546%" height="15" fill="rgb(233,9,32)"/><text x="79.9792%" y="415.50"></text></g><g><title>__GI___libc_free (6 samples, 0.02%)</title><rect x="79.8222%" y="389" width="0.0193%" height="15" fill="rgb(217,54,24)"/><text x="80.0722%" y="399.50"></text></g><g><title>__get_user_nocheck_4 (5 samples, 0.02%)</title><rect x="80.1688%" y="261" width="0.0160%" height="15" fill="rgb(235,192,0)"/><text x="80.4188%" y="271.50"></text></g><g><title>do_syscall_64 (16 samples, 0.05%)</title><rect x="80.1463%" y="341" width="0.0513%" height="15" fill="rgb(235,45,9)"/><text x="80.3963%" y="351.50"></text></g><g><title>__x64_sys_futex (16 samples, 0.05%)</title><rect x="80.1463%" y="325" width="0.0513%" height="15" fill="rgb(246,42,40)"/><text x="80.3963%" y="335.50"></text></g><g><title>do_futex (16 samples, 0.05%)</title><rect x="80.1463%" y="309" width="0.0513%" height="15" fill="rgb(248,111,24)"/><text x="80.3963%" y="319.50"></text></g><g><title>futex_wait (16 samples, 0.05%)</title><rect x="80.1463%" y="293" width="0.0513%" height="15" fill="rgb(249,65,22)"/><text x="80.3963%" y="303.50"></text></g><g><title>futex_wait_setup (13 samples, 0.04%)</title><rect x="80.1560%" y="277" width="0.0417%" height="15" fill="rgb(238,111,51)"/><text x="80.4060%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (32 samples, 0.10%)</title><rect x="80.1431%" y="357" width="0.1027%" height="15" fill="rgb(250,118,22)"/><text x="80.3931%" y="367.50"></text></g><g><title>syscall_exit_to_user_mode (15 samples, 0.05%)</title><rect x="80.1977%" y="341" width="0.0481%" height="15" fill="rgb(234,84,26)"/><text x="80.4477%" y="351.50"></text></g><g><title>__lll_lock_wait_private (51 samples, 0.16%)</title><rect x="80.0982%" y="373" width="0.1637%" height="15" fill="rgb(243,172,12)"/><text x="80.3482%" y="383.50"></text></g><g><title>syscall_return_via_sysret (5 samples, 0.02%)</title><rect x="80.2458%" y="357" width="0.0160%" height="15" fill="rgb(236,150,49)"/><text x="80.4958%" y="367.50"></text></g><g><title>entry_SYSCALL_64 (19 samples, 0.06%)</title><rect x="80.2651%" y="373" width="0.0610%" height="15" fill="rgb(225,197,26)"/><text x="80.5151%" y="383.50"></text></g><g><title>_raw_spin_lock (5 samples, 0.02%)</title><rect x="80.3774%" y="293" width="0.0160%" height="15" fill="rgb(214,17,42)"/><text x="80.6274%" y="303.50"></text></g><g><title>native_queued_spin_lock_slowpath (4 samples, 0.01%)</title><rect x="80.3806%" y="277" width="0.0128%" height="15" fill="rgb(224,165,40)"/><text x="80.6306%" y="287.50"></text></g><g><title>__x64_sys_futex (22 samples, 0.07%)</title><rect x="80.3421%" y="341" width="0.0706%" height="15" fill="rgb(246,100,4)"/><text x="80.5921%" y="351.50"></text></g><g><title>do_futex (21 samples, 0.07%)</title><rect x="80.3453%" y="325" width="0.0674%" height="15" fill="rgb(222,103,0)"/><text x="80.5953%" y="335.50"></text></g><g><title>futex_wake (19 samples, 0.06%)</title><rect x="80.3517%" y="309" width="0.0610%" height="15" fill="rgb(227,189,26)"/><text x="80.6017%" y="319.50"></text></g><g><title>hash_futex (5 samples, 0.02%)</title><rect x="80.3966%" y="293" width="0.0160%" height="15" fill="rgb(214,202,17)"/><text x="80.6466%" y="303.50"></text></g><g><title>do_syscall_64 (24 samples, 0.08%)</title><rect x="80.3389%" y="357" width="0.0770%" height="15" fill="rgb(229,111,3)"/><text x="80.5889%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (67 samples, 0.21%)</title><rect x="80.3260%" y="373" width="0.2150%" height="15" fill="rgb(229,172,15)"/><text x="80.5760%" y="383.50"></text></g><g><title>syscall_exit_to_user_mode (39 samples, 0.13%)</title><rect x="80.4159%" y="357" width="0.1251%" height="15" fill="rgb(230,224,35)"/><text x="80.6659%" y="367.50"></text></g><g><title>syscall_return_via_sysret (16 samples, 0.05%)</title><rect x="80.5442%" y="373" width="0.0513%" height="15" fill="rgb(251,141,6)"/><text x="80.7942%" y="383.50"></text></g><g><title>_int_free (234 samples, 0.75%)</title><rect x="79.8479%" y="389" width="0.7509%" height="15" fill="rgb(225,208,6)"/><text x="80.0979%" y="399.50"></text></g><g><title>bytes::bytes::promotable_even_drop (25 samples, 0.08%)</title><rect x="80.5988%" y="389" width="0.0802%" height="15" fill="rgb(246,181,16)"/><text x="80.8488%" y="399.50"></text></g><g><title>core::ptr::drop_in_place (321 samples, 1.03%)</title><rect x="79.7837%" y="405" width="1.0301%" height="15" fill="rgb(227,129,36)"/><text x="80.0337%" y="415.50"></text></g><g><title>core::ptr::drop_in_place (42 samples, 0.13%)</title><rect x="80.6790%" y="389" width="0.1348%" height="15" fill="rgb(248,117,24)"/><text x="80.9290%" y="399.50"></text></g><g><title>std::panicking::try (6,302 samples, 20.22%)</title><rect x="60.6135%" y="581" width="20.2227%" height="15" fill="rgb(214,185,35)"/><text x="60.8635%" y="591.50">std::panicking::try</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6,302 samples, 20.22%)</title><rect x="60.6135%" y="565" width="20.2227%" height="15" fill="rgb(236,150,34)"/><text x="60.8635%" y="575.50">tokio::loom::std::unsafe_cell::U..</text></g><g><title>tokio::runtime::thread_pool::worker::run (6,302 samples, 20.22%)</title><rect x="60.6135%" y="549" width="20.2227%" height="15" fill="rgb(243,228,27)"/><text x="60.8635%" y="559.50">tokio::runtime::thread_pool::wor..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (6,302 samples, 20.22%)</title><rect x="60.6135%" y="533" width="20.2227%" height="15" fill="rgb(245,77,44)"/><text x="60.8635%" y="543.50">tokio::macros::scoped_tls::Scope..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (6,302 samples, 20.22%)</title><rect x="60.6135%" y="517" width="20.2227%" height="15" fill="rgb(235,214,42)"/><text x="60.8635%" y="527.50">tokio::runtime::thread_pool::wor..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (6,081 samples, 19.51%)</title><rect x="61.3227%" y="501" width="19.5135%" height="15" fill="rgb(221,74,3)"/><text x="61.5727%" y="511.50">tokio::runtime::thread_pool::wo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,062 samples, 19.45%)</title><rect x="61.3837%" y="485" width="19.4526%" height="15" fill="rgb(206,121,29)"/><text x="61.6337%" y="495.50">std::thread::local::LocalKey&lt;T..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6,058 samples, 19.44%)</title><rect x="61.3965%" y="469" width="19.4397%" height="15" fill="rgb(249,131,53)"/><text x="61.6465%" y="479.50">tokio::runtime::task::harness:..</text></g><g><title>tokio::runtime::task::harness::poll_future (6,054 samples, 19.43%)</title><rect x="61.4094%" y="453" width="19.4269%" height="15" fill="rgb(236,170,29)"/><text x="61.6594%" y="463.50">tokio::runtime::task::harness:..</text></g><g><title>std::panic::catch_unwind (6,052 samples, 19.42%)</title><rect x="61.4158%" y="437" width="19.4205%" height="15" fill="rgb(247,96,15)"/><text x="61.6658%" y="447.50">std::panic::catch_unwind</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,049 samples, 19.41%)</title><rect x="61.4254%" y="421" width="19.4108%" height="15" fill="rgb(211,210,7)"/><text x="61.6754%" y="431.50">&lt;core::future::from_generator:..</text></g><g><title>std::sync::mpsc::Sender&lt;T&gt;::send (4 samples, 0.01%)</title><rect x="80.8234%" y="405" width="0.0128%" height="15" fill="rgb(240,88,50)"/><text x="81.0734%" y="415.50"></text></g><g><title>std::sync::mpsc::oneshot::Packet&lt;T&gt;::send (4 samples, 0.01%)</title><rect x="80.8234%" y="389" width="0.0128%" height="15" fill="rgb(209,229,26)"/><text x="81.0734%" y="399.50"></text></g><g><title>std::sync::mpsc::blocking::SignalToken::signal (4 samples, 0.01%)</title><rect x="80.8234%" y="373" width="0.0128%" height="15" fill="rgb(210,68,23)"/><text x="81.0734%" y="383.50"></text></g><g><title>__pthread_disable_asynccancel (4 samples, 0.01%)</title><rect x="80.9710%" y="453" width="0.0128%" height="15" fill="rgb(229,180,13)"/><text x="81.2210%" y="463.50"></text></g><g><title>__pthread_enable_asynccancel (10 samples, 0.03%)</title><rect x="80.9839%" y="453" width="0.0321%" height="15" fill="rgb(236,53,44)"/><text x="81.2339%" y="463.50"></text></g><g><title>crc32c_pcl_intel_update (50 samples, 0.16%)</title><rect x="81.0224%" y="453" width="0.1604%" height="15" fill="rgb(244,214,29)"/><text x="81.2724%" y="463.50"></text></g><g><title>__fget_light (10 samples, 0.03%)</title><rect x="81.2085%" y="389" width="0.0321%" height="15" fill="rgb(220,75,29)"/><text x="81.4585%" y="399.50"></text></g><g><title>__fget_files (7 samples, 0.02%)</title><rect x="81.2181%" y="373" width="0.0225%" height="15" fill="rgb(214,183,37)"/><text x="81.4681%" y="383.50"></text></g><g><title>__fdget_pos (14 samples, 0.04%)</title><rect x="81.2053%" y="405" width="0.0449%" height="15" fill="rgb(239,117,29)"/><text x="81.4553%" y="415.50"></text></g><g><title>__fsnotify_parent (4 samples, 0.01%)</title><rect x="81.2887%" y="389" width="0.0128%" height="15" fill="rgb(237,171,35)"/><text x="81.5387%" y="399.50"></text></g><g><title>down_write (6 samples, 0.02%)</title><rect x="81.3144%" y="357" width="0.0193%" height="15" fill="rgb(229,178,53)"/><text x="81.5644%" y="367.50"></text></g><g><title>ext4_fc_start_update (5 samples, 0.02%)</title><rect x="81.3336%" y="357" width="0.0160%" height="15" fill="rgb(210,102,19)"/><text x="81.5836%" y="367.50"></text></g><g><title>__ext4_journal_start_sb (4 samples, 0.01%)</title><rect x="81.3850%" y="293" width="0.0128%" height="15" fill="rgb(235,127,22)"/><text x="81.6350%" y="303.50"></text></g><g><title>jbd2__journal_start (4 samples, 0.01%)</title><rect x="81.3850%" y="277" width="0.0128%" height="15" fill="rgb(244,31,31)"/><text x="81.6350%" y="287.50"></text></g><g><title>ext4_mark_iloc_dirty (4 samples, 0.01%)</title><rect x="81.3978%" y="277" width="0.0128%" height="15" fill="rgb(231,43,21)"/><text x="81.6478%" y="287.50"></text></g><g><title>file_update_time (17 samples, 0.05%)</title><rect x="81.3657%" y="357" width="0.0546%" height="15" fill="rgb(217,131,35)"/><text x="81.6157%" y="367.50"></text></g><g><title>generic_update_time (12 samples, 0.04%)</title><rect x="81.3818%" y="341" width="0.0385%" height="15" fill="rgb(221,149,4)"/><text x="81.6318%" y="351.50"></text></g><g><title>__mark_inode_dirty (12 samples, 0.04%)</title><rect x="81.3818%" y="325" width="0.0385%" height="15" fill="rgb(232,170,28)"/><text x="81.6318%" y="335.50"></text></g><g><title>ext4_dirty_inode (11 samples, 0.04%)</title><rect x="81.3850%" y="309" width="0.0353%" height="15" fill="rgb(238,56,10)"/><text x="81.6350%" y="319.50"></text></g><g><title>__ext4_mark_inode_dirty (7 samples, 0.02%)</title><rect x="81.3978%" y="293" width="0.0225%" height="15" fill="rgb(235,196,14)"/><text x="81.6478%" y="303.50"></text></g><g><title>__radix_tree_lookup (6 samples, 0.02%)</title><rect x="81.5101%" y="325" width="0.0193%" height="15" fill="rgb(216,45,48)"/><text x="81.7601%" y="335.50"></text></g><g><title>balance_dirty_pages_ratelimited (31 samples, 0.10%)</title><rect x="81.4395%" y="341" width="0.0995%" height="15" fill="rgb(238,213,17)"/><text x="81.6895%" y="351.50"></text></g><g><title>ext4_journal_check_start (5 samples, 0.02%)</title><rect x="81.5839%" y="309" width="0.0160%" height="15" fill="rgb(212,13,2)"/><text x="81.8339%" y="319.50"></text></g><g><title>memcg_slab_post_alloc_hook (4 samples, 0.01%)</title><rect x="81.6321%" y="277" width="0.0128%" height="15" fill="rgb(240,114,20)"/><text x="81.8821%" y="287.50"></text></g><g><title>memset_erms (4 samples, 0.01%)</title><rect x="81.6449%" y="277" width="0.0128%" height="15" fill="rgb(228,41,40)"/><text x="81.8949%" y="287.50"></text></g><g><title>kmem_cache_alloc (19 samples, 0.06%)</title><rect x="81.6064%" y="293" width="0.0610%" height="15" fill="rgb(244,132,35)"/><text x="81.8564%" y="303.50"></text></g><g><title>_raw_read_lock (4 samples, 0.01%)</title><rect x="81.6995%" y="277" width="0.0128%" height="15" fill="rgb(253,189,4)"/><text x="81.9495%" y="287.50"></text></g><g><title>__ext4_journal_start_sb (48 samples, 0.15%)</title><rect x="81.5839%" y="325" width="0.1540%" height="15" fill="rgb(224,37,19)"/><text x="81.8339%" y="335.50"></text></g><g><title>jbd2__journal_start (43 samples, 0.14%)</title><rect x="81.6000%" y="309" width="0.1380%" height="15" fill="rgb(235,223,18)"/><text x="81.8500%" y="319.50"></text></g><g><title>start_this_handle (22 samples, 0.07%)</title><rect x="81.6674%" y="293" width="0.0706%" height="15" fill="rgb(235,163,25)"/><text x="81.9174%" y="303.50"></text></g><g><title>add_transaction_credits (8 samples, 0.03%)</title><rect x="81.7123%" y="277" width="0.0257%" height="15" fill="rgb(217,145,28)"/><text x="81.9623%" y="287.50"></text></g><g><title>_raw_spin_lock (5 samples, 0.02%)</title><rect x="81.8118%" y="293" width="0.0160%" height="15" fill="rgb(223,223,32)"/><text x="82.0618%" y="303.50"></text></g><g><title>memcg_slab_post_alloc_hook (8 samples, 0.03%)</title><rect x="81.9048%" y="245" width="0.0257%" height="15" fill="rgb(227,189,39)"/><text x="82.1548%" y="255.50"></text></g><g><title>get_obj_cgroup_from_current (11 samples, 0.04%)</title><rect x="81.9497%" y="229" width="0.0353%" height="15" fill="rgb(248,10,22)"/><text x="82.1997%" y="239.50"></text></g><g><title>kmem_cache_alloc (53 samples, 0.17%)</title><rect x="81.8374%" y="261" width="0.1701%" height="15" fill="rgb(248,46,39)"/><text x="82.0874%" y="271.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (23 samples, 0.07%)</title><rect x="81.9337%" y="245" width="0.0738%" height="15" fill="rgb(248,113,48)"/><text x="82.1837%" y="255.50"></text></g><g><title>obj_cgroup_charge (7 samples, 0.02%)</title><rect x="81.9850%" y="229" width="0.0225%" height="15" fill="rgb(245,16,25)"/><text x="82.2350%" y="239.50"></text></g><g><title>alloc_buffer_head (55 samples, 0.18%)</title><rect x="81.8342%" y="277" width="0.1765%" height="15" fill="rgb(249,152,16)"/><text x="82.0842%" y="287.50"></text></g><g><title>create_empty_buffers (73 samples, 0.23%)</title><rect x="81.7861%" y="309" width="0.2343%" height="15" fill="rgb(250,16,1)"/><text x="82.0361%" y="319.50"></text></g><g><title>alloc_page_buffers (60 samples, 0.19%)</title><rect x="81.8278%" y="293" width="0.1925%" height="15" fill="rgb(249,138,3)"/><text x="82.0778%" y="303.50"></text></g><g><title>down_read (4 samples, 0.01%)</title><rect x="82.1006%" y="293" width="0.0128%" height="15" fill="rgb(227,71,41)"/><text x="82.3506%" y="303.50"></text></g><g><title>ext4_da_reserve_space (5 samples, 0.02%)</title><rect x="82.1134%" y="293" width="0.0160%" height="15" fill="rgb(209,184,23)"/><text x="82.3634%" y="303.50"></text></g><g><title>__es_insert_extent (8 samples, 0.03%)</title><rect x="82.1391%" y="277" width="0.0257%" height="15" fill="rgb(223,215,31)"/><text x="82.3891%" y="287.50"></text></g><g><title>ext4_es_can_be_merged.isra.0 (4 samples, 0.01%)</title><rect x="82.1519%" y="261" width="0.0128%" height="15" fill="rgb(210,146,28)"/><text x="82.4019%" y="271.50"></text></g><g><title>ext4_es_insert_delayed_block (16 samples, 0.05%)</title><rect x="82.1294%" y="293" width="0.0513%" height="15" fill="rgb(209,183,41)"/><text x="82.3794%" y="303.50"></text></g><g><title>ext4_es_lookup_extent (14 samples, 0.04%)</title><rect x="82.1808%" y="293" width="0.0449%" height="15" fill="rgb(209,224,45)"/><text x="82.4308%" y="303.50"></text></g><g><title>ext4_ext_map_blocks (7 samples, 0.02%)</title><rect x="82.2257%" y="293" width="0.0225%" height="15" fill="rgb(224,209,51)"/><text x="82.4757%" y="303.50"></text></g><g><title>ext4_da_get_block_prep (72 samples, 0.23%)</title><rect x="82.0203%" y="309" width="0.2310%" height="15" fill="rgb(223,17,39)"/><text x="82.2703%" y="319.50"></text></g><g><title>ext4_block_write_begin (162 samples, 0.52%)</title><rect x="81.7412%" y="325" width="0.5198%" height="15" fill="rgb(234,204,37)"/><text x="81.9912%" y="335.50"></text></g><g><title>__next_zones_zonelist (4 samples, 0.01%)</title><rect x="82.3027%" y="277" width="0.0128%" height="15" fill="rgb(236,120,5)"/><text x="82.5527%" y="287.50"></text></g><g><title>__list_del_entry_valid (21 samples, 0.07%)</title><rect x="82.3605%" y="261" width="0.0674%" height="15" fill="rgb(248,97,27)"/><text x="82.6105%" y="271.50"></text></g><g><title>node_dirty_ok (6 samples, 0.02%)</title><rect x="82.4311%" y="261" width="0.0193%" height="15" fill="rgb(240,66,17)"/><text x="82.6811%" y="271.50"></text></g><g><title>kernel_init_free_pages (48 samples, 0.15%)</title><rect x="82.4632%" y="245" width="0.1540%" height="15" fill="rgb(210,79,3)"/><text x="82.7132%" y="255.50"></text></g><g><title>clear_page_erms (47 samples, 0.15%)</title><rect x="82.4664%" y="229" width="0.1508%" height="15" fill="rgb(214,176,27)"/><text x="82.7164%" y="239.50"></text></g><g><title>__alloc_pages_nodemask (106 samples, 0.34%)</title><rect x="82.2803%" y="293" width="0.3401%" height="15" fill="rgb(235,185,3)"/><text x="82.5303%" y="303.50"></text></g><g><title>get_page_from_freelist (94 samples, 0.30%)</title><rect x="82.3188%" y="277" width="0.3016%" height="15" fill="rgb(227,24,12)"/><text x="82.5688%" y="287.50"></text></g><g><title>prep_new_page (53 samples, 0.17%)</title><rect x="82.4503%" y="261" width="0.1701%" height="15" fill="rgb(252,169,48)"/><text x="82.7003%" y="271.50"></text></g><g><title>__mod_lruvec_state (5 samples, 0.02%)</title><rect x="82.7295%" y="261" width="0.0160%" height="15" fill="rgb(212,65,1)"/><text x="82.9795%" y="271.50"></text></g><g><title>__mod_node_page_state (4 samples, 0.01%)</title><rect x="82.7327%" y="245" width="0.0128%" height="15" fill="rgb(242,39,24)"/><text x="82.9827%" y="255.50"></text></g><g><title>_raw_spin_lock_irq (4 samples, 0.01%)</title><rect x="82.7520%" y="261" width="0.0128%" height="15" fill="rgb(249,32,23)"/><text x="83.0020%" y="271.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (8 samples, 0.03%)</title><rect x="82.7744%" y="245" width="0.0257%" height="15" fill="rgb(251,195,23)"/><text x="83.0244%" y="255.50"></text></g><g><title>__count_memcg_events.part.0 (5 samples, 0.02%)</title><rect x="82.7841%" y="229" width="0.0160%" height="15" fill="rgb(236,174,8)"/><text x="83.0341%" y="239.50"></text></g><g><title>mem_cgroup_charge (19 samples, 0.06%)</title><rect x="82.7648%" y="261" width="0.0610%" height="15" fill="rgb(220,197,8)"/><text x="83.0148%" y="271.50"></text></g><g><title>try_charge (8 samples, 0.03%)</title><rect x="82.8001%" y="245" width="0.0257%" height="15" fill="rgb(240,108,37)"/><text x="83.0501%" y="255.50"></text></g><g><title>xas_find_conflict (11 samples, 0.04%)</title><rect x="82.8386%" y="261" width="0.0353%" height="15" fill="rgb(232,176,24)"/><text x="83.0886%" y="271.50"></text></g><g><title>__add_to_page_cache_locked (95 samples, 0.30%)</title><rect x="82.6300%" y="277" width="0.3048%" height="15" fill="rgb(243,35,29)"/><text x="82.8800%" y="287.50"></text></g><g><title>xas_store (19 samples, 0.06%)</title><rect x="82.8739%" y="261" width="0.0610%" height="15" fill="rgb(210,37,18)"/><text x="83.1239%" y="271.50"></text></g><g><title>xas_create (7 samples, 0.02%)</title><rect x="82.9124%" y="245" width="0.0225%" height="15" fill="rgb(224,184,40)"/><text x="83.1624%" y="255.50"></text></g><g><title>__mod_memcg_lruvec_state (10 samples, 0.03%)</title><rect x="82.9959%" y="229" width="0.0321%" height="15" fill="rgb(236,39,29)"/><text x="83.2459%" y="239.50"></text></g><g><title>__mod_memcg_state.part.0 (6 samples, 0.02%)</title><rect x="83.0087%" y="213" width="0.0193%" height="15" fill="rgb(232,48,39)"/><text x="83.2587%" y="223.50"></text></g><g><title>__pagevec_lru_add_fn (28 samples, 0.09%)</title><rect x="82.9541%" y="245" width="0.0899%" height="15" fill="rgb(236,34,42)"/><text x="83.2041%" y="255.50"></text></g><g><title>page_mapping (4 samples, 0.01%)</title><rect x="83.0312%" y="229" width="0.0128%" height="15" fill="rgb(243,106,37)"/><text x="83.2812%" y="239.50"></text></g><g><title>add_to_page_cache_lru (135 samples, 0.43%)</title><rect x="82.6204%" y="293" width="0.4332%" height="15" fill="rgb(218,96,6)"/><text x="82.8704%" y="303.50"></text></g><g><title>lru_cache_add (37 samples, 0.12%)</title><rect x="82.9349%" y="277" width="0.1187%" height="15" fill="rgb(235,130,12)"/><text x="83.1849%" y="287.50"></text></g><g><title>pagevec_lru_move_fn (34 samples, 0.11%)</title><rect x="82.9445%" y="261" width="0.1091%" height="15" fill="rgb(231,95,0)"/><text x="83.1945%" y="271.50"></text></g><g><title>alloc_pages_current (4 samples, 0.01%)</title><rect x="83.0536%" y="293" width="0.0128%" height="15" fill="rgb(228,12,23)"/><text x="83.3036%" y="303.50"></text></g><g><title>pagecache_get_page (272 samples, 0.87%)</title><rect x="82.2739%" y="309" width="0.8728%" height="15" fill="rgb(216,12,1)"/><text x="82.5239%" y="319.50"></text></g><g><title>find_get_entry (25 samples, 0.08%)</title><rect x="83.0665%" y="293" width="0.0802%" height="15" fill="rgb(219,59,3)"/><text x="83.3165%" y="303.50"></text></g><g><title>xas_load (13 samples, 0.04%)</title><rect x="83.1050%" y="277" width="0.0417%" height="15" fill="rgb(215,208,46)"/><text x="83.3550%" y="287.50"></text></g><g><title>grab_cache_page_write_begin (276 samples, 0.89%)</title><rect x="82.2706%" y="325" width="0.8857%" height="15" fill="rgb(254,224,29)"/><text x="82.5206%" y="335.50"></text></g><g><title>ext4_da_write_begin (508 samples, 1.63%)</title><rect x="81.5390%" y="341" width="1.6301%" height="15" fill="rgb(232,14,29)"/><text x="81.7890%" y="351.50"></text></g><g><title>kmem_cache_free (17 samples, 0.05%)</title><rect x="83.1980%" y="293" width="0.0546%" height="15" fill="rgb(208,45,52)"/><text x="83.4480%" y="303.50"></text></g><g><title>__ext4_journal_stop (29 samples, 0.09%)</title><rect x="83.1916%" y="325" width="0.0931%" height="15" fill="rgb(234,191,28)"/><text x="83.4416%" y="335.50"></text></g><g><title>jbd2_journal_stop (29 samples, 0.09%)</title><rect x="83.1916%" y="309" width="0.0931%" height="15" fill="rgb(244,67,43)"/><text x="83.4416%" y="319.50"></text></g><g><title>stop_this_handle (10 samples, 0.03%)</title><rect x="83.2526%" y="293" width="0.0321%" height="15" fill="rgb(236,189,24)"/><text x="83.5026%" y="303.50"></text></g><g><title>xas_load (4 samples, 0.01%)</title><rect x="83.3617%" y="245" width="0.0128%" height="15" fill="rgb(239,214,33)"/><text x="83.6117%" y="255.50"></text></g><g><title>__xa_set_mark (12 samples, 0.04%)</title><rect x="83.3553%" y="261" width="0.0385%" height="15" fill="rgb(226,176,41)"/><text x="83.6053%" y="271.50"></text></g><g><title>xas_set_mark (6 samples, 0.02%)</title><rect x="83.3745%" y="245" width="0.0193%" height="15" fill="rgb(248,47,8)"/><text x="83.6245%" y="255.50"></text></g><g><title>__set_page_dirty (32 samples, 0.10%)</title><rect x="83.3488%" y="277" width="0.1027%" height="15" fill="rgb(218,81,44)"/><text x="83.5988%" y="287.50"></text></g><g><title>account_page_dirtied (15 samples, 0.05%)</title><rect x="83.4034%" y="261" width="0.0481%" height="15" fill="rgb(213,98,6)"/><text x="83.6534%" y="271.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (51 samples, 0.16%)</title><rect x="83.2943%" y="309" width="0.1637%" height="15" fill="rgb(222,85,22)"/><text x="83.5443%" y="319.50"></text></g><g><title>mark_buffer_dirty (44 samples, 0.14%)</title><rect x="83.3168%" y="293" width="0.1412%" height="15" fill="rgb(239,46,39)"/><text x="83.5668%" y="303.50"></text></g><g><title>__ext4_journal_start_sb (6 samples, 0.02%)</title><rect x="83.4932%" y="277" width="0.0193%" height="15" fill="rgb(237,12,29)"/><text x="83.7432%" y="287.50"></text></g><g><title>__ext4_handle_dirty_metadata (9 samples, 0.03%)</title><rect x="83.6505%" y="245" width="0.0289%" height="15" fill="rgb(214,77,8)"/><text x="83.9005%" y="255.50"></text></g><g><title>jbd2_journal_dirty_metadata (4 samples, 0.01%)</title><rect x="83.6665%" y="229" width="0.0128%" height="15" fill="rgb(217,168,37)"/><text x="83.9165%" y="239.50"></text></g><g><title>_raw_spin_lock (9 samples, 0.03%)</title><rect x="83.6794%" y="245" width="0.0289%" height="15" fill="rgb(221,217,23)"/><text x="83.9294%" y="255.50"></text></g><g><title>ext4_inode_csum_set (29 samples, 0.09%)</title><rect x="83.7179%" y="245" width="0.0931%" height="15" fill="rgb(243,229,36)"/><text x="83.9679%" y="255.50"></text></g><g><title>ext4_inode_csum (23 samples, 0.07%)</title><rect x="83.7371%" y="229" width="0.0738%" height="15" fill="rgb(251,163,40)"/><text x="83.9871%" y="239.50"></text></g><g><title>crypto_shash_update (10 samples, 0.03%)</title><rect x="83.7788%" y="213" width="0.0321%" height="15" fill="rgb(237,222,12)"/><text x="84.0288%" y="223.50"></text></g><g><title>ext4_mark_iloc_dirty (90 samples, 0.29%)</title><rect x="83.5350%" y="261" width="0.2888%" height="15" fill="rgb(248,132,6)"/><text x="83.7850%" y="271.50"></text></g><g><title>__ext4_journal_get_write_access (12 samples, 0.04%)</title><rect x="83.8366%" y="245" width="0.0385%" height="15" fill="rgb(227,167,50)"/><text x="84.0866%" y="255.50"></text></g><g><title>jbd2_journal_get_write_access (5 samples, 0.02%)</title><rect x="83.8591%" y="229" width="0.0160%" height="15" fill="rgb(242,84,37)"/><text x="84.1091%" y="239.50"></text></g><g><title>__getblk_gfp (11 samples, 0.04%)</title><rect x="83.9168%" y="213" width="0.0353%" height="15" fill="rgb(212,4,50)"/><text x="84.1668%" y="223.50"></text></g><g><title>__find_get_block (10 samples, 0.03%)</title><rect x="83.9200%" y="197" width="0.0321%" height="15" fill="rgb(230,228,32)"/><text x="84.1700%" y="207.50"></text></g><g><title>__mark_inode_dirty (159 samples, 0.51%)</title><rect x="83.4579%" y="309" width="0.5102%" height="15" fill="rgb(248,217,23)"/><text x="83.7079%" y="319.50"></text></g><g><title>ext4_dirty_inode (151 samples, 0.48%)</title><rect x="83.4836%" y="293" width="0.4845%" height="15" fill="rgb(238,197,32)"/><text x="83.7336%" y="303.50"></text></g><g><title>__ext4_mark_inode_dirty (142 samples, 0.46%)</title><rect x="83.5125%" y="277" width="0.4557%" height="15" fill="rgb(236,106,1)"/><text x="83.7625%" y="287.50"></text></g><g><title>ext4_reserve_inode_write (45 samples, 0.14%)</title><rect x="83.8238%" y="261" width="0.1444%" height="15" fill="rgb(219,228,13)"/><text x="84.0738%" y="271.50"></text></g><g><title>ext4_get_inode_loc (29 samples, 0.09%)</title><rect x="83.8751%" y="245" width="0.0931%" height="15" fill="rgb(238,30,35)"/><text x="84.1251%" y="255.50"></text></g><g><title>__ext4_get_inode_loc (25 samples, 0.08%)</title><rect x="83.8879%" y="229" width="0.0802%" height="15" fill="rgb(236,70,23)"/><text x="84.1379%" y="239.50"></text></g><g><title>ext4_get_group_desc (5 samples, 0.02%)</title><rect x="83.9521%" y="213" width="0.0160%" height="15" fill="rgb(249,104,48)"/><text x="84.2021%" y="223.50"></text></g><g><title>ext4_da_write_end (256 samples, 0.82%)</title><rect x="83.1691%" y="341" width="0.8215%" height="15" fill="rgb(254,117,50)"/><text x="83.4191%" y="351.50"></text></g><g><title>generic_write_end (220 samples, 0.71%)</title><rect x="83.2847%" y="325" width="0.7060%" height="15" fill="rgb(223,152,4)"/><text x="83.5347%" y="335.50"></text></g><g><title>unlock_page (7 samples, 0.02%)</title><rect x="83.9682%" y="309" width="0.0225%" height="15" fill="rgb(245,6,2)"/><text x="84.2182%" y="319.50"></text></g><g><title>copy_user_enhanced_fast_string (60 samples, 0.19%)</title><rect x="83.9906%" y="325" width="0.1925%" height="15" fill="rgb(249,150,24)"/><text x="84.2406%" y="335.50"></text></g><g><title>iov_iter_copy_from_user_atomic (61 samples, 0.20%)</title><rect x="83.9906%" y="341" width="0.1957%" height="15" fill="rgb(228,185,42)"/><text x="84.2406%" y="351.50"></text></g><g><title>generic_perform_write (875 samples, 2.81%)</title><rect x="81.4203%" y="357" width="2.8078%" height="15" fill="rgb(226,39,33)"/><text x="81.6703%" y="367.50">ge..</text></g><g><title>iov_iter_fault_in_readable (13 samples, 0.04%)</title><rect x="84.1864%" y="341" width="0.0417%" height="15" fill="rgb(221,166,19)"/><text x="84.4364%" y="351.50"></text></g><g><title>__get_user_nocheck_1 (10 samples, 0.03%)</title><rect x="84.1960%" y="325" width="0.0321%" height="15" fill="rgb(209,109,2)"/><text x="84.4460%" y="335.50"></text></g><g><title>ext4_buffered_write_iter (913 samples, 2.93%)</title><rect x="81.3080%" y="373" width="2.9298%" height="15" fill="rgb(252,216,26)"/><text x="81.5580%" y="383.50">ex..</text></g><g><title>new_sync_write (922 samples, 2.96%)</title><rect x="81.3015%" y="389" width="2.9586%" height="15" fill="rgb(227,173,36)"/><text x="81.5515%" y="399.50">new..</text></g><g><title>ext4_file_write_iter (7 samples, 0.02%)</title><rect x="84.2377%" y="373" width="0.0225%" height="15" fill="rgb(209,90,7)"/><text x="84.4877%" y="383.50"></text></g><g><title>do_syscall_64 (963 samples, 3.09%)</title><rect x="81.1892%" y="437" width="3.0902%" height="15" fill="rgb(250,194,11)"/><text x="81.4392%" y="447.50">do_..</text></g><g><title>ksys_write (960 samples, 3.08%)</title><rect x="81.1989%" y="421" width="3.0806%" height="15" fill="rgb(220,72,50)"/><text x="81.4489%" y="431.50">ksy..</text></g><g><title>vfs_write (941 samples, 3.02%)</title><rect x="81.2598%" y="405" width="3.0196%" height="15" fill="rgb(222,106,48)"/><text x="81.5098%" y="415.50">vfs..</text></g><g><title>security_file_permission (6 samples, 0.02%)</title><rect x="84.2602%" y="389" width="0.0193%" height="15" fill="rgb(216,220,45)"/><text x="84.5102%" y="399.50"></text></g><g><title>apparmor_file_permission (6 samples, 0.02%)</title><rect x="84.2602%" y="373" width="0.0193%" height="15" fill="rgb(234,112,18)"/><text x="84.5102%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (989 samples, 3.17%)</title><rect x="81.1860%" y="453" width="3.1736%" height="15" fill="rgb(206,179,9)"/><text x="81.4360%" y="463.50">ent..</text></g><g><title>syscall_exit_to_user_mode (25 samples, 0.08%)</title><rect x="84.2794%" y="437" width="0.0802%" height="15" fill="rgb(215,115,40)"/><text x="84.5294%" y="447.50"></text></g><g><title>std::io::Write::write_all (1,080 samples, 3.47%)</title><rect x="80.9454%" y="549" width="3.4656%" height="15" fill="rgb(222,69,34)"/><text x="81.1954%" y="559.50">std..</text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,078 samples, 3.46%)</title><rect x="80.9518%" y="533" width="3.4592%" height="15" fill="rgb(209,161,10)"/><text x="81.2018%" y="543.50">&lt;&amp;s..</text></g><g><title>std::sys::unix::fs::File::write (1,077 samples, 3.46%)</title><rect x="80.9550%" y="517" width="3.4560%" height="15" fill="rgb(217,6,38)"/><text x="81.2050%" y="527.50">std..</text></g><g><title>std::sys::unix::fd::FileDesc::write (1,077 samples, 3.46%)</title><rect x="80.9550%" y="501" width="3.4560%" height="15" fill="rgb(229,229,48)"/><text x="81.2050%" y="511.50">std..</text></g><g><title>__libc_write (1,077 samples, 3.46%)</title><rect x="80.9550%" y="485" width="3.4560%" height="15" fill="rgb(225,21,28)"/><text x="81.2050%" y="495.50">__l..</text></g><g><title>__libc_write (1,074 samples, 3.45%)</title><rect x="80.9646%" y="469" width="3.4464%" height="15" fill="rgb(206,33,13)"/><text x="81.2146%" y="479.50">__l..</text></g><g><title>syscall_return_via_sysret (15 samples, 0.05%)</title><rect x="84.3629%" y="453" width="0.0481%" height="15" fill="rgb(242,178,17)"/><text x="84.6129%" y="463.50"></text></g><g><title>__pthread_disable_asynccancel (7 samples, 0.02%)</title><rect x="84.4591%" y="453" width="0.0225%" height="15" fill="rgb(220,162,5)"/><text x="84.7091%" y="463.50"></text></g><g><title>__pthread_enable_asynccancel (20 samples, 0.06%)</title><rect x="84.4816%" y="453" width="0.0642%" height="15" fill="rgb(210,33,43)"/><text x="84.7316%" y="463.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.03%)</title><rect x="84.5490%" y="453" width="0.0257%" height="15" fill="rgb(216,116,54)"/><text x="84.7990%" y="463.50"></text></g><g><title>__x64_sys_read (6 samples, 0.02%)</title><rect x="84.5939%" y="421" width="0.0193%" height="15" fill="rgb(249,92,24)"/><text x="84.8439%" y="431.50"></text></g><g><title>__fget_light (47 samples, 0.15%)</title><rect x="84.6517%" y="389" width="0.1508%" height="15" fill="rgb(231,189,14)"/><text x="84.9017%" y="399.50"></text></g><g><title>__fget_files (29 samples, 0.09%)</title><rect x="84.7094%" y="373" width="0.0931%" height="15" fill="rgb(230,8,41)"/><text x="84.9594%" y="383.50"></text></g><g><title>__fdget_pos (62 samples, 0.20%)</title><rect x="84.6292%" y="405" width="0.1990%" height="15" fill="rgb(249,7,27)"/><text x="84.8792%" y="415.50"></text></g><g><title>mutex_lock (8 samples, 0.03%)</title><rect x="84.8025%" y="389" width="0.0257%" height="15" fill="rgb(232,86,5)"/><text x="85.0525%" y="399.50"></text></g><g><title>fput_many (8 samples, 0.03%)</title><rect x="84.8314%" y="405" width="0.0257%" height="15" fill="rgb(224,175,18)"/><text x="85.0814%" y="415.50"></text></g><g><title>mutex_unlock (14 samples, 0.04%)</title><rect x="84.8570%" y="405" width="0.0449%" height="15" fill="rgb(220,129,12)"/><text x="85.1070%" y="415.50"></text></g><g><title>__fsnotify_parent (7 samples, 0.02%)</title><rect x="84.9276%" y="389" width="0.0225%" height="15" fill="rgb(210,19,36)"/><text x="85.1776%" y="399.50"></text></g><g><title>ext4_file_read_iter (17 samples, 0.05%)</title><rect x="84.9918%" y="373" width="0.0546%" height="15" fill="rgb(219,96,14)"/><text x="85.2418%" y="383.50"></text></g><g><title>copy_page_to_iter (490 samples, 1.57%)</title><rect x="85.2132%" y="357" width="1.5724%" height="15" fill="rgb(249,106,1)"/><text x="85.4632%" y="367.50"></text></g><g><title>copy_user_enhanced_fast_string (483 samples, 1.55%)</title><rect x="85.2357%" y="341" width="1.5499%" height="15" fill="rgb(249,155,20)"/><text x="85.4857%" y="351.50"></text></g><g><title>mark_page_accessed (7 samples, 0.02%)</title><rect x="86.7856%" y="357" width="0.0225%" height="15" fill="rgb(244,168,9)"/><text x="87.0356%" y="367.50"></text></g><g><title>__list_del_entry_valid (55 samples, 0.18%)</title><rect x="86.9910%" y="309" width="0.1765%" height="15" fill="rgb(216,23,50)"/><text x="87.2410%" y="319.50"></text></g><g><title>kernel_init_free_pages (102 samples, 0.33%)</title><rect x="87.1899%" y="293" width="0.3273%" height="15" fill="rgb(224,219,20)"/><text x="87.4399%" y="303.50"></text></g><g><title>clear_page_erms (99 samples, 0.32%)</title><rect x="87.1996%" y="277" width="0.3177%" height="15" fill="rgb(222,156,15)"/><text x="87.4496%" y="287.50"></text></g><g><title>__alloc_pages_nodemask (213 samples, 0.68%)</title><rect x="86.8434%" y="341" width="0.6835%" height="15" fill="rgb(231,97,17)"/><text x="87.0934%" y="351.50"></text></g><g><title>get_page_from_freelist (201 samples, 0.64%)</title><rect x="86.8819%" y="325" width="0.6450%" height="15" fill="rgb(218,70,48)"/><text x="87.1319%" y="335.50"></text></g><g><title>prep_new_page (105 samples, 0.34%)</title><rect x="87.1899%" y="309" width="0.3369%" height="15" fill="rgb(212,196,52)"/><text x="87.4399%" y="319.50"></text></g><g><title>__mod_lruvec_state (4 samples, 0.01%)</title><rect x="87.7772%" y="309" width="0.0128%" height="15" fill="rgb(243,203,18)"/><text x="88.0272%" y="319.50"></text></g><g><title>__mod_node_page_state (4 samples, 0.01%)</title><rect x="87.7772%" y="293" width="0.0128%" height="15" fill="rgb(252,125,41)"/><text x="88.0272%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (8 samples, 0.03%)</title><rect x="87.7900%" y="309" width="0.0257%" height="15" fill="rgb(223,180,33)"/><text x="88.0400%" y="319.50"></text></g><g><title>get_mem_cgroup_from_mm (5 samples, 0.02%)</title><rect x="87.8414%" y="293" width="0.0160%" height="15" fill="rgb(254,159,46)"/><text x="88.0914%" y="303.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (4 samples, 0.01%)</title><rect x="87.8574%" y="293" width="0.0128%" height="15" fill="rgb(254,38,10)"/><text x="88.1074%" y="303.50"></text></g><g><title>mem_cgroup_charge (34 samples, 0.11%)</title><rect x="87.8221%" y="309" width="0.1091%" height="15" fill="rgb(208,217,32)"/><text x="88.0721%" y="319.50"></text></g><g><title>try_charge (17 samples, 0.05%)</title><rect x="87.8766%" y="293" width="0.0546%" height="15" fill="rgb(221,120,13)"/><text x="88.1266%" y="303.50"></text></g><g><title>page_counter_try_charge (5 samples, 0.02%)</title><rect x="87.9152%" y="277" width="0.0160%" height="15" fill="rgb(246,54,52)"/><text x="88.1652%" y="287.50"></text></g><g><title>xa_get_order (16 samples, 0.05%)</title><rect x="87.9344%" y="309" width="0.0513%" height="15" fill="rgb(242,34,25)"/><text x="88.1844%" y="319.50"></text></g><g><title>xas_load (8 samples, 0.03%)</title><rect x="87.9601%" y="293" width="0.0257%" height="15" fill="rgb(247,209,9)"/><text x="88.2101%" y="303.50"></text></g><g><title>xas_find_conflict (7 samples, 0.02%)</title><rect x="87.9858%" y="309" width="0.0225%" height="15" fill="rgb(228,71,26)"/><text x="88.2358%" y="319.50"></text></g><g><title>workingset_update_node (6 samples, 0.02%)</title><rect x="88.0307%" y="293" width="0.0193%" height="15" fill="rgb(222,145,49)"/><text x="88.2807%" y="303.50"></text></g><g><title>__add_to_page_cache_locked (158 samples, 0.51%)</title><rect x="87.5525%" y="325" width="0.5070%" height="15" fill="rgb(218,121,17)"/><text x="87.8025%" y="335.50"></text></g><g><title>xas_store (15 samples, 0.05%)</title><rect x="88.0114%" y="309" width="0.0481%" height="15" fill="rgb(244,50,7)"/><text x="88.2614%" y="319.50"></text></g><g><title>__mod_lruvec_state (4 samples, 0.01%)</title><rect x="88.1719%" y="277" width="0.0128%" height="15" fill="rgb(246,229,37)"/><text x="88.4219%" y="287.50"></text></g><g><title>__mod_memcg_lruvec_state (5 samples, 0.02%)</title><rect x="88.1847%" y="277" width="0.0160%" height="15" fill="rgb(225,18,5)"/><text x="88.4347%" y="287.50"></text></g><g><title>__mod_memcg_state.part.0 (4 samples, 0.01%)</title><rect x="88.1879%" y="261" width="0.0128%" height="15" fill="rgb(213,204,8)"/><text x="88.4379%" y="271.50"></text></g><g><title>__pagevec_lru_add_fn (40 samples, 0.13%)</title><rect x="88.0852%" y="293" width="0.1284%" height="15" fill="rgb(238,103,6)"/><text x="88.3352%" y="303.50"></text></g><g><title>lru_cache_add (71 samples, 0.23%)</title><rect x="88.0596%" y="325" width="0.2278%" height="15" fill="rgb(222,25,35)"/><text x="88.3096%" y="335.50"></text></g><g><title>pagevec_lru_move_fn (68 samples, 0.22%)</title><rect x="88.0692%" y="309" width="0.2182%" height="15" fill="rgb(213,203,35)"/><text x="88.3192%" y="319.50"></text></g><g><title>release_pages (17 samples, 0.05%)</title><rect x="88.2328%" y="293" width="0.0546%" height="15" fill="rgb(221,79,53)"/><text x="88.4828%" y="303.50"></text></g><g><title>__mod_lruvec_state (8 samples, 0.03%)</title><rect x="88.3516%" y="309" width="0.0257%" height="15" fill="rgb(243,200,35)"/><text x="88.6016%" y="319.50"></text></g><g><title>__mod_node_page_state (5 samples, 0.02%)</title><rect x="88.3612%" y="293" width="0.0160%" height="15" fill="rgb(248,60,25)"/><text x="88.6112%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (8 samples, 0.03%)</title><rect x="88.3772%" y="309" width="0.0257%" height="15" fill="rgb(227,53,46)"/><text x="88.6272%" y="319.50"></text></g><g><title>__mod_memcg_state.part.0 (5 samples, 0.02%)</title><rect x="88.3869%" y="293" width="0.0160%" height="15" fill="rgb(216,120,32)"/><text x="88.6369%" y="303.50"></text></g><g><title>__radix_tree_lookup (8 samples, 0.03%)</title><rect x="88.4029%" y="309" width="0.0257%" height="15" fill="rgb(220,134,1)"/><text x="88.6529%" y="319.50"></text></g><g><title>mem_cgroup_get_nr_swap_pages (11 samples, 0.04%)</title><rect x="88.4286%" y="309" width="0.0353%" height="15" fill="rgb(237,168,5)"/><text x="88.6786%" y="319.50"></text></g><g><title>add_to_page_cache_lru (328 samples, 1.05%)</title><rect x="87.5301%" y="341" width="1.0525%" height="15" fill="rgb(231,100,33)"/><text x="87.7801%" y="351.50"></text></g><g><title>workingset_refault (92 samples, 0.30%)</title><rect x="88.2874%" y="325" width="0.2952%" height="15" fill="rgb(236,177,47)"/><text x="88.5374%" y="335.50"></text></g><g><title>workingset_age_nonresident (37 samples, 0.12%)</title><rect x="88.4639%" y="309" width="0.1187%" height="15" fill="rgb(235,7,49)"/><text x="88.7139%" y="319.50"></text></g><g><title>alloc_pages_current (4 samples, 0.01%)</title><rect x="88.5826%" y="341" width="0.0128%" height="15" fill="rgb(232,119,22)"/><text x="88.8326%" y="351.50"></text></g><g><title>__blk_rq_map_sg (7 samples, 0.02%)</title><rect x="88.6340%" y="229" width="0.0225%" height="15" fill="rgb(254,73,53)"/><text x="88.8840%" y="239.50"></text></g><g><title>blk_mq_start_request (4 samples, 0.01%)</title><rect x="88.6564%" y="229" width="0.0128%" height="15" fill="rgb(251,35,20)"/><text x="88.9064%" y="239.50"></text></g><g><title>domain_mapping (15 samples, 0.05%)</title><rect x="88.6821%" y="197" width="0.0481%" height="15" fill="rgb(241,119,20)"/><text x="88.9321%" y="207.50"></text></g><g><title>__domain_mapping (13 samples, 0.04%)</title><rect x="88.6885%" y="181" width="0.0417%" height="15" fill="rgb(207,102,14)"/><text x="88.9385%" y="191.50"></text></g><g><title>dma_map_sg_attrs (22 samples, 0.07%)</title><rect x="88.6693%" y="229" width="0.0706%" height="15" fill="rgb(248,201,50)"/><text x="88.9193%" y="239.50"></text></g><g><title>intel_map_sg (21 samples, 0.07%)</title><rect x="88.6725%" y="213" width="0.0674%" height="15" fill="rgb(222,185,44)"/><text x="88.9225%" y="223.50"></text></g><g><title>blk_finish_plug (53 samples, 0.17%)</title><rect x="88.5987%" y="325" width="0.1701%" height="15" fill="rgb(218,107,18)"/><text x="88.8487%" y="335.50"></text></g><g><title>blk_mq_flush_plug_list (52 samples, 0.17%)</title><rect x="88.6019%" y="309" width="0.1669%" height="15" fill="rgb(237,177,39)"/><text x="88.8519%" y="319.50"></text></g><g><title>blk_mq_sched_insert_requests (52 samples, 0.17%)</title><rect x="88.6019%" y="293" width="0.1669%" height="15" fill="rgb(246,69,6)"/><text x="88.8519%" y="303.50"></text></g><g><title>blk_mq_try_issue_list_directly (50 samples, 0.16%)</title><rect x="88.6083%" y="277" width="0.1604%" height="15" fill="rgb(234,208,37)"/><text x="88.8583%" y="287.50"></text></g><g><title>__blk_mq_try_issue_directly (48 samples, 0.15%)</title><rect x="88.6147%" y="261" width="0.1540%" height="15" fill="rgb(225,4,6)"/><text x="88.8647%" y="271.50"></text></g><g><title>nvme_queue_rq (48 samples, 0.15%)</title><rect x="88.6147%" y="245" width="0.1540%" height="15" fill="rgb(233,45,0)"/><text x="88.8647%" y="255.50"></text></g><g><title>nvme_setup_cmd (4 samples, 0.01%)</title><rect x="88.7559%" y="229" width="0.0128%" height="15" fill="rgb(226,136,5)"/><text x="89.0059%" y="239.50"></text></g><g><title>bio_add_page (4 samples, 0.01%)</title><rect x="88.8490%" y="309" width="0.0128%" height="15" fill="rgb(211,91,47)"/><text x="89.0990%" y="319.50"></text></g><g><title>bio_alloc_bioset (6 samples, 0.02%)</title><rect x="88.8618%" y="309" width="0.0193%" height="15" fill="rgb(242,88,51)"/><text x="89.1118%" y="319.50"></text></g><g><title>mempool_alloc (4 samples, 0.01%)</title><rect x="88.8682%" y="293" width="0.0128%" height="15" fill="rgb(230,91,28)"/><text x="89.1182%" y="303.50"></text></g><g><title>ext4_es_insert_extent (5 samples, 0.02%)</title><rect x="88.8939%" y="293" width="0.0160%" height="15" fill="rgb(254,186,29)"/><text x="89.1439%" y="303.50"></text></g><g><title>ext4_find_extent (5 samples, 0.02%)</title><rect x="88.9163%" y="277" width="0.0160%" height="15" fill="rgb(238,6,4)"/><text x="89.1663%" y="287.50"></text></g><g><title>ext4_ext_map_blocks (8 samples, 0.03%)</title><rect x="88.9131%" y="293" width="0.0257%" height="15" fill="rgb(221,151,16)"/><text x="89.1631%" y="303.50"></text></g><g><title>ext4_map_blocks (18 samples, 0.06%)</title><rect x="88.8843%" y="309" width="0.0578%" height="15" fill="rgb(251,143,52)"/><text x="89.1343%" y="319.50"></text></g><g><title>submit_bio_noacct (14 samples, 0.04%)</title><rect x="88.9484%" y="309" width="0.0449%" height="15" fill="rgb(206,90,15)"/><text x="89.1984%" y="319.50"></text></g><g><title>blk_mq_submit_bio (11 samples, 0.04%)</title><rect x="88.9581%" y="293" width="0.0353%" height="15" fill="rgb(218,35,8)"/><text x="89.2081%" y="303.50"></text></g><g><title>ext4_mpage_readpages (77 samples, 0.25%)</title><rect x="88.7687%" y="325" width="0.2471%" height="15" fill="rgb(239,215,6)"/><text x="89.0187%" y="335.50"></text></g><g><title>xa_load (7 samples, 0.02%)</title><rect x="88.9934%" y="309" width="0.0225%" height="15" fill="rgb(245,116,39)"/><text x="89.2434%" y="319.50"></text></g><g><title>xas_load (5 samples, 0.02%)</title><rect x="88.9998%" y="293" width="0.0160%" height="15" fill="rgb(242,65,28)"/><text x="89.2498%" y="303.50"></text></g><g><title>read_pages (132 samples, 0.42%)</title><rect x="88.5954%" y="341" width="0.4236%" height="15" fill="rgb(252,132,53)"/><text x="88.8454%" y="351.50"></text></g><g><title>page_cache_ra_unbounded (700 samples, 2.25%)</title><rect x="86.8145%" y="357" width="2.2463%" height="15" fill="rgb(224,159,50)"/><text x="87.0645%" y="367.50">p..</text></g><g><title>xa_load (13 samples, 0.04%)</title><rect x="89.0190%" y="341" width="0.0417%" height="15" fill="rgb(224,93,4)"/><text x="89.2690%" y="351.50"></text></g><g><title>xas_load (11 samples, 0.04%)</title><rect x="89.0254%" y="325" width="0.0353%" height="15" fill="rgb(208,81,34)"/><text x="89.2754%" y="335.50"></text></g><g><title>pagecache_get_page (76 samples, 0.24%)</title><rect x="89.0607%" y="357" width="0.2439%" height="15" fill="rgb(233,92,54)"/><text x="89.3107%" y="367.50"></text></g><g><title>find_get_entry (71 samples, 0.23%)</title><rect x="89.0768%" y="341" width="0.2278%" height="15" fill="rgb(237,21,14)"/><text x="89.3268%" y="351.50"></text></g><g><title>xas_load (27 samples, 0.09%)</title><rect x="89.2180%" y="325" width="0.0866%" height="15" fill="rgb(249,128,51)"/><text x="89.4680%" y="335.50"></text></g><g><title>xas_start (8 samples, 0.03%)</title><rect x="89.2790%" y="309" width="0.0257%" height="15" fill="rgb(223,129,24)"/><text x="89.5290%" y="319.50"></text></g><g><title>generic_file_buffered_read (1,331 samples, 4.27%)</title><rect x="85.0464%" y="373" width="4.2711%" height="15" fill="rgb(231,168,25)"/><text x="85.2964%" y="383.50">gener..</text></g><g><title>touch_atime (4 samples, 0.01%)</title><rect x="89.3046%" y="357" width="0.0128%" height="15" fill="rgb(224,39,20)"/><text x="89.5546%" y="367.50"></text></g><g><title>new_sync_read (1,364 samples, 4.38%)</title><rect x="84.9501%" y="389" width="4.3770%" height="15" fill="rgb(225,152,53)"/><text x="85.2001%" y="399.50">new_s..</text></g><g><title>ksys_read (1,490 samples, 4.78%)</title><rect x="84.6132%" y="421" width="4.7813%" height="15" fill="rgb(252,17,24)"/><text x="84.8632%" y="431.50">ksys_r..</text></g><g><title>vfs_read (1,400 samples, 4.49%)</title><rect x="84.9020%" y="405" width="4.4925%" height="15" fill="rgb(250,114,30)"/><text x="85.1520%" y="415.50">vfs_r..</text></g><g><title>security_file_permission (21 samples, 0.07%)</title><rect x="89.3271%" y="389" width="0.0674%" height="15" fill="rgb(229,5,4)"/><text x="89.5771%" y="399.50"></text></g><g><title>apparmor_file_permission (14 samples, 0.04%)</title><rect x="89.3495%" y="373" width="0.0449%" height="15" fill="rgb(225,176,49)"/><text x="89.5995%" y="383.50"></text></g><g><title>aa_file_perm (4 samples, 0.01%)</title><rect x="89.3816%" y="357" width="0.0128%" height="15" fill="rgb(224,221,49)"/><text x="89.6316%" y="367.50"></text></g><g><title>do_syscall_64 (1,500 samples, 4.81%)</title><rect x="84.5875%" y="437" width="4.8134%" height="15" fill="rgb(253,169,27)"/><text x="84.8375%" y="447.50">do_sys..</text></g><g><title>entry_SYSCALL_64_after_hwframe (1,592 samples, 5.11%)</title><rect x="84.5747%" y="453" width="5.1086%" height="15" fill="rgb(211,206,16)"/><text x="84.8247%" y="463.50">entry_..</text></g><g><title>syscall_exit_to_user_mode (88 samples, 0.28%)</title><rect x="89.4009%" y="437" width="0.2824%" height="15" fill="rgb(244,87,35)"/><text x="89.6509%" y="447.50"></text></g><g><title>syscall_return_via_sysret (37 samples, 0.12%)</title><rect x="89.6833%" y="453" width="0.1187%" height="15" fill="rgb(246,28,10)"/><text x="89.9333%" y="463.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (2,801 samples, 8.99%)</title><rect x="80.8362%" y="581" width="8.9882%" height="15" fill="rgb(229,12,44)"/><text x="81.0862%" y="591.50">tokio::runtim..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (2,797 samples, 8.98%)</title><rect x="80.8491%" y="565" width="8.9754%" height="15" fill="rgb(210,145,37)"/><text x="81.0991%" y="575.50">&lt;tokio::runti..</text></g><g><title>tokio::io::blocking::Buf::read_from (1,687 samples, 5.41%)</title><rect x="84.4110%" y="549" width="5.4135%" height="15" fill="rgb(227,112,52)"/><text x="84.6610%" y="559.50">tokio::..</text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (1,683 samples, 5.40%)</title><rect x="84.4238%" y="533" width="5.4006%" height="15" fill="rgb(238,155,34)"/><text x="84.6738%" y="543.50">&lt;&amp;std::..</text></g><g><title>std::sys::unix::fs::File::read (1,676 samples, 5.38%)</title><rect x="84.4463%" y="517" width="5.3782%" height="15" fill="rgb(239,226,36)"/><text x="84.6963%" y="527.50">std::sy..</text></g><g><title>std::sys::unix::fd::FileDesc::read (1,676 samples, 5.38%)</title><rect x="84.4463%" y="501" width="5.3782%" height="15" fill="rgb(230,16,23)"/><text x="84.6963%" y="511.50">std::sy..</text></g><g><title>__libc_read (1,676 samples, 5.38%)</title><rect x="84.4463%" y="485" width="5.3782%" height="15" fill="rgb(236,171,36)"/><text x="84.6963%" y="495.50">__libc_..</text></g><g><title>__libc_read (1,676 samples, 5.38%)</title><rect x="84.4463%" y="469" width="5.3782%" height="15" fill="rgb(221,22,14)"/><text x="84.6963%" y="479.50">__libc_..</text></g><g><title>workingset_refault (6 samples, 0.02%)</title><rect x="89.8052%" y="453" width="0.0193%" height="15" fill="rgb(242,43,11)"/><text x="90.0552%" y="463.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (21 samples, 0.07%)</title><rect x="89.9978%" y="533" width="0.0674%" height="15" fill="rgb(232,69,23)"/><text x="90.2478%" y="543.50"></text></g><g><title>__GI___clock_gettime (12 samples, 0.04%)</title><rect x="90.0651%" y="485" width="0.0385%" height="15" fill="rgb(216,180,54)"/><text x="90.3151%" y="495.50"></text></g><g><title>__vdso_clock_gettime (12 samples, 0.04%)</title><rect x="90.0651%" y="469" width="0.0385%" height="15" fill="rgb(216,5,24)"/><text x="90.3151%" y="479.50"></text></g><g><title>[[vdso]] (9 samples, 0.03%)</title><rect x="90.0748%" y="453" width="0.0289%" height="15" fill="rgb(225,89,9)"/><text x="90.3248%" y="463.50"></text></g><g><title>std::time::Instant::now (43 samples, 0.14%)</title><rect x="90.0651%" y="533" width="0.1380%" height="15" fill="rgb(243,75,33)"/><text x="90.3151%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (43 samples, 0.14%)</title><rect x="90.0651%" y="517" width="0.1380%" height="15" fill="rgb(247,141,45)"/><text x="90.3151%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::now (43 samples, 0.14%)</title><rect x="90.0651%" y="501" width="0.1380%" height="15" fill="rgb(232,177,36)"/><text x="90.3151%" y="511.50"></text></g><g><title>tokio::io::blocking::Buf::read_from (31 samples, 0.10%)</title><rect x="90.1036%" y="485" width="0.0995%" height="15" fill="rgb(219,125,36)"/><text x="90.3536%" y="495.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (31 samples, 0.10%)</title><rect x="90.1036%" y="469" width="0.0995%" height="15" fill="rgb(227,94,9)"/><text x="90.3536%" y="479.50"></text></g><g><title>std::sys::unix::fs::File::read (31 samples, 0.10%)</title><rect x="90.1036%" y="453" width="0.0995%" height="15" fill="rgb(240,34,52)"/><text x="90.3536%" y="463.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (31 samples, 0.10%)</title><rect x="90.1036%" y="437" width="0.0995%" height="15" fill="rgb(216,45,12)"/><text x="90.3536%" y="447.50"></text></g><g><title>__libc_read (31 samples, 0.10%)</title><rect x="90.1036%" y="421" width="0.0995%" height="15" fill="rgb(246,21,19)"/><text x="90.3536%" y="431.50"></text></g><g><title>__libc_read (31 samples, 0.10%)</title><rect x="90.1036%" y="405" width="0.0995%" height="15" fill="rgb(213,98,42)"/><text x="90.3536%" y="415.50"></text></g><g><title>entry_SYSCALL_64 (31 samples, 0.10%)</title><rect x="90.1036%" y="389" width="0.0995%" height="15" fill="rgb(250,136,47)"/><text x="90.3536%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.02%)</title><rect x="90.2352%" y="517" width="0.0160%" height="15" fill="rgb(251,124,27)"/><text x="90.4852%" y="527.50"></text></g><g><title>_raw_spin_lock (14 samples, 0.04%)</title><rect x="90.4663%" y="437" width="0.0449%" height="15" fill="rgb(229,180,14)"/><text x="90.7163%" y="447.50"></text></g><g><title>get_futex_key (5 samples, 0.02%)</title><rect x="90.5144%" y="437" width="0.0160%" height="15" fill="rgb(245,216,25)"/><text x="90.7644%" y="447.50"></text></g><g><title>mark_wake_futex (44 samples, 0.14%)</title><rect x="90.5401%" y="437" width="0.1412%" height="15" fill="rgb(251,43,5)"/><text x="90.7901%" y="447.50"></text></g><g><title>__unqueue_futex (21 samples, 0.07%)</title><rect x="90.6139%" y="421" width="0.0674%" height="15" fill="rgb(250,128,24)"/><text x="90.8639%" y="431.50"></text></g><g><title>_raw_spin_lock (5 samples, 0.02%)</title><rect x="90.7454%" y="405" width="0.0160%" height="15" fill="rgb(217,117,27)"/><text x="90.9954%" y="415.50"></text></g><g><title>_raw_spin_lock_irqsave (15 samples, 0.05%)</title><rect x="90.7615%" y="405" width="0.0481%" height="15" fill="rgb(245,147,4)"/><text x="91.0115%" y="415.50"></text></g><g><title>_raw_spin_unlock_irqrestore (7 samples, 0.02%)</title><rect x="90.8096%" y="405" width="0.0225%" height="15" fill="rgb(242,201,35)"/><text x="91.0596%" y="415.50"></text></g><g><title>select_task_rq_fair (34 samples, 0.11%)</title><rect x="90.8321%" y="405" width="0.1091%" height="15" fill="rgb(218,181,1)"/><text x="91.0821%" y="415.50"></text></g><g><title>available_idle_cpu (20 samples, 0.06%)</title><rect x="90.8770%" y="389" width="0.0642%" height="15" fill="rgb(222,6,29)"/><text x="91.1270%" y="399.50"></text></g><g><title>reweight_entity (8 samples, 0.03%)</title><rect x="91.2717%" y="357" width="0.0257%" height="15" fill="rgb(208,186,3)"/><text x="91.5217%" y="367.50"></text></g><g><title>update_cfs_group (4 samples, 0.01%)</title><rect x="91.2974%" y="357" width="0.0128%" height="15" fill="rgb(216,36,26)"/><text x="91.5474%" y="367.50"></text></g><g><title>__update_load_avg_cfs_rq (7 samples, 0.02%)</title><rect x="91.3391%" y="341" width="0.0225%" height="15" fill="rgb(248,201,23)"/><text x="91.5891%" y="351.50"></text></g><g><title>enqueue_task_fair (118 samples, 0.38%)</title><rect x="90.9893%" y="389" width="0.3787%" height="15" fill="rgb(251,170,31)"/><text x="91.2393%" y="399.50"></text></g><g><title>enqueue_entity (65 samples, 0.21%)</title><rect x="91.1594%" y="373" width="0.2086%" height="15" fill="rgb(207,110,25)"/><text x="91.4094%" y="383.50"></text></g><g><title>update_load_avg (18 samples, 0.06%)</title><rect x="91.3102%" y="357" width="0.0578%" height="15" fill="rgb(250,54,15)"/><text x="91.5602%" y="367.50"></text></g><g><title>ttwu_do_activate (314 samples, 1.01%)</title><rect x="90.9412%" y="405" width="1.0076%" height="15" fill="rgb(227,68,33)"/><text x="91.1912%" y="415.50"></text></g><g><title>psi_task_change (181 samples, 0.58%)</title><rect x="91.3680%" y="389" width="0.5808%" height="15" fill="rgb(238,34,41)"/><text x="91.6180%" y="399.50"></text></g><g><title>psi_group_change (160 samples, 0.51%)</title><rect x="91.4354%" y="373" width="0.5134%" height="15" fill="rgb(220,11,15)"/><text x="91.6854%" y="383.50"></text></g><g><title>record_times (24 samples, 0.08%)</title><rect x="91.8718%" y="357" width="0.0770%" height="15" fill="rgb(246,111,35)"/><text x="92.1218%" y="367.50"></text></g><g><title>sched_clock_cpu (18 samples, 0.06%)</title><rect x="91.8910%" y="341" width="0.0578%" height="15" fill="rgb(209,88,53)"/><text x="92.1410%" y="351.50"></text></g><g><title>sched_clock (15 samples, 0.05%)</title><rect x="91.9007%" y="325" width="0.0481%" height="15" fill="rgb(231,185,47)"/><text x="92.1507%" y="335.50"></text></g><g><title>native_sched_clock (11 samples, 0.04%)</title><rect x="91.9135%" y="309" width="0.0353%" height="15" fill="rgb(233,154,1)"/><text x="92.1635%" y="319.50"></text></g><g><title>ttwu_do_wakeup (22 samples, 0.07%)</title><rect x="91.9488%" y="405" width="0.0706%" height="15" fill="rgb(225,15,46)"/><text x="92.1988%" y="415.50"></text></g><g><title>check_preempt_curr (17 samples, 0.05%)</title><rect x="91.9648%" y="389" width="0.0546%" height="15" fill="rgb(211,135,41)"/><text x="92.2148%" y="399.50"></text></g><g><title>resched_curr (10 samples, 0.03%)</title><rect x="91.9873%" y="373" width="0.0321%" height="15" fill="rgb(208,54,0)"/><text x="92.2373%" y="383.50"></text></g><g><title>ttwu_queue_wakelist (9 samples, 0.03%)</title><rect x="92.0194%" y="405" width="0.0289%" height="15" fill="rgb(244,136,14)"/><text x="92.2694%" y="415.50"></text></g><g><title>do_syscall_64 (569 samples, 1.83%)</title><rect x="90.2737%" y="501" width="1.8259%" height="15" fill="rgb(241,56,14)"/><text x="90.5237%" y="511.50">d..</text></g><g><title>__x64_sys_futex (569 samples, 1.83%)</title><rect x="90.2737%" y="485" width="1.8259%" height="15" fill="rgb(205,80,24)"/><text x="90.5237%" y="495.50">_..</text></g><g><title>do_futex (559 samples, 1.79%)</title><rect x="90.3058%" y="469" width="1.7938%" height="15" fill="rgb(220,57,4)"/><text x="90.5558%" y="479.50">d..</text></g><g><title>futex_wake (552 samples, 1.77%)</title><rect x="90.3283%" y="453" width="1.7713%" height="15" fill="rgb(226,193,50)"/><text x="90.5783%" y="463.50">f..</text></g><g><title>wake_up_q (439 samples, 1.41%)</title><rect x="90.6909%" y="437" width="1.4087%" height="15" fill="rgb(231,168,22)"/><text x="90.9409%" y="447.50"></text></g><g><title>try_to_wake_up (429 samples, 1.38%)</title><rect x="90.7230%" y="421" width="1.3766%" height="15" fill="rgb(254,215,14)"/><text x="90.9730%" y="431.50"></text></g><g><title>update_rq_clock (16 samples, 0.05%)</title><rect x="92.0483%" y="405" width="0.0513%" height="15" fill="rgb(211,115,16)"/><text x="92.2983%" y="415.50"></text></g><g><title>sched_clock_cpu (4 samples, 0.01%)</title><rect x="92.0868%" y="389" width="0.0128%" height="15" fill="rgb(236,210,16)"/><text x="92.3368%" y="399.50"></text></g><g><title>sched_clock (4 samples, 0.01%)</title><rect x="92.0868%" y="373" width="0.0128%" height="15" fill="rgb(221,94,12)"/><text x="92.3368%" y="383.50"></text></g><g><title>native_sched_clock (4 samples, 0.01%)</title><rect x="92.0868%" y="357" width="0.0128%" height="15" fill="rgb(235,218,49)"/><text x="92.3368%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (674 samples, 2.16%)</title><rect x="90.2513%" y="517" width="2.1628%" height="15" fill="rgb(217,114,14)"/><text x="90.5013%" y="527.50">e..</text></g><g><title>syscall_exit_to_user_mode (98 samples, 0.31%)</title><rect x="92.0996%" y="501" width="0.3145%" height="15" fill="rgb(216,145,22)"/><text x="92.3496%" y="511.50"></text></g><g><title>exit_to_user_mode_prepare (4 samples, 0.01%)</title><rect x="92.4012%" y="485" width="0.0128%" height="15" fill="rgb(217,112,39)"/><text x="92.6512%" y="495.50"></text></g><g><title>tokio::park::thread::wake_by_ref (832 samples, 2.67%)</title><rect x="89.8662%" y="565" width="2.6698%" height="15" fill="rgb(225,85,32)"/><text x="90.1162%" y="575.50">to..</text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (809 samples, 2.60%)</title><rect x="89.9400%" y="549" width="2.5960%" height="15" fill="rgb(245,209,47)"/><text x="90.1900%" y="559.50">pa..</text></g><g><title>syscall (727 samples, 2.33%)</title><rect x="90.2031%" y="533" width="2.3329%" height="15" fill="rgb(218,220,15)"/><text x="90.4531%" y="543.50">s..</text></g><g><title>syscall_return_via_sysret (38 samples, 0.12%)</title><rect x="92.4141%" y="517" width="0.1219%" height="15" fill="rgb(222,202,31)"/><text x="92.6641%" y="527.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (6 samples, 0.02%)</title><rect x="92.5360%" y="565" width="0.0193%" height="15" fill="rgb(243,203,4)"/><text x="92.7860%" y="575.50"></text></g><g><title>enqueue_task_fair (7 samples, 0.02%)</title><rect x="92.6066%" y="373" width="0.0225%" height="15" fill="rgb(237,92,17)"/><text x="92.8566%" y="383.50"></text></g><g><title>ttwu_do_activate (9 samples, 0.03%)</title><rect x="92.6066%" y="389" width="0.0289%" height="15" fill="rgb(231,119,7)"/><text x="92.8566%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (20 samples, 0.06%)</title><rect x="92.5809%" y="501" width="0.0642%" height="15" fill="rgb(237,82,41)"/><text x="92.8309%" y="511.50"></text></g><g><title>do_syscall_64 (20 samples, 0.06%)</title><rect x="92.5809%" y="485" width="0.0642%" height="15" fill="rgb(226,81,48)"/><text x="92.8309%" y="495.50"></text></g><g><title>__x64_sys_futex (20 samples, 0.06%)</title><rect x="92.5809%" y="469" width="0.0642%" height="15" fill="rgb(234,70,51)"/><text x="92.8309%" y="479.50"></text></g><g><title>do_futex (19 samples, 0.06%)</title><rect x="92.5842%" y="453" width="0.0610%" height="15" fill="rgb(251,86,4)"/><text x="92.8342%" y="463.50"></text></g><g><title>futex_wake (19 samples, 0.06%)</title><rect x="92.5842%" y="437" width="0.0610%" height="15" fill="rgb(244,144,28)"/><text x="92.8342%" y="447.50"></text></g><g><title>wake_up_q (13 samples, 0.04%)</title><rect x="92.6034%" y="421" width="0.0417%" height="15" fill="rgb(232,161,39)"/><text x="92.8534%" y="431.50"></text></g><g><title>try_to_wake_up (13 samples, 0.04%)</title><rect x="92.6034%" y="405" width="0.0417%" height="15" fill="rgb(247,34,51)"/><text x="92.8534%" y="415.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (30 samples, 0.10%)</title><rect x="92.5585%" y="533" width="0.0963%" height="15" fill="rgb(225,132,2)"/><text x="92.8085%" y="543.50"></text></g><g><title>syscall (26 samples, 0.08%)</title><rect x="92.5713%" y="517" width="0.0834%" height="15" fill="rgb(209,159,44)"/><text x="92.8213%" y="527.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (10,012 samples, 32.13%)</title><rect x="60.5301%" y="597" width="32.1278%" height="15" fill="rgb(251,214,1)"/><text x="60.7801%" y="607.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (883 samples, 2.83%)</title><rect x="89.8245%" y="581" width="2.8335%" height="15" fill="rgb(247,84,47)"/><text x="90.0745%" y="591.50">to..</text></g><g><title>tokio::runtime::task::waker::wake_by_ref (32 samples, 0.10%)</title><rect x="92.5553%" y="565" width="0.1027%" height="15" fill="rgb(240,111,43)"/><text x="92.8053%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (31 samples, 0.10%)</title><rect x="92.5585%" y="549" width="0.0995%" height="15" fill="rgb(215,214,35)"/><text x="92.8085%" y="559.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11,511 samples, 36.94%)</title><rect x="55.7392%" y="677" width="36.9380%" height="15" fill="rgb(248,207,23)"/><text x="55.9892%" y="687.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11,511 samples, 36.94%)</title><rect x="55.7392%" y="661" width="36.9380%" height="15" fill="rgb(214,186,4)"/><text x="55.9892%" y="671.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (11,511 samples, 36.94%)</title><rect x="55.7392%" y="645" width="36.9380%" height="15" fill="rgb(220,133,22)"/><text x="55.9892%" y="655.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11,508 samples, 36.93%)</title><rect x="55.7488%" y="629" width="36.9284%" height="15" fill="rgb(239,134,19)"/><text x="55.9988%" y="639.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (11,479 samples, 36.84%)</title><rect x="55.8419%" y="613" width="36.8353%" height="15" fill="rgb(250,140,9)"/><text x="56.0919%" y="623.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::raw::poll (6 samples, 0.02%)</title><rect x="92.6580%" y="597" width="0.0193%" height="15" fill="rgb(225,59,14)"/><text x="92.9080%" y="607.50"></text></g><g><title>__GI_munmap (8 samples, 0.03%)</title><rect x="92.6772%" y="629" width="0.0257%" height="15" fill="rgb(214,152,51)"/><text x="92.9272%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.03%)</title><rect x="92.6772%" y="613" width="0.0257%" height="15" fill="rgb(251,227,43)"/><text x="92.9272%" y="623.50"></text></g><g><title>do_syscall_64 (8 samples, 0.03%)</title><rect x="92.6772%" y="597" width="0.0257%" height="15" fill="rgb(241,96,17)"/><text x="92.9272%" y="607.50"></text></g><g><title>__x64_sys_munmap (8 samples, 0.03%)</title><rect x="92.6772%" y="581" width="0.0257%" height="15" fill="rgb(234,198,43)"/><text x="92.9272%" y="591.50"></text></g><g><title>__vm_munmap (8 samples, 0.03%)</title><rect x="92.6772%" y="565" width="0.0257%" height="15" fill="rgb(220,108,29)"/><text x="92.9272%" y="575.50"></text></g><g><title>down_write_killable (7 samples, 0.02%)</title><rect x="92.6804%" y="549" width="0.0225%" height="15" fill="rgb(226,163,33)"/><text x="92.9304%" y="559.50"></text></g><g><title>rwsem_down_write_slowpath (7 samples, 0.02%)</title><rect x="92.6804%" y="533" width="0.0225%" height="15" fill="rgb(205,194,45)"/><text x="92.9304%" y="543.50"></text></g><g><title>schedule (5 samples, 0.02%)</title><rect x="92.6868%" y="517" width="0.0160%" height="15" fill="rgb(206,143,44)"/><text x="92.9368%" y="527.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="92.6868%" y="501" width="0.0160%" height="15" fill="rgb(236,136,36)"/><text x="92.9368%" y="511.50"></text></g><g><title>finish_task_switch (5 samples, 0.02%)</title><rect x="92.6868%" y="485" width="0.0160%" height="15" fill="rgb(249,172,42)"/><text x="92.9368%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="92.6868%" y="469" width="0.0160%" height="15" fill="rgb(216,139,23)"/><text x="92.9368%" y="479.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.02%)</title><rect x="92.6868%" y="453" width="0.0160%" height="15" fill="rgb(207,166,20)"/><text x="92.9368%" y="463.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="92.6868%" y="437" width="0.0160%" height="15" fill="rgb(210,209,22)"/><text x="92.9368%" y="447.50"></text></g><g><title>__GI___clone (11,579 samples, 37.16%)</title><rect x="55.5499%" y="725" width="37.1562%" height="15" fill="rgb(232,118,20)"/><text x="55.7999%" y="735.50">__GI___clone</text></g><g><title>start_thread (11,574 samples, 37.14%)</title><rect x="55.5659%" y="709" width="37.1402%" height="15" fill="rgb(238,113,42)"/><text x="55.8159%" y="719.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (11,520 samples, 36.97%)</title><rect x="55.7392%" y="693" width="36.9669%" height="15" fill="rgb(231,42,5)"/><text x="55.9892%" y="703.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>core::ptr::drop_in_place (9 samples, 0.03%)</title><rect x="92.6772%" y="677" width="0.0289%" height="15" fill="rgb(243,166,24)"/><text x="92.9272%" y="687.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="92.6772%" y="661" width="0.0289%" height="15" fill="rgb(237,226,12)"/><text x="92.9272%" y="671.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (9 samples, 0.03%)</title><rect x="92.6772%" y="645" width="0.0289%" height="15" fill="rgb(229,133,24)"/><text x="92.9272%" y="655.50"></text></g><g><title>asm_exc_page_fault (97 samples, 0.31%)</title><rect x="92.7189%" y="725" width="0.3113%" height="15" fill="rgb(238,33,43)"/><text x="92.9689%" y="735.50"></text></g><g><title>blake3_compress_in_place_sse41 (2,031 samples, 6.52%)</title><rect x="93.0334%" y="725" width="6.5173%" height="15" fill="rgb(227,59,38)"/><text x="93.2834%" y="735.50">blake3_co..</text></g><g><title>entry_SYSCALL_64 (4 samples, 0.01%)</title><rect x="99.5604%" y="725" width="0.0128%" height="15" fill="rgb(230,97,0)"/><text x="99.8104%" y="735.50"></text></g><g><title>futex_wait_queue_me (9 samples, 0.03%)</title><rect x="99.5989%" y="645" width="0.0289%" height="15" fill="rgb(250,173,50)"/><text x="99.8489%" y="655.50"></text></g><g><title>schedule (9 samples, 0.03%)</title><rect x="99.5989%" y="629" width="0.0289%" height="15" fill="rgb(240,15,50)"/><text x="99.8489%" y="639.50"></text></g><g><title>__schedule (9 samples, 0.03%)</title><rect x="99.5989%" y="613" width="0.0289%" height="15" fill="rgb(221,93,22)"/><text x="99.8489%" y="623.50"></text></g><g><title>psi_task_change (6 samples, 0.02%)</title><rect x="99.6085%" y="597" width="0.0193%" height="15" fill="rgb(245,180,53)"/><text x="99.8585%" y="607.50"></text></g><g><title>psi_group_change (5 samples, 0.02%)</title><rect x="99.6117%" y="581" width="0.0160%" height="15" fill="rgb(231,88,51)"/><text x="99.8617%" y="591.50"></text></g><g><title>futex_wait (11 samples, 0.04%)</title><rect x="99.5989%" y="661" width="0.0353%" height="15" fill="rgb(240,58,21)"/><text x="99.8489%" y="671.50"></text></g><g><title>__x64_sys_futex (14 samples, 0.04%)</title><rect x="99.5989%" y="693" width="0.0449%" height="15" fill="rgb(237,21,10)"/><text x="99.8489%" y="703.50"></text></g><g><title>do_futex (14 samples, 0.04%)</title><rect x="99.5989%" y="677" width="0.0449%" height="15" fill="rgb(218,43,11)"/><text x="99.8489%" y="687.50"></text></g><g><title>ext4_block_write_begin (6 samples, 0.02%)</title><rect x="99.6759%" y="597" width="0.0193%" height="15" fill="rgb(218,221,29)"/><text x="99.9259%" y="607.50"></text></g><g><title>__alloc_pages_nodemask (4 samples, 0.01%)</title><rect x="99.6952%" y="565" width="0.0128%" height="15" fill="rgb(214,118,42)"/><text x="99.9452%" y="575.50"></text></g><g><title>ext4_da_write_begin (16 samples, 0.05%)</title><rect x="99.6631%" y="613" width="0.0513%" height="15" fill="rgb(251,200,26)"/><text x="99.9131%" y="623.50"></text></g><g><title>grab_cache_page_write_begin (6 samples, 0.02%)</title><rect x="99.6952%" y="597" width="0.0193%" height="15" fill="rgb(237,101,39)"/><text x="99.9452%" y="607.50"></text></g><g><title>pagecache_get_page (6 samples, 0.02%)</title><rect x="99.6952%" y="581" width="0.0193%" height="15" fill="rgb(251,117,11)"/><text x="99.9452%" y="591.50"></text></g><g><title>ext4_da_write_end (7 samples, 0.02%)</title><rect x="99.7144%" y="613" width="0.0225%" height="15" fill="rgb(216,223,23)"/><text x="99.9644%" y="623.50"></text></g><g><title>generic_write_end (6 samples, 0.02%)</title><rect x="99.7176%" y="597" width="0.0193%" height="15" fill="rgb(251,54,12)"/><text x="99.9676%" y="607.50"></text></g><g><title>__mark_inode_dirty (6 samples, 0.02%)</title><rect x="99.7176%" y="581" width="0.0193%" height="15" fill="rgb(254,176,54)"/><text x="99.9676%" y="591.50"></text></g><g><title>ext4_dirty_inode (6 samples, 0.02%)</title><rect x="99.7176%" y="565" width="0.0193%" height="15" fill="rgb(210,32,8)"/><text x="99.9676%" y="575.50"></text></g><g><title>__ext4_mark_inode_dirty (5 samples, 0.02%)</title><rect x="99.7208%" y="549" width="0.0160%" height="15" fill="rgb(235,52,38)"/><text x="99.9708%" y="559.50"></text></g><g><title>ext4_buffered_write_iter (29 samples, 0.09%)</title><rect x="99.6534%" y="645" width="0.0931%" height="15" fill="rgb(231,4,44)"/><text x="99.9034%" y="655.50"></text></g><g><title>generic_perform_write (29 samples, 0.09%)</title><rect x="99.6534%" y="629" width="0.0931%" height="15" fill="rgb(249,2,32)"/><text x="99.9034%" y="639.50"></text></g><g><title>new_sync_write (31 samples, 0.10%)</title><rect x="99.6534%" y="661" width="0.0995%" height="15" fill="rgb(224,65,26)"/><text x="99.9034%" y="671.50"></text></g><g><title>do_syscall_64 (50 samples, 0.16%)</title><rect x="99.5989%" y="709" width="0.1604%" height="15" fill="rgb(250,73,40)"/><text x="99.8489%" y="719.50"></text></g><g><title>ksys_write (33 samples, 0.11%)</title><rect x="99.6534%" y="693" width="0.1059%" height="15" fill="rgb(253,177,16)"/><text x="99.9034%" y="703.50"></text></g><g><title>vfs_write (33 samples, 0.11%)</title><rect x="99.6534%" y="677" width="0.1059%" height="15" fill="rgb(217,32,34)"/><text x="99.9034%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (61 samples, 0.20%)</title><rect x="99.5732%" y="725" width="0.1957%" height="15" fill="rgb(212,7,10)"/><text x="99.8232%" y="735.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (51 samples, 0.16%)</title><rect x="99.7690%" y="725" width="0.1637%" height="15" fill="rgb(245,89,8)"/><text x="100.0190%" y="735.50"></text></g><g><title>malloc_consolidate (4 samples, 0.01%)</title><rect x="99.9326%" y="725" width="0.0128%" height="15" fill="rgb(237,16,53)"/><text x="100.1826%" y="735.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (4 samples, 0.01%)</title><rect x="99.9454%" y="725" width="0.0128%" height="15" fill="rgb(250,204,30)"/><text x="100.1954%" y="735.50"></text></g><g><title>syscall_return_via_sysret (4 samples, 0.01%)</title><rect x="99.9647%" y="725" width="0.0128%" height="15" fill="rgb(208,77,27)"/><text x="100.2147%" y="735.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (4 samples, 0.01%)</title><rect x="99.9775%" y="725" width="0.0128%" height="15" fill="rgb(250,204,28)"/><text x="100.2275%" y="735.50"></text></g><g><title>all (31,163 samples, 100%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(244,63,21)"/><text x="0.2500%" y="767.50"></text></g><g><title>tokio-runtime-w (14,707 samples, 47.19%)</title><rect x="52.8062%" y="741" width="47.1938%" height="15" fill="rgb(236,85,44)"/><text x="53.0562%" y="751.50">tokio-runtime-w</text></g></svg></svg>